// Generated by Haxe 3.3.0
#ifndef INCLUDED_openfl__internal_stage3D_SamplerState
#define INCLUDED_openfl__internal_stage3D_SamplerState

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS3(openfl,_internal,stage3D,SamplerState)

namespace openfl{
namespace _internal{
namespace stage3D{


class HXCPP_CLASS_ATTRIBUTES SamplerState_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef SamplerState_obj OBJ_;
		SamplerState_obj();

	public:
		void __construct(Int minFilter,Int magFilter,Int wrapModeS,Int wrapModeT,hx::Null< Float >  __o_lodBias,hx::Null< Float >  __o_maxAniso,hx::Null< Bool >  __o_ignoreSampler,hx::Null< Bool >  __o_centroid);
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="openfl._internal.stage3D.SamplerState")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"openfl._internal.stage3D.SamplerState"); }
		static hx::ObjectPtr< SamplerState_obj > __new(Int minFilter,Int magFilter,Int wrapModeS,Int wrapModeT,hx::Null< Float >  __o_lodBias,hx::Null< Float >  __o_maxAniso,hx::Null< Bool >  __o_ignoreSampler,hx::Null< Bool >  __o_centroid);
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~SamplerState_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		::String __ToString() const { return HX_HCSTRING("SamplerState","\x09","\x30","\xd2","\x83"); }

		Bool centroid;
		Bool ignoreSampler;
		Float lodBias;
		Int magFilter;
		Float maxAniso;
		Int minFilter;
		Int wrapModeS;
		Int wrapModeT;
		void copyFrom( ::openfl::_internal::stage3D::SamplerState other);
		::Dynamic copyFrom_dyn();

		Bool equals( ::openfl::_internal::stage3D::SamplerState other);
		::Dynamic equals_dyn();

};

} // end namespace openfl
} // end namespace _internal
} // end namespace stage3D

#endif /* INCLUDED_openfl__internal_stage3D_SamplerState */ 
