// Generated by Haxe 3.4.0
#ifndef INCLUDED_Card
#define INCLUDED_Card

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(Card)
HX_DECLARE_CLASS0(Player)



class HXCPP_CLASS_ATTRIBUTES Card_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Card_obj OBJ_;
		Card_obj();

	public:
		enum { _hx_ClassId = 0x2c9349f0 };

		void __construct(::String name, ::Dynamic f1, ::Dynamic f2, ::Dynamic f3, ::Dynamic f4, ::Dynamic f5, ::Dynamic f6);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="Card")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"Card"); }
		static hx::ObjectPtr< Card_obj > __new(::String name, ::Dynamic f1, ::Dynamic f2, ::Dynamic f3, ::Dynamic f4, ::Dynamic f5, ::Dynamic f6);
		static hx::ObjectPtr< Card_obj > __alloc(hx::Ctx *_hx_ctx,::String name, ::Dynamic f1, ::Dynamic f2, ::Dynamic f3, ::Dynamic f4, ::Dynamic f5, ::Dynamic f6);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Card_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("Card","\xf0","\x49","\x93","\x2c"); }

		::Array< ::Dynamic> i;
};


#endif /* INCLUDED_Card */ 
