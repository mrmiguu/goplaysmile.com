// Generated by Haxe 3.3.0
#include <hxcpp.h>

#include "cpp/Int64.h"
#ifndef INCLUDED_haxe_io_Bytes
#include <haxe/io/Bytes.h>
#endif
#ifndef INCLUDED_lime__backend_native_NativeCFFI
#include <lime/_backend/native/NativeCFFI.h>
#endif
#ifndef INCLUDED_lime_media_codecs_vorbis_VorbisComment
#include <lime/media/codecs/vorbis/VorbisComment.h>
#endif
#ifndef INCLUDED_lime_media_codecs_vorbis_VorbisFile
#include <lime/media/codecs/vorbis/VorbisFile.h>
#endif
#ifndef INCLUDED_lime_media_codecs_vorbis_VorbisInfo
#include <lime/media/codecs/vorbis/VorbisInfo.h>
#endif

namespace lime{
namespace media{
namespace codecs{
namespace vorbis{

void VorbisFile_obj::__construct( ::Dynamic handle){
            	HX_STACK_FRAME("lime.media.codecs.vorbis.VorbisFile","new",0x5039982e,"lime.media.codecs.vorbis.VorbisFile.new","lime/media/codecs/vorbis/VorbisFile.hx",21,0x1ca67960)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(handle,"handle")
HXLINE(  21)		this->handle = handle;
            	}

Dynamic VorbisFile_obj::__CreateEmpty() { return new VorbisFile_obj; }

hx::ObjectPtr< VorbisFile_obj > VorbisFile_obj::__new( ::Dynamic handle)
{
	hx::ObjectPtr< VorbisFile_obj > _hx_result = new VorbisFile_obj();
	_hx_result->__construct(handle);
	return _hx_result;
}

Dynamic VorbisFile_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< VorbisFile_obj > _hx_result = new VorbisFile_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

Int VorbisFile_obj::bitrate(hx::Null< Int >  __o_bitstream){
Int bitstream = __o_bitstream.Default(-1);
            	HX_STACK_FRAME("lime.media.codecs.vorbis.VorbisFile","bitrate",0xfd30bcfb,"lime.media.codecs.vorbis.VorbisFile.bitrate","lime/media/codecs/vorbis/VorbisFile.hx",29,0x1ca67960)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(bitstream,"bitstream")
HXLINE(  29)		 ::Dynamic vorbisFile = this->handle;
HXDLIN(  29)		return ( (Int)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_vorbis_file_bitrate(hx::DynamicPtr(vorbisFile),bitstream)) );
            	}


HX_DEFINE_DYNAMIC_FUNC1(VorbisFile_obj,bitrate,return )

Int VorbisFile_obj::bitrateInstant(){
            	HX_STACK_FRAME("lime.media.codecs.vorbis.VorbisFile","bitrateInstant",0x8400a726,"lime.media.codecs.vorbis.VorbisFile.bitrateInstant","lime/media/codecs/vorbis/VorbisFile.hx",40,0x1ca67960)
            	HX_STACK_THIS(this)
HXLINE(  40)		 ::Dynamic vorbisFile = this->handle;
HXDLIN(  40)		return ( (Int)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_vorbis_file_bitrate_instant(hx::DynamicPtr(vorbisFile))) );
            	}


HX_DEFINE_DYNAMIC_FUNC0(VorbisFile_obj,bitrateInstant,return )

void VorbisFile_obj::clear(){
            	HX_STACK_FRAME("lime.media.codecs.vorbis.VorbisFile","clear",0xb31d48db,"lime.media.codecs.vorbis.VorbisFile.clear","lime/media/codecs/vorbis/VorbisFile.hx",51,0x1ca67960)
            	HX_STACK_THIS(this)
HXLINE(  51)		 ::Dynamic vorbisFile = this->handle;
HXDLIN(  51)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_vorbis_file_clear(hx::DynamicPtr(vorbisFile));
            	}


HX_DEFINE_DYNAMIC_FUNC0(VorbisFile_obj,clear,(void))

 ::lime::media::codecs::vorbis::VorbisComment VorbisFile_obj::comment(hx::Null< Int >  __o_bitstream){
Int bitstream = __o_bitstream.Default(-1);
            	HX_STACK_FRAME("lime.media.codecs.vorbis.VorbisFile","comment",0x81d1412d,"lime.media.codecs.vorbis.VorbisFile.comment","lime/media/codecs/vorbis/VorbisFile.hx",57,0x1ca67960)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(bitstream,"bitstream")
HXLINE(  60)		 ::Dynamic vorbisFile = this->handle;
HXDLIN(  60)		 ::hx::Object * inVal = ( ( ::hx::Object *)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_vorbis_file_comment(hx::DynamicPtr(vorbisFile),bitstream)) );
HXDLIN(  60)		HX_VARI(  ::Dynamic,data) = Dynamic(hx::DynamicPtr(inVal));
HXLINE(  62)		Bool _hx_tmp = hx::IsNotNull( data );
HXDLIN(  62)		if (_hx_tmp) {
HXLINE(  64)			HX_VARI(  ::lime::media::codecs::vorbis::VorbisComment,comment) =  ::lime::media::codecs::vorbis::VorbisComment_obj::__new();
HXLINE(  65)			comment->userComments = ( (::Array< ::String >)(data->__Field(HX_("userComments",9f,aa,f5,57),hx::paccDynamic)) );
HXLINE(  66)			comment->vendor = ( (::String)(data->__Field(HX_("vendor",88,e5,96,9e),hx::paccDynamic)) );
HXLINE(  67)			return comment;
            		}
HXLINE(  72)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(VorbisFile_obj,comment,return )

Int VorbisFile_obj::crosslap( ::lime::media::codecs::vorbis::VorbisFile other){
            	HX_STACK_FRAME("lime.media.codecs.vorbis.VorbisFile","crosslap",0xdc65c64d,"lime.media.codecs.vorbis.VorbisFile.crosslap","lime/media/codecs/vorbis/VorbisFile.hx",80,0x1ca67960)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(other,"other")
HXLINE(  80)		 ::Dynamic vorbisFile = this->handle;
HXDLIN(  80)		 ::Dynamic otherVorbisFile = other->handle;
HXDLIN(  80)		 ::hx::Object * _hx_tmp = hx::DynamicPtr(vorbisFile);
HXDLIN(  80)		 ::hx::Object * inVal = ( ( ::hx::Object *)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_vorbis_file_crosslap(_hx_tmp,hx::DynamicPtr(otherVorbisFile))) );
HXDLIN(  80)		return Dynamic(hx::DynamicPtr(inVal));
            	}


HX_DEFINE_DYNAMIC_FUNC1(VorbisFile_obj,crosslap,return )

 ::lime::media::codecs::vorbis::VorbisInfo VorbisFile_obj::info(hx::Null< Int >  __o_bitstream){
Int bitstream = __o_bitstream.Default(-1);
            	HX_STACK_FRAME("lime.media.codecs.vorbis.VorbisFile","info",0xdee444e0,"lime.media.codecs.vorbis.VorbisFile.info","lime/media/codecs/vorbis/VorbisFile.hx",122,0x1ca67960)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(bitstream,"bitstream")
HXLINE( 125)		 ::Dynamic vorbisFile = this->handle;
HXDLIN( 125)		 ::hx::Object * inVal = ( ( ::hx::Object *)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_vorbis_file_info(hx::DynamicPtr(vorbisFile),bitstream)) );
HXDLIN( 125)		HX_VARI(  ::Dynamic,data) = Dynamic(hx::DynamicPtr(inVal));
HXLINE( 127)		Bool _hx_tmp = hx::IsNotNull( data );
HXDLIN( 127)		if (_hx_tmp) {
HXLINE( 129)			HX_VARI(  ::lime::media::codecs::vorbis::VorbisInfo,info) =  ::lime::media::codecs::vorbis::VorbisInfo_obj::__new();
HXLINE( 130)			info->bitrateLower = ( (Int)(data->__Field(HX_("bitrateLower",94,f0,d0,09),hx::paccDynamic)) );
HXLINE( 131)			info->bitrateNominal = ( (Int)(data->__Field(HX_("bitrateNominal",6f,84,28,68),hx::paccDynamic)) );
HXLINE( 132)			info->bitrateUpper = ( (Int)(data->__Field(HX_("bitrateUpper",f5,0f,10,39),hx::paccDynamic)) );
HXLINE( 133)			info->channels = ( (Int)(data->__Field(HX_("channels",50,aa,ee,6a),hx::paccDynamic)) );
HXLINE( 134)			info->rate = ( (Int)(data->__Field(HX_("rate",e0,52,a4,4b),hx::paccDynamic)) );
HXLINE( 135)			info->version = ( (Int)(data->__Field(HX_("version",18,e7,f1,7c),hx::paccDynamic)) );
HXLINE( 136)			return info;
            		}
HXLINE( 141)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(VorbisFile_obj,info,return )

Int VorbisFile_obj::pcmSeek( ::cpp::Int64Struct pos){
            	HX_STACK_FRAME("lime.media.codecs.vorbis.VorbisFile","pcmSeek",0xc0f06080,"lime.media.codecs.vorbis.VorbisFile.pcmSeek","lime/media/codecs/vorbis/VorbisFile.hx",149,0x1ca67960)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(pos,"pos")
HXLINE( 149)		 ::Dynamic vorbisFile = this->handle;
HXDLIN( 149)		 ::Dynamic posLow = _hx_int64_low(pos);
HXDLIN( 149)		 ::Dynamic posHigh = _hx_int64_high(pos);
HXDLIN( 149)		 ::hx::Object * _hx_tmp = hx::DynamicPtr(vorbisFile);
HXDLIN( 149)		 ::hx::Object * _hx_tmp1 = hx::DynamicPtr(posLow);
HXDLIN( 149)		return ( (Int)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_vorbis_file_pcm_seek(_hx_tmp,_hx_tmp1,hx::DynamicPtr(posHigh))) );
            	}


HX_DEFINE_DYNAMIC_FUNC1(VorbisFile_obj,pcmSeek,return )

Int VorbisFile_obj::pcmSeekLap( ::cpp::Int64Struct pos){
            	HX_STACK_FRAME("lime.media.codecs.vorbis.VorbisFile","pcmSeekLap",0x3e60efbb,"lime.media.codecs.vorbis.VorbisFile.pcmSeekLap","lime/media/codecs/vorbis/VorbisFile.hx",160,0x1ca67960)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(pos,"pos")
HXLINE( 160)		 ::Dynamic vorbisFile = this->handle;
HXDLIN( 160)		 ::Dynamic posLow = _hx_int64_low(pos);
HXDLIN( 160)		 ::Dynamic posHigh = _hx_int64_high(pos);
HXDLIN( 160)		 ::hx::Object * _hx_tmp = hx::DynamicPtr(vorbisFile);
HXDLIN( 160)		 ::hx::Object * _hx_tmp1 = hx::DynamicPtr(posLow);
HXDLIN( 160)		return ( (Int)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_vorbis_file_pcm_seek_lap(_hx_tmp,_hx_tmp1,hx::DynamicPtr(posHigh))) );
            	}


HX_DEFINE_DYNAMIC_FUNC1(VorbisFile_obj,pcmSeekLap,return )

Int VorbisFile_obj::pcmSeekPage( ::cpp::Int64Struct pos){
            	HX_STACK_FRAME("lime.media.codecs.vorbis.VorbisFile","pcmSeekPage",0x5915a6ef,"lime.media.codecs.vorbis.VorbisFile.pcmSeekPage","lime/media/codecs/vorbis/VorbisFile.hx",171,0x1ca67960)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(pos,"pos")
HXLINE( 171)		 ::Dynamic vorbisFile = this->handle;
HXDLIN( 171)		 ::Dynamic posLow = _hx_int64_low(pos);
HXDLIN( 171)		 ::Dynamic posHigh = _hx_int64_high(pos);
HXDLIN( 171)		 ::hx::Object * _hx_tmp = hx::DynamicPtr(vorbisFile);
HXDLIN( 171)		 ::hx::Object * _hx_tmp1 = hx::DynamicPtr(posLow);
HXDLIN( 171)		return ( (Int)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_vorbis_file_pcm_seek_page(_hx_tmp,_hx_tmp1,hx::DynamicPtr(posHigh))) );
            	}


HX_DEFINE_DYNAMIC_FUNC1(VorbisFile_obj,pcmSeekPage,return )

Int VorbisFile_obj::pcmSeekPageLap( ::cpp::Int64Struct pos){
            	HX_STACK_FRAME("lime.media.codecs.vorbis.VorbisFile","pcmSeekPageLap",0x19aa18ac,"lime.media.codecs.vorbis.VorbisFile.pcmSeekPageLap","lime/media/codecs/vorbis/VorbisFile.hx",182,0x1ca67960)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(pos,"pos")
HXLINE( 182)		 ::Dynamic vorbisFile = this->handle;
HXDLIN( 182)		 ::Dynamic posLow = _hx_int64_low(pos);
HXDLIN( 182)		 ::Dynamic posHigh = _hx_int64_high(pos);
HXDLIN( 182)		 ::hx::Object * _hx_tmp = hx::DynamicPtr(vorbisFile);
HXDLIN( 182)		 ::hx::Object * _hx_tmp1 = hx::DynamicPtr(posLow);
HXDLIN( 182)		return ( (Int)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_vorbis_file_pcm_seek_page_lap(_hx_tmp,_hx_tmp1,hx::DynamicPtr(posHigh))) );
            	}


HX_DEFINE_DYNAMIC_FUNC1(VorbisFile_obj,pcmSeekPageLap,return )

 ::cpp::Int64Struct VorbisFile_obj::pcmTell(){
            	HX_STACK_FRAME("lime.media.codecs.vorbis.VorbisFile","pcmTell",0xc1999d39,"lime.media.codecs.vorbis.VorbisFile.pcmTell","lime/media/codecs/vorbis/VorbisFile.hx",190,0x1ca67960)
            	HX_STACK_THIS(this)
HXLINE( 193)		 ::Dynamic vorbisFile = this->handle;
HXDLIN( 193)		 ::hx::Object * inVal = ( ( ::hx::Object *)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_vorbis_file_pcm_tell(hx::DynamicPtr(vorbisFile))) );
HXDLIN( 193)		HX_VARI(  ::Dynamic,data) = Dynamic(hx::DynamicPtr(inVal));
HXLINE( 195)		Bool _hx_tmp = hx::IsNotNull( data );
HXDLIN( 195)		if (_hx_tmp) {
HXLINE( 197)			Int high = ( (Int)(data->__Field(HX_("high",62,37,0e,45),hx::paccDynamic)) );
HXDLIN( 197)			Int low = ( (Int)(data->__Field(HX_("low",94,54,52,00),hx::paccDynamic)) );
HXDLIN( 197)			return _hx_int64_make(high,low);
            		}
HXLINE( 202)		return ( ::cpp::Int64Struct((int)0));
            	}


HX_DEFINE_DYNAMIC_FUNC0(VorbisFile_obj,pcmTell,return )

 ::cpp::Int64Struct VorbisFile_obj::pcmTotal(hx::Null< Int >  __o_bitstream){
Int bitstream = __o_bitstream.Default(-1);
            	HX_STACK_FRAME("lime.media.codecs.vorbis.VorbisFile","pcmTotal",0xab721fbc,"lime.media.codecs.vorbis.VorbisFile.pcmTotal","lime/media/codecs/vorbis/VorbisFile.hx",208,0x1ca67960)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(bitstream,"bitstream")
HXLINE( 211)		 ::Dynamic vorbisFile = this->handle;
HXDLIN( 211)		 ::hx::Object * inVal = ( ( ::hx::Object *)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_vorbis_file_pcm_total(hx::DynamicPtr(vorbisFile),bitstream)) );
HXDLIN( 211)		HX_VARI(  ::Dynamic,data) = Dynamic(hx::DynamicPtr(inVal));
HXLINE( 213)		Bool _hx_tmp = hx::IsNotNull( data );
HXDLIN( 213)		if (_hx_tmp) {
HXLINE( 215)			Int high = ( (Int)(data->__Field(HX_("high",62,37,0e,45),hx::paccDynamic)) );
HXDLIN( 215)			Int low = ( (Int)(data->__Field(HX_("low",94,54,52,00),hx::paccDynamic)) );
HXDLIN( 215)			return _hx_int64_make(high,low);
            		}
HXLINE( 220)		return ( ::cpp::Int64Struct((int)0));
            	}


HX_DEFINE_DYNAMIC_FUNC1(VorbisFile_obj,pcmTotal,return )

Int VorbisFile_obj::rawSeek( ::cpp::Int64Struct pos){
            	HX_STACK_FRAME("lime.media.codecs.vorbis.VorbisFile","rawSeek",0x0966624e,"lime.media.codecs.vorbis.VorbisFile.rawSeek","lime/media/codecs/vorbis/VorbisFile.hx",228,0x1ca67960)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(pos,"pos")
HXLINE( 228)		 ::Dynamic vorbisFile = this->handle;
HXDLIN( 228)		 ::Dynamic posLow = _hx_int64_low(pos);
HXDLIN( 228)		 ::Dynamic posHigh = _hx_int64_high(pos);
HXDLIN( 228)		 ::hx::Object * _hx_tmp = hx::DynamicPtr(vorbisFile);
HXDLIN( 228)		 ::hx::Object * _hx_tmp1 = hx::DynamicPtr(posLow);
HXDLIN( 228)		return ( (Int)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_vorbis_file_raw_seek(_hx_tmp,_hx_tmp1,hx::DynamicPtr(posHigh))) );
            	}


HX_DEFINE_DYNAMIC_FUNC1(VorbisFile_obj,rawSeek,return )

Int VorbisFile_obj::rawSeekLap( ::cpp::Int64Struct pos){
            	HX_STACK_FRAME("lime.media.codecs.vorbis.VorbisFile","rawSeekLap",0x550b82ad,"lime.media.codecs.vorbis.VorbisFile.rawSeekLap","lime/media/codecs/vorbis/VorbisFile.hx",239,0x1ca67960)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(pos,"pos")
HXLINE( 239)		 ::Dynamic vorbisFile = this->handle;
HXDLIN( 239)		 ::Dynamic posLow = _hx_int64_low(pos);
HXDLIN( 239)		 ::Dynamic posHigh = _hx_int64_high(pos);
HXDLIN( 239)		 ::hx::Object * _hx_tmp = hx::DynamicPtr(vorbisFile);
HXDLIN( 239)		 ::hx::Object * _hx_tmp1 = hx::DynamicPtr(posLow);
HXDLIN( 239)		return ( (Int)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_vorbis_file_raw_seek_lap(_hx_tmp,_hx_tmp1,hx::DynamicPtr(posHigh))) );
            	}


HX_DEFINE_DYNAMIC_FUNC1(VorbisFile_obj,rawSeekLap,return )

 ::cpp::Int64Struct VorbisFile_obj::rawTell(){
            	HX_STACK_FRAME("lime.media.codecs.vorbis.VorbisFile","rawTell",0x0a0f9f07,"lime.media.codecs.vorbis.VorbisFile.rawTell","lime/media/codecs/vorbis/VorbisFile.hx",247,0x1ca67960)
            	HX_STACK_THIS(this)
HXLINE( 251)		 ::Dynamic vorbisFile = this->handle;
HXDLIN( 251)		 ::hx::Object * inVal = ( ( ::hx::Object *)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_vorbis_file_raw_tell(hx::DynamicPtr(vorbisFile))) );
HXDLIN( 251)		HX_VARI(  ::Dynamic,data) = Dynamic(hx::DynamicPtr(inVal));
HXLINE( 253)		Bool _hx_tmp = hx::IsNotNull( data );
HXDLIN( 253)		if (_hx_tmp) {
HXLINE( 255)			Int high = ( (Int)(data->__Field(HX_("high",62,37,0e,45),hx::paccDynamic)) );
HXDLIN( 255)			Int low = ( (Int)(data->__Field(HX_("low",94,54,52,00),hx::paccDynamic)) );
HXDLIN( 255)			return _hx_int64_make(high,low);
            		}
HXLINE( 260)		return ( ::cpp::Int64Struct((int)0));
            	}


HX_DEFINE_DYNAMIC_FUNC0(VorbisFile_obj,rawTell,return )

 ::cpp::Int64Struct VorbisFile_obj::rawTotal(hx::Null< Int >  __o_bitstream){
Int bitstream = __o_bitstream.Default(-1);
            	HX_STACK_FRAME("lime.media.codecs.vorbis.VorbisFile","rawTotal",0xca3db22e,"lime.media.codecs.vorbis.VorbisFile.rawTotal","lime/media/codecs/vorbis/VorbisFile.hx",265,0x1ca67960)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(bitstream,"bitstream")
HXLINE( 268)		 ::Dynamic vorbisFile = this->handle;
HXDLIN( 268)		 ::hx::Object * inVal = ( ( ::hx::Object *)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_vorbis_file_raw_total(hx::DynamicPtr(vorbisFile),bitstream)) );
HXDLIN( 268)		HX_VARI(  ::Dynamic,data) = Dynamic(hx::DynamicPtr(inVal));
HXLINE( 270)		Bool _hx_tmp = hx::IsNotNull( data );
HXDLIN( 270)		if (_hx_tmp) {
HXLINE( 272)			Int high = ( (Int)(data->__Field(HX_("high",62,37,0e,45),hx::paccDynamic)) );
HXDLIN( 272)			Int low = ( (Int)(data->__Field(HX_("low",94,54,52,00),hx::paccDynamic)) );
HXDLIN( 272)			return _hx_int64_make(high,low);
            		}
HXLINE( 277)		return ( ::cpp::Int64Struct((int)0));
            	}


HX_DEFINE_DYNAMIC_FUNC1(VorbisFile_obj,rawTotal,return )

Int VorbisFile_obj::read( ::haxe::io::Bytes buffer,Int position,hx::Null< Int >  __o_length,hx::Null< Bool >  __o_bigEndianPacking,hx::Null< Int >  __o_wordSize,hx::Null< Bool >  __o__hx_signed){
Int length = __o_length.Default(4096);
Bool bigEndianPacking = __o_bigEndianPacking.Default(false);
Int wordSize = __o_wordSize.Default(2);
Bool _hx_signed = __o__hx_signed.Default(true);
            	HX_STACK_FRAME("lime.media.codecs.vorbis.VorbisFile","read",0xe4d057c8,"lime.media.codecs.vorbis.VorbisFile.read","lime/media/codecs/vorbis/VorbisFile.hx",282,0x1ca67960)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(buffer,"buffer")
            	HX_STACK_ARG(position,"position")
            	HX_STACK_ARG(length,"length")
            	HX_STACK_ARG(bigEndianPacking,"bigEndianPacking")
            	HX_STACK_ARG(wordSize,"wordSize")
            	HX_STACK_ARG(_hx_signed,"signed")
HXLINE( 285)		 ::Dynamic vorbisFile = this->handle;
HXDLIN( 285)		 ::hx::Object * _hx_tmp = hx::DynamicPtr(vorbisFile);
HXDLIN( 285)		 ::hx::Object * inVal = ( ( ::hx::Object *)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_vorbis_file_read(_hx_tmp,hx::DynamicPtr(buffer),position,length,bigEndianPacking,wordSize,_hx_signed)) );
HXDLIN( 285)		HX_VARI(  ::Dynamic,data) = Dynamic(hx::DynamicPtr(inVal));
HXLINE( 286)		Bool _hx_tmp1 = hx::IsNull( data );
HXDLIN( 286)		if (_hx_tmp1) {
HXLINE( 286)			return (int)0;
            		}
HXLINE( 287)		this->bitstream = ( (Int)(data->__Field(HX_("bitstream",0d,e5,01,1f),hx::paccDynamic)) );
HXLINE( 288)		return ( (Int)(data->__Field(HX_("returnValue",a1,4c,95,3e),hx::paccDynamic)) );
            	}


HX_DEFINE_DYNAMIC_FUNC6(VorbisFile_obj,read,return )

Int VorbisFile_obj::readFloat( ::haxe::io::Bytes pcmChannels,Int samples){
            	HX_STACK_FRAME("lime.media.codecs.vorbis.VorbisFile","readFloat",0x42b8a8b4,"lime.media.codecs.vorbis.VorbisFile.readFloat","lime/media/codecs/vorbis/VorbisFile.hx",299,0x1ca67960)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(pcmChannels,"pcmChannels")
            	HX_STACK_ARG(samples,"samples")
HXLINE( 302)		 ::Dynamic vorbisFile = this->handle;
HXDLIN( 302)		 ::hx::Object * _hx_tmp = hx::DynamicPtr(vorbisFile);
HXDLIN( 302)		 ::hx::Object * inVal = ( ( ::hx::Object *)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_vorbis_file_read_float(_hx_tmp,hx::DynamicPtr(pcmChannels),samples)) );
HXDLIN( 302)		HX_VARI(  ::Dynamic,data) = Dynamic(hx::DynamicPtr(inVal));
HXLINE( 303)		Bool _hx_tmp1 = hx::IsNull( data );
HXDLIN( 303)		if (_hx_tmp1) {
HXLINE( 303)			return (int)0;
            		}
HXLINE( 304)		this->bitstream = ( (Int)(data->__Field(HX_("bitstream",0d,e5,01,1f),hx::paccDynamic)) );
HXLINE( 305)		return ( (Int)(data->__Field(HX_("returnValue",a1,4c,95,3e),hx::paccDynamic)) );
            	}


HX_DEFINE_DYNAMIC_FUNC2(VorbisFile_obj,readFloat,return )

Bool VorbisFile_obj::seekable(){
            	HX_STACK_FRAME("lime.media.codecs.vorbis.VorbisFile","seekable",0xac423c84,"lime.media.codecs.vorbis.VorbisFile.seekable","lime/media/codecs/vorbis/VorbisFile.hx",316,0x1ca67960)
            	HX_STACK_THIS(this)
HXLINE( 316)		 ::Dynamic vorbisFile = this->handle;
HXDLIN( 316)		return ( (Bool)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_vorbis_file_seekable(hx::DynamicPtr(vorbisFile))) );
            	}


HX_DEFINE_DYNAMIC_FUNC0(VorbisFile_obj,seekable,return )

Int VorbisFile_obj::serialNumber(hx::Null< Int >  __o_bitstream){
Int bitstream = __o_bitstream.Default(-1);
            	HX_STACK_FRAME("lime.media.codecs.vorbis.VorbisFile","serialNumber",0x3ebc224f,"lime.media.codecs.vorbis.VorbisFile.serialNumber","lime/media/codecs/vorbis/VorbisFile.hx",327,0x1ca67960)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(bitstream,"bitstream")
HXLINE( 327)		 ::Dynamic vorbisFile = this->handle;
HXDLIN( 327)		return ( (Int)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_vorbis_file_serial_number(hx::DynamicPtr(vorbisFile),bitstream)) );
            	}


HX_DEFINE_DYNAMIC_FUNC1(VorbisFile_obj,serialNumber,return )

Int VorbisFile_obj::streams(){
            	HX_STACK_FRAME("lime.media.codecs.vorbis.VorbisFile","streams",0xf6a5a2c1,"lime.media.codecs.vorbis.VorbisFile.streams","lime/media/codecs/vorbis/VorbisFile.hx",338,0x1ca67960)
            	HX_STACK_THIS(this)
HXLINE( 338)		 ::Dynamic vorbisFile = this->handle;
HXDLIN( 338)		return ( (Int)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_vorbis_file_streams(hx::DynamicPtr(vorbisFile))) );
            	}


HX_DEFINE_DYNAMIC_FUNC0(VorbisFile_obj,streams,return )

Int VorbisFile_obj::timeSeek(Float s){
            	HX_STACK_FRAME("lime.media.codecs.vorbis.VorbisFile","timeSeek",0x40ff3597,"lime.media.codecs.vorbis.VorbisFile.timeSeek","lime/media/codecs/vorbis/VorbisFile.hx",349,0x1ca67960)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(s,"s")
HXLINE( 349)		 ::Dynamic vorbisFile = this->handle;
HXDLIN( 349)		return ( (Int)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_vorbis_file_time_seek(hx::DynamicPtr(vorbisFile),s)) );
            	}


HX_DEFINE_DYNAMIC_FUNC1(VorbisFile_obj,timeSeek,return )

Int VorbisFile_obj::timeSeekLap(Float s){
            	HX_STACK_FRAME("lime.media.codecs.vorbis.VorbisFile","timeSeekLap",0x94b92304,"lime.media.codecs.vorbis.VorbisFile.timeSeekLap","lime/media/codecs/vorbis/VorbisFile.hx",360,0x1ca67960)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(s,"s")
HXLINE( 360)		 ::Dynamic vorbisFile = this->handle;
HXDLIN( 360)		return ( (Int)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_vorbis_file_time_seek_lap(hx::DynamicPtr(vorbisFile),s)) );
            	}


HX_DEFINE_DYNAMIC_FUNC1(VorbisFile_obj,timeSeekLap,return )

Int VorbisFile_obj::timeSeekPage(Float s){
            	HX_STACK_FRAME("lime.media.codecs.vorbis.VorbisFile","timeSeekPage",0x8fea5386,"lime.media.codecs.vorbis.VorbisFile.timeSeekPage","lime/media/codecs/vorbis/VorbisFile.hx",371,0x1ca67960)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(s,"s")
HXLINE( 371)		 ::Dynamic vorbisFile = this->handle;
HXDLIN( 371)		return ( (Int)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_vorbis_file_time_seek_page(hx::DynamicPtr(vorbisFile),s)) );
            	}


HX_DEFINE_DYNAMIC_FUNC1(VorbisFile_obj,timeSeekPage,return )

Int VorbisFile_obj::timeSeekPageLap(Float s){
            	HX_STACK_FRAME("lime.media.codecs.vorbis.VorbisFile","timeSeekPageLap",0xf3d82475,"lime.media.codecs.vorbis.VorbisFile.timeSeekPageLap","lime/media/codecs/vorbis/VorbisFile.hx",382,0x1ca67960)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(s,"s")
HXLINE( 382)		 ::Dynamic vorbisFile = this->handle;
HXDLIN( 382)		return ( (Int)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_vorbis_file_time_seek_page_lap(hx::DynamicPtr(vorbisFile),s)) );
            	}


HX_DEFINE_DYNAMIC_FUNC1(VorbisFile_obj,timeSeekPageLap,return )

Float VorbisFile_obj::timeTell(){
            	HX_STACK_FRAME("lime.media.codecs.vorbis.VorbisFile","timeTell",0x41a87250,"lime.media.codecs.vorbis.VorbisFile.timeTell","lime/media/codecs/vorbis/VorbisFile.hx",393,0x1ca67960)
            	HX_STACK_THIS(this)
HXLINE( 393)		 ::Dynamic vorbisFile = this->handle;
HXDLIN( 393)		return ( (Float)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_vorbis_file_time_tell(hx::DynamicPtr(vorbisFile))) );
            	}


HX_DEFINE_DYNAMIC_FUNC0(VorbisFile_obj,timeTell,return )

Float VorbisFile_obj::timeTotal(hx::Null< Int >  __o_bitstream){
Int bitstream = __o_bitstream.Default(-1);
            	HX_STACK_FRAME("lime.media.codecs.vorbis.VorbisFile","timeTotal",0x385dbec5,"lime.media.codecs.vorbis.VorbisFile.timeTotal","lime/media/codecs/vorbis/VorbisFile.hx",404,0x1ca67960)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(bitstream,"bitstream")
HXLINE( 404)		 ::Dynamic vorbisFile = this->handle;
HXDLIN( 404)		return ( (Float)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_vorbis_file_time_total(hx::DynamicPtr(vorbisFile),bitstream)) );
            	}


HX_DEFINE_DYNAMIC_FUNC1(VorbisFile_obj,timeTotal,return )

 ::lime::media::codecs::vorbis::VorbisFile VorbisFile_obj::fromBytes( ::haxe::io::Bytes bytes){
            	HX_STACK_FRAME("lime.media.codecs.vorbis.VorbisFile","fromBytes",0xe15b88ef,"lime.media.codecs.vorbis.VorbisFile.fromBytes","lime/media/codecs/vorbis/VorbisFile.hx",88,0x1ca67960)
            	HX_STACK_ARG(bytes,"bytes")
HXLINE(  91)		 ::hx::Object * inVal = ( ( ::hx::Object *)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_vorbis_file_from_bytes(hx::DynamicPtr(bytes))) );
HXDLIN(  91)		HX_VARI(  ::Dynamic,handle) = Dynamic(hx::DynamicPtr(inVal));
HXLINE(  93)		Bool _hx_tmp = hx::IsNotNull( handle );
HXDLIN(  93)		if (_hx_tmp) {
HXLINE(  95)			return  ::lime::media::codecs::vorbis::VorbisFile_obj::__new(handle);
            		}
HXLINE( 100)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(VorbisFile_obj,fromBytes,return )

 ::lime::media::codecs::vorbis::VorbisFile VorbisFile_obj::fromFile(::String path){
            	HX_STACK_FRAME("lime.media.codecs.vorbis.VorbisFile","fromFile",0xf5d4ca78,"lime.media.codecs.vorbis.VorbisFile.fromFile","lime/media/codecs/vorbis/VorbisFile.hx",105,0x1ca67960)
            	HX_STACK_ARG(path,"path")
HXLINE( 108)		 ::hx::Object * inVal = ( ( ::hx::Object *)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_vorbis_file_from_file(path)) );
HXDLIN( 108)		HX_VARI(  ::Dynamic,handle) = Dynamic(hx::DynamicPtr(inVal));
HXLINE( 110)		Bool _hx_tmp = hx::IsNotNull( handle );
HXDLIN( 110)		if (_hx_tmp) {
HXLINE( 112)			return  ::lime::media::codecs::vorbis::VorbisFile_obj::__new(handle);
            		}
HXLINE( 117)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(VorbisFile_obj,fromFile,return )


VorbisFile_obj::VorbisFile_obj()
{
}

void VorbisFile_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(VorbisFile);
	HX_MARK_MEMBER_NAME(bitstream,"bitstream");
	HX_MARK_MEMBER_NAME(handle,"handle");
	HX_MARK_END_CLASS();
}

void VorbisFile_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(bitstream,"bitstream");
	HX_VISIT_MEMBER_NAME(handle,"handle");
}

hx::Val VorbisFile_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"info") ) { return hx::Val( info_dyn()); }
		if (HX_FIELD_EQ(inName,"read") ) { return hx::Val( read_dyn()); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"clear") ) { return hx::Val( clear_dyn()); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"handle") ) { return hx::Val( handle); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"bitrate") ) { return hx::Val( bitrate_dyn()); }
		if (HX_FIELD_EQ(inName,"comment") ) { return hx::Val( comment_dyn()); }
		if (HX_FIELD_EQ(inName,"pcmSeek") ) { return hx::Val( pcmSeek_dyn()); }
		if (HX_FIELD_EQ(inName,"pcmTell") ) { return hx::Val( pcmTell_dyn()); }
		if (HX_FIELD_EQ(inName,"rawSeek") ) { return hx::Val( rawSeek_dyn()); }
		if (HX_FIELD_EQ(inName,"rawTell") ) { return hx::Val( rawTell_dyn()); }
		if (HX_FIELD_EQ(inName,"streams") ) { return hx::Val( streams_dyn()); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"crosslap") ) { return hx::Val( crosslap_dyn()); }
		if (HX_FIELD_EQ(inName,"pcmTotal") ) { return hx::Val( pcmTotal_dyn()); }
		if (HX_FIELD_EQ(inName,"rawTotal") ) { return hx::Val( rawTotal_dyn()); }
		if (HX_FIELD_EQ(inName,"seekable") ) { return hx::Val( seekable_dyn()); }
		if (HX_FIELD_EQ(inName,"timeSeek") ) { return hx::Val( timeSeek_dyn()); }
		if (HX_FIELD_EQ(inName,"timeTell") ) { return hx::Val( timeTell_dyn()); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"bitstream") ) { return hx::Val( bitstream); }
		if (HX_FIELD_EQ(inName,"readFloat") ) { return hx::Val( readFloat_dyn()); }
		if (HX_FIELD_EQ(inName,"timeTotal") ) { return hx::Val( timeTotal_dyn()); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"pcmSeekLap") ) { return hx::Val( pcmSeekLap_dyn()); }
		if (HX_FIELD_EQ(inName,"rawSeekLap") ) { return hx::Val( rawSeekLap_dyn()); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"pcmSeekPage") ) { return hx::Val( pcmSeekPage_dyn()); }
		if (HX_FIELD_EQ(inName,"timeSeekLap") ) { return hx::Val( timeSeekLap_dyn()); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"serialNumber") ) { return hx::Val( serialNumber_dyn()); }
		if (HX_FIELD_EQ(inName,"timeSeekPage") ) { return hx::Val( timeSeekPage_dyn()); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"bitrateInstant") ) { return hx::Val( bitrateInstant_dyn()); }
		if (HX_FIELD_EQ(inName,"pcmSeekPageLap") ) { return hx::Val( pcmSeekPageLap_dyn()); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"timeSeekPageLap") ) { return hx::Val( timeSeekPageLap_dyn()); }
	}
	return super::__Field(inName,inCallProp);
}

bool VorbisFile_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 8:
		if (HX_FIELD_EQ(inName,"fromFile") ) { outValue = fromFile_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"fromBytes") ) { outValue = fromBytes_dyn(); return true; }
	}
	return false;
}

hx::Val VorbisFile_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"handle") ) { handle=inValue.Cast<  ::Dynamic >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"bitstream") ) { bitstream=inValue.Cast< Int >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void VorbisFile_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("bitstream","\x0d","\xe5","\x01","\x1f"));
	outFields->push(HX_HCSTRING("handle","\xa8","\x83","\xfd","\xb7"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo VorbisFile_obj_sMemberStorageInfo[] = {
	{hx::fsInt,(int)offsetof(VorbisFile_obj,bitstream),HX_HCSTRING("bitstream","\x0d","\xe5","\x01","\x1f")},
	{hx::fsObject /*Dynamic*/ ,(int)offsetof(VorbisFile_obj,handle),HX_HCSTRING("handle","\xa8","\x83","\xfd","\xb7")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *VorbisFile_obj_sStaticStorageInfo = 0;
#endif

static ::String VorbisFile_obj_sMemberFields[] = {
	HX_HCSTRING("bitstream","\x0d","\xe5","\x01","\x1f"),
	HX_HCSTRING("handle","\xa8","\x83","\xfd","\xb7"),
	HX_HCSTRING("bitrate","\x2d","\xf6","\xcf","\xfc"),
	HX_HCSTRING("bitrateInstant","\x34","\xd8","\x84","\xad"),
	HX_HCSTRING("clear","\x8d","\x71","\x5b","\x48"),
	HX_HCSTRING("comment","\x5f","\x7a","\x70","\x81"),
	HX_HCSTRING("crosslap","\xdb","\x98","\x18","\x88"),
	HX_HCSTRING("info","\x6e","\x38","\xbb","\x45"),
	HX_HCSTRING("pcmSeek","\xb2","\x99","\x8f","\xc0"),
	HX_HCSTRING("pcmSeekLap","\xc9","\x01","\x58","\x5a"),
	HX_HCSTRING("pcmSeekPage","\x21","\x61","\x4e","\xb5"),
	HX_HCSTRING("pcmSeekPageLap","\xba","\x49","\x2e","\x43"),
	HX_HCSTRING("pcmTell","\x6b","\xd6","\x38","\xc1"),
	HX_HCSTRING("pcmTotal","\x4a","\xf2","\x24","\x57"),
	HX_HCSTRING("rawSeek","\x80","\x9b","\x05","\x09"),
	HX_HCSTRING("rawSeekLap","\xbb","\x94","\x02","\x71"),
	HX_HCSTRING("rawTell","\x39","\xd8","\xae","\x09"),
	HX_HCSTRING("rawTotal","\xbc","\x84","\xf0","\x75"),
	HX_HCSTRING("read","\x56","\x4b","\xa7","\x4b"),
	HX_HCSTRING("readFloat","\x66","\x12","\x7e","\xd3"),
	HX_HCSTRING("seekable","\x12","\x0f","\xf5","\x57"),
	HX_HCSTRING("serialNumber","\xdd","\x53","\x26","\x94"),
	HX_HCSTRING("streams","\xf3","\xdb","\x44","\xf6"),
	HX_HCSTRING("timeSeek","\x25","\x08","\xb2","\xec"),
	HX_HCSTRING("timeSeekLap","\x36","\xdd","\xf1","\xf0"),
	HX_HCSTRING("timeSeekPage","\x14","\x85","\x54","\xe5"),
	HX_HCSTRING("timeSeekPageLap","\xa7","\xdf","\xfe","\x1d"),
	HX_HCSTRING("timeTell","\xde","\x44","\x5b","\xed"),
	HX_HCSTRING("timeTotal","\x77","\x28","\x23","\xc9"),
	::String(null()) };

static void VorbisFile_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(VorbisFile_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void VorbisFile_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(VorbisFile_obj::__mClass,"__mClass");
};

#endif

hx::Class VorbisFile_obj::__mClass;

static ::String VorbisFile_obj_sStaticFields[] = {
	HX_HCSTRING("fromBytes","\xa1","\xf2","\x20","\x72"),
	HX_HCSTRING("fromFile","\x06","\x9d","\x87","\xa1"),
	::String(null())
};

void VorbisFile_obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("lime.media.codecs.vorbis.VorbisFile","\x3c","\xa9","\x6a","\x70");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &VorbisFile_obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = VorbisFile_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(VorbisFile_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(VorbisFile_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< VorbisFile_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = VorbisFile_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = VorbisFile_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = VorbisFile_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace lime
} // end namespace media
} // end namespace codecs
} // end namespace vorbis
