// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_lime__backend_native_NativeGLRenderContext
#include <lime/_backend/native/NativeGLRenderContext.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_GL
#include <lime/graphics/opengl/GL.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_GLBuffer
#include <lime/graphics/opengl/GLBuffer.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_GLFramebuffer
#include <lime/graphics/opengl/GLFramebuffer.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_GLObject
#include <lime/graphics/opengl/GLObject.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_GLProgram
#include <lime/graphics/opengl/GLProgram.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_GLRenderbuffer
#include <lime/graphics/opengl/GLRenderbuffer.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_GLShader
#include <lime/graphics/opengl/GLShader.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_GLTexture
#include <lime/graphics/opengl/GLTexture.h>
#endif
#ifndef INCLUDED_lime_utils_ArrayBufferView
#include <lime/utils/ArrayBufferView.h>
#endif

namespace lime{
namespace graphics{
namespace opengl{

void GL_obj::__construct() { }

Dynamic GL_obj::__CreateEmpty() { return new GL_obj; }

hx::ObjectPtr< GL_obj > GL_obj::__new()
{
	hx::ObjectPtr< GL_obj > _hx_result = new GL_obj();
	_hx_result->__construct();
	return _hx_result;
}

Dynamic GL_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< GL_obj > _hx_result = new GL_obj();
	_hx_result->__construct();
	return _hx_result;
}

Int GL_obj::DEPTH_BUFFER_BIT;

Int GL_obj::STENCIL_BUFFER_BIT;

Int GL_obj::COLOR_BUFFER_BIT;

Int GL_obj::POINTS;

Int GL_obj::LINES;

Int GL_obj::LINE_LOOP;

Int GL_obj::LINE_STRIP;

Int GL_obj::TRIANGLES;

Int GL_obj::TRIANGLE_STRIP;

Int GL_obj::TRIANGLE_FAN;

Int GL_obj::ZERO;

Int GL_obj::ONE;

Int GL_obj::SRC_COLOR;

Int GL_obj::ONE_MINUS_SRC_COLOR;

Int GL_obj::SRC_ALPHA;

Int GL_obj::ONE_MINUS_SRC_ALPHA;

Int GL_obj::DST_ALPHA;

Int GL_obj::ONE_MINUS_DST_ALPHA;

Int GL_obj::DST_COLOR;

Int GL_obj::ONE_MINUS_DST_COLOR;

Int GL_obj::SRC_ALPHA_SATURATE;

Int GL_obj::FUNC_ADD;

Int GL_obj::BLEND_EQUATION;

Int GL_obj::BLEND_EQUATION_RGB;

Int GL_obj::BLEND_EQUATION_ALPHA;

Int GL_obj::FUNC_SUBTRACT;

Int GL_obj::FUNC_REVERSE_SUBTRACT;

Int GL_obj::BLEND_DST_RGB;

Int GL_obj::BLEND_SRC_RGB;

Int GL_obj::BLEND_DST_ALPHA;

Int GL_obj::BLEND_SRC_ALPHA;

Int GL_obj::CONSTANT_COLOR;

Int GL_obj::ONE_MINUS_CONSTANT_COLOR;

Int GL_obj::CONSTANT_ALPHA;

Int GL_obj::ONE_MINUS_CONSTANT_ALPHA;

Int GL_obj::BLEND_COLOR;

Int GL_obj::ARRAY_BUFFER;

Int GL_obj::ELEMENT_ARRAY_BUFFER;

Int GL_obj::ARRAY_BUFFER_BINDING;

Int GL_obj::ELEMENT_ARRAY_BUFFER_BINDING;

Int GL_obj::STREAM_DRAW;

Int GL_obj::STATIC_DRAW;

Int GL_obj::DYNAMIC_DRAW;

Int GL_obj::BUFFER_SIZE;

Int GL_obj::BUFFER_USAGE;

Int GL_obj::CURRENT_VERTEX_ATTRIB;

Int GL_obj::FRONT;

Int GL_obj::BACK;

Int GL_obj::FRONT_AND_BACK;

Int GL_obj::CULL_FACE;

Int GL_obj::BLEND;

Int GL_obj::DITHER;

Int GL_obj::STENCIL_TEST;

Int GL_obj::DEPTH_TEST;

Int GL_obj::SCISSOR_TEST;

Int GL_obj::POLYGON_OFFSET_FILL;

Int GL_obj::SAMPLE_ALPHA_TO_COVERAGE;

Int GL_obj::SAMPLE_COVERAGE;

Int GL_obj::NO_ERROR;

Int GL_obj::INVALID_ENUM;

Int GL_obj::INVALID_VALUE;

Int GL_obj::INVALID_OPERATION;

Int GL_obj::OUT_OF_MEMORY;

Int GL_obj::CW;

Int GL_obj::CCW;

Int GL_obj::LINE_WIDTH;

Int GL_obj::ALIASED_POINT_SIZE_RANGE;

Int GL_obj::ALIASED_LINE_WIDTH_RANGE;

Int GL_obj::CULL_FACE_MODE;

Int GL_obj::FRONT_FACE;

Int GL_obj::DEPTH_RANGE;

Int GL_obj::DEPTH_WRITEMASK;

Int GL_obj::DEPTH_CLEAR_VALUE;

Int GL_obj::DEPTH_FUNC;

Int GL_obj::STENCIL_CLEAR_VALUE;

Int GL_obj::STENCIL_FUNC;

Int GL_obj::STENCIL_FAIL;

Int GL_obj::STENCIL_PASS_DEPTH_FAIL;

Int GL_obj::STENCIL_PASS_DEPTH_PASS;

Int GL_obj::STENCIL_REF;

Int GL_obj::STENCIL_VALUE_MASK;

Int GL_obj::STENCIL_WRITEMASK;

Int GL_obj::STENCIL_BACK_FUNC;

Int GL_obj::STENCIL_BACK_FAIL;

Int GL_obj::STENCIL_BACK_PASS_DEPTH_FAIL;

Int GL_obj::STENCIL_BACK_PASS_DEPTH_PASS;

Int GL_obj::STENCIL_BACK_REF;

Int GL_obj::STENCIL_BACK_VALUE_MASK;

Int GL_obj::STENCIL_BACK_WRITEMASK;

Int GL_obj::VIEWPORT;

Int GL_obj::SCISSOR_BOX;

Int GL_obj::COLOR_CLEAR_VALUE;

Int GL_obj::COLOR_WRITEMASK;

Int GL_obj::UNPACK_ALIGNMENT;

Int GL_obj::PACK_ALIGNMENT;

Int GL_obj::MAX_TEXTURE_SIZE;

Int GL_obj::MAX_VIEWPORT_DIMS;

Int GL_obj::SUBPIXEL_BITS;

Int GL_obj::RED_BITS;

Int GL_obj::GREEN_BITS;

Int GL_obj::BLUE_BITS;

Int GL_obj::ALPHA_BITS;

Int GL_obj::DEPTH_BITS;

Int GL_obj::STENCIL_BITS;

Int GL_obj::POLYGON_OFFSET_UNITS;

Int GL_obj::POLYGON_OFFSET_FACTOR;

Int GL_obj::TEXTURE_BINDING_2D;

Int GL_obj::SAMPLE_BUFFERS;

Int GL_obj::SAMPLES;

Int GL_obj::SAMPLE_COVERAGE_VALUE;

Int GL_obj::SAMPLE_COVERAGE_INVERT;

Int GL_obj::COMPRESSED_TEXTURE_FORMATS;

Int GL_obj::DONT_CARE;

Int GL_obj::FASTEST;

Int GL_obj::NICEST;

Int GL_obj::GENERATE_MIPMAP_HINT;

Int GL_obj::BYTE;

Int GL_obj::UNSIGNED_BYTE;

Int GL_obj::SHORT;

Int GL_obj::UNSIGNED_SHORT;

Int GL_obj::INT;

Int GL_obj::UNSIGNED_INT;

Int GL_obj::FLOAT;

Int GL_obj::DEPTH_COMPONENT;

Int GL_obj::ALPHA;

Int GL_obj::RGB;

Int GL_obj::RGBA;

Int GL_obj::BGR_EXT;

Int GL_obj::BGRA_EXT;

Int GL_obj::LUMINANCE;

Int GL_obj::LUMINANCE_ALPHA;

Int GL_obj::UNSIGNED_SHORT_4_4_4_4;

Int GL_obj::UNSIGNED_SHORT_5_5_5_1;

Int GL_obj::UNSIGNED_SHORT_5_6_5;

Int GL_obj::FRAGMENT_SHADER;

Int GL_obj::VERTEX_SHADER;

Int GL_obj::MAX_VERTEX_ATTRIBS;

Int GL_obj::MAX_VERTEX_UNIFORM_VECTORS;

Int GL_obj::MAX_VARYING_VECTORS;

Int GL_obj::MAX_COMBINED_TEXTURE_IMAGE_UNITS;

Int GL_obj::MAX_VERTEX_TEXTURE_IMAGE_UNITS;

Int GL_obj::MAX_TEXTURE_IMAGE_UNITS;

Int GL_obj::MAX_FRAGMENT_UNIFORM_VECTORS;

Int GL_obj::SHADER_TYPE;

Int GL_obj::DELETE_STATUS;

Int GL_obj::LINK_STATUS;

Int GL_obj::VALIDATE_STATUS;

Int GL_obj::ATTACHED_SHADERS;

Int GL_obj::ACTIVE_UNIFORMS;

Int GL_obj::ACTIVE_ATTRIBUTES;

Int GL_obj::SHADING_LANGUAGE_VERSION;

Int GL_obj::CURRENT_PROGRAM;

Int GL_obj::NEVER;

Int GL_obj::LESS;

Int GL_obj::EQUAL;

Int GL_obj::LEQUAL;

Int GL_obj::GREATER;

Int GL_obj::NOTEQUAL;

Int GL_obj::GEQUAL;

Int GL_obj::ALWAYS;

Int GL_obj::KEEP;

Int GL_obj::REPLACE;

Int GL_obj::INCR;

Int GL_obj::DECR;

Int GL_obj::INVERT;

Int GL_obj::INCR_WRAP;

Int GL_obj::DECR_WRAP;

Int GL_obj::VENDOR;

Int GL_obj::RENDERER;

Int GL_obj::VERSION;

Int GL_obj::NEAREST;

Int GL_obj::LINEAR;

Int GL_obj::NEAREST_MIPMAP_NEAREST;

Int GL_obj::LINEAR_MIPMAP_NEAREST;

Int GL_obj::NEAREST_MIPMAP_LINEAR;

Int GL_obj::LINEAR_MIPMAP_LINEAR;

Int GL_obj::TEXTURE_MAG_FILTER;

Int GL_obj::TEXTURE_MIN_FILTER;

Int GL_obj::TEXTURE_WRAP_S;

Int GL_obj::TEXTURE_WRAP_T;

Int GL_obj::TEXTURE_2D;

Int GL_obj::TEXTURE;

Int GL_obj::TEXTURE_CUBE_MAP;

Int GL_obj::TEXTURE_BINDING_CUBE_MAP;

Int GL_obj::TEXTURE_CUBE_MAP_POSITIVE_X;

Int GL_obj::TEXTURE_CUBE_MAP_NEGATIVE_X;

Int GL_obj::TEXTURE_CUBE_MAP_POSITIVE_Y;

Int GL_obj::TEXTURE_CUBE_MAP_NEGATIVE_Y;

Int GL_obj::TEXTURE_CUBE_MAP_POSITIVE_Z;

Int GL_obj::TEXTURE_CUBE_MAP_NEGATIVE_Z;

Int GL_obj::MAX_CUBE_MAP_TEXTURE_SIZE;

Int GL_obj::TEXTURE0;

Int GL_obj::TEXTURE1;

Int GL_obj::TEXTURE2;

Int GL_obj::TEXTURE3;

Int GL_obj::TEXTURE4;

Int GL_obj::TEXTURE5;

Int GL_obj::TEXTURE6;

Int GL_obj::TEXTURE7;

Int GL_obj::TEXTURE8;

Int GL_obj::TEXTURE9;

Int GL_obj::TEXTURE10;

Int GL_obj::TEXTURE11;

Int GL_obj::TEXTURE12;

Int GL_obj::TEXTURE13;

Int GL_obj::TEXTURE14;

Int GL_obj::TEXTURE15;

Int GL_obj::TEXTURE16;

Int GL_obj::TEXTURE17;

Int GL_obj::TEXTURE18;

Int GL_obj::TEXTURE19;

Int GL_obj::TEXTURE20;

Int GL_obj::TEXTURE21;

Int GL_obj::TEXTURE22;

Int GL_obj::TEXTURE23;

Int GL_obj::TEXTURE24;

Int GL_obj::TEXTURE25;

Int GL_obj::TEXTURE26;

Int GL_obj::TEXTURE27;

Int GL_obj::TEXTURE28;

Int GL_obj::TEXTURE29;

Int GL_obj::TEXTURE30;

Int GL_obj::TEXTURE31;

Int GL_obj::ACTIVE_TEXTURE;

Int GL_obj::REPEAT;

Int GL_obj::CLAMP_TO_EDGE;

Int GL_obj::MIRRORED_REPEAT;

Int GL_obj::FLOAT_VEC2;

Int GL_obj::FLOAT_VEC3;

Int GL_obj::FLOAT_VEC4;

Int GL_obj::INT_VEC2;

Int GL_obj::INT_VEC3;

Int GL_obj::INT_VEC4;

Int GL_obj::BOOL;

Int GL_obj::BOOL_VEC2;

Int GL_obj::BOOL_VEC3;

Int GL_obj::BOOL_VEC4;

Int GL_obj::FLOAT_MAT2;

Int GL_obj::FLOAT_MAT3;

Int GL_obj::FLOAT_MAT4;

Int GL_obj::SAMPLER_2D;

Int GL_obj::SAMPLER_CUBE;

Int GL_obj::VERTEX_ATTRIB_ARRAY_ENABLED;

Int GL_obj::VERTEX_ATTRIB_ARRAY_SIZE;

Int GL_obj::VERTEX_ATTRIB_ARRAY_STRIDE;

Int GL_obj::VERTEX_ATTRIB_ARRAY_TYPE;

Int GL_obj::VERTEX_ATTRIB_ARRAY_NORMALIZED;

Int GL_obj::VERTEX_ATTRIB_ARRAY_POINTER;

Int GL_obj::VERTEX_ATTRIB_ARRAY_BUFFER_BINDING;

Int GL_obj::VERTEX_PROGRAM_POINT_SIZE;

Int GL_obj::POINT_SPRITE;

Int GL_obj::COMPILE_STATUS;

Int GL_obj::LOW_FLOAT;

Int GL_obj::MEDIUM_FLOAT;

Int GL_obj::HIGH_FLOAT;

Int GL_obj::LOW_INT;

Int GL_obj::MEDIUM_INT;

Int GL_obj::HIGH_INT;

Int GL_obj::FRAMEBUFFER;

Int GL_obj::RENDERBUFFER;

Int GL_obj::RGBA4;

Int GL_obj::RGB5_A1;

Int GL_obj::RGB565;

Int GL_obj::DEPTH_COMPONENT16;

Int GL_obj::STENCIL_INDEX;

Int GL_obj::STENCIL_INDEX8;

Int GL_obj::DEPTH_STENCIL;

Int GL_obj::RENDERBUFFER_WIDTH;

Int GL_obj::RENDERBUFFER_HEIGHT;

Int GL_obj::RENDERBUFFER_INTERNAL_FORMAT;

Int GL_obj::RENDERBUFFER_RED_SIZE;

Int GL_obj::RENDERBUFFER_GREEN_SIZE;

Int GL_obj::RENDERBUFFER_BLUE_SIZE;

Int GL_obj::RENDERBUFFER_ALPHA_SIZE;

Int GL_obj::RENDERBUFFER_DEPTH_SIZE;

Int GL_obj::RENDERBUFFER_STENCIL_SIZE;

Int GL_obj::FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE;

Int GL_obj::FRAMEBUFFER_ATTACHMENT_OBJECT_NAME;

Int GL_obj::FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL;

Int GL_obj::FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE;

Int GL_obj::COLOR_ATTACHMENT0;

Int GL_obj::DEPTH_ATTACHMENT;

Int GL_obj::STENCIL_ATTACHMENT;

Int GL_obj::DEPTH_STENCIL_ATTACHMENT;

Int GL_obj::NONE;

Int GL_obj::FRAMEBUFFER_COMPLETE;

Int GL_obj::FRAMEBUFFER_INCOMPLETE_ATTACHMENT;

Int GL_obj::FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT;

Int GL_obj::FRAMEBUFFER_INCOMPLETE_DIMENSIONS;

Int GL_obj::FRAMEBUFFER_UNSUPPORTED;

Int GL_obj::FRAMEBUFFER_BINDING;

Int GL_obj::RENDERBUFFER_BINDING;

Int GL_obj::MAX_RENDERBUFFER_SIZE;

Int GL_obj::INVALID_FRAMEBUFFER_OPERATION;

Int GL_obj::UNPACK_FLIP_Y_WEBGL;

Int GL_obj::UNPACK_PREMULTIPLY_ALPHA_WEBGL;

Int GL_obj::CONTEXT_LOST_WEBGL;

Int GL_obj::UNPACK_COLORSPACE_CONVERSION_WEBGL;

Int GL_obj::BROWSER_DEFAULT_WEBGL;

Int GL_obj::version;

 ::lime::_backend::native::NativeGLRenderContext GL_obj::context;

 ::lime::graphics::opengl::GLProgram GL_obj::_hx___currentProgram;

void GL_obj::activeTexture(Int texture){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","activeTexture",0x4f66f561,"lime.graphics.opengl.GL.activeTexture","lime/graphics/opengl/GL.hx",377,0xa5aa2623)
            	HX_STACK_ARG(texture,"texture")
HXLINE( 377)		::lime::graphics::opengl::GL_obj::context->activeTexture(texture);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,activeTexture,(void))

void GL_obj::attachShader( ::lime::graphics::opengl::GLProgram program, ::lime::graphics::opengl::GLShader shader){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","attachShader",0xfe33c89e,"lime.graphics.opengl.GL.attachShader","lime/graphics/opengl/GL.hx",384,0xa5aa2623)
            	HX_STACK_ARG(program,"program")
            	HX_STACK_ARG(shader,"shader")
HXLINE( 384)		::lime::graphics::opengl::GL_obj::context->attachShader(program,shader);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,attachShader,(void))

void GL_obj::bindAttribLocation( ::lime::graphics::opengl::GLProgram program,Int index,::String name){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","bindAttribLocation",0x0d863510,"lime.graphics.opengl.GL.bindAttribLocation","lime/graphics/opengl/GL.hx",391,0xa5aa2623)
            	HX_STACK_ARG(program,"program")
            	HX_STACK_ARG(index,"index")
            	HX_STACK_ARG(name,"name")
HXLINE( 391)		::lime::graphics::opengl::GL_obj::context->bindAttribLocation(program,index,name);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(GL_obj,bindAttribLocation,(void))

void GL_obj::bindBuffer(Int target, ::lime::graphics::opengl::GLBuffer buffer){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","bindBuffer",0xbeff2d71,"lime.graphics.opengl.GL.bindBuffer","lime/graphics/opengl/GL.hx",398,0xa5aa2623)
            	HX_STACK_ARG(target,"target")
            	HX_STACK_ARG(buffer,"buffer")
HXLINE( 398)		::lime::graphics::opengl::GL_obj::context->bindBuffer(target,buffer);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,bindBuffer,(void))

void GL_obj::bindFramebuffer(Int target, ::lime::graphics::opengl::GLFramebuffer framebuffer){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","bindFramebuffer",0x325b6adc,"lime.graphics.opengl.GL.bindFramebuffer","lime/graphics/opengl/GL.hx",405,0xa5aa2623)
            	HX_STACK_ARG(target,"target")
            	HX_STACK_ARG(framebuffer,"framebuffer")
HXLINE( 405)		::lime::graphics::opengl::GL_obj::context->bindFramebuffer(target,framebuffer);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,bindFramebuffer,(void))

void GL_obj::bindRenderbuffer(Int target, ::lime::graphics::opengl::GLRenderbuffer renderbuffer){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","bindRenderbuffer",0x642e2807,"lime.graphics.opengl.GL.bindRenderbuffer","lime/graphics/opengl/GL.hx",412,0xa5aa2623)
            	HX_STACK_ARG(target,"target")
            	HX_STACK_ARG(renderbuffer,"renderbuffer")
HXLINE( 412)		::lime::graphics::opengl::GL_obj::context->bindRenderbuffer(target,renderbuffer);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,bindRenderbuffer,(void))

void GL_obj::bindTexture(Int target, ::lime::graphics::opengl::GLTexture texture){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","bindTexture",0x4d98bb4a,"lime.graphics.opengl.GL.bindTexture","lime/graphics/opengl/GL.hx",419,0xa5aa2623)
            	HX_STACK_ARG(target,"target")
            	HX_STACK_ARG(texture,"texture")
HXLINE( 419)		::lime::graphics::opengl::GL_obj::context->bindTexture(target,texture);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,bindTexture,(void))

void GL_obj::blendColor(Float red,Float green,Float blue,Float alpha){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","blendColor",0xa8f4ce26,"lime.graphics.opengl.GL.blendColor","lime/graphics/opengl/GL.hx",426,0xa5aa2623)
            	HX_STACK_ARG(red,"red")
            	HX_STACK_ARG(green,"green")
            	HX_STACK_ARG(blue,"blue")
            	HX_STACK_ARG(alpha,"alpha")
HXLINE( 426)		::lime::graphics::opengl::GL_obj::context->blendColor(red,green,blue,alpha);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(GL_obj,blendColor,(void))

void GL_obj::blendEquation(Int mode){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","blendEquation",0xfb6a7aa9,"lime.graphics.opengl.GL.blendEquation","lime/graphics/opengl/GL.hx",433,0xa5aa2623)
            	HX_STACK_ARG(mode,"mode")
HXLINE( 433)		::lime::graphics::opengl::GL_obj::context->blendEquation(mode);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,blendEquation,(void))

void GL_obj::blendEquationSeparate(Int modeRGB,Int modeAlpha){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","blendEquationSeparate",0xa3a0a72c,"lime.graphics.opengl.GL.blendEquationSeparate","lime/graphics/opengl/GL.hx",440,0xa5aa2623)
            	HX_STACK_ARG(modeRGB,"modeRGB")
            	HX_STACK_ARG(modeAlpha,"modeAlpha")
HXLINE( 440)		::lime::graphics::opengl::GL_obj::context->blendEquationSeparate(modeRGB,modeAlpha);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,blendEquationSeparate,(void))

void GL_obj::blendFunc(Int sfactor,Int dfactor){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","blendFunc",0x1c0397e1,"lime.graphics.opengl.GL.blendFunc","lime/graphics/opengl/GL.hx",447,0xa5aa2623)
            	HX_STACK_ARG(sfactor,"sfactor")
            	HX_STACK_ARG(dfactor,"dfactor")
HXLINE( 447)		::lime::graphics::opengl::GL_obj::context->blendFunc(sfactor,dfactor);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,blendFunc,(void))

void GL_obj::blendFuncSeparate(Int srcRGB,Int dstRGB,Int srcAlpha,Int dstAlpha){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","blendFuncSeparate",0x02edbc64,"lime.graphics.opengl.GL.blendFuncSeparate","lime/graphics/opengl/GL.hx",454,0xa5aa2623)
            	HX_STACK_ARG(srcRGB,"srcRGB")
            	HX_STACK_ARG(dstRGB,"dstRGB")
            	HX_STACK_ARG(srcAlpha,"srcAlpha")
            	HX_STACK_ARG(dstAlpha,"dstAlpha")
HXLINE( 454)		::lime::graphics::opengl::GL_obj::context->blendFuncSeparate(srcRGB,dstRGB,srcAlpha,dstAlpha);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(GL_obj,blendFuncSeparate,(void))

void GL_obj::bufferData(Int target, ::lime::utils::ArrayBufferView data,Int usage){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","bufferData",0x59b45a1e,"lime.graphics.opengl.GL.bufferData","lime/graphics/opengl/GL.hx",461,0xa5aa2623)
            	HX_STACK_ARG(target,"target")
            	HX_STACK_ARG(data,"data")
            	HX_STACK_ARG(usage,"usage")
HXLINE( 461)		::lime::graphics::opengl::GL_obj::context->bufferData(target,data,usage);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(GL_obj,bufferData,(void))

void GL_obj::bufferSubData(Int target,Int offset, ::lime::utils::ArrayBufferView data){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","bufferSubData",0x3ea1d856,"lime.graphics.opengl.GL.bufferSubData","lime/graphics/opengl/GL.hx",468,0xa5aa2623)
            	HX_STACK_ARG(target,"target")
            	HX_STACK_ARG(offset,"offset")
            	HX_STACK_ARG(data,"data")
HXLINE( 468)		::lime::graphics::opengl::GL_obj::context->bufferSubData(target,offset,data);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(GL_obj,bufferSubData,(void))

Int GL_obj::checkFramebufferStatus(Int target){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","checkFramebufferStatus",0xbf9caeeb,"lime.graphics.opengl.GL.checkFramebufferStatus","lime/graphics/opengl/GL.hx",475,0xa5aa2623)
            	HX_STACK_ARG(target,"target")
HXLINE( 475)		return ::lime::graphics::opengl::GL_obj::context->checkFramebufferStatus(target);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,checkFramebufferStatus,return )

void GL_obj::clear(Int mask){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","clear",0x6a08c739,"lime.graphics.opengl.GL.clear","lime/graphics/opengl/GL.hx",482,0xa5aa2623)
            	HX_STACK_ARG(mask,"mask")
HXLINE( 482)		::lime::graphics::opengl::GL_obj::context->clear(mask);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,clear,(void))

void GL_obj::clearColor(Float red,Float green,Float blue,Float alpha){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","clearColor",0xe5a74b6a,"lime.graphics.opengl.GL.clearColor","lime/graphics/opengl/GL.hx",489,0xa5aa2623)
            	HX_STACK_ARG(red,"red")
            	HX_STACK_ARG(green,"green")
            	HX_STACK_ARG(blue,"blue")
            	HX_STACK_ARG(alpha,"alpha")
HXLINE( 489)		::lime::graphics::opengl::GL_obj::context->clearColor(red,green,blue,alpha);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(GL_obj,clearColor,(void))

void GL_obj::clearDepth(Float depth){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","clearDepth",0x7274cb0a,"lime.graphics.opengl.GL.clearDepth","lime/graphics/opengl/GL.hx",496,0xa5aa2623)
            	HX_STACK_ARG(depth,"depth")
HXLINE( 496)		::lime::graphics::opengl::GL_obj::context->clearDepth(depth);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,clearDepth,(void))

void GL_obj::clearStencil(Int s){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","clearStencil",0xa73e67c3,"lime.graphics.opengl.GL.clearStencil","lime/graphics/opengl/GL.hx",503,0xa5aa2623)
            	HX_STACK_ARG(s,"s")
HXLINE( 503)		::lime::graphics::opengl::GL_obj::context->clearStencil(s);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,clearStencil,(void))

void GL_obj::colorMask(Bool red,Bool green,Bool blue,Bool alpha){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","colorMask",0x382b679b,"lime.graphics.opengl.GL.colorMask","lime/graphics/opengl/GL.hx",510,0xa5aa2623)
            	HX_STACK_ARG(red,"red")
            	HX_STACK_ARG(green,"green")
            	HX_STACK_ARG(blue,"blue")
            	HX_STACK_ARG(alpha,"alpha")
HXLINE( 510)		::lime::graphics::opengl::GL_obj::context->colorMask(red,green,blue,alpha);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(GL_obj,colorMask,(void))

void GL_obj::compileShader( ::lime::graphics::opengl::GLShader shader){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","compileShader",0xd36f52a4,"lime.graphics.opengl.GL.compileShader","lime/graphics/opengl/GL.hx",517,0xa5aa2623)
            	HX_STACK_ARG(shader,"shader")
HXLINE( 517)		::lime::graphics::opengl::GL_obj::context->compileShader(shader);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,compileShader,(void))

void GL_obj::compressedTexImage2D(Int target,Int level,Int internalformat,Int width,Int height,Int border, ::lime::utils::ArrayBufferView data){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","compressedTexImage2D",0xbf53c47b,"lime.graphics.opengl.GL.compressedTexImage2D","lime/graphics/opengl/GL.hx",524,0xa5aa2623)
            	HX_STACK_ARG(target,"target")
            	HX_STACK_ARG(level,"level")
            	HX_STACK_ARG(internalformat,"internalformat")
            	HX_STACK_ARG(width,"width")
            	HX_STACK_ARG(height,"height")
            	HX_STACK_ARG(border,"border")
            	HX_STACK_ARG(data,"data")
HXLINE( 524)		::lime::graphics::opengl::GL_obj::context->compressedTexImage2D(target,level,internalformat,width,height,border,data);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC7(GL_obj,compressedTexImage2D,(void))

void GL_obj::compressedTexSubImage2D(Int target,Int level,Int xoffset,Int yoffset,Int width,Int height,Int format, ::lime::utils::ArrayBufferView data){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","compressedTexSubImage2D",0x03ede67f,"lime.graphics.opengl.GL.compressedTexSubImage2D","lime/graphics/opengl/GL.hx",531,0xa5aa2623)
            	HX_STACK_ARG(target,"target")
            	HX_STACK_ARG(level,"level")
            	HX_STACK_ARG(xoffset,"xoffset")
            	HX_STACK_ARG(yoffset,"yoffset")
            	HX_STACK_ARG(width,"width")
            	HX_STACK_ARG(height,"height")
            	HX_STACK_ARG(format,"format")
            	HX_STACK_ARG(data,"data")
HXLINE( 531)		::lime::graphics::opengl::GL_obj::context->compressedTexSubImage2D(target,level,xoffset,yoffset,width,height,format,data);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC8(GL_obj,compressedTexSubImage2D,(void))

void GL_obj::copyTexImage2D(Int target,Int level,Int internalformat,Int x,Int y,Int width,Int height,Int border){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","copyTexImage2D",0x90ff65af,"lime.graphics.opengl.GL.copyTexImage2D","lime/graphics/opengl/GL.hx",538,0xa5aa2623)
            	HX_STACK_ARG(target,"target")
            	HX_STACK_ARG(level,"level")
            	HX_STACK_ARG(internalformat,"internalformat")
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
            	HX_STACK_ARG(width,"width")
            	HX_STACK_ARG(height,"height")
            	HX_STACK_ARG(border,"border")
HXLINE( 538)		::lime::graphics::opengl::GL_obj::context->copyTexImage2D(target,level,internalformat,x,y,width,height,border);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC8(GL_obj,copyTexImage2D,(void))

void GL_obj::copyTexSubImage2D(Int target,Int level,Int xoffset,Int yoffset,Int x,Int y,Int width,Int height){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","copyTexSubImage2D",0xdcdbfdcb,"lime.graphics.opengl.GL.copyTexSubImage2D","lime/graphics/opengl/GL.hx",545,0xa5aa2623)
            	HX_STACK_ARG(target,"target")
            	HX_STACK_ARG(level,"level")
            	HX_STACK_ARG(xoffset,"xoffset")
            	HX_STACK_ARG(yoffset,"yoffset")
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
            	HX_STACK_ARG(width,"width")
            	HX_STACK_ARG(height,"height")
HXLINE( 545)		::lime::graphics::opengl::GL_obj::context->copyTexSubImage2D(target,level,xoffset,yoffset,x,y,width,height);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC8(GL_obj,copyTexSubImage2D,(void))

 ::lime::graphics::opengl::GLBuffer GL_obj::createBuffer(){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","createBuffer",0x3ea5f4f0,"lime.graphics.opengl.GL.createBuffer","lime/graphics/opengl/GL.hx",552,0xa5aa2623)
HXLINE( 552)		return ::lime::graphics::opengl::GL_obj::context->createBuffer();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(GL_obj,createBuffer,return )

 ::lime::graphics::opengl::GLFramebuffer GL_obj::createFramebuffer(){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","createFramebuffer",0x051616fd,"lime.graphics.opengl.GL.createFramebuffer","lime/graphics/opengl/GL.hx",559,0xa5aa2623)
HXLINE( 559)		return ::lime::graphics::opengl::GL_obj::context->createFramebuffer();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(GL_obj,createFramebuffer,return )

 ::lime::graphics::opengl::GLProgram GL_obj::createProgram(){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","createProgram",0xd4f90494,"lime.graphics.opengl.GL.createProgram","lime/graphics/opengl/GL.hx",566,0xa5aa2623)
HXLINE( 566)		return ::lime::graphics::opengl::GL_obj::context->createProgram();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(GL_obj,createProgram,return )

 ::lime::graphics::opengl::GLRenderbuffer GL_obj::createRenderbuffer(){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","createRenderbuffer",0xf4ca18c6,"lime.graphics.opengl.GL.createRenderbuffer","lime/graphics/opengl/GL.hx",573,0xa5aa2623)
HXLINE( 573)		return ::lime::graphics::opengl::GL_obj::context->createRenderbuffer();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(GL_obj,createRenderbuffer,return )

 ::lime::graphics::opengl::GLShader GL_obj::createShader(Int type){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","createShader",0x8b31f715,"lime.graphics.opengl.GL.createShader","lime/graphics/opengl/GL.hx",580,0xa5aa2623)
            	HX_STACK_ARG(type,"type")
HXLINE( 580)		return ::lime::graphics::opengl::GL_obj::context->createShader(type);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,createShader,return )

 ::lime::graphics::opengl::GLTexture GL_obj::createTexture(){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","createTexture",0x7fe082eb,"lime.graphics.opengl.GL.createTexture","lime/graphics/opengl/GL.hx",587,0xa5aa2623)
HXLINE( 587)		return ::lime::graphics::opengl::GL_obj::context->createTexture();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(GL_obj,createTexture,return )

void GL_obj::cullFace(Int mode){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","cullFace",0xb5786543,"lime.graphics.opengl.GL.cullFace","lime/graphics/opengl/GL.hx",594,0xa5aa2623)
            	HX_STACK_ARG(mode,"mode")
HXLINE( 594)		::lime::graphics::opengl::GL_obj::context->cullFace(mode);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,cullFace,(void))

void GL_obj::deleteBuffer( ::lime::graphics::opengl::GLBuffer buffer){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","deleteBuffer",0x82e8db5f,"lime.graphics.opengl.GL.deleteBuffer","lime/graphics/opengl/GL.hx",601,0xa5aa2623)
            	HX_STACK_ARG(buffer,"buffer")
HXLINE( 601)		::lime::graphics::opengl::GL_obj::context->deleteBuffer(buffer);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,deleteBuffer,(void))

void GL_obj::deleteFramebuffer( ::lime::graphics::opengl::GLFramebuffer framebuffer){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","deleteFramebuffer",0x882e7e2e,"lime.graphics.opengl.GL.deleteFramebuffer","lime/graphics/opengl/GL.hx",608,0xa5aa2623)
            	HX_STACK_ARG(framebuffer,"framebuffer")
HXLINE( 608)		::lime::graphics::opengl::GL_obj::context->deleteFramebuffer(framebuffer);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,deleteFramebuffer,(void))

void GL_obj::deleteProgram( ::lime::graphics::opengl::GLProgram program){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","deleteProgram",0x4b3fbf45,"lime.graphics.opengl.GL.deleteProgram","lime/graphics/opengl/GL.hx",615,0xa5aa2623)
            	HX_STACK_ARG(program,"program")
HXLINE( 615)		::lime::graphics::opengl::GL_obj::context->deleteProgram(program);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,deleteProgram,(void))

void GL_obj::deleteRenderbuffer( ::lime::graphics::opengl::GLRenderbuffer renderbuffer){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","deleteRenderbuffer",0x270bfc75,"lime.graphics.opengl.GL.deleteRenderbuffer","lime/graphics/opengl/GL.hx",622,0xa5aa2623)
            	HX_STACK_ARG(renderbuffer,"renderbuffer")
HXLINE( 622)		::lime::graphics::opengl::GL_obj::context->deleteRenderbuffer(renderbuffer);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,deleteRenderbuffer,(void))

void GL_obj::deleteShader( ::lime::graphics::opengl::GLShader shader){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","deleteShader",0xcf74dd84,"lime.graphics.opengl.GL.deleteShader","lime/graphics/opengl/GL.hx",629,0xa5aa2623)
            	HX_STACK_ARG(shader,"shader")
HXLINE( 629)		::lime::graphics::opengl::GL_obj::context->deleteShader(shader);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,deleteShader,(void))

void GL_obj::deleteTexture( ::lime::graphics::opengl::GLTexture texture){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","deleteTexture",0xf6273d9c,"lime.graphics.opengl.GL.deleteTexture","lime/graphics/opengl/GL.hx",636,0xa5aa2623)
            	HX_STACK_ARG(texture,"texture")
HXLINE( 636)		::lime::graphics::opengl::GL_obj::context->deleteTexture(texture);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,deleteTexture,(void))

void GL_obj::depthFunc(Int func){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","depthFunc",0xaeafe193,"lime.graphics.opengl.GL.depthFunc","lime/graphics/opengl/GL.hx",643,0xa5aa2623)
            	HX_STACK_ARG(func,"func")
HXLINE( 643)		::lime::graphics::opengl::GL_obj::context->depthFunc(func);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,depthFunc,(void))

void GL_obj::depthMask(Bool flag){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","depthMask",0xb341373b,"lime.graphics.opengl.GL.depthMask","lime/graphics/opengl/GL.hx",650,0xa5aa2623)
            	HX_STACK_ARG(flag,"flag")
HXLINE( 650)		::lime::graphics::opengl::GL_obj::context->depthMask(flag);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,depthMask,(void))

void GL_obj::depthRange(Float zNear,Float zFar){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","depthRange",0x06cc348e,"lime.graphics.opengl.GL.depthRange","lime/graphics/opengl/GL.hx",657,0xa5aa2623)
            	HX_STACK_ARG(zNear,"zNear")
            	HX_STACK_ARG(zFar,"zFar")
HXLINE( 657)		::lime::graphics::opengl::GL_obj::context->depthRange(zNear,zFar);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,depthRange,(void))

void GL_obj::detachShader( ::lime::graphics::opengl::GLProgram program, ::lime::graphics::opengl::GLShader shader){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","detachShader",0x3669c8ac,"lime.graphics.opengl.GL.detachShader","lime/graphics/opengl/GL.hx",664,0xa5aa2623)
            	HX_STACK_ARG(program,"program")
            	HX_STACK_ARG(shader,"shader")
HXLINE( 664)		::lime::graphics::opengl::GL_obj::context->detachShader(program,shader);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,detachShader,(void))

void GL_obj::disable(Int cap){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","disable",0x99478294,"lime.graphics.opengl.GL.disable","lime/graphics/opengl/GL.hx",671,0xa5aa2623)
            	HX_STACK_ARG(cap,"cap")
HXLINE( 671)		::lime::graphics::opengl::GL_obj::context->disable(cap);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,disable,(void))

void GL_obj::disableVertexAttribArray(Int index){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","disableVertexAttribArray",0x3f2ecfb7,"lime.graphics.opengl.GL.disableVertexAttribArray","lime/graphics/opengl/GL.hx",678,0xa5aa2623)
            	HX_STACK_ARG(index,"index")
HXLINE( 678)		::lime::graphics::opengl::GL_obj::context->disableVertexAttribArray(index);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,disableVertexAttribArray,(void))

void GL_obj::drawArrays(Int mode,Int first,Int count){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","drawArrays",0xbff48eb2,"lime.graphics.opengl.GL.drawArrays","lime/graphics/opengl/GL.hx",685,0xa5aa2623)
            	HX_STACK_ARG(mode,"mode")
            	HX_STACK_ARG(first,"first")
            	HX_STACK_ARG(count,"count")
HXLINE( 685)		::lime::graphics::opengl::GL_obj::context->drawArrays(mode,first,count);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(GL_obj,drawArrays,(void))

void GL_obj::drawElements(Int mode,Int count,Int type,Int offset){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","drawElements",0xa573ba2f,"lime.graphics.opengl.GL.drawElements","lime/graphics/opengl/GL.hx",692,0xa5aa2623)
            	HX_STACK_ARG(mode,"mode")
            	HX_STACK_ARG(count,"count")
            	HX_STACK_ARG(type,"type")
            	HX_STACK_ARG(offset,"offset")
HXLINE( 692)		::lime::graphics::opengl::GL_obj::context->drawElements(mode,count,type,offset);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(GL_obj,drawElements,(void))

void GL_obj::enable(Int cap){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","enable",0x4e854f57,"lime.graphics.opengl.GL.enable","lime/graphics/opengl/GL.hx",699,0xa5aa2623)
            	HX_STACK_ARG(cap,"cap")
HXLINE( 699)		::lime::graphics::opengl::GL_obj::context->enable(cap);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,enable,(void))

void GL_obj::enableVertexAttribArray(Int index){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","enableVertexAttribArray",0x79ca7794,"lime.graphics.opengl.GL.enableVertexAttribArray","lime/graphics/opengl/GL.hx",706,0xa5aa2623)
            	HX_STACK_ARG(index,"index")
HXLINE( 706)		::lime::graphics::opengl::GL_obj::context->enableVertexAttribArray(index);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,enableVertexAttribArray,(void))

void GL_obj::finish(){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","finish",0xdc7ce127,"lime.graphics.opengl.GL.finish","lime/graphics/opengl/GL.hx",713,0xa5aa2623)
HXLINE( 713)		::lime::graphics::opengl::GL_obj::context->finish();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(GL_obj,finish,(void))

void GL_obj::flush(){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","flush",0x2448b870,"lime.graphics.opengl.GL.flush","lime/graphics/opengl/GL.hx",720,0xa5aa2623)
HXLINE( 720)		::lime::graphics::opengl::GL_obj::context->flush();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(GL_obj,flush,(void))

void GL_obj::framebufferRenderbuffer(Int target,Int attachment,Int renderbuffertarget, ::lime::graphics::opengl::GLRenderbuffer renderbuffer){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","framebufferRenderbuffer",0x04230e0f,"lime.graphics.opengl.GL.framebufferRenderbuffer","lime/graphics/opengl/GL.hx",727,0xa5aa2623)
            	HX_STACK_ARG(target,"target")
            	HX_STACK_ARG(attachment,"attachment")
            	HX_STACK_ARG(renderbuffertarget,"renderbuffertarget")
            	HX_STACK_ARG(renderbuffer,"renderbuffer")
HXLINE( 727)		::lime::graphics::opengl::GL_obj::context->framebufferRenderbuffer(target,attachment,renderbuffertarget,renderbuffer);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(GL_obj,framebufferRenderbuffer,(void))

void GL_obj::framebufferTexture2D(Int target,Int attachment,Int textarget, ::lime::graphics::opengl::GLTexture texture,Int level){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","framebufferTexture2D",0xbf185294,"lime.graphics.opengl.GL.framebufferTexture2D","lime/graphics/opengl/GL.hx",734,0xa5aa2623)
            	HX_STACK_ARG(target,"target")
            	HX_STACK_ARG(attachment,"attachment")
            	HX_STACK_ARG(textarget,"textarget")
            	HX_STACK_ARG(texture,"texture")
            	HX_STACK_ARG(level,"level")
HXLINE( 734)		::lime::graphics::opengl::GL_obj::context->framebufferTexture2D(target,attachment,textarget,texture,level);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC5(GL_obj,framebufferTexture2D,(void))

void GL_obj::frontFace(Int mode){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","frontFace",0x95289d92,"lime.graphics.opengl.GL.frontFace","lime/graphics/opengl/GL.hx",741,0xa5aa2623)
            	HX_STACK_ARG(mode,"mode")
HXLINE( 741)		::lime::graphics::opengl::GL_obj::context->frontFace(mode);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,frontFace,(void))

void GL_obj::generateMipmap(Int target){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","generateMipmap",0x07966b71,"lime.graphics.opengl.GL.generateMipmap","lime/graphics/opengl/GL.hx",748,0xa5aa2623)
            	HX_STACK_ARG(target,"target")
HXLINE( 748)		::lime::graphics::opengl::GL_obj::context->generateMipmap(target);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,generateMipmap,(void))

 ::Dynamic GL_obj::getActiveAttrib( ::lime::graphics::opengl::GLProgram program,Int index){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","getActiveAttrib",0xae1c3012,"lime.graphics.opengl.GL.getActiveAttrib","lime/graphics/opengl/GL.hx",755,0xa5aa2623)
            	HX_STACK_ARG(program,"program")
            	HX_STACK_ARG(index,"index")
HXLINE( 755)		return ::lime::graphics::opengl::GL_obj::context->getActiveAttrib(program,index);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,getActiveAttrib,return )

 ::Dynamic GL_obj::getActiveUniform( ::lime::graphics::opengl::GLProgram program,Int index){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","getActiveUniform",0x26c4a76c,"lime.graphics.opengl.GL.getActiveUniform","lime/graphics/opengl/GL.hx",762,0xa5aa2623)
            	HX_STACK_ARG(program,"program")
            	HX_STACK_ARG(index,"index")
HXLINE( 762)		return ::lime::graphics::opengl::GL_obj::context->getActiveUniform(program,index);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,getActiveUniform,return )

::Array< ::Dynamic> GL_obj::getAttachedShaders( ::lime::graphics::opengl::GLProgram program){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","getAttachedShaders",0x82ccbd88,"lime.graphics.opengl.GL.getAttachedShaders","lime/graphics/opengl/GL.hx",769,0xa5aa2623)
            	HX_STACK_ARG(program,"program")
HXLINE( 769)		return ::lime::graphics::opengl::GL_obj::context->getAttachedShaders(program);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,getAttachedShaders,return )

Int GL_obj::getAttribLocation( ::lime::graphics::opengl::GLProgram program,::String name){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","getAttribLocation",0x953d4281,"lime.graphics.opengl.GL.getAttribLocation","lime/graphics/opengl/GL.hx",776,0xa5aa2623)
            	HX_STACK_ARG(program,"program")
            	HX_STACK_ARG(name,"name")
HXLINE( 776)		return ::lime::graphics::opengl::GL_obj::context->getAttribLocation(program,name);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,getAttribLocation,return )

Int GL_obj::getBufferParameter(Int target,Int pname){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","getBufferParameter",0x0409e767,"lime.graphics.opengl.GL.getBufferParameter","lime/graphics/opengl/GL.hx",783,0xa5aa2623)
            	HX_STACK_ARG(target,"target")
            	HX_STACK_ARG(pname,"pname")
HXLINE( 783)		return ::lime::graphics::opengl::GL_obj::context->getBufferParameter(target,pname);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,getBufferParameter,return )

 ::Dynamic GL_obj::getContextAttributes(){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","getContextAttributes",0x48d7c604,"lime.graphics.opengl.GL.getContextAttributes","lime/graphics/opengl/GL.hx",790,0xa5aa2623)
HXLINE( 790)		return ::lime::graphics::opengl::GL_obj::context->getContextAttributes();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(GL_obj,getContextAttributes,return )

Int GL_obj::getError(){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","getError",0xdc475926,"lime.graphics.opengl.GL.getError","lime/graphics/opengl/GL.hx",797,0xa5aa2623)
HXLINE( 797)		return ::lime::graphics::opengl::GL_obj::context->getError();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(GL_obj,getError,return )

 ::Dynamic GL_obj::getExtension(::String name){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","getExtension",0x402327dd,"lime.graphics.opengl.GL.getExtension","lime/graphics/opengl/GL.hx",804,0xa5aa2623)
            	HX_STACK_ARG(name,"name")
HXLINE( 804)		return ::lime::graphics::opengl::GL_obj::context->getExtension(name);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,getExtension,return )

Int GL_obj::getFramebufferAttachmentParameter(Int target,Int attachment,Int pname){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","getFramebufferAttachmentParameter",0x4289ff3b,"lime.graphics.opengl.GL.getFramebufferAttachmentParameter","lime/graphics/opengl/GL.hx",811,0xa5aa2623)
            	HX_STACK_ARG(target,"target")
            	HX_STACK_ARG(attachment,"attachment")
            	HX_STACK_ARG(pname,"pname")
HXLINE( 811)		return ::lime::graphics::opengl::GL_obj::context->getFramebufferAttachmentParameter(target,attachment,pname);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(GL_obj,getFramebufferAttachmentParameter,return )

 ::Dynamic GL_obj::getParameter(Int pname){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","getParameter",0xa3c2ca07,"lime.graphics.opengl.GL.getParameter","lime/graphics/opengl/GL.hx",818,0xa5aa2623)
            	HX_STACK_ARG(pname,"pname")
HXLINE( 818)		return ::lime::graphics::opengl::GL_obj::context->getParameter(pname);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,getParameter,return )

::String GL_obj::getProgramInfoLog( ::lime::graphics::opengl::GLProgram program){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","getProgramInfoLog",0x06201974,"lime.graphics.opengl.GL.getProgramInfoLog","lime/graphics/opengl/GL.hx",825,0xa5aa2623)
            	HX_STACK_ARG(program,"program")
HXLINE( 825)		return ::lime::graphics::opengl::GL_obj::context->getProgramInfoLog(program);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,getProgramInfoLog,return )

Int GL_obj::getProgramParameter( ::lime::graphics::opengl::GLProgram program,Int pname){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","getProgramParameter",0x12242de7,"lime.graphics.opengl.GL.getProgramParameter","lime/graphics/opengl/GL.hx",832,0xa5aa2623)
            	HX_STACK_ARG(program,"program")
            	HX_STACK_ARG(pname,"pname")
HXLINE( 832)		return ::lime::graphics::opengl::GL_obj::context->getProgramParameter(program,pname);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,getProgramParameter,return )

Int GL_obj::getRenderbufferParameter(Int target,Int pname){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","getRenderbufferParameter",0x31922751,"lime.graphics.opengl.GL.getRenderbufferParameter","lime/graphics/opengl/GL.hx",839,0xa5aa2623)
            	HX_STACK_ARG(target,"target")
            	HX_STACK_ARG(pname,"pname")
HXLINE( 839)		return ::lime::graphics::opengl::GL_obj::context->getRenderbufferParameter(target,pname);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,getRenderbufferParameter,return )

::String GL_obj::getShaderInfoLog( ::lime::graphics::opengl::GLShader shader){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","getShaderInfoLog",0x433f2f6f,"lime.graphics.opengl.GL.getShaderInfoLog","lime/graphics/opengl/GL.hx",846,0xa5aa2623)
            	HX_STACK_ARG(shader,"shader")
HXLINE( 846)		return ::lime::graphics::opengl::GL_obj::context->getShaderInfoLog(shader);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,getShaderInfoLog,return )

Int GL_obj::getShaderParameter( ::lime::graphics::opengl::GLShader shader,Int pname){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","getShaderParameter",0x25b0f8a2,"lime.graphics.opengl.GL.getShaderParameter","lime/graphics/opengl/GL.hx",853,0xa5aa2623)
            	HX_STACK_ARG(shader,"shader")
            	HX_STACK_ARG(pname,"pname")
HXLINE( 853)		return ::lime::graphics::opengl::GL_obj::context->getShaderParameter(shader,pname);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,getShaderParameter,return )

 ::Dynamic GL_obj::getShaderPrecisionFormat(Int shadertype,Int precisiontype){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","getShaderPrecisionFormat",0xc38a1ece,"lime.graphics.opengl.GL.getShaderPrecisionFormat","lime/graphics/opengl/GL.hx",860,0xa5aa2623)
            	HX_STACK_ARG(shadertype,"shadertype")
            	HX_STACK_ARG(precisiontype,"precisiontype")
HXLINE( 860)		return ::lime::graphics::opengl::GL_obj::context->getShaderPrecisionFormat(shadertype,precisiontype);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,getShaderPrecisionFormat,return )

::String GL_obj::getShaderSource( ::lime::graphics::opengl::GLShader shader){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","getShaderSource",0x0ffe4842,"lime.graphics.opengl.GL.getShaderSource","lime/graphics/opengl/GL.hx",867,0xa5aa2623)
            	HX_STACK_ARG(shader,"shader")
HXLINE( 867)		return ::lime::graphics::opengl::GL_obj::context->getShaderSource(shader);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,getShaderSource,return )

::Array< ::String > GL_obj::getSupportedExtensions(){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","getSupportedExtensions",0x569501c0,"lime.graphics.opengl.GL.getSupportedExtensions","lime/graphics/opengl/GL.hx",874,0xa5aa2623)
HXLINE( 874)		return ::lime::graphics::opengl::GL_obj::context->getSupportedExtensions();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(GL_obj,getSupportedExtensions,return )

Int GL_obj::getTexParameter(Int target,Int pname){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","getTexParameter",0x1dcd3d24,"lime.graphics.opengl.GL.getTexParameter","lime/graphics/opengl/GL.hx",881,0xa5aa2623)
            	HX_STACK_ARG(target,"target")
            	HX_STACK_ARG(pname,"pname")
HXLINE( 881)		return ::lime::graphics::opengl::GL_obj::context->getTexParameter(target,pname);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,getTexParameter,return )

 ::Dynamic GL_obj::getUniform( ::lime::graphics::opengl::GLProgram program,Int location){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","getUniform",0xcb066212,"lime.graphics.opengl.GL.getUniform","lime/graphics/opengl/GL.hx",888,0xa5aa2623)
            	HX_STACK_ARG(program,"program")
            	HX_STACK_ARG(location,"location")
HXLINE( 888)		return ::lime::graphics::opengl::GL_obj::context->getUniform(program,location);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,getUniform,return )

Int GL_obj::getUniformLocation( ::lime::graphics::opengl::GLProgram program,::String name){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","getUniformLocation",0x3f29ee67,"lime.graphics.opengl.GL.getUniformLocation","lime/graphics/opengl/GL.hx",895,0xa5aa2623)
            	HX_STACK_ARG(program,"program")
            	HX_STACK_ARG(name,"name")
HXLINE( 895)		return ::lime::graphics::opengl::GL_obj::context->getUniformLocation(program,name);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,getUniformLocation,return )

Int GL_obj::getVertexAttrib(Int index,Int pname){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","getVertexAttrib",0xee15d430,"lime.graphics.opengl.GL.getVertexAttrib","lime/graphics/opengl/GL.hx",902,0xa5aa2623)
            	HX_STACK_ARG(index,"index")
            	HX_STACK_ARG(pname,"pname")
HXLINE( 902)		return ::lime::graphics::opengl::GL_obj::context->getVertexAttrib(index,pname);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,getVertexAttrib,return )

Int GL_obj::getVertexAttribOffset(Int index,Int pname){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","getVertexAttribOffset",0x530723e3,"lime.graphics.opengl.GL.getVertexAttribOffset","lime/graphics/opengl/GL.hx",909,0xa5aa2623)
            	HX_STACK_ARG(index,"index")
            	HX_STACK_ARG(pname,"pname")
HXLINE( 909)		return ::lime::graphics::opengl::GL_obj::context->getVertexAttribOffset(index,pname);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,getVertexAttribOffset,return )

void GL_obj::hint(Int target,Int mode){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","hint",0x86a4415b,"lime.graphics.opengl.GL.hint","lime/graphics/opengl/GL.hx",916,0xa5aa2623)
            	HX_STACK_ARG(target,"target")
            	HX_STACK_ARG(mode,"mode")
HXLINE( 916)		::lime::graphics::opengl::GL_obj::context->hint(target,mode);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,hint,(void))

Bool GL_obj::isBuffer( ::lime::graphics::opengl::GLBuffer buffer){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","isBuffer",0x3244d65e,"lime.graphics.opengl.GL.isBuffer","lime/graphics/opengl/GL.hx",923,0xa5aa2623)
            	HX_STACK_ARG(buffer,"buffer")
HXLINE( 923)		return ::lime::graphics::opengl::GL_obj::context->isBuffer(buffer);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,isBuffer,return )

Bool GL_obj::isContextLost(){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","isContextLost",0x269cc155,"lime.graphics.opengl.GL.isContextLost","lime/graphics/opengl/GL.hx",930,0xa5aa2623)
HXLINE( 930)		return ::lime::graphics::opengl::GL_obj::context->isContextLost();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(GL_obj,isContextLost,return )

Bool GL_obj::isEnabled(Int cap){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","isEnabled",0x96971d63,"lime.graphics.opengl.GL.isEnabled","lime/graphics/opengl/GL.hx",937,0xa5aa2623)
            	HX_STACK_ARG(cap,"cap")
HXLINE( 937)		return ::lime::graphics::opengl::GL_obj::context->isEnabled(cap);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,isEnabled,return )

Bool GL_obj::isFramebuffer( ::lime::graphics::opengl::GLFramebuffer framebuffer){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","isFramebuffer",0x7c2946cf,"lime.graphics.opengl.GL.isFramebuffer","lime/graphics/opengl/GL.hx",944,0xa5aa2623)
            	HX_STACK_ARG(framebuffer,"framebuffer")
HXLINE( 944)		return ::lime::graphics::opengl::GL_obj::context->isFramebuffer(framebuffer);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,isFramebuffer,return )

Bool GL_obj::isProgram( ::lime::graphics::opengl::GLProgram program){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","isProgram",0x0c5f6366,"lime.graphics.opengl.GL.isProgram","lime/graphics/opengl/GL.hx",951,0xa5aa2623)
            	HX_STACK_ARG(program,"program")
HXLINE( 951)		return ::lime::graphics::opengl::GL_obj::context->isProgram(program);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,isProgram,return )

Bool GL_obj::isRenderbuffer( ::lime::graphics::opengl::GLRenderbuffer renderbuffer){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","isRenderbuffer",0xae80c0b4,"lime.graphics.opengl.GL.isRenderbuffer","lime/graphics/opengl/GL.hx",958,0xa5aa2623)
            	HX_STACK_ARG(renderbuffer,"renderbuffer")
HXLINE( 958)		return ::lime::graphics::opengl::GL_obj::context->isRenderbuffer(renderbuffer);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,isRenderbuffer,return )

Bool GL_obj::isShader( ::lime::graphics::opengl::GLShader shader){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","isShader",0x7ed0d883,"lime.graphics.opengl.GL.isShader","lime/graphics/opengl/GL.hx",965,0xa5aa2623)
            	HX_STACK_ARG(shader,"shader")
HXLINE( 965)		return ::lime::graphics::opengl::GL_obj::context->isShader(shader);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,isShader,return )

Bool GL_obj::isTexture( ::lime::graphics::opengl::GLTexture texture){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","isTexture",0xb746e1bd,"lime.graphics.opengl.GL.isTexture","lime/graphics/opengl/GL.hx",972,0xa5aa2623)
            	HX_STACK_ARG(texture,"texture")
HXLINE( 972)		return ::lime::graphics::opengl::GL_obj::context->isTexture(texture);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,isTexture,return )

void GL_obj::lineWidth(Float width){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lineWidth",0x25c5551e,"lime.graphics.opengl.GL.lineWidth","lime/graphics/opengl/GL.hx",979,0xa5aa2623)
            	HX_STACK_ARG(width,"width")
HXLINE( 979)		::lime::graphics::opengl::GL_obj::context->lineWidth(width);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,lineWidth,(void))

void GL_obj::linkProgram( ::lime::graphics::opengl::GLProgram program){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","linkProgram",0x3bc28c56,"lime.graphics.opengl.GL.linkProgram","lime/graphics/opengl/GL.hx",986,0xa5aa2623)
            	HX_STACK_ARG(program,"program")
HXLINE( 986)		::lime::graphics::opengl::GL_obj::context->linkProgram(program);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,linkProgram,(void))

void GL_obj::pixelStorei(Int pname,Int param){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","pixelStorei",0x330f133a,"lime.graphics.opengl.GL.pixelStorei","lime/graphics/opengl/GL.hx",993,0xa5aa2623)
            	HX_STACK_ARG(pname,"pname")
            	HX_STACK_ARG(param,"param")
HXLINE( 993)		::lime::graphics::opengl::GL_obj::context->pixelStorei(pname,param);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,pixelStorei,(void))

void GL_obj::polygonOffset(Float factor,Float units){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","polygonOffset",0x5f0a0759,"lime.graphics.opengl.GL.polygonOffset","lime/graphics/opengl/GL.hx",1000,0xa5aa2623)
            	HX_STACK_ARG(factor,"factor")
            	HX_STACK_ARG(units,"units")
HXLINE(1000)		::lime::graphics::opengl::GL_obj::context->polygonOffset(factor,units);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,polygonOffset,(void))

void GL_obj::readPixels(Int x,Int y,Int width,Int height,Int format,Int type, ::lime::utils::ArrayBufferView pixels){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","readPixels",0x4c666df7,"lime.graphics.opengl.GL.readPixels","lime/graphics/opengl/GL.hx",1007,0xa5aa2623)
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
            	HX_STACK_ARG(width,"width")
            	HX_STACK_ARG(height,"height")
            	HX_STACK_ARG(format,"format")
            	HX_STACK_ARG(type,"type")
            	HX_STACK_ARG(pixels,"pixels")
HXLINE(1007)		::lime::graphics::opengl::GL_obj::context->readPixels(x,y,width,height,format,type,pixels);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC7(GL_obj,readPixels,(void))

void GL_obj::renderbufferStorage(Int target,Int internalformat,Int width,Int height){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","renderbufferStorage",0x02f80bb1,"lime.graphics.opengl.GL.renderbufferStorage","lime/graphics/opengl/GL.hx",1014,0xa5aa2623)
            	HX_STACK_ARG(target,"target")
            	HX_STACK_ARG(internalformat,"internalformat")
            	HX_STACK_ARG(width,"width")
            	HX_STACK_ARG(height,"height")
HXLINE(1014)		::lime::graphics::opengl::GL_obj::context->renderbufferStorage(target,internalformat,width,height);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(GL_obj,renderbufferStorage,(void))

void GL_obj::sampleCoverage(Float value,Bool invert){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","sampleCoverage",0xe809fd06,"lime.graphics.opengl.GL.sampleCoverage","lime/graphics/opengl/GL.hx",1021,0xa5aa2623)
            	HX_STACK_ARG(value,"value")
            	HX_STACK_ARG(invert,"invert")
HXLINE(1021)		::lime::graphics::opengl::GL_obj::context->sampleCoverage(value,invert);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,sampleCoverage,(void))

void GL_obj::scissor(Int x,Int y,Int width,Int height){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","scissor",0xecd640c8,"lime.graphics.opengl.GL.scissor","lime/graphics/opengl/GL.hx",1028,0xa5aa2623)
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
            	HX_STACK_ARG(width,"width")
            	HX_STACK_ARG(height,"height")
HXLINE(1028)		::lime::graphics::opengl::GL_obj::context->scissor(x,y,width,height);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(GL_obj,scissor,(void))

void GL_obj::shaderSource( ::lime::graphics::opengl::GLShader shader,::String source){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","shaderSource",0xedd645b4,"lime.graphics.opengl.GL.shaderSource","lime/graphics/opengl/GL.hx",1035,0xa5aa2623)
            	HX_STACK_ARG(shader,"shader")
            	HX_STACK_ARG(source,"source")
HXLINE(1035)		::lime::graphics::opengl::GL_obj::context->shaderSource(shader,source);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,shaderSource,(void))

void GL_obj::stencilFunc(Int func,Int ref,Int mask){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","stencilFunc",0xf305620c,"lime.graphics.opengl.GL.stencilFunc","lime/graphics/opengl/GL.hx",1042,0xa5aa2623)
            	HX_STACK_ARG(func,"func")
            	HX_STACK_ARG(ref,"ref")
            	HX_STACK_ARG(mask,"mask")
HXLINE(1042)		::lime::graphics::opengl::GL_obj::context->stencilFunc(func,ref,mask);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(GL_obj,stencilFunc,(void))

void GL_obj::stencilFuncSeparate(Int face,Int func,Int ref,Int mask){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","stencilFuncSeparate",0x2e56298f,"lime.graphics.opengl.GL.stencilFuncSeparate","lime/graphics/opengl/GL.hx",1049,0xa5aa2623)
            	HX_STACK_ARG(face,"face")
            	HX_STACK_ARG(func,"func")
            	HX_STACK_ARG(ref,"ref")
            	HX_STACK_ARG(mask,"mask")
HXLINE(1049)		::lime::graphics::opengl::GL_obj::context->stencilFuncSeparate(face,func,ref,mask);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(GL_obj,stencilFuncSeparate,(void))

void GL_obj::stencilMask(Int mask){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","stencilMask",0xf796b7b4,"lime.graphics.opengl.GL.stencilMask","lime/graphics/opengl/GL.hx",1056,0xa5aa2623)
            	HX_STACK_ARG(mask,"mask")
HXLINE(1056)		::lime::graphics::opengl::GL_obj::context->stencilMask(mask);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,stencilMask,(void))

void GL_obj::stencilMaskSeparate(Int face,Int mask){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","stencilMaskSeparate",0x42316737,"lime.graphics.opengl.GL.stencilMaskSeparate","lime/graphics/opengl/GL.hx",1063,0xa5aa2623)
            	HX_STACK_ARG(face,"face")
            	HX_STACK_ARG(mask,"mask")
HXLINE(1063)		::lime::graphics::opengl::GL_obj::context->stencilMaskSeparate(face,mask);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,stencilMaskSeparate,(void))

void GL_obj::stencilOp(Int fail,Int zfail,Int zpass){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","stencilOp",0x6b5415e9,"lime.graphics.opengl.GL.stencilOp","lime/graphics/opengl/GL.hx",1070,0xa5aa2623)
            	HX_STACK_ARG(fail,"fail")
            	HX_STACK_ARG(zfail,"zfail")
            	HX_STACK_ARG(zpass,"zpass")
HXLINE(1070)		::lime::graphics::opengl::GL_obj::context->stencilOp(fail,zfail,zpass);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(GL_obj,stencilOp,(void))

void GL_obj::stencilOpSeparate(Int face,Int fail,Int zfail,Int zpass){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","stencilOpSeparate",0x8b77826c,"lime.graphics.opengl.GL.stencilOpSeparate","lime/graphics/opengl/GL.hx",1077,0xa5aa2623)
            	HX_STACK_ARG(face,"face")
            	HX_STACK_ARG(fail,"fail")
            	HX_STACK_ARG(zfail,"zfail")
            	HX_STACK_ARG(zpass,"zpass")
HXLINE(1077)		::lime::graphics::opengl::GL_obj::context->stencilOpSeparate(face,fail,zfail,zpass);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(GL_obj,stencilOpSeparate,(void))

void GL_obj::texImage2D(Int target,Int level,Int internalformat,Int width,Int height,Int border,Int format,Int type, ::lime::utils::ArrayBufferView pixels){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","texImage2D",0x7fa8179a,"lime.graphics.opengl.GL.texImage2D","lime/graphics/opengl/GL.hx",1084,0xa5aa2623)
            	HX_STACK_ARG(target,"target")
            	HX_STACK_ARG(level,"level")
            	HX_STACK_ARG(internalformat,"internalformat")
            	HX_STACK_ARG(width,"width")
            	HX_STACK_ARG(height,"height")
            	HX_STACK_ARG(border,"border")
            	HX_STACK_ARG(format,"format")
            	HX_STACK_ARG(type,"type")
            	HX_STACK_ARG(pixels,"pixels")
HXLINE(1084)		::lime::graphics::opengl::GL_obj::context->texImage2D(target,level,internalformat,width,height,border,format,type,pixels);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC9(GL_obj,texImage2D,(void))

void GL_obj::texParameterf(Int target,Int pname,Float param){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","texParameterf",0x34ee0910,"lime.graphics.opengl.GL.texParameterf","lime/graphics/opengl/GL.hx",1091,0xa5aa2623)
            	HX_STACK_ARG(target,"target")
            	HX_STACK_ARG(pname,"pname")
            	HX_STACK_ARG(param,"param")
HXLINE(1091)		::lime::graphics::opengl::GL_obj::context->texParameterf(target,pname,param);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(GL_obj,texParameterf,(void))

void GL_obj::texParameteri(Int target,Int pname,Int param){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","texParameteri",0x34ee0913,"lime.graphics.opengl.GL.texParameteri","lime/graphics/opengl/GL.hx",1098,0xa5aa2623)
            	HX_STACK_ARG(target,"target")
            	HX_STACK_ARG(pname,"pname")
            	HX_STACK_ARG(param,"param")
HXLINE(1098)		::lime::graphics::opengl::GL_obj::context->texParameteri(target,pname,param);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(GL_obj,texParameteri,(void))

void GL_obj::texSubImage2D(Int target,Int level,Int xoffset,Int yoffset,Int width,Int height,Int format,Int type, ::lime::utils::ArrayBufferView pixels){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","texSubImage2D",0x214d10c0,"lime.graphics.opengl.GL.texSubImage2D","lime/graphics/opengl/GL.hx",1105,0xa5aa2623)
            	HX_STACK_ARG(target,"target")
            	HX_STACK_ARG(level,"level")
            	HX_STACK_ARG(xoffset,"xoffset")
            	HX_STACK_ARG(yoffset,"yoffset")
            	HX_STACK_ARG(width,"width")
            	HX_STACK_ARG(height,"height")
            	HX_STACK_ARG(format,"format")
            	HX_STACK_ARG(type,"type")
            	HX_STACK_ARG(pixels,"pixels")
HXLINE(1105)		::lime::graphics::opengl::GL_obj::context->texSubImage2D(target,level,xoffset,yoffset,width,height,format,type,pixels);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC9(GL_obj,texSubImage2D,(void))

void GL_obj::uniform1f(Int location,Float x){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","uniform1f",0x1c45bcf5,"lime.graphics.opengl.GL.uniform1f","lime/graphics/opengl/GL.hx",1112,0xa5aa2623)
            	HX_STACK_ARG(location,"location")
            	HX_STACK_ARG(x,"x")
HXLINE(1112)		::lime::graphics::opengl::GL_obj::context->uniform1f(location,x);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,uniform1f,(void))

void GL_obj::uniform1fv(Int location, ::lime::utils::ArrayBufferView x){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","uniform1fv",0xa0bf99e1,"lime.graphics.opengl.GL.uniform1fv","lime/graphics/opengl/GL.hx",1119,0xa5aa2623)
            	HX_STACK_ARG(location,"location")
            	HX_STACK_ARG(x,"x")
HXLINE(1119)		::lime::graphics::opengl::GL_obj::context->uniform1fv(location,x);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,uniform1fv,(void))

void GL_obj::uniform1i(Int location,Int x){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","uniform1i",0x1c45bcf8,"lime.graphics.opengl.GL.uniform1i","lime/graphics/opengl/GL.hx",1126,0xa5aa2623)
            	HX_STACK_ARG(location,"location")
            	HX_STACK_ARG(x,"x")
HXLINE(1126)		::lime::graphics::opengl::GL_obj::context->uniform1i(location,x);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,uniform1i,(void))

void GL_obj::uniform1iv(Int location, ::lime::utils::ArrayBufferView v){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","uniform1iv",0xa0bf9c7e,"lime.graphics.opengl.GL.uniform1iv","lime/graphics/opengl/GL.hx",1133,0xa5aa2623)
            	HX_STACK_ARG(location,"location")
            	HX_STACK_ARG(v,"v")
HXLINE(1133)		::lime::graphics::opengl::GL_obj::context->uniform1iv(location,v);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,uniform1iv,(void))

void GL_obj::uniform2f(Int location,Float x,Float y){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","uniform2f",0x1c45bdd4,"lime.graphics.opengl.GL.uniform2f","lime/graphics/opengl/GL.hx",1140,0xa5aa2623)
            	HX_STACK_ARG(location,"location")
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
HXLINE(1140)		::lime::graphics::opengl::GL_obj::context->uniform2f(location,x,y);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(GL_obj,uniform2f,(void))

void GL_obj::uniform2fv(Int location, ::lime::utils::ArrayBufferView v){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","uniform2fv",0xa0c05c22,"lime.graphics.opengl.GL.uniform2fv","lime/graphics/opengl/GL.hx",1147,0xa5aa2623)
            	HX_STACK_ARG(location,"location")
            	HX_STACK_ARG(v,"v")
HXLINE(1147)		::lime::graphics::opengl::GL_obj::context->uniform2fv(location,v);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,uniform2fv,(void))

void GL_obj::uniform2i(Int location,Int x,Int y){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","uniform2i",0x1c45bdd7,"lime.graphics.opengl.GL.uniform2i","lime/graphics/opengl/GL.hx",1154,0xa5aa2623)
            	HX_STACK_ARG(location,"location")
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
HXLINE(1154)		::lime::graphics::opengl::GL_obj::context->uniform2i(location,x,y);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(GL_obj,uniform2i,(void))

void GL_obj::uniform2iv(Int location, ::lime::utils::ArrayBufferView v){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","uniform2iv",0xa0c05ebf,"lime.graphics.opengl.GL.uniform2iv","lime/graphics/opengl/GL.hx",1161,0xa5aa2623)
            	HX_STACK_ARG(location,"location")
            	HX_STACK_ARG(v,"v")
HXLINE(1161)		::lime::graphics::opengl::GL_obj::context->uniform2iv(location,v);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,uniform2iv,(void))

void GL_obj::uniform3f(Int location,Float x,Float y,Float z){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","uniform3f",0x1c45beb3,"lime.graphics.opengl.GL.uniform3f","lime/graphics/opengl/GL.hx",1168,0xa5aa2623)
            	HX_STACK_ARG(location,"location")
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
            	HX_STACK_ARG(z,"z")
HXLINE(1168)		::lime::graphics::opengl::GL_obj::context->uniform3f(location,x,y,z);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(GL_obj,uniform3f,(void))

void GL_obj::uniform3fv(Int location, ::lime::utils::ArrayBufferView v){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","uniform3fv",0xa0c11e63,"lime.graphics.opengl.GL.uniform3fv","lime/graphics/opengl/GL.hx",1175,0xa5aa2623)
            	HX_STACK_ARG(location,"location")
            	HX_STACK_ARG(v,"v")
HXLINE(1175)		::lime::graphics::opengl::GL_obj::context->uniform3fv(location,v);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,uniform3fv,(void))

void GL_obj::uniform3i(Int location,Int x,Int y,Int z){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","uniform3i",0x1c45beb6,"lime.graphics.opengl.GL.uniform3i","lime/graphics/opengl/GL.hx",1182,0xa5aa2623)
            	HX_STACK_ARG(location,"location")
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
            	HX_STACK_ARG(z,"z")
HXLINE(1182)		::lime::graphics::opengl::GL_obj::context->uniform3i(location,x,y,z);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(GL_obj,uniform3i,(void))

void GL_obj::uniform3iv(Int location, ::lime::utils::ArrayBufferView v){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","uniform3iv",0xa0c12100,"lime.graphics.opengl.GL.uniform3iv","lime/graphics/opengl/GL.hx",1189,0xa5aa2623)
            	HX_STACK_ARG(location,"location")
            	HX_STACK_ARG(v,"v")
HXLINE(1189)		::lime::graphics::opengl::GL_obj::context->uniform3iv(location,v);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,uniform3iv,(void))

void GL_obj::uniform4f(Int location,Float x,Float y,Float z,Float w){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","uniform4f",0x1c45bf92,"lime.graphics.opengl.GL.uniform4f","lime/graphics/opengl/GL.hx",1196,0xa5aa2623)
            	HX_STACK_ARG(location,"location")
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
            	HX_STACK_ARG(z,"z")
            	HX_STACK_ARG(w,"w")
HXLINE(1196)		::lime::graphics::opengl::GL_obj::context->uniform4f(location,x,y,z,w);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC5(GL_obj,uniform4f,(void))

void GL_obj::uniform4fv(Int location, ::lime::utils::ArrayBufferView v){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","uniform4fv",0xa0c1e0a4,"lime.graphics.opengl.GL.uniform4fv","lime/graphics/opengl/GL.hx",1203,0xa5aa2623)
            	HX_STACK_ARG(location,"location")
            	HX_STACK_ARG(v,"v")
HXLINE(1203)		::lime::graphics::opengl::GL_obj::context->uniform4fv(location,v);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,uniform4fv,(void))

void GL_obj::uniform4i(Int location,Int x,Int y,Int z,Int w){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","uniform4i",0x1c45bf95,"lime.graphics.opengl.GL.uniform4i","lime/graphics/opengl/GL.hx",1210,0xa5aa2623)
            	HX_STACK_ARG(location,"location")
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
            	HX_STACK_ARG(z,"z")
            	HX_STACK_ARG(w,"w")
HXLINE(1210)		::lime::graphics::opengl::GL_obj::context->uniform4i(location,x,y,z,w);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC5(GL_obj,uniform4i,(void))

void GL_obj::uniform4iv(Int location, ::lime::utils::ArrayBufferView v){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","uniform4iv",0xa0c1e341,"lime.graphics.opengl.GL.uniform4iv","lime/graphics/opengl/GL.hx",1217,0xa5aa2623)
            	HX_STACK_ARG(location,"location")
            	HX_STACK_ARG(v,"v")
HXLINE(1217)		::lime::graphics::opengl::GL_obj::context->uniform4iv(location,v);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,uniform4iv,(void))

void GL_obj::uniformMatrix2fv(Int location,Bool transpose, ::lime::utils::ArrayBufferView v){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","uniformMatrix2fv",0x14cffc61,"lime.graphics.opengl.GL.uniformMatrix2fv","lime/graphics/opengl/GL.hx",1224,0xa5aa2623)
            	HX_STACK_ARG(location,"location")
            	HX_STACK_ARG(transpose,"transpose")
            	HX_STACK_ARG(v,"v")
HXLINE(1224)		::lime::graphics::opengl::GL_obj::context->uniformMatrix2fv(location,transpose,v);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(GL_obj,uniformMatrix2fv,(void))

void GL_obj::uniformMatrix3fv(Int location,Bool transpose, ::lime::utils::ArrayBufferView v){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","uniformMatrix3fv",0x14d0bea2,"lime.graphics.opengl.GL.uniformMatrix3fv","lime/graphics/opengl/GL.hx",1231,0xa5aa2623)
            	HX_STACK_ARG(location,"location")
            	HX_STACK_ARG(transpose,"transpose")
            	HX_STACK_ARG(v,"v")
HXLINE(1231)		::lime::graphics::opengl::GL_obj::context->uniformMatrix3fv(location,transpose,v);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(GL_obj,uniformMatrix3fv,(void))

void GL_obj::uniformMatrix4fv(Int location,Bool transpose, ::lime::utils::ArrayBufferView v){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","uniformMatrix4fv",0x14d180e3,"lime.graphics.opengl.GL.uniformMatrix4fv","lime/graphics/opengl/GL.hx",1238,0xa5aa2623)
            	HX_STACK_ARG(location,"location")
            	HX_STACK_ARG(transpose,"transpose")
            	HX_STACK_ARG(v,"v")
HXLINE(1238)		::lime::graphics::opengl::GL_obj::context->uniformMatrix4fv(location,transpose,v);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(GL_obj,uniformMatrix4fv,(void))

void GL_obj::useProgram( ::lime::graphics::opengl::GLProgram program){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","useProgram",0xbced07d1,"lime.graphics.opengl.GL.useProgram","lime/graphics/opengl/GL.hx",1250,0xa5aa2623)
            	HX_STACK_ARG(program,"program")
HXLINE(1252)		::lime::graphics::opengl::GL_obj::_hx___currentProgram = program;
HXLINE(1254)		::lime::graphics::opengl::GL_obj::context->useProgram(program);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,useProgram,(void))

void GL_obj::validateProgram( ::lime::graphics::opengl::GLProgram program){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","validateProgram",0x3a09253a,"lime.graphics.opengl.GL.validateProgram","lime/graphics/opengl/GL.hx",1261,0xa5aa2623)
            	HX_STACK_ARG(program,"program")
HXLINE(1261)		::lime::graphics::opengl::GL_obj::context->validateProgram(program);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,validateProgram,(void))

void GL_obj::vertexAttrib1f(Int indx,Float x){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","vertexAttrib1f",0x003f2937,"lime.graphics.opengl.GL.vertexAttrib1f","lime/graphics/opengl/GL.hx",1268,0xa5aa2623)
            	HX_STACK_ARG(indx,"indx")
            	HX_STACK_ARG(x,"x")
HXLINE(1268)		::lime::graphics::opengl::GL_obj::context->vertexAttrib1f(indx,x);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,vertexAttrib1f,(void))

void GL_obj::vertexAttrib1fv(Int indx, ::lime::utils::ArrayBufferView values){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","vertexAttrib1fv",0x3704e75f,"lime.graphics.opengl.GL.vertexAttrib1fv","lime/graphics/opengl/GL.hx",1275,0xa5aa2623)
            	HX_STACK_ARG(indx,"indx")
            	HX_STACK_ARG(values,"values")
HXLINE(1275)		::lime::graphics::opengl::GL_obj::context->vertexAttrib1fv(indx,values);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,vertexAttrib1fv,(void))

void GL_obj::vertexAttrib2f(Int indx,Float x,Float y){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","vertexAttrib2f",0x003f2a16,"lime.graphics.opengl.GL.vertexAttrib2f","lime/graphics/opengl/GL.hx",1282,0xa5aa2623)
            	HX_STACK_ARG(indx,"indx")
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
HXLINE(1282)		::lime::graphics::opengl::GL_obj::context->vertexAttrib2f(indx,x,y);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(GL_obj,vertexAttrib2f,(void))

void GL_obj::vertexAttrib2fv(Int indx, ::lime::utils::ArrayBufferView values){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","vertexAttrib2fv",0x3705a9a0,"lime.graphics.opengl.GL.vertexAttrib2fv","lime/graphics/opengl/GL.hx",1289,0xa5aa2623)
            	HX_STACK_ARG(indx,"indx")
            	HX_STACK_ARG(values,"values")
HXLINE(1289)		::lime::graphics::opengl::GL_obj::context->vertexAttrib2fv(indx,values);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,vertexAttrib2fv,(void))

void GL_obj::vertexAttrib3f(Int indx,Float x,Float y,Float z){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","vertexAttrib3f",0x003f2af5,"lime.graphics.opengl.GL.vertexAttrib3f","lime/graphics/opengl/GL.hx",1296,0xa5aa2623)
            	HX_STACK_ARG(indx,"indx")
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
            	HX_STACK_ARG(z,"z")
HXLINE(1296)		::lime::graphics::opengl::GL_obj::context->vertexAttrib3f(indx,x,y,z);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(GL_obj,vertexAttrib3f,(void))

void GL_obj::vertexAttrib3fv(Int indx, ::lime::utils::ArrayBufferView values){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","vertexAttrib3fv",0x37066be1,"lime.graphics.opengl.GL.vertexAttrib3fv","lime/graphics/opengl/GL.hx",1303,0xa5aa2623)
            	HX_STACK_ARG(indx,"indx")
            	HX_STACK_ARG(values,"values")
HXLINE(1303)		::lime::graphics::opengl::GL_obj::context->vertexAttrib3fv(indx,values);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,vertexAttrib3fv,(void))

void GL_obj::vertexAttrib4f(Int indx,Float x,Float y,Float z,Float w){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","vertexAttrib4f",0x003f2bd4,"lime.graphics.opengl.GL.vertexAttrib4f","lime/graphics/opengl/GL.hx",1310,0xa5aa2623)
            	HX_STACK_ARG(indx,"indx")
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
            	HX_STACK_ARG(z,"z")
            	HX_STACK_ARG(w,"w")
HXLINE(1310)		::lime::graphics::opengl::GL_obj::context->vertexAttrib4f(indx,x,y,z,w);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC5(GL_obj,vertexAttrib4f,(void))

void GL_obj::vertexAttrib4fv(Int indx, ::lime::utils::ArrayBufferView values){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","vertexAttrib4fv",0x37072e22,"lime.graphics.opengl.GL.vertexAttrib4fv","lime/graphics/opengl/GL.hx",1317,0xa5aa2623)
            	HX_STACK_ARG(indx,"indx")
            	HX_STACK_ARG(values,"values")
HXLINE(1317)		::lime::graphics::opengl::GL_obj::context->vertexAttrib4fv(indx,values);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,vertexAttrib4fv,(void))

void GL_obj::vertexAttribPointer(Int indx,Int size,Int type,Bool normalized,Int stride,Int offset){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","vertexAttribPointer",0xbb3d6f3b,"lime.graphics.opengl.GL.vertexAttribPointer","lime/graphics/opengl/GL.hx",1324,0xa5aa2623)
            	HX_STACK_ARG(indx,"indx")
            	HX_STACK_ARG(size,"size")
            	HX_STACK_ARG(type,"type")
            	HX_STACK_ARG(normalized,"normalized")
            	HX_STACK_ARG(stride,"stride")
            	HX_STACK_ARG(offset,"offset")
HXLINE(1324)		::lime::graphics::opengl::GL_obj::context->vertexAttribPointer(indx,size,type,normalized,stride,offset);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC6(GL_obj,vertexAttribPointer,(void))

void GL_obj::viewport(Int x,Int y,Int width,Int height){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","viewport",0xa5ebca3a,"lime.graphics.opengl.GL.viewport","lime/graphics/opengl/GL.hx",1331,0xa5aa2623)
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
            	HX_STACK_ARG(width,"width")
            	HX_STACK_ARG(height,"height")
HXLINE(1331)		::lime::graphics::opengl::GL_obj::context->viewport(x,y,width,height);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(GL_obj,viewport,(void))

Int GL_obj::get_version(){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","get_version",0xb53325db,"lime.graphics.opengl.GL.get_version","lime/graphics/opengl/GL.hx",1336,0xa5aa2623)
HXLINE(1336)		return (int)2;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(GL_obj,get_version,return )


GL_obj::GL_obj()
{
}

bool GL_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"hint") ) { outValue = hint_dyn(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"clear") ) { outValue = clear_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"flush") ) { outValue = flush_dyn(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"enable") ) { outValue = enable_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"finish") ) { outValue = finish_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"version") ) { outValue = inCallProp == hx::paccAlways ? get_version() : version; return true; }
		if (HX_FIELD_EQ(inName,"context") ) { outValue = context; return true; }
		if (HX_FIELD_EQ(inName,"disable") ) { outValue = disable_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"scissor") ) { outValue = scissor_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"cullFace") ) { outValue = cullFace_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getError") ) { outValue = getError_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"isBuffer") ) { outValue = isBuffer_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"isShader") ) { outValue = isShader_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"viewport") ) { outValue = viewport_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"blendFunc") ) { outValue = blendFunc_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"colorMask") ) { outValue = colorMask_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"depthFunc") ) { outValue = depthFunc_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"depthMask") ) { outValue = depthMask_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"frontFace") ) { outValue = frontFace_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"isEnabled") ) { outValue = isEnabled_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"isProgram") ) { outValue = isProgram_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"isTexture") ) { outValue = isTexture_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lineWidth") ) { outValue = lineWidth_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"stencilOp") ) { outValue = stencilOp_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"uniform1f") ) { outValue = uniform1f_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"uniform1i") ) { outValue = uniform1i_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"uniform2f") ) { outValue = uniform2f_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"uniform2i") ) { outValue = uniform2i_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"uniform3f") ) { outValue = uniform3f_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"uniform3i") ) { outValue = uniform3i_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"uniform4f") ) { outValue = uniform4f_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"uniform4i") ) { outValue = uniform4i_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"bindBuffer") ) { outValue = bindBuffer_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"blendColor") ) { outValue = blendColor_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"bufferData") ) { outValue = bufferData_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"clearColor") ) { outValue = clearColor_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"clearDepth") ) { outValue = clearDepth_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"depthRange") ) { outValue = depthRange_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"drawArrays") ) { outValue = drawArrays_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getUniform") ) { outValue = getUniform_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"readPixels") ) { outValue = readPixels_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"texImage2D") ) { outValue = texImage2D_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"uniform1fv") ) { outValue = uniform1fv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"uniform1iv") ) { outValue = uniform1iv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"uniform2fv") ) { outValue = uniform2fv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"uniform2iv") ) { outValue = uniform2iv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"uniform3fv") ) { outValue = uniform3fv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"uniform3iv") ) { outValue = uniform3iv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"uniform4fv") ) { outValue = uniform4fv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"uniform4iv") ) { outValue = uniform4iv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"useProgram") ) { outValue = useProgram_dyn(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"bindTexture") ) { outValue = bindTexture_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"linkProgram") ) { outValue = linkProgram_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"pixelStorei") ) { outValue = pixelStorei_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"stencilFunc") ) { outValue = stencilFunc_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"stencilMask") ) { outValue = stencilMask_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_version") ) { outValue = get_version_dyn(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"attachShader") ) { outValue = attachShader_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"clearStencil") ) { outValue = clearStencil_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"createBuffer") ) { outValue = createBuffer_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"createShader") ) { outValue = createShader_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"deleteBuffer") ) { outValue = deleteBuffer_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"deleteShader") ) { outValue = deleteShader_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"detachShader") ) { outValue = detachShader_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"drawElements") ) { outValue = drawElements_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getExtension") ) { outValue = getExtension_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getParameter") ) { outValue = getParameter_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"shaderSource") ) { outValue = shaderSource_dyn(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"activeTexture") ) { outValue = activeTexture_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"blendEquation") ) { outValue = blendEquation_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"bufferSubData") ) { outValue = bufferSubData_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"compileShader") ) { outValue = compileShader_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"createProgram") ) { outValue = createProgram_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"createTexture") ) { outValue = createTexture_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"deleteProgram") ) { outValue = deleteProgram_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"deleteTexture") ) { outValue = deleteTexture_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"isContextLost") ) { outValue = isContextLost_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"isFramebuffer") ) { outValue = isFramebuffer_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"polygonOffset") ) { outValue = polygonOffset_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"texParameterf") ) { outValue = texParameterf_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"texParameteri") ) { outValue = texParameteri_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"texSubImage2D") ) { outValue = texSubImage2D_dyn(); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"copyTexImage2D") ) { outValue = copyTexImage2D_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"generateMipmap") ) { outValue = generateMipmap_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"isRenderbuffer") ) { outValue = isRenderbuffer_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"sampleCoverage") ) { outValue = sampleCoverage_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"vertexAttrib1f") ) { outValue = vertexAttrib1f_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"vertexAttrib2f") ) { outValue = vertexAttrib2f_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"vertexAttrib3f") ) { outValue = vertexAttrib3f_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"vertexAttrib4f") ) { outValue = vertexAttrib4f_dyn(); return true; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"bindFramebuffer") ) { outValue = bindFramebuffer_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getActiveAttrib") ) { outValue = getActiveAttrib_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getShaderSource") ) { outValue = getShaderSource_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getTexParameter") ) { outValue = getTexParameter_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getVertexAttrib") ) { outValue = getVertexAttrib_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"validateProgram") ) { outValue = validateProgram_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"vertexAttrib1fv") ) { outValue = vertexAttrib1fv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"vertexAttrib2fv") ) { outValue = vertexAttrib2fv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"vertexAttrib3fv") ) { outValue = vertexAttrib3fv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"vertexAttrib4fv") ) { outValue = vertexAttrib4fv_dyn(); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"__currentProgram") ) { outValue = _hx___currentProgram; return true; }
		if (HX_FIELD_EQ(inName,"bindRenderbuffer") ) { outValue = bindRenderbuffer_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getActiveUniform") ) { outValue = getActiveUniform_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getShaderInfoLog") ) { outValue = getShaderInfoLog_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"uniformMatrix2fv") ) { outValue = uniformMatrix2fv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"uniformMatrix3fv") ) { outValue = uniformMatrix3fv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"uniformMatrix4fv") ) { outValue = uniformMatrix4fv_dyn(); return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"blendFuncSeparate") ) { outValue = blendFuncSeparate_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"copyTexSubImage2D") ) { outValue = copyTexSubImage2D_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"createFramebuffer") ) { outValue = createFramebuffer_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"deleteFramebuffer") ) { outValue = deleteFramebuffer_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getAttribLocation") ) { outValue = getAttribLocation_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getProgramInfoLog") ) { outValue = getProgramInfoLog_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"stencilOpSeparate") ) { outValue = stencilOpSeparate_dyn(); return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"bindAttribLocation") ) { outValue = bindAttribLocation_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"createRenderbuffer") ) { outValue = createRenderbuffer_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"deleteRenderbuffer") ) { outValue = deleteRenderbuffer_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getAttachedShaders") ) { outValue = getAttachedShaders_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getBufferParameter") ) { outValue = getBufferParameter_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getShaderParameter") ) { outValue = getShaderParameter_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getUniformLocation") ) { outValue = getUniformLocation_dyn(); return true; }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"getProgramParameter") ) { outValue = getProgramParameter_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"renderbufferStorage") ) { outValue = renderbufferStorage_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"stencilFuncSeparate") ) { outValue = stencilFuncSeparate_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"stencilMaskSeparate") ) { outValue = stencilMaskSeparate_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"vertexAttribPointer") ) { outValue = vertexAttribPointer_dyn(); return true; }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"compressedTexImage2D") ) { outValue = compressedTexImage2D_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"framebufferTexture2D") ) { outValue = framebufferTexture2D_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getContextAttributes") ) { outValue = getContextAttributes_dyn(); return true; }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"blendEquationSeparate") ) { outValue = blendEquationSeparate_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getVertexAttribOffset") ) { outValue = getVertexAttribOffset_dyn(); return true; }
		break;
	case 22:
		if (HX_FIELD_EQ(inName,"checkFramebufferStatus") ) { outValue = checkFramebufferStatus_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getSupportedExtensions") ) { outValue = getSupportedExtensions_dyn(); return true; }
		break;
	case 23:
		if (HX_FIELD_EQ(inName,"compressedTexSubImage2D") ) { outValue = compressedTexSubImage2D_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"enableVertexAttribArray") ) { outValue = enableVertexAttribArray_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"framebufferRenderbuffer") ) { outValue = framebufferRenderbuffer_dyn(); return true; }
		break;
	case 24:
		if (HX_FIELD_EQ(inName,"disableVertexAttribArray") ) { outValue = disableVertexAttribArray_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getRenderbufferParameter") ) { outValue = getRenderbufferParameter_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getShaderPrecisionFormat") ) { outValue = getShaderPrecisionFormat_dyn(); return true; }
		break;
	case 33:
		if (HX_FIELD_EQ(inName,"getFramebufferAttachmentParameter") ) { outValue = getFramebufferAttachmentParameter_dyn(); return true; }
	}
	return false;
}

bool GL_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"version") ) { version=ioValue.Cast< Int >(); return true; }
		if (HX_FIELD_EQ(inName,"context") ) { context=ioValue.Cast<  ::lime::_backend::native::NativeGLRenderContext >(); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"__currentProgram") ) { _hx___currentProgram=ioValue.Cast<  ::lime::graphics::opengl::GLProgram >(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *GL_obj_sMemberStorageInfo = 0;
static hx::StaticInfo GL_obj_sStaticStorageInfo[] = {
	{hx::fsInt,(void *) &GL_obj::DEPTH_BUFFER_BIT,HX_HCSTRING("DEPTH_BUFFER_BIT","\xca","\x5b","\xce","\xc6")},
	{hx::fsInt,(void *) &GL_obj::STENCIL_BUFFER_BIT,HX_HCSTRING("STENCIL_BUFFER_BIT","\x71","\x93","\x29","\xde")},
	{hx::fsInt,(void *) &GL_obj::COLOR_BUFFER_BIT,HX_HCSTRING("COLOR_BUFFER_BIT","\x6a","\xf7","\x74","\xfb")},
	{hx::fsInt,(void *) &GL_obj::POINTS,HX_HCSTRING("POINTS","\x23","\xbe","\xb0","\xa9")},
	{hx::fsInt,(void *) &GL_obj::LINES,HX_HCSTRING("LINES","\xdf","\x15","\xf0","\xf2")},
	{hx::fsInt,(void *) &GL_obj::LINE_LOOP,HX_HCSTRING("LINE_LOOP","\xcf","\x55","\xc1","\x16")},
	{hx::fsInt,(void *) &GL_obj::LINE_STRIP,HX_HCSTRING("LINE_STRIP","\xed","\x20","\x88","\xdd")},
	{hx::fsInt,(void *) &GL_obj::TRIANGLES,HX_HCSTRING("TRIANGLES","\x8b","\xa0","\x99","\x7a")},
	{hx::fsInt,(void *) &GL_obj::TRIANGLE_STRIP,HX_HCSTRING("TRIANGLE_STRIP","\xc1","\x66","\x6c","\xf6")},
	{hx::fsInt,(void *) &GL_obj::TRIANGLE_FAN,HX_HCSTRING("TRIANGLE_FAN","\x7c","\xee","\x2e","\x91")},
	{hx::fsInt,(void *) &GL_obj::ZERO,HX_HCSTRING("ZERO","\x28","\xd7","\xb1","\x3b")},
	{hx::fsInt,(void *) &GL_obj::ONE,HX_HCSTRING("ONE","\x46","\x36","\x3c","\x00")},
	{hx::fsInt,(void *) &GL_obj::SRC_COLOR,HX_HCSTRING("SRC_COLOR","\x48","\x9e","\xbd","\x5c")},
	{hx::fsInt,(void *) &GL_obj::ONE_MINUS_SRC_COLOR,HX_HCSTRING("ONE_MINUS_SRC_COLOR","\x20","\x3b","\xe1","\x48")},
	{hx::fsInt,(void *) &GL_obj::SRC_ALPHA,HX_HCSTRING("SRC_ALPHA","\x43","\xd4","\xf7","\x33")},
	{hx::fsInt,(void *) &GL_obj::ONE_MINUS_SRC_ALPHA,HX_HCSTRING("ONE_MINUS_SRC_ALPHA","\x1b","\x71","\x1b","\x20")},
	{hx::fsInt,(void *) &GL_obj::DST_ALPHA,HX_HCSTRING("DST_ALPHA","\x24","\x02","\xf2","\xd3")},
	{hx::fsInt,(void *) &GL_obj::ONE_MINUS_DST_ALPHA,HX_HCSTRING("ONE_MINUS_DST_ALPHA","\xfc","\x9e","\x15","\xc0")},
	{hx::fsInt,(void *) &GL_obj::DST_COLOR,HX_HCSTRING("DST_COLOR","\x29","\xcc","\xb7","\xfc")},
	{hx::fsInt,(void *) &GL_obj::ONE_MINUS_DST_COLOR,HX_HCSTRING("ONE_MINUS_DST_COLOR","\x01","\x69","\xdb","\xe8")},
	{hx::fsInt,(void *) &GL_obj::SRC_ALPHA_SATURATE,HX_HCSTRING("SRC_ALPHA_SATURATE","\xab","\xe2","\x3d","\x33")},
	{hx::fsInt,(void *) &GL_obj::FUNC_ADD,HX_HCSTRING("FUNC_ADD","\x46","\x78","\x17","\x75")},
	{hx::fsInt,(void *) &GL_obj::BLEND_EQUATION,HX_HCSTRING("BLEND_EQUATION","\x9a","\x14","\x92","\x71")},
	{hx::fsInt,(void *) &GL_obj::BLEND_EQUATION_RGB,HX_HCSTRING("BLEND_EQUATION_RGB","\x88","\x25","\xeb","\x90")},
	{hx::fsInt,(void *) &GL_obj::BLEND_EQUATION_ALPHA,HX_HCSTRING("BLEND_EQUATION_ALPHA","\x99","\xaa","\xae","\x37")},
	{hx::fsInt,(void *) &GL_obj::FUNC_SUBTRACT,HX_HCSTRING("FUNC_SUBTRACT","\xaf","\xc0","\xa0","\x17")},
	{hx::fsInt,(void *) &GL_obj::FUNC_REVERSE_SUBTRACT,HX_HCSTRING("FUNC_REVERSE_SUBTRACT","\xcc","\x8d","\xef","\xf3")},
	{hx::fsInt,(void *) &GL_obj::BLEND_DST_RGB,HX_HCSTRING("BLEND_DST_RGB","\x05","\x87","\xf5","\xec")},
	{hx::fsInt,(void *) &GL_obj::BLEND_SRC_RGB,HX_HCSTRING("BLEND_SRC_RGB","\x64","\x43","\x8c","\x2c")},
	{hx::fsInt,(void *) &GL_obj::BLEND_DST_ALPHA,HX_HCSTRING("BLEND_DST_ALPHA","\x56","\x25","\x32","\x74")},
	{hx::fsInt,(void *) &GL_obj::BLEND_SRC_ALPHA,HX_HCSTRING("BLEND_SRC_ALPHA","\x75","\xf7","\x37","\xd4")},
	{hx::fsInt,(void *) &GL_obj::CONSTANT_COLOR,HX_HCSTRING("CONSTANT_COLOR","\xe8","\x64","\x8a","\xc8")},
	{hx::fsInt,(void *) &GL_obj::ONE_MINUS_CONSTANT_COLOR,HX_HCSTRING("ONE_MINUS_CONSTANT_COLOR","\x10","\x39","\xe7","\x06")},
	{hx::fsInt,(void *) &GL_obj::CONSTANT_ALPHA,HX_HCSTRING("CONSTANT_ALPHA","\xe3","\x9a","\xc4","\x9f")},
	{hx::fsInt,(void *) &GL_obj::ONE_MINUS_CONSTANT_ALPHA,HX_HCSTRING("ONE_MINUS_CONSTANT_ALPHA","\x0b","\x6f","\x21","\xde")},
	{hx::fsInt,(void *) &GL_obj::BLEND_COLOR,HX_HCSTRING("BLEND_COLOR","\x75","\xcb","\xc8","\x67")},
	{hx::fsInt,(void *) &GL_obj::ARRAY_BUFFER,HX_HCSTRING("ARRAY_BUFFER","\x46","\x66","\x17","\xf4")},
	{hx::fsInt,(void *) &GL_obj::ELEMENT_ARRAY_BUFFER,HX_HCSTRING("ELEMENT_ARRAY_BUFFER","\x09","\x05","\x53","\x3d")},
	{hx::fsInt,(void *) &GL_obj::ARRAY_BUFFER_BINDING,HX_HCSTRING("ARRAY_BUFFER_BINDING","\xec","\xd4","\xa9","\x79")},
	{hx::fsInt,(void *) &GL_obj::ELEMENT_ARRAY_BUFFER_BINDING,HX_HCSTRING("ELEMENT_ARRAY_BUFFER_BINDING","\xaf","\x6e","\x96","\xa2")},
	{hx::fsInt,(void *) &GL_obj::STREAM_DRAW,HX_HCSTRING("STREAM_DRAW","\x63","\x7f","\x28","\x15")},
	{hx::fsInt,(void *) &GL_obj::STATIC_DRAW,HX_HCSTRING("STATIC_DRAW","\x75","\x50","\x2f","\xba")},
	{hx::fsInt,(void *) &GL_obj::DYNAMIC_DRAW,HX_HCSTRING("DYNAMIC_DRAW","\x24","\x04","\x1f","\x24")},
	{hx::fsInt,(void *) &GL_obj::BUFFER_SIZE,HX_HCSTRING("BUFFER_SIZE","\xa0","\x7b","\x91","\x4c")},
	{hx::fsInt,(void *) &GL_obj::BUFFER_USAGE,HX_HCSTRING("BUFFER_USAGE","\x42","\x05","\x11","\xe0")},
	{hx::fsInt,(void *) &GL_obj::CURRENT_VERTEX_ATTRIB,HX_HCSTRING("CURRENT_VERTEX_ATTRIB","\x1f","\x8c","\x2f","\xab")},
	{hx::fsInt,(void *) &GL_obj::FRONT,HX_HCSTRING("FRONT","\x89","\x50","\x7c","\x84")},
	{hx::fsInt,(void *) &GL_obj::BACK,HX_HCSTRING("BACK","\x27","\xa2","\xd1","\x2b")},
	{hx::fsInt,(void *) &GL_obj::FRONT_AND_BACK,HX_HCSTRING("FRONT_AND_BACK","\xa5","\x3d","\x6a","\xc1")},
	{hx::fsInt,(void *) &GL_obj::CULL_FACE,HX_HCSTRING("CULL_FACE","\x8a","\xa5","\xf4","\xcf")},
	{hx::fsInt,(void *) &GL_obj::BLEND,HX_HCSTRING("BLEND","\x31","\x20","\xe3","\x32")},
	{hx::fsInt,(void *) &GL_obj::DITHER,HX_HCSTRING("DITHER","\xe6","\xac","\x41","\x70")},
	{hx::fsInt,(void *) &GL_obj::STENCIL_TEST,HX_HCSTRING("STENCIL_TEST","\xd5","\xdc","\x69","\xd5")},
	{hx::fsInt,(void *) &GL_obj::DEPTH_TEST,HX_HCSTRING("DEPTH_TEST","\x6e","\x6c","\x25","\x28")},
	{hx::fsInt,(void *) &GL_obj::SCISSOR_TEST,HX_HCSTRING("SCISSOR_TEST","\xb5","\xbe","\x51","\x59")},
	{hx::fsInt,(void *) &GL_obj::POLYGON_OFFSET_FILL,HX_HCSTRING("POLYGON_OFFSET_FILL","\x4a","\x3d","\x32","\xac")},
	{hx::fsInt,(void *) &GL_obj::SAMPLE_ALPHA_TO_COVERAGE,HX_HCSTRING("SAMPLE_ALPHA_TO_COVERAGE","\x16","\x3e","\x56","\xe1")},
	{hx::fsInt,(void *) &GL_obj::SAMPLE_COVERAGE,HX_HCSTRING("SAMPLE_COVERAGE","\xdd","\xb7","\x0e","\xc1")},
	{hx::fsInt,(void *) &GL_obj::NO_ERROR,HX_HCSTRING("NO_ERROR","\xea","\xb5","\x7d","\x2f")},
	{hx::fsInt,(void *) &GL_obj::INVALID_ENUM,HX_HCSTRING("INVALID_ENUM","\xa9","\x74","\x70","\x13")},
	{hx::fsInt,(void *) &GL_obj::INVALID_VALUE,HX_HCSTRING("INVALID_VALUE","\xa9","\xe8","\x26","\xb0")},
	{hx::fsInt,(void *) &GL_obj::INVALID_OPERATION,HX_HCSTRING("INVALID_OPERATION","\x5f","\xb1","\xc8","\x29")},
	{hx::fsInt,(void *) &GL_obj::OUT_OF_MEMORY,HX_HCSTRING("OUT_OF_MEMORY","\x18","\xf2","\x97","\xe1")},
	{hx::fsInt,(void *) &GL_obj::CW,HX_HCSTRING("CW","\xb4","\x3a","\x00","\x00")},
	{hx::fsInt,(void *) &GL_obj::CCW,HX_HCSTRING("CCW","\xb7","\x11","\x33","\x00")},
	{hx::fsInt,(void *) &GL_obj::LINE_WIDTH,HX_HCSTRING("LINE_WIDTH","\x1b","\x84","\xd2","\x23")},
	{hx::fsInt,(void *) &GL_obj::ALIASED_POINT_SIZE_RANGE,HX_HCSTRING("ALIASED_POINT_SIZE_RANGE","\xfe","\xf6","\xa4","\x7b")},
	{hx::fsInt,(void *) &GL_obj::ALIASED_LINE_WIDTH_RANGE,HX_HCSTRING("ALIASED_LINE_WIDTH_RANGE","\xe9","\x22","\xd5","\x8a")},
	{hx::fsInt,(void *) &GL_obj::CULL_FACE_MODE,HX_HCSTRING("CULL_FACE_MODE","\x78","\xbd","\x87","\xd1")},
	{hx::fsInt,(void *) &GL_obj::FRONT_FACE,HX_HCSTRING("FRONT_FACE","\x53","\xb7","\x4d","\xef")},
	{hx::fsInt,(void *) &GL_obj::DEPTH_RANGE,HX_HCSTRING("DEPTH_RANGE","\x01","\x9a","\x23","\xcf")},
	{hx::fsInt,(void *) &GL_obj::DEPTH_WRITEMASK,HX_HCSTRING("DEPTH_WRITEMASK","\x8f","\x37","\x3f","\x66")},
	{hx::fsInt,(void *) &GL_obj::DEPTH_CLEAR_VALUE,HX_HCSTRING("DEPTH_CLEAR_VALUE","\x23","\x17","\x0d","\x1b")},
	{hx::fsInt,(void *) &GL_obj::DEPTH_FUNC,HX_HCSTRING("DEPTH_FUNC","\x60","\x8f","\xf0","\x1e")},
	{hx::fsInt,(void *) &GL_obj::STENCIL_CLEAR_VALUE,HX_HCSTRING("STENCIL_CLEAR_VALUE","\x9c","\x91","\x82","\x73")},
	{hx::fsInt,(void *) &GL_obj::STENCIL_FUNC,HX_HCSTRING("STENCIL_FUNC","\xc7","\xff","\x34","\xcc")},
	{hx::fsInt,(void *) &GL_obj::STENCIL_FAIL,HX_HCSTRING("STENCIL_FAIL","\x61","\xce","\x25","\xcc")},
	{hx::fsInt,(void *) &GL_obj::STENCIL_PASS_DEPTH_FAIL,HX_HCSTRING("STENCIL_PASS_DEPTH_FAIL","\x45","\xca","\xb9","\xc8")},
	{hx::fsInt,(void *) &GL_obj::STENCIL_PASS_DEPTH_PASS,HX_HCSTRING("STENCIL_PASS_DEPTH_PASS","\x38","\xf5","\x55","\xcf")},
	{hx::fsInt,(void *) &GL_obj::STENCIL_REF,HX_HCSTRING("STENCIL_REF","\x10","\x6a","\xa5","\x3c")},
	{hx::fsInt,(void *) &GL_obj::STENCIL_VALUE_MASK,HX_HCSTRING("STENCIL_VALUE_MASK","\x9d","\x58","\x5e","\xa0")},
	{hx::fsInt,(void *) &GL_obj::STENCIL_WRITEMASK,HX_HCSTRING("STENCIL_WRITEMASK","\xc8","\xf1","\xa6","\x49")},
	{hx::fsInt,(void *) &GL_obj::STENCIL_BACK_FUNC,HX_HCSTRING("STENCIL_BACK_FUNC","\x39","\x78","\xa2","\x90")},
	{hx::fsInt,(void *) &GL_obj::STENCIL_BACK_FAIL,HX_HCSTRING("STENCIL_BACK_FAIL","\xd3","\x46","\x93","\x90")},
	{hx::fsInt,(void *) &GL_obj::STENCIL_BACK_PASS_DEPTH_FAIL,HX_HCSTRING("STENCIL_BACK_PASS_DEPTH_FAIL","\x13","\x23","\x0e","\x34")},
	{hx::fsInt,(void *) &GL_obj::STENCIL_BACK_PASS_DEPTH_PASS,HX_HCSTRING("STENCIL_BACK_PASS_DEPTH_PASS","\x06","\x4e","\xaa","\x3a")},
	{hx::fsInt,(void *) &GL_obj::STENCIL_BACK_REF,HX_HCSTRING("STENCIL_BACK_REF","\xde","\x45","\xb8","\x08")},
	{hx::fsInt,(void *) &GL_obj::STENCIL_BACK_VALUE_MASK,HX_HCSTRING("STENCIL_BACK_VALUE_MASK","\x8f","\xb2","\xc4","\x88")},
	{hx::fsInt,(void *) &GL_obj::STENCIL_BACK_WRITEMASK,HX_HCSTRING("STENCIL_BACK_WRITEMASK","\x16","\x9c","\x15","\xc2")},
	{hx::fsInt,(void *) &GL_obj::VIEWPORT,HX_HCSTRING("VIEWPORT","\x66","\xdc","\x2a","\xf6")},
	{hx::fsInt,(void *) &GL_obj::SCISSOR_BOX,HX_HCSTRING("SCISSOR_BOX","\xe8","\x48","\x4c","\x55")},
	{hx::fsInt,(void *) &GL_obj::COLOR_CLEAR_VALUE,HX_HCSTRING("COLOR_CLEAR_VALUE","\x83","\xa7","\x2e","\xf8")},
	{hx::fsInt,(void *) &GL_obj::COLOR_WRITEMASK,HX_HCSTRING("COLOR_WRITEMASK","\xef","\xef","\xf9","\x14")},
	{hx::fsInt,(void *) &GL_obj::UNPACK_ALIGNMENT,HX_HCSTRING("UNPACK_ALIGNMENT","\xb6","\x2a","\x2e","\x4b")},
	{hx::fsInt,(void *) &GL_obj::PACK_ALIGNMENT,HX_HCSTRING("PACK_ALIGNMENT","\x9d","\xd6","\x85","\xc3")},
	{hx::fsInt,(void *) &GL_obj::MAX_TEXTURE_SIZE,HX_HCSTRING("MAX_TEXTURE_SIZE","\xe0","\x0b","\x5b","\xfb")},
	{hx::fsInt,(void *) &GL_obj::MAX_VIEWPORT_DIMS,HX_HCSTRING("MAX_VIEWPORT_DIMS","\xa9","\x2d","\xfb","\x08")},
	{hx::fsInt,(void *) &GL_obj::SUBPIXEL_BITS,HX_HCSTRING("SUBPIXEL_BITS","\x1f","\xac","\x14","\x0a")},
	{hx::fsInt,(void *) &GL_obj::RED_BITS,HX_HCSTRING("RED_BITS","\x14","\xf8","\x9e","\x96")},
	{hx::fsInt,(void *) &GL_obj::GREEN_BITS,HX_HCSTRING("GREEN_BITS","\x62","\xa9","\x9b","\x94")},
	{hx::fsInt,(void *) &GL_obj::BLUE_BITS,HX_HCSTRING("BLUE_BITS","\x0b","\x26","\x60","\xa1")},
	{hx::fsInt,(void *) &GL_obj::ALPHA_BITS,HX_HCSTRING("ALPHA_BITS","\xe7","\xfe","\x7b","\xe0")},
	{hx::fsInt,(void *) &GL_obj::DEPTH_BITS,HX_HCSTRING("DEPTH_BITS","\x22","\x9f","\x42","\x1c")},
	{hx::fsInt,(void *) &GL_obj::STENCIL_BITS,HX_HCSTRING("STENCIL_BITS","\x89","\x0f","\x87","\xc9")},
	{hx::fsInt,(void *) &GL_obj::POLYGON_OFFSET_UNITS,HX_HCSTRING("POLYGON_OFFSET_UNITS","\xa8","\xe8","\x11","\xa6")},
	{hx::fsInt,(void *) &GL_obj::POLYGON_OFFSET_FACTOR,HX_HCSTRING("POLYGON_OFFSET_FACTOR","\x56","\x6b","\x12","\x2a")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE_BINDING_2D,HX_HCSTRING("TEXTURE_BINDING_2D","\x30","\xec","\x98","\xb1")},
	{hx::fsInt,(void *) &GL_obj::SAMPLE_BUFFERS,HX_HCSTRING("SAMPLE_BUFFERS","\xfe","\x16","\x71","\x3c")},
	{hx::fsInt,(void *) &GL_obj::SAMPLES,HX_HCSTRING("SAMPLES","\xe9","\x98","\x9d","\x03")},
	{hx::fsInt,(void *) &GL_obj::SAMPLE_COVERAGE_VALUE,HX_HCSTRING("SAMPLE_COVERAGE_VALUE","\x2f","\x7a","\x07","\x69")},
	{hx::fsInt,(void *) &GL_obj::SAMPLE_COVERAGE_INVERT,HX_HCSTRING("SAMPLE_COVERAGE_INVERT","\x78","\x52","\xa5","\xcd")},
	{hx::fsInt,(void *) &GL_obj::COMPRESSED_TEXTURE_FORMATS,HX_HCSTRING("COMPRESSED_TEXTURE_FORMATS","\x7a","\x13","\xe3","\x12")},
	{hx::fsInt,(void *) &GL_obj::DONT_CARE,HX_HCSTRING("DONT_CARE","\x7f","\x9b","\xc1","\xcf")},
	{hx::fsInt,(void *) &GL_obj::FASTEST,HX_HCSTRING("FASTEST","\x0a","\xa3","\x0d","\x5e")},
	{hx::fsInt,(void *) &GL_obj::NICEST,HX_HCSTRING("NICEST","\x7e","\x6d","\x94","\x64")},
	{hx::fsInt,(void *) &GL_obj::GENERATE_MIPMAP_HINT,HX_HCSTRING("GENERATE_MIPMAP_HINT","\x94","\xd3","\xd5","\x83")},
	{hx::fsInt,(void *) &GL_obj::BYTE,HX_HCSTRING("BYTE","\x08","\xe7","\xe3","\x2b")},
	{hx::fsInt,(void *) &GL_obj::UNSIGNED_BYTE,HX_HCSTRING("UNSIGNED_BYTE","\xd2","\x79","\x6b","\x01")},
	{hx::fsInt,(void *) &GL_obj::SHORT,HX_HCSTRING("SHORT","\x5c","\xbc","\x15","\xfa")},
	{hx::fsInt,(void *) &GL_obj::UNSIGNED_SHORT,HX_HCSTRING("UNSIGNED_SHORT","\x52","\x9a","\x2e","\xfb")},
	{hx::fsInt,(void *) &GL_obj::INT,HX_HCSTRING("INT","\xcf","\xa8","\x37","\x00")},
	{hx::fsInt,(void *) &GL_obj::UNSIGNED_INT,HX_HCSTRING("UNSIGNED_INT","\x45","\xfd","\xb9","\x1c")},
	{hx::fsInt,(void *) &GL_obj::FLOAT,HX_HCSTRING("FLOAT","\x7c","\xfd","\x84","\x80")},
	{hx::fsInt,(void *) &GL_obj::DEPTH_COMPONENT,HX_HCSTRING("DEPTH_COMPONENT","\x01","\x1f","\x62","\x0f")},
	{hx::fsInt,(void *) &GL_obj::ALPHA,HX_HCSTRING("ALPHA","\x3e","\xdf","\x84","\x9f")},
	{hx::fsInt,(void *) &GL_obj::RGB,HX_HCSTRING("RGB","\xed","\x76","\x3e","\x00")},
	{hx::fsInt,(void *) &GL_obj::RGBA,HX_HCSTRING("RGBA","\xb4","\x98","\x69","\x36")},
	{hx::fsInt,(void *) &GL_obj::BGR_EXT,HX_HCSTRING("BGR_EXT","\xef","\xba","\xba","\x91")},
	{hx::fsInt,(void *) &GL_obj::BGRA_EXT,HX_HCSTRING("BGRA_EXT","\x36","\x94","\xc4","\xbc")},
	{hx::fsInt,(void *) &GL_obj::LUMINANCE,HX_HCSTRING("LUMINANCE","\xd8","\xa7","\xe0","\x63")},
	{hx::fsInt,(void *) &GL_obj::LUMINANCE_ALPHA,HX_HCSTRING("LUMINANCE_ALPHA","\x57","\x40","\xe0","\xbd")},
	{hx::fsInt,(void *) &GL_obj::UNSIGNED_SHORT_4_4_4_4,HX_HCSTRING("UNSIGNED_SHORT_4_4_4_4","\xa6","\x33","\x71","\x7b")},
	{hx::fsInt,(void *) &GL_obj::UNSIGNED_SHORT_5_5_5_1,HX_HCSTRING("UNSIGNED_SHORT_5_5_5_1","\x26","\x01","\x6e","\x38")},
	{hx::fsInt,(void *) &GL_obj::UNSIGNED_SHORT_5_6_5,HX_HCSTRING("UNSIGNED_SHORT_5_6_5","\x75","\xbb","\x16","\x8c")},
	{hx::fsInt,(void *) &GL_obj::FRAGMENT_SHADER,HX_HCSTRING("FRAGMENT_SHADER","\xf4","\x26","\x78","\xe9")},
	{hx::fsInt,(void *) &GL_obj::VERTEX_SHADER,HX_HCSTRING("VERTEX_SHADER","\xe0","\x69","\x73","\x49")},
	{hx::fsInt,(void *) &GL_obj::MAX_VERTEX_ATTRIBS,HX_HCSTRING("MAX_VERTEX_ATTRIBS","\x49","\xc9","\x15","\x5f")},
	{hx::fsInt,(void *) &GL_obj::MAX_VERTEX_UNIFORM_VECTORS,HX_HCSTRING("MAX_VERTEX_UNIFORM_VECTORS","\x45","\x6c","\x16","\x5a")},
	{hx::fsInt,(void *) &GL_obj::MAX_VARYING_VECTORS,HX_HCSTRING("MAX_VARYING_VECTORS","\x06","\xb9","\xf7","\x37")},
	{hx::fsInt,(void *) &GL_obj::MAX_COMBINED_TEXTURE_IMAGE_UNITS,HX_HCSTRING("MAX_COMBINED_TEXTURE_IMAGE_UNITS","\xa8","\xd1","\xa6","\x77")},
	{hx::fsInt,(void *) &GL_obj::MAX_VERTEX_TEXTURE_IMAGE_UNITS,HX_HCSTRING("MAX_VERTEX_TEXTURE_IMAGE_UNITS","\xc7","\x90","\x95","\x2b")},
	{hx::fsInt,(void *) &GL_obj::MAX_TEXTURE_IMAGE_UNITS,HX_HCSTRING("MAX_TEXTURE_IMAGE_UNITS","\xcc","\x6c","\x61","\x54")},
	{hx::fsInt,(void *) &GL_obj::MAX_FRAGMENT_UNIFORM_VECTORS,HX_HCSTRING("MAX_FRAGMENT_UNIFORM_VECTORS","\x71","\x49","\xf5","\x0a")},
	{hx::fsInt,(void *) &GL_obj::SHADER_TYPE,HX_HCSTRING("SHADER_TYPE","\x54","\xe5","\x27","\x87")},
	{hx::fsInt,(void *) &GL_obj::DELETE_STATUS,HX_HCSTRING("DELETE_STATUS","\x06","\xe4","\x98","\x1e")},
	{hx::fsInt,(void *) &GL_obj::LINK_STATUS,HX_HCSTRING("LINK_STATUS","\x17","\x18","\x8f","\x45")},
	{hx::fsInt,(void *) &GL_obj::VALIDATE_STATUS,HX_HCSTRING("VALIDATE_STATUS","\xfb","\x22","\x07","\xc6")},
	{hx::fsInt,(void *) &GL_obj::ATTACHED_SHADERS,HX_HCSTRING("ATTACHED_SHADERS","\x73","\xd2","\x76","\x75")},
	{hx::fsInt,(void *) &GL_obj::ACTIVE_UNIFORMS,HX_HCSTRING("ACTIVE_UNIFORMS","\x98","\x7d","\x3a","\x2c")},
	{hx::fsInt,(void *) &GL_obj::ACTIVE_ATTRIBUTES,HX_HCSTRING("ACTIVE_ATTRIBUTES","\xf0","\xe5","\xc7","\x4a")},
	{hx::fsInt,(void *) &GL_obj::SHADING_LANGUAGE_VERSION,HX_HCSTRING("SHADING_LANGUAGE_VERSION","\xe6","\xc4","\xef","\x70")},
	{hx::fsInt,(void *) &GL_obj::CURRENT_PROGRAM,HX_HCSTRING("CURRENT_PROGRAM","\xfe","\x28","\xc0","\x3f")},
	{hx::fsInt,(void *) &GL_obj::NEVER,HX_HCSTRING("NEVER","\x6c","\x76","\x1e","\x17")},
	{hx::fsInt,(void *) &GL_obj::LESS,HX_HCSTRING("LESS","\x59","\xdb","\x70","\x32")},
	{hx::fsInt,(void *) &GL_obj::EQUAL,HX_HCSTRING("EQUAL","\x94","\x07","\x71","\xf0")},
	{hx::fsInt,(void *) &GL_obj::LEQUAL,HX_HCSTRING("LEQUAL","\xc8","\x73","\x90","\x53")},
	{hx::fsInt,(void *) &GL_obj::GREATER,HX_HCSTRING("GREATER","\xda","\x64","\x94","\x37")},
	{hx::fsInt,(void *) &GL_obj::NOTEQUAL,HX_HCSTRING("NOTEQUAL","\xc1","\xc1","\xe9","\xc8")},
	{hx::fsInt,(void *) &GL_obj::GEQUAL,HX_HCSTRING("GEQUAL","\xed","\xa5","\xc7","\x53")},
	{hx::fsInt,(void *) &GL_obj::ALWAYS,HX_HCSTRING("ALWAYS","\xcf","\xba","\x59","\xf9")},
	{hx::fsInt,(void *) &GL_obj::KEEP,HX_HCSTRING("KEEP","\x85","\x98","\xc7","\x31")},
	{hx::fsInt,(void *) &GL_obj::REPLACE,HX_HCSTRING("REPLACE","\x14","\x1c","\xfc","\x2a")},
	{hx::fsInt,(void *) &GL_obj::INCR,HX_HCSTRING("INCR","\xd4","\xfd","\x7b","\x30")},
	{hx::fsInt,(void *) &GL_obj::DECR,HX_HCSTRING("DECR","\x70","\x18","\x27","\x2d")},
	{hx::fsInt,(void *) &GL_obj::INVERT,HX_HCSTRING("INVERT","\x16","\x93","\x5b","\x52")},
	{hx::fsInt,(void *) &GL_obj::INCR_WRAP,HX_HCSTRING("INCR_WRAP","\x55","\x7f","\x68","\x2c")},
	{hx::fsInt,(void *) &GL_obj::DECR_WRAP,HX_HCSTRING("DECR_WRAP","\x39","\x6f","\xeb","\x0a")},
	{hx::fsInt,(void *) &GL_obj::VENDOR,HX_HCSTRING("VENDOR","\x88","\x91","\x19","\x51")},
	{hx::fsInt,(void *) &GL_obj::RENDERER,HX_HCSTRING("RENDERER","\x43","\x55","\x61","\x0c")},
	{hx::fsInt,(void *) &GL_obj::VERSION,HX_HCSTRING("VERSION","\xf8","\xba","\xc5","\xfc")},
	{hx::fsInt,(void *) &GL_obj::NEAREST,HX_HCSTRING("NEAREST","\x3e","\xec","\x9d","\xe5")},
	{hx::fsInt,(void *) &GL_obj::LINEAR,HX_HCSTRING("LINEAR","\xe5","\xfd","\x22","\x9f")},
	{hx::fsInt,(void *) &GL_obj::NEAREST_MIPMAP_NEAREST,HX_HCSTRING("NEAREST_MIPMAP_NEAREST","\x68","\xb9","\x63","\x7e")},
	{hx::fsInt,(void *) &GL_obj::LINEAR_MIPMAP_NEAREST,HX_HCSTRING("LINEAR_MIPMAP_NEAREST","\xa1","\x9b","\xa4","\x65")},
	{hx::fsInt,(void *) &GL_obj::NEAREST_MIPMAP_LINEAR,HX_HCSTRING("NEAREST_MIPMAP_LINEAR","\xfb","\x83","\xf2","\x3b")},
	{hx::fsInt,(void *) &GL_obj::LINEAR_MIPMAP_LINEAR,HX_HCSTRING("LINEAR_MIPMAP_LINEAR","\xe2","\x8b","\xf8","\x99")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE_MAG_FILTER,HX_HCSTRING("TEXTURE_MAG_FILTER","\x88","\xff","\xd5","\x1e")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE_MIN_FILTER,HX_HCSTRING("TEXTURE_MIN_FILTER","\x69","\x66","\xc2","\x46")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE_WRAP_S,HX_HCSTRING("TEXTURE_WRAP_S","\xa2","\x2d","\xc3","\xfe")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE_WRAP_T,HX_HCSTRING("TEXTURE_WRAP_T","\xa3","\x2d","\xc3","\xfe")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE_2D,HX_HCSTRING("TEXTURE_2D","\x16","\x0c","\xf8","\xa2")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE,HX_HCSTRING("TEXTURE","\xbb","\x9c","\xb4","\x1e")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE_CUBE_MAP,HX_HCSTRING("TEXTURE_CUBE_MAP","\x36","\x7a","\xe1","\xad")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE_BINDING_CUBE_MAP,HX_HCSTRING("TEXTURE_BINDING_CUBE_MAP","\xd0","\x69","\x98","\x75")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE_CUBE_MAP_POSITIVE_X,HX_HCSTRING("TEXTURE_CUBE_MAP_POSITIVE_X","\xbb","\x1c","\xee","\x24")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE_CUBE_MAP_NEGATIVE_X,HX_HCSTRING("TEXTURE_CUBE_MAP_NEGATIVE_X","\x77","\x03","\xe2","\x6b")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE_CUBE_MAP_POSITIVE_Y,HX_HCSTRING("TEXTURE_CUBE_MAP_POSITIVE_Y","\xbc","\x1c","\xee","\x24")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE_CUBE_MAP_NEGATIVE_Y,HX_HCSTRING("TEXTURE_CUBE_MAP_NEGATIVE_Y","\x78","\x03","\xe2","\x6b")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE_CUBE_MAP_POSITIVE_Z,HX_HCSTRING("TEXTURE_CUBE_MAP_POSITIVE_Z","\xbd","\x1c","\xee","\x24")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE_CUBE_MAP_NEGATIVE_Z,HX_HCSTRING("TEXTURE_CUBE_MAP_NEGATIVE_Z","\x79","\x03","\xe2","\x6b")},
	{hx::fsInt,(void *) &GL_obj::MAX_CUBE_MAP_TEXTURE_SIZE,HX_HCSTRING("MAX_CUBE_MAP_TEXTURE_SIZE","\x77","\xb9","\x24","\x9d")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE0,HX_HCSTRING("TEXTURE0","\x15","\x87","\x54","\xbf")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE1,HX_HCSTRING("TEXTURE1","\x16","\x87","\x54","\xbf")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE2,HX_HCSTRING("TEXTURE2","\x17","\x87","\x54","\xbf")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE3,HX_HCSTRING("TEXTURE3","\x18","\x87","\x54","\xbf")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE4,HX_HCSTRING("TEXTURE4","\x19","\x87","\x54","\xbf")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE5,HX_HCSTRING("TEXTURE5","\x1a","\x87","\x54","\xbf")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE6,HX_HCSTRING("TEXTURE6","\x1b","\x87","\x54","\xbf")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE7,HX_HCSTRING("TEXTURE7","\x1c","\x87","\x54","\xbf")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE8,HX_HCSTRING("TEXTURE8","\x1d","\x87","\x54","\xbf")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE9,HX_HCSTRING("TEXTURE9","\x1e","\x87","\x54","\xbf")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE10,HX_HCSTRING("TEXTURE10","\x5a","\xac","\xa1","\xaa")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE11,HX_HCSTRING("TEXTURE11","\x5b","\xac","\xa1","\xaa")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE12,HX_HCSTRING("TEXTURE12","\x5c","\xac","\xa1","\xaa")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE13,HX_HCSTRING("TEXTURE13","\x5d","\xac","\xa1","\xaa")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE14,HX_HCSTRING("TEXTURE14","\x5e","\xac","\xa1","\xaa")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE15,HX_HCSTRING("TEXTURE15","\x5f","\xac","\xa1","\xaa")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE16,HX_HCSTRING("TEXTURE16","\x60","\xac","\xa1","\xaa")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE17,HX_HCSTRING("TEXTURE17","\x61","\xac","\xa1","\xaa")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE18,HX_HCSTRING("TEXTURE18","\x62","\xac","\xa1","\xaa")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE19,HX_HCSTRING("TEXTURE19","\x63","\xac","\xa1","\xaa")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE20,HX_HCSTRING("TEXTURE20","\x39","\xad","\xa1","\xaa")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE21,HX_HCSTRING("TEXTURE21","\x3a","\xad","\xa1","\xaa")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE22,HX_HCSTRING("TEXTURE22","\x3b","\xad","\xa1","\xaa")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE23,HX_HCSTRING("TEXTURE23","\x3c","\xad","\xa1","\xaa")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE24,HX_HCSTRING("TEXTURE24","\x3d","\xad","\xa1","\xaa")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE25,HX_HCSTRING("TEXTURE25","\x3e","\xad","\xa1","\xaa")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE26,HX_HCSTRING("TEXTURE26","\x3f","\xad","\xa1","\xaa")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE27,HX_HCSTRING("TEXTURE27","\x40","\xad","\xa1","\xaa")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE28,HX_HCSTRING("TEXTURE28","\x41","\xad","\xa1","\xaa")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE29,HX_HCSTRING("TEXTURE29","\x42","\xad","\xa1","\xaa")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE30,HX_HCSTRING("TEXTURE30","\x18","\xae","\xa1","\xaa")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE31,HX_HCSTRING("TEXTURE31","\x19","\xae","\xa1","\xaa")},
	{hx::fsInt,(void *) &GL_obj::ACTIVE_TEXTURE,HX_HCSTRING("ACTIVE_TEXTURE","\x02","\x1a","\x22","\xce")},
	{hx::fsInt,(void *) &GL_obj::REPEAT,HX_HCSTRING("REPEAT","\x5b","\x43","\xff","\xb8")},
	{hx::fsInt,(void *) &GL_obj::CLAMP_TO_EDGE,HX_HCSTRING("CLAMP_TO_EDGE","\x1d","\xfc","\x5a","\x96")},
	{hx::fsInt,(void *) &GL_obj::MIRRORED_REPEAT,HX_HCSTRING("MIRRORED_REPEAT","\x5c","\x94","\x80","\x4a")},
	{hx::fsInt,(void *) &GL_obj::FLOAT_VEC2,HX_HCSTRING("FLOAT_VEC2","\x61","\xac","\xa4","\xeb")},
	{hx::fsInt,(void *) &GL_obj::FLOAT_VEC3,HX_HCSTRING("FLOAT_VEC3","\x62","\xac","\xa4","\xeb")},
	{hx::fsInt,(void *) &GL_obj::FLOAT_VEC4,HX_HCSTRING("FLOAT_VEC4","\x63","\xac","\xa4","\xeb")},
	{hx::fsInt,(void *) &GL_obj::INT_VEC2,HX_HCSTRING("INT_VEC2","\x2e","\x14","\x05","\x7d")},
	{hx::fsInt,(void *) &GL_obj::INT_VEC3,HX_HCSTRING("INT_VEC3","\x2f","\x14","\x05","\x7d")},
	{hx::fsInt,(void *) &GL_obj::INT_VEC4,HX_HCSTRING("INT_VEC4","\x30","\x14","\x05","\x7d")},
	{hx::fsInt,(void *) &GL_obj::BOOL,HX_HCSTRING("BOOL","\x2a","\x4c","\xdc","\x2b")},
	{hx::fsInt,(void *) &GL_obj::BOOL_VEC2,HX_HCSTRING("BOOL_VEC2","\xf3","\x66","\x2b","\x2d")},
	{hx::fsInt,(void *) &GL_obj::BOOL_VEC3,HX_HCSTRING("BOOL_VEC3","\xf4","\x66","\x2b","\x2d")},
	{hx::fsInt,(void *) &GL_obj::BOOL_VEC4,HX_HCSTRING("BOOL_VEC4","\xf5","\x66","\x2b","\x2d")},
	{hx::fsInt,(void *) &GL_obj::FLOAT_MAT2,HX_HCSTRING("FLOAT_MAT2","\x95","\xc6","\xae","\xe5")},
	{hx::fsInt,(void *) &GL_obj::FLOAT_MAT3,HX_HCSTRING("FLOAT_MAT3","\x96","\xc6","\xae","\xe5")},
	{hx::fsInt,(void *) &GL_obj::FLOAT_MAT4,HX_HCSTRING("FLOAT_MAT4","\x97","\xc6","\xae","\xe5")},
	{hx::fsInt,(void *) &GL_obj::SAMPLER_2D,HX_HCSTRING("SAMPLER_2D","\x09","\x2a","\x93","\x6e")},
	{hx::fsInt,(void *) &GL_obj::SAMPLER_CUBE,HX_HCSTRING("SAMPLER_CUBE","\xec","\x3e","\x82","\xa4")},
	{hx::fsInt,(void *) &GL_obj::VERTEX_ATTRIB_ARRAY_ENABLED,HX_HCSTRING("VERTEX_ATTRIB_ARRAY_ENABLED","\x61","\x99","\x09","\x66")},
	{hx::fsInt,(void *) &GL_obj::VERTEX_ATTRIB_ARRAY_SIZE,HX_HCSTRING("VERTEX_ATTRIB_ARRAY_SIZE","\xc1","\x07","\xfd","\x08")},
	{hx::fsInt,(void *) &GL_obj::VERTEX_ATTRIB_ARRAY_STRIDE,HX_HCSTRING("VERTEX_ATTRIB_ARRAY_STRIDE","\x19","\x2b","\x41","\x58")},
	{hx::fsInt,(void *) &GL_obj::VERTEX_ATTRIB_ARRAY_TYPE,HX_HCSTRING("VERTEX_ATTRIB_ARRAY_TYPE","\xba","\x59","\xb2","\x09")},
	{hx::fsInt,(void *) &GL_obj::VERTEX_ATTRIB_ARRAY_NORMALIZED,HX_HCSTRING("VERTEX_ATTRIB_ARRAY_NORMALIZED","\x37","\xb7","\x22","\x78")},
	{hx::fsInt,(void *) &GL_obj::VERTEX_ATTRIB_ARRAY_POINTER,HX_HCSTRING("VERTEX_ATTRIB_ARRAY_POINTER","\x9d","\x55","\xfa","\x38")},
	{hx::fsInt,(void *) &GL_obj::VERTEX_ATTRIB_ARRAY_BUFFER_BINDING,HX_HCSTRING("VERTEX_ATTRIB_ARRAY_BUFFER_BINDING","\xa6","\x80","\x67","\x97")},
	{hx::fsInt,(void *) &GL_obj::VERTEX_PROGRAM_POINT_SIZE,HX_HCSTRING("VERTEX_PROGRAM_POINT_SIZE","\xe6","\x56","\xbe","\x34")},
	{hx::fsInt,(void *) &GL_obj::POINT_SPRITE,HX_HCSTRING("POINT_SPRITE","\x74","\x93","\x5c","\x14")},
	{hx::fsInt,(void *) &GL_obj::COMPILE_STATUS,HX_HCSTRING("COMPILE_STATUS","\xde","\xcb","\x4e","\x8c")},
	{hx::fsInt,(void *) &GL_obj::LOW_FLOAT,HX_HCSTRING("LOW_FLOAT","\x31","\x04","\x74","\xe4")},
	{hx::fsInt,(void *) &GL_obj::MEDIUM_FLOAT,HX_HCSTRING("MEDIUM_FLOAT","\xf2","\x8a","\x46","\xb9")},
	{hx::fsInt,(void *) &GL_obj::HIGH_FLOAT,HX_HCSTRING("HIGH_FLOAT","\x9f","\xf9","\x3b","\x47")},
	{hx::fsInt,(void *) &GL_obj::LOW_INT,HX_HCSTRING("LOW_INT","\x44","\x28","\x70","\x45")},
	{hx::fsInt,(void *) &GL_obj::MEDIUM_INT,HX_HCSTRING("MEDIUM_INT","\xc5","\xcc","\xaf","\x4f")},
	{hx::fsInt,(void *) &GL_obj::HIGH_INT,HX_HCSTRING("HIGH_INT","\x32","\x46","\x02","\x09")},
	{hx::fsInt,(void *) &GL_obj::FRAMEBUFFER,HX_HCSTRING("FRAMEBUFFER","\xcd","\x20","\x84","\x50")},
	{hx::fsInt,(void *) &GL_obj::RENDERBUFFER,HX_HCSTRING("RENDERBUFFER","\xd6","\xa4","\xa4","\xa9")},
	{hx::fsInt,(void *) &GL_obj::RGBA4,HX_HCSTRING("RGBA4","\x00","\x05","\xfc","\x65")},
	{hx::fsInt,(void *) &GL_obj::RGB5_A1,HX_HCSTRING("RGB5_A1","\x47","\x8f","\xf9","\xd8")},
	{hx::fsInt,(void *) &GL_obj::RGB565,HX_HCSTRING("RGB565","\xe7","\x41","\x7f","\xd6")},
	{hx::fsInt,(void *) &GL_obj::DEPTH_COMPONENT16,HX_HCSTRING("DEPTH_COMPONENT16","\x26","\xcc","\x68","\x43")},
	{hx::fsInt,(void *) &GL_obj::STENCIL_INDEX,HX_HCSTRING("STENCIL_INDEX","\x0f","\x79","\xb6","\x97")},
	{hx::fsInt,(void *) &GL_obj::STENCIL_INDEX8,HX_HCSTRING("STENCIL_INDEX8","\x49","\x74","\xf3","\x27")},
	{hx::fsInt,(void *) &GL_obj::DEPTH_STENCIL,HX_HCSTRING("DEPTH_STENCIL","\x40","\x2f","\x20","\x2b")},
	{hx::fsInt,(void *) &GL_obj::RENDERBUFFER_WIDTH,HX_HCSTRING("RENDERBUFFER_WIDTH","\x7d","\x1e","\xe1","\x43")},
	{hx::fsInt,(void *) &GL_obj::RENDERBUFFER_HEIGHT,HX_HCSTRING("RENDERBUFFER_HEIGHT","\x70","\x07","\x69","\xd7")},
	{hx::fsInt,(void *) &GL_obj::RENDERBUFFER_INTERNAL_FORMAT,HX_HCSTRING("RENDERBUFFER_INTERNAL_FORMAT","\x90","\xda","\xeb","\xb5")},
	{hx::fsInt,(void *) &GL_obj::RENDERBUFFER_RED_SIZE,HX_HCSTRING("RENDERBUFFER_RED_SIZE","\x98","\xa5","\x58","\x5e")},
	{hx::fsInt,(void *) &GL_obj::RENDERBUFFER_GREEN_SIZE,HX_HCSTRING("RENDERBUFFER_GREEN_SIZE","\x26","\x9b","\x7d","\x3b")},
	{hx::fsInt,(void *) &GL_obj::RENDERBUFFER_BLUE_SIZE,HX_HCSTRING("RENDERBUFFER_BLUE_SIZE","\xdd","\x93","\x86","\xdd")},
	{hx::fsInt,(void *) &GL_obj::RENDERBUFFER_ALPHA_SIZE,HX_HCSTRING("RENDERBUFFER_ALPHA_SIZE","\xab","\xf0","\x5d","\x87")},
	{hx::fsInt,(void *) &GL_obj::RENDERBUFFER_DEPTH_SIZE,HX_HCSTRING("RENDERBUFFER_DEPTH_SIZE","\xe6","\x90","\x24","\xc3")},
	{hx::fsInt,(void *) &GL_obj::RENDERBUFFER_STENCIL_SIZE,HX_HCSTRING("RENDERBUFFER_STENCIL_SIZE","\x8d","\xd5","\x5a","\x9d")},
	{hx::fsInt,(void *) &GL_obj::FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE,HX_HCSTRING("FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE","\x50","\x22","\x44","\x50")},
	{hx::fsInt,(void *) &GL_obj::FRAMEBUFFER_ATTACHMENT_OBJECT_NAME,HX_HCSTRING("FRAMEBUFFER_ATTACHMENT_OBJECT_NAME","\xe1","\xa1","\x3a","\x4c")},
	{hx::fsInt,(void *) &GL_obj::FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL,HX_HCSTRING("FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL","\xf6","\x9b","\xba","\x81")},
	{hx::fsInt,(void *) &GL_obj::FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE,HX_HCSTRING("FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE","\xdc","\x4c","\x39","\x8a")},
	{hx::fsInt,(void *) &GL_obj::COLOR_ATTACHMENT0,HX_HCSTRING("COLOR_ATTACHMENT0","\xb1","\x9a","\xfe","\x86")},
	{hx::fsInt,(void *) &GL_obj::DEPTH_ATTACHMENT,HX_HCSTRING("DEPTH_ATTACHMENT","\xff","\x54","\xcd","\xe9")},
	{hx::fsInt,(void *) &GL_obj::STENCIL_ATTACHMENT,HX_HCSTRING("STENCIL_ATTACHMENT","\xa6","\x8c","\x28","\x01")},
	{hx::fsInt,(void *) &GL_obj::DEPTH_STENCIL_ATTACHMENT,HX_HCSTRING("DEPTH_STENCIL_ATTACHMENT","\xc2","\xe1","\xe1","\x9f")},
	{hx::fsInt,(void *) &GL_obj::NONE,HX_HCSTRING("NONE","\xb8","\xda","\xca","\x33")},
	{hx::fsInt,(void *) &GL_obj::FRAMEBUFFER_COMPLETE,HX_HCSTRING("FRAMEBUFFER_COMPLETE","\xab","\x65","\x7d","\xea")},
	{hx::fsInt,(void *) &GL_obj::FRAMEBUFFER_INCOMPLETE_ATTACHMENT,HX_HCSTRING("FRAMEBUFFER_INCOMPLETE_ATTACHMENT","\xf2","\xcf","\xb7","\x1d")},
	{hx::fsInt,(void *) &GL_obj::FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT,HX_HCSTRING("FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT","\x8b","\x0a","\xcd","\x77")},
	{hx::fsInt,(void *) &GL_obj::FRAMEBUFFER_INCOMPLETE_DIMENSIONS,HX_HCSTRING("FRAMEBUFFER_INCOMPLETE_DIMENSIONS","\x5c","\x86","\xe4","\x1c")},
	{hx::fsInt,(void *) &GL_obj::FRAMEBUFFER_UNSUPPORTED,HX_HCSTRING("FRAMEBUFFER_UNSUPPORTED","\xe3","\xa6","\x4e","\xc8")},
	{hx::fsInt,(void *) &GL_obj::FRAMEBUFFER_BINDING,HX_HCSTRING("FRAMEBUFFER_BINDING","\x73","\xee","\xae","\xc5")},
	{hx::fsInt,(void *) &GL_obj::RENDERBUFFER_BINDING,HX_HCSTRING("RENDERBUFFER_BINDING","\x7c","\x23","\x70","\x23")},
	{hx::fsInt,(void *) &GL_obj::MAX_RENDERBUFFER_SIZE,HX_HCSTRING("MAX_RENDERBUFFER_SIZE","\x4f","\xd4","\x3d","\x65")},
	{hx::fsInt,(void *) &GL_obj::INVALID_FRAMEBUFFER_OPERATION,HX_HCSTRING("INVALID_FRAMEBUFFER_OPERATION","\x2d","\xd4","\xc5","\x43")},
	{hx::fsInt,(void *) &GL_obj::UNPACK_FLIP_Y_WEBGL,HX_HCSTRING("UNPACK_FLIP_Y_WEBGL","\x0e","\x9f","\x94","\x9d")},
	{hx::fsInt,(void *) &GL_obj::UNPACK_PREMULTIPLY_ALPHA_WEBGL,HX_HCSTRING("UNPACK_PREMULTIPLY_ALPHA_WEBGL","\x73","\x5d","\xcb","\xc6")},
	{hx::fsInt,(void *) &GL_obj::CONTEXT_LOST_WEBGL,HX_HCSTRING("CONTEXT_LOST_WEBGL","\x6e","\x67","\x71","\x45")},
	{hx::fsInt,(void *) &GL_obj::UNPACK_COLORSPACE_CONVERSION_WEBGL,HX_HCSTRING("UNPACK_COLORSPACE_CONVERSION_WEBGL","\x9f","\xd9","\xf0","\xb9")},
	{hx::fsInt,(void *) &GL_obj::BROWSER_DEFAULT_WEBGL,HX_HCSTRING("BROWSER_DEFAULT_WEBGL","\x04","\x04","\x92","\xc0")},
	{hx::fsInt,(void *) &GL_obj::version,HX_HCSTRING("version","\x18","\xe7","\xf1","\x7c")},
	{hx::fsObject /*::lime::_backend::native::NativeGLRenderContext*/ ,(void *) &GL_obj::context,HX_HCSTRING("context","\xef","\x95","\x77","\x19")},
	{hx::fsObject /*::lime::graphics::opengl::GLProgram*/ ,(void *) &GL_obj::_hx___currentProgram,HX_HCSTRING("__currentProgram","\x6b","\x4a","\xcd","\x35")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static void GL_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(GL_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(GL_obj::DEPTH_BUFFER_BIT,"DEPTH_BUFFER_BIT");
	HX_MARK_MEMBER_NAME(GL_obj::STENCIL_BUFFER_BIT,"STENCIL_BUFFER_BIT");
	HX_MARK_MEMBER_NAME(GL_obj::COLOR_BUFFER_BIT,"COLOR_BUFFER_BIT");
	HX_MARK_MEMBER_NAME(GL_obj::POINTS,"POINTS");
	HX_MARK_MEMBER_NAME(GL_obj::LINES,"LINES");
	HX_MARK_MEMBER_NAME(GL_obj::LINE_LOOP,"LINE_LOOP");
	HX_MARK_MEMBER_NAME(GL_obj::LINE_STRIP,"LINE_STRIP");
	HX_MARK_MEMBER_NAME(GL_obj::TRIANGLES,"TRIANGLES");
	HX_MARK_MEMBER_NAME(GL_obj::TRIANGLE_STRIP,"TRIANGLE_STRIP");
	HX_MARK_MEMBER_NAME(GL_obj::TRIANGLE_FAN,"TRIANGLE_FAN");
	HX_MARK_MEMBER_NAME(GL_obj::ZERO,"ZERO");
	HX_MARK_MEMBER_NAME(GL_obj::ONE,"ONE");
	HX_MARK_MEMBER_NAME(GL_obj::SRC_COLOR,"SRC_COLOR");
	HX_MARK_MEMBER_NAME(GL_obj::ONE_MINUS_SRC_COLOR,"ONE_MINUS_SRC_COLOR");
	HX_MARK_MEMBER_NAME(GL_obj::SRC_ALPHA,"SRC_ALPHA");
	HX_MARK_MEMBER_NAME(GL_obj::ONE_MINUS_SRC_ALPHA,"ONE_MINUS_SRC_ALPHA");
	HX_MARK_MEMBER_NAME(GL_obj::DST_ALPHA,"DST_ALPHA");
	HX_MARK_MEMBER_NAME(GL_obj::ONE_MINUS_DST_ALPHA,"ONE_MINUS_DST_ALPHA");
	HX_MARK_MEMBER_NAME(GL_obj::DST_COLOR,"DST_COLOR");
	HX_MARK_MEMBER_NAME(GL_obj::ONE_MINUS_DST_COLOR,"ONE_MINUS_DST_COLOR");
	HX_MARK_MEMBER_NAME(GL_obj::SRC_ALPHA_SATURATE,"SRC_ALPHA_SATURATE");
	HX_MARK_MEMBER_NAME(GL_obj::FUNC_ADD,"FUNC_ADD");
	HX_MARK_MEMBER_NAME(GL_obj::BLEND_EQUATION,"BLEND_EQUATION");
	HX_MARK_MEMBER_NAME(GL_obj::BLEND_EQUATION_RGB,"BLEND_EQUATION_RGB");
	HX_MARK_MEMBER_NAME(GL_obj::BLEND_EQUATION_ALPHA,"BLEND_EQUATION_ALPHA");
	HX_MARK_MEMBER_NAME(GL_obj::FUNC_SUBTRACT,"FUNC_SUBTRACT");
	HX_MARK_MEMBER_NAME(GL_obj::FUNC_REVERSE_SUBTRACT,"FUNC_REVERSE_SUBTRACT");
	HX_MARK_MEMBER_NAME(GL_obj::BLEND_DST_RGB,"BLEND_DST_RGB");
	HX_MARK_MEMBER_NAME(GL_obj::BLEND_SRC_RGB,"BLEND_SRC_RGB");
	HX_MARK_MEMBER_NAME(GL_obj::BLEND_DST_ALPHA,"BLEND_DST_ALPHA");
	HX_MARK_MEMBER_NAME(GL_obj::BLEND_SRC_ALPHA,"BLEND_SRC_ALPHA");
	HX_MARK_MEMBER_NAME(GL_obj::CONSTANT_COLOR,"CONSTANT_COLOR");
	HX_MARK_MEMBER_NAME(GL_obj::ONE_MINUS_CONSTANT_COLOR,"ONE_MINUS_CONSTANT_COLOR");
	HX_MARK_MEMBER_NAME(GL_obj::CONSTANT_ALPHA,"CONSTANT_ALPHA");
	HX_MARK_MEMBER_NAME(GL_obj::ONE_MINUS_CONSTANT_ALPHA,"ONE_MINUS_CONSTANT_ALPHA");
	HX_MARK_MEMBER_NAME(GL_obj::BLEND_COLOR,"BLEND_COLOR");
	HX_MARK_MEMBER_NAME(GL_obj::ARRAY_BUFFER,"ARRAY_BUFFER");
	HX_MARK_MEMBER_NAME(GL_obj::ELEMENT_ARRAY_BUFFER,"ELEMENT_ARRAY_BUFFER");
	HX_MARK_MEMBER_NAME(GL_obj::ARRAY_BUFFER_BINDING,"ARRAY_BUFFER_BINDING");
	HX_MARK_MEMBER_NAME(GL_obj::ELEMENT_ARRAY_BUFFER_BINDING,"ELEMENT_ARRAY_BUFFER_BINDING");
	HX_MARK_MEMBER_NAME(GL_obj::STREAM_DRAW,"STREAM_DRAW");
	HX_MARK_MEMBER_NAME(GL_obj::STATIC_DRAW,"STATIC_DRAW");
	HX_MARK_MEMBER_NAME(GL_obj::DYNAMIC_DRAW,"DYNAMIC_DRAW");
	HX_MARK_MEMBER_NAME(GL_obj::BUFFER_SIZE,"BUFFER_SIZE");
	HX_MARK_MEMBER_NAME(GL_obj::BUFFER_USAGE,"BUFFER_USAGE");
	HX_MARK_MEMBER_NAME(GL_obj::CURRENT_VERTEX_ATTRIB,"CURRENT_VERTEX_ATTRIB");
	HX_MARK_MEMBER_NAME(GL_obj::FRONT,"FRONT");
	HX_MARK_MEMBER_NAME(GL_obj::BACK,"BACK");
	HX_MARK_MEMBER_NAME(GL_obj::FRONT_AND_BACK,"FRONT_AND_BACK");
	HX_MARK_MEMBER_NAME(GL_obj::CULL_FACE,"CULL_FACE");
	HX_MARK_MEMBER_NAME(GL_obj::BLEND,"BLEND");
	HX_MARK_MEMBER_NAME(GL_obj::DITHER,"DITHER");
	HX_MARK_MEMBER_NAME(GL_obj::STENCIL_TEST,"STENCIL_TEST");
	HX_MARK_MEMBER_NAME(GL_obj::DEPTH_TEST,"DEPTH_TEST");
	HX_MARK_MEMBER_NAME(GL_obj::SCISSOR_TEST,"SCISSOR_TEST");
	HX_MARK_MEMBER_NAME(GL_obj::POLYGON_OFFSET_FILL,"POLYGON_OFFSET_FILL");
	HX_MARK_MEMBER_NAME(GL_obj::SAMPLE_ALPHA_TO_COVERAGE,"SAMPLE_ALPHA_TO_COVERAGE");
	HX_MARK_MEMBER_NAME(GL_obj::SAMPLE_COVERAGE,"SAMPLE_COVERAGE");
	HX_MARK_MEMBER_NAME(GL_obj::NO_ERROR,"NO_ERROR");
	HX_MARK_MEMBER_NAME(GL_obj::INVALID_ENUM,"INVALID_ENUM");
	HX_MARK_MEMBER_NAME(GL_obj::INVALID_VALUE,"INVALID_VALUE");
	HX_MARK_MEMBER_NAME(GL_obj::INVALID_OPERATION,"INVALID_OPERATION");
	HX_MARK_MEMBER_NAME(GL_obj::OUT_OF_MEMORY,"OUT_OF_MEMORY");
	HX_MARK_MEMBER_NAME(GL_obj::CW,"CW");
	HX_MARK_MEMBER_NAME(GL_obj::CCW,"CCW");
	HX_MARK_MEMBER_NAME(GL_obj::LINE_WIDTH,"LINE_WIDTH");
	HX_MARK_MEMBER_NAME(GL_obj::ALIASED_POINT_SIZE_RANGE,"ALIASED_POINT_SIZE_RANGE");
	HX_MARK_MEMBER_NAME(GL_obj::ALIASED_LINE_WIDTH_RANGE,"ALIASED_LINE_WIDTH_RANGE");
	HX_MARK_MEMBER_NAME(GL_obj::CULL_FACE_MODE,"CULL_FACE_MODE");
	HX_MARK_MEMBER_NAME(GL_obj::FRONT_FACE,"FRONT_FACE");
	HX_MARK_MEMBER_NAME(GL_obj::DEPTH_RANGE,"DEPTH_RANGE");
	HX_MARK_MEMBER_NAME(GL_obj::DEPTH_WRITEMASK,"DEPTH_WRITEMASK");
	HX_MARK_MEMBER_NAME(GL_obj::DEPTH_CLEAR_VALUE,"DEPTH_CLEAR_VALUE");
	HX_MARK_MEMBER_NAME(GL_obj::DEPTH_FUNC,"DEPTH_FUNC");
	HX_MARK_MEMBER_NAME(GL_obj::STENCIL_CLEAR_VALUE,"STENCIL_CLEAR_VALUE");
	HX_MARK_MEMBER_NAME(GL_obj::STENCIL_FUNC,"STENCIL_FUNC");
	HX_MARK_MEMBER_NAME(GL_obj::STENCIL_FAIL,"STENCIL_FAIL");
	HX_MARK_MEMBER_NAME(GL_obj::STENCIL_PASS_DEPTH_FAIL,"STENCIL_PASS_DEPTH_FAIL");
	HX_MARK_MEMBER_NAME(GL_obj::STENCIL_PASS_DEPTH_PASS,"STENCIL_PASS_DEPTH_PASS");
	HX_MARK_MEMBER_NAME(GL_obj::STENCIL_REF,"STENCIL_REF");
	HX_MARK_MEMBER_NAME(GL_obj::STENCIL_VALUE_MASK,"STENCIL_VALUE_MASK");
	HX_MARK_MEMBER_NAME(GL_obj::STENCIL_WRITEMASK,"STENCIL_WRITEMASK");
	HX_MARK_MEMBER_NAME(GL_obj::STENCIL_BACK_FUNC,"STENCIL_BACK_FUNC");
	HX_MARK_MEMBER_NAME(GL_obj::STENCIL_BACK_FAIL,"STENCIL_BACK_FAIL");
	HX_MARK_MEMBER_NAME(GL_obj::STENCIL_BACK_PASS_DEPTH_FAIL,"STENCIL_BACK_PASS_DEPTH_FAIL");
	HX_MARK_MEMBER_NAME(GL_obj::STENCIL_BACK_PASS_DEPTH_PASS,"STENCIL_BACK_PASS_DEPTH_PASS");
	HX_MARK_MEMBER_NAME(GL_obj::STENCIL_BACK_REF,"STENCIL_BACK_REF");
	HX_MARK_MEMBER_NAME(GL_obj::STENCIL_BACK_VALUE_MASK,"STENCIL_BACK_VALUE_MASK");
	HX_MARK_MEMBER_NAME(GL_obj::STENCIL_BACK_WRITEMASK,"STENCIL_BACK_WRITEMASK");
	HX_MARK_MEMBER_NAME(GL_obj::VIEWPORT,"VIEWPORT");
	HX_MARK_MEMBER_NAME(GL_obj::SCISSOR_BOX,"SCISSOR_BOX");
	HX_MARK_MEMBER_NAME(GL_obj::COLOR_CLEAR_VALUE,"COLOR_CLEAR_VALUE");
	HX_MARK_MEMBER_NAME(GL_obj::COLOR_WRITEMASK,"COLOR_WRITEMASK");
	HX_MARK_MEMBER_NAME(GL_obj::UNPACK_ALIGNMENT,"UNPACK_ALIGNMENT");
	HX_MARK_MEMBER_NAME(GL_obj::PACK_ALIGNMENT,"PACK_ALIGNMENT");
	HX_MARK_MEMBER_NAME(GL_obj::MAX_TEXTURE_SIZE,"MAX_TEXTURE_SIZE");
	HX_MARK_MEMBER_NAME(GL_obj::MAX_VIEWPORT_DIMS,"MAX_VIEWPORT_DIMS");
	HX_MARK_MEMBER_NAME(GL_obj::SUBPIXEL_BITS,"SUBPIXEL_BITS");
	HX_MARK_MEMBER_NAME(GL_obj::RED_BITS,"RED_BITS");
	HX_MARK_MEMBER_NAME(GL_obj::GREEN_BITS,"GREEN_BITS");
	HX_MARK_MEMBER_NAME(GL_obj::BLUE_BITS,"BLUE_BITS");
	HX_MARK_MEMBER_NAME(GL_obj::ALPHA_BITS,"ALPHA_BITS");
	HX_MARK_MEMBER_NAME(GL_obj::DEPTH_BITS,"DEPTH_BITS");
	HX_MARK_MEMBER_NAME(GL_obj::STENCIL_BITS,"STENCIL_BITS");
	HX_MARK_MEMBER_NAME(GL_obj::POLYGON_OFFSET_UNITS,"POLYGON_OFFSET_UNITS");
	HX_MARK_MEMBER_NAME(GL_obj::POLYGON_OFFSET_FACTOR,"POLYGON_OFFSET_FACTOR");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE_BINDING_2D,"TEXTURE_BINDING_2D");
	HX_MARK_MEMBER_NAME(GL_obj::SAMPLE_BUFFERS,"SAMPLE_BUFFERS");
	HX_MARK_MEMBER_NAME(GL_obj::SAMPLES,"SAMPLES");
	HX_MARK_MEMBER_NAME(GL_obj::SAMPLE_COVERAGE_VALUE,"SAMPLE_COVERAGE_VALUE");
	HX_MARK_MEMBER_NAME(GL_obj::SAMPLE_COVERAGE_INVERT,"SAMPLE_COVERAGE_INVERT");
	HX_MARK_MEMBER_NAME(GL_obj::COMPRESSED_TEXTURE_FORMATS,"COMPRESSED_TEXTURE_FORMATS");
	HX_MARK_MEMBER_NAME(GL_obj::DONT_CARE,"DONT_CARE");
	HX_MARK_MEMBER_NAME(GL_obj::FASTEST,"FASTEST");
	HX_MARK_MEMBER_NAME(GL_obj::NICEST,"NICEST");
	HX_MARK_MEMBER_NAME(GL_obj::GENERATE_MIPMAP_HINT,"GENERATE_MIPMAP_HINT");
	HX_MARK_MEMBER_NAME(GL_obj::BYTE,"BYTE");
	HX_MARK_MEMBER_NAME(GL_obj::UNSIGNED_BYTE,"UNSIGNED_BYTE");
	HX_MARK_MEMBER_NAME(GL_obj::SHORT,"SHORT");
	HX_MARK_MEMBER_NAME(GL_obj::UNSIGNED_SHORT,"UNSIGNED_SHORT");
	HX_MARK_MEMBER_NAME(GL_obj::INT,"INT");
	HX_MARK_MEMBER_NAME(GL_obj::UNSIGNED_INT,"UNSIGNED_INT");
	HX_MARK_MEMBER_NAME(GL_obj::FLOAT,"FLOAT");
	HX_MARK_MEMBER_NAME(GL_obj::DEPTH_COMPONENT,"DEPTH_COMPONENT");
	HX_MARK_MEMBER_NAME(GL_obj::ALPHA,"ALPHA");
	HX_MARK_MEMBER_NAME(GL_obj::RGB,"RGB");
	HX_MARK_MEMBER_NAME(GL_obj::RGBA,"RGBA");
	HX_MARK_MEMBER_NAME(GL_obj::BGR_EXT,"BGR_EXT");
	HX_MARK_MEMBER_NAME(GL_obj::BGRA_EXT,"BGRA_EXT");
	HX_MARK_MEMBER_NAME(GL_obj::LUMINANCE,"LUMINANCE");
	HX_MARK_MEMBER_NAME(GL_obj::LUMINANCE_ALPHA,"LUMINANCE_ALPHA");
	HX_MARK_MEMBER_NAME(GL_obj::UNSIGNED_SHORT_4_4_4_4,"UNSIGNED_SHORT_4_4_4_4");
	HX_MARK_MEMBER_NAME(GL_obj::UNSIGNED_SHORT_5_5_5_1,"UNSIGNED_SHORT_5_5_5_1");
	HX_MARK_MEMBER_NAME(GL_obj::UNSIGNED_SHORT_5_6_5,"UNSIGNED_SHORT_5_6_5");
	HX_MARK_MEMBER_NAME(GL_obj::FRAGMENT_SHADER,"FRAGMENT_SHADER");
	HX_MARK_MEMBER_NAME(GL_obj::VERTEX_SHADER,"VERTEX_SHADER");
	HX_MARK_MEMBER_NAME(GL_obj::MAX_VERTEX_ATTRIBS,"MAX_VERTEX_ATTRIBS");
	HX_MARK_MEMBER_NAME(GL_obj::MAX_VERTEX_UNIFORM_VECTORS,"MAX_VERTEX_UNIFORM_VECTORS");
	HX_MARK_MEMBER_NAME(GL_obj::MAX_VARYING_VECTORS,"MAX_VARYING_VECTORS");
	HX_MARK_MEMBER_NAME(GL_obj::MAX_COMBINED_TEXTURE_IMAGE_UNITS,"MAX_COMBINED_TEXTURE_IMAGE_UNITS");
	HX_MARK_MEMBER_NAME(GL_obj::MAX_VERTEX_TEXTURE_IMAGE_UNITS,"MAX_VERTEX_TEXTURE_IMAGE_UNITS");
	HX_MARK_MEMBER_NAME(GL_obj::MAX_TEXTURE_IMAGE_UNITS,"MAX_TEXTURE_IMAGE_UNITS");
	HX_MARK_MEMBER_NAME(GL_obj::MAX_FRAGMENT_UNIFORM_VECTORS,"MAX_FRAGMENT_UNIFORM_VECTORS");
	HX_MARK_MEMBER_NAME(GL_obj::SHADER_TYPE,"SHADER_TYPE");
	HX_MARK_MEMBER_NAME(GL_obj::DELETE_STATUS,"DELETE_STATUS");
	HX_MARK_MEMBER_NAME(GL_obj::LINK_STATUS,"LINK_STATUS");
	HX_MARK_MEMBER_NAME(GL_obj::VALIDATE_STATUS,"VALIDATE_STATUS");
	HX_MARK_MEMBER_NAME(GL_obj::ATTACHED_SHADERS,"ATTACHED_SHADERS");
	HX_MARK_MEMBER_NAME(GL_obj::ACTIVE_UNIFORMS,"ACTIVE_UNIFORMS");
	HX_MARK_MEMBER_NAME(GL_obj::ACTIVE_ATTRIBUTES,"ACTIVE_ATTRIBUTES");
	HX_MARK_MEMBER_NAME(GL_obj::SHADING_LANGUAGE_VERSION,"SHADING_LANGUAGE_VERSION");
	HX_MARK_MEMBER_NAME(GL_obj::CURRENT_PROGRAM,"CURRENT_PROGRAM");
	HX_MARK_MEMBER_NAME(GL_obj::NEVER,"NEVER");
	HX_MARK_MEMBER_NAME(GL_obj::LESS,"LESS");
	HX_MARK_MEMBER_NAME(GL_obj::EQUAL,"EQUAL");
	HX_MARK_MEMBER_NAME(GL_obj::LEQUAL,"LEQUAL");
	HX_MARK_MEMBER_NAME(GL_obj::GREATER,"GREATER");
	HX_MARK_MEMBER_NAME(GL_obj::NOTEQUAL,"NOTEQUAL");
	HX_MARK_MEMBER_NAME(GL_obj::GEQUAL,"GEQUAL");
	HX_MARK_MEMBER_NAME(GL_obj::ALWAYS,"ALWAYS");
	HX_MARK_MEMBER_NAME(GL_obj::KEEP,"KEEP");
	HX_MARK_MEMBER_NAME(GL_obj::REPLACE,"REPLACE");
	HX_MARK_MEMBER_NAME(GL_obj::INCR,"INCR");
	HX_MARK_MEMBER_NAME(GL_obj::DECR,"DECR");
	HX_MARK_MEMBER_NAME(GL_obj::INVERT,"INVERT");
	HX_MARK_MEMBER_NAME(GL_obj::INCR_WRAP,"INCR_WRAP");
	HX_MARK_MEMBER_NAME(GL_obj::DECR_WRAP,"DECR_WRAP");
	HX_MARK_MEMBER_NAME(GL_obj::VENDOR,"VENDOR");
	HX_MARK_MEMBER_NAME(GL_obj::RENDERER,"RENDERER");
	HX_MARK_MEMBER_NAME(GL_obj::VERSION,"VERSION");
	HX_MARK_MEMBER_NAME(GL_obj::NEAREST,"NEAREST");
	HX_MARK_MEMBER_NAME(GL_obj::LINEAR,"LINEAR");
	HX_MARK_MEMBER_NAME(GL_obj::NEAREST_MIPMAP_NEAREST,"NEAREST_MIPMAP_NEAREST");
	HX_MARK_MEMBER_NAME(GL_obj::LINEAR_MIPMAP_NEAREST,"LINEAR_MIPMAP_NEAREST");
	HX_MARK_MEMBER_NAME(GL_obj::NEAREST_MIPMAP_LINEAR,"NEAREST_MIPMAP_LINEAR");
	HX_MARK_MEMBER_NAME(GL_obj::LINEAR_MIPMAP_LINEAR,"LINEAR_MIPMAP_LINEAR");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE_MAG_FILTER,"TEXTURE_MAG_FILTER");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE_MIN_FILTER,"TEXTURE_MIN_FILTER");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE_WRAP_S,"TEXTURE_WRAP_S");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE_WRAP_T,"TEXTURE_WRAP_T");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE_2D,"TEXTURE_2D");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE,"TEXTURE");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE_CUBE_MAP,"TEXTURE_CUBE_MAP");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE_BINDING_CUBE_MAP,"TEXTURE_BINDING_CUBE_MAP");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE_CUBE_MAP_POSITIVE_X,"TEXTURE_CUBE_MAP_POSITIVE_X");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE_CUBE_MAP_NEGATIVE_X,"TEXTURE_CUBE_MAP_NEGATIVE_X");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE_CUBE_MAP_POSITIVE_Y,"TEXTURE_CUBE_MAP_POSITIVE_Y");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE_CUBE_MAP_NEGATIVE_Y,"TEXTURE_CUBE_MAP_NEGATIVE_Y");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE_CUBE_MAP_POSITIVE_Z,"TEXTURE_CUBE_MAP_POSITIVE_Z");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE_CUBE_MAP_NEGATIVE_Z,"TEXTURE_CUBE_MAP_NEGATIVE_Z");
	HX_MARK_MEMBER_NAME(GL_obj::MAX_CUBE_MAP_TEXTURE_SIZE,"MAX_CUBE_MAP_TEXTURE_SIZE");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE0,"TEXTURE0");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE1,"TEXTURE1");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE2,"TEXTURE2");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE3,"TEXTURE3");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE4,"TEXTURE4");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE5,"TEXTURE5");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE6,"TEXTURE6");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE7,"TEXTURE7");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE8,"TEXTURE8");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE9,"TEXTURE9");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE10,"TEXTURE10");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE11,"TEXTURE11");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE12,"TEXTURE12");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE13,"TEXTURE13");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE14,"TEXTURE14");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE15,"TEXTURE15");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE16,"TEXTURE16");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE17,"TEXTURE17");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE18,"TEXTURE18");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE19,"TEXTURE19");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE20,"TEXTURE20");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE21,"TEXTURE21");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE22,"TEXTURE22");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE23,"TEXTURE23");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE24,"TEXTURE24");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE25,"TEXTURE25");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE26,"TEXTURE26");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE27,"TEXTURE27");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE28,"TEXTURE28");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE29,"TEXTURE29");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE30,"TEXTURE30");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE31,"TEXTURE31");
	HX_MARK_MEMBER_NAME(GL_obj::ACTIVE_TEXTURE,"ACTIVE_TEXTURE");
	HX_MARK_MEMBER_NAME(GL_obj::REPEAT,"REPEAT");
	HX_MARK_MEMBER_NAME(GL_obj::CLAMP_TO_EDGE,"CLAMP_TO_EDGE");
	HX_MARK_MEMBER_NAME(GL_obj::MIRRORED_REPEAT,"MIRRORED_REPEAT");
	HX_MARK_MEMBER_NAME(GL_obj::FLOAT_VEC2,"FLOAT_VEC2");
	HX_MARK_MEMBER_NAME(GL_obj::FLOAT_VEC3,"FLOAT_VEC3");
	HX_MARK_MEMBER_NAME(GL_obj::FLOAT_VEC4,"FLOAT_VEC4");
	HX_MARK_MEMBER_NAME(GL_obj::INT_VEC2,"INT_VEC2");
	HX_MARK_MEMBER_NAME(GL_obj::INT_VEC3,"INT_VEC3");
	HX_MARK_MEMBER_NAME(GL_obj::INT_VEC4,"INT_VEC4");
	HX_MARK_MEMBER_NAME(GL_obj::BOOL,"BOOL");
	HX_MARK_MEMBER_NAME(GL_obj::BOOL_VEC2,"BOOL_VEC2");
	HX_MARK_MEMBER_NAME(GL_obj::BOOL_VEC3,"BOOL_VEC3");
	HX_MARK_MEMBER_NAME(GL_obj::BOOL_VEC4,"BOOL_VEC4");
	HX_MARK_MEMBER_NAME(GL_obj::FLOAT_MAT2,"FLOAT_MAT2");
	HX_MARK_MEMBER_NAME(GL_obj::FLOAT_MAT3,"FLOAT_MAT3");
	HX_MARK_MEMBER_NAME(GL_obj::FLOAT_MAT4,"FLOAT_MAT4");
	HX_MARK_MEMBER_NAME(GL_obj::SAMPLER_2D,"SAMPLER_2D");
	HX_MARK_MEMBER_NAME(GL_obj::SAMPLER_CUBE,"SAMPLER_CUBE");
	HX_MARK_MEMBER_NAME(GL_obj::VERTEX_ATTRIB_ARRAY_ENABLED,"VERTEX_ATTRIB_ARRAY_ENABLED");
	HX_MARK_MEMBER_NAME(GL_obj::VERTEX_ATTRIB_ARRAY_SIZE,"VERTEX_ATTRIB_ARRAY_SIZE");
	HX_MARK_MEMBER_NAME(GL_obj::VERTEX_ATTRIB_ARRAY_STRIDE,"VERTEX_ATTRIB_ARRAY_STRIDE");
	HX_MARK_MEMBER_NAME(GL_obj::VERTEX_ATTRIB_ARRAY_TYPE,"VERTEX_ATTRIB_ARRAY_TYPE");
	HX_MARK_MEMBER_NAME(GL_obj::VERTEX_ATTRIB_ARRAY_NORMALIZED,"VERTEX_ATTRIB_ARRAY_NORMALIZED");
	HX_MARK_MEMBER_NAME(GL_obj::VERTEX_ATTRIB_ARRAY_POINTER,"VERTEX_ATTRIB_ARRAY_POINTER");
	HX_MARK_MEMBER_NAME(GL_obj::VERTEX_ATTRIB_ARRAY_BUFFER_BINDING,"VERTEX_ATTRIB_ARRAY_BUFFER_BINDING");
	HX_MARK_MEMBER_NAME(GL_obj::VERTEX_PROGRAM_POINT_SIZE,"VERTEX_PROGRAM_POINT_SIZE");
	HX_MARK_MEMBER_NAME(GL_obj::POINT_SPRITE,"POINT_SPRITE");
	HX_MARK_MEMBER_NAME(GL_obj::COMPILE_STATUS,"COMPILE_STATUS");
	HX_MARK_MEMBER_NAME(GL_obj::LOW_FLOAT,"LOW_FLOAT");
	HX_MARK_MEMBER_NAME(GL_obj::MEDIUM_FLOAT,"MEDIUM_FLOAT");
	HX_MARK_MEMBER_NAME(GL_obj::HIGH_FLOAT,"HIGH_FLOAT");
	HX_MARK_MEMBER_NAME(GL_obj::LOW_INT,"LOW_INT");
	HX_MARK_MEMBER_NAME(GL_obj::MEDIUM_INT,"MEDIUM_INT");
	HX_MARK_MEMBER_NAME(GL_obj::HIGH_INT,"HIGH_INT");
	HX_MARK_MEMBER_NAME(GL_obj::FRAMEBUFFER,"FRAMEBUFFER");
	HX_MARK_MEMBER_NAME(GL_obj::RENDERBUFFER,"RENDERBUFFER");
	HX_MARK_MEMBER_NAME(GL_obj::RGBA4,"RGBA4");
	HX_MARK_MEMBER_NAME(GL_obj::RGB5_A1,"RGB5_A1");
	HX_MARK_MEMBER_NAME(GL_obj::RGB565,"RGB565");
	HX_MARK_MEMBER_NAME(GL_obj::DEPTH_COMPONENT16,"DEPTH_COMPONENT16");
	HX_MARK_MEMBER_NAME(GL_obj::STENCIL_INDEX,"STENCIL_INDEX");
	HX_MARK_MEMBER_NAME(GL_obj::STENCIL_INDEX8,"STENCIL_INDEX8");
	HX_MARK_MEMBER_NAME(GL_obj::DEPTH_STENCIL,"DEPTH_STENCIL");
	HX_MARK_MEMBER_NAME(GL_obj::RENDERBUFFER_WIDTH,"RENDERBUFFER_WIDTH");
	HX_MARK_MEMBER_NAME(GL_obj::RENDERBUFFER_HEIGHT,"RENDERBUFFER_HEIGHT");
	HX_MARK_MEMBER_NAME(GL_obj::RENDERBUFFER_INTERNAL_FORMAT,"RENDERBUFFER_INTERNAL_FORMAT");
	HX_MARK_MEMBER_NAME(GL_obj::RENDERBUFFER_RED_SIZE,"RENDERBUFFER_RED_SIZE");
	HX_MARK_MEMBER_NAME(GL_obj::RENDERBUFFER_GREEN_SIZE,"RENDERBUFFER_GREEN_SIZE");
	HX_MARK_MEMBER_NAME(GL_obj::RENDERBUFFER_BLUE_SIZE,"RENDERBUFFER_BLUE_SIZE");
	HX_MARK_MEMBER_NAME(GL_obj::RENDERBUFFER_ALPHA_SIZE,"RENDERBUFFER_ALPHA_SIZE");
	HX_MARK_MEMBER_NAME(GL_obj::RENDERBUFFER_DEPTH_SIZE,"RENDERBUFFER_DEPTH_SIZE");
	HX_MARK_MEMBER_NAME(GL_obj::RENDERBUFFER_STENCIL_SIZE,"RENDERBUFFER_STENCIL_SIZE");
	HX_MARK_MEMBER_NAME(GL_obj::FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE,"FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE");
	HX_MARK_MEMBER_NAME(GL_obj::FRAMEBUFFER_ATTACHMENT_OBJECT_NAME,"FRAMEBUFFER_ATTACHMENT_OBJECT_NAME");
	HX_MARK_MEMBER_NAME(GL_obj::FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL,"FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL");
	HX_MARK_MEMBER_NAME(GL_obj::FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE,"FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE");
	HX_MARK_MEMBER_NAME(GL_obj::COLOR_ATTACHMENT0,"COLOR_ATTACHMENT0");
	HX_MARK_MEMBER_NAME(GL_obj::DEPTH_ATTACHMENT,"DEPTH_ATTACHMENT");
	HX_MARK_MEMBER_NAME(GL_obj::STENCIL_ATTACHMENT,"STENCIL_ATTACHMENT");
	HX_MARK_MEMBER_NAME(GL_obj::DEPTH_STENCIL_ATTACHMENT,"DEPTH_STENCIL_ATTACHMENT");
	HX_MARK_MEMBER_NAME(GL_obj::NONE,"NONE");
	HX_MARK_MEMBER_NAME(GL_obj::FRAMEBUFFER_COMPLETE,"FRAMEBUFFER_COMPLETE");
	HX_MARK_MEMBER_NAME(GL_obj::FRAMEBUFFER_INCOMPLETE_ATTACHMENT,"FRAMEBUFFER_INCOMPLETE_ATTACHMENT");
	HX_MARK_MEMBER_NAME(GL_obj::FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT,"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT");
	HX_MARK_MEMBER_NAME(GL_obj::FRAMEBUFFER_INCOMPLETE_DIMENSIONS,"FRAMEBUFFER_INCOMPLETE_DIMENSIONS");
	HX_MARK_MEMBER_NAME(GL_obj::FRAMEBUFFER_UNSUPPORTED,"FRAMEBUFFER_UNSUPPORTED");
	HX_MARK_MEMBER_NAME(GL_obj::FRAMEBUFFER_BINDING,"FRAMEBUFFER_BINDING");
	HX_MARK_MEMBER_NAME(GL_obj::RENDERBUFFER_BINDING,"RENDERBUFFER_BINDING");
	HX_MARK_MEMBER_NAME(GL_obj::MAX_RENDERBUFFER_SIZE,"MAX_RENDERBUFFER_SIZE");
	HX_MARK_MEMBER_NAME(GL_obj::INVALID_FRAMEBUFFER_OPERATION,"INVALID_FRAMEBUFFER_OPERATION");
	HX_MARK_MEMBER_NAME(GL_obj::UNPACK_FLIP_Y_WEBGL,"UNPACK_FLIP_Y_WEBGL");
	HX_MARK_MEMBER_NAME(GL_obj::UNPACK_PREMULTIPLY_ALPHA_WEBGL,"UNPACK_PREMULTIPLY_ALPHA_WEBGL");
	HX_MARK_MEMBER_NAME(GL_obj::CONTEXT_LOST_WEBGL,"CONTEXT_LOST_WEBGL");
	HX_MARK_MEMBER_NAME(GL_obj::UNPACK_COLORSPACE_CONVERSION_WEBGL,"UNPACK_COLORSPACE_CONVERSION_WEBGL");
	HX_MARK_MEMBER_NAME(GL_obj::BROWSER_DEFAULT_WEBGL,"BROWSER_DEFAULT_WEBGL");
	HX_MARK_MEMBER_NAME(GL_obj::version,"version");
	HX_MARK_MEMBER_NAME(GL_obj::context,"context");
	HX_MARK_MEMBER_NAME(GL_obj::_hx___currentProgram,"__currentProgram");
};

#ifdef HXCPP_VISIT_ALLOCS
static void GL_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(GL_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(GL_obj::DEPTH_BUFFER_BIT,"DEPTH_BUFFER_BIT");
	HX_VISIT_MEMBER_NAME(GL_obj::STENCIL_BUFFER_BIT,"STENCIL_BUFFER_BIT");
	HX_VISIT_MEMBER_NAME(GL_obj::COLOR_BUFFER_BIT,"COLOR_BUFFER_BIT");
	HX_VISIT_MEMBER_NAME(GL_obj::POINTS,"POINTS");
	HX_VISIT_MEMBER_NAME(GL_obj::LINES,"LINES");
	HX_VISIT_MEMBER_NAME(GL_obj::LINE_LOOP,"LINE_LOOP");
	HX_VISIT_MEMBER_NAME(GL_obj::LINE_STRIP,"LINE_STRIP");
	HX_VISIT_MEMBER_NAME(GL_obj::TRIANGLES,"TRIANGLES");
	HX_VISIT_MEMBER_NAME(GL_obj::TRIANGLE_STRIP,"TRIANGLE_STRIP");
	HX_VISIT_MEMBER_NAME(GL_obj::TRIANGLE_FAN,"TRIANGLE_FAN");
	HX_VISIT_MEMBER_NAME(GL_obj::ZERO,"ZERO");
	HX_VISIT_MEMBER_NAME(GL_obj::ONE,"ONE");
	HX_VISIT_MEMBER_NAME(GL_obj::SRC_COLOR,"SRC_COLOR");
	HX_VISIT_MEMBER_NAME(GL_obj::ONE_MINUS_SRC_COLOR,"ONE_MINUS_SRC_COLOR");
	HX_VISIT_MEMBER_NAME(GL_obj::SRC_ALPHA,"SRC_ALPHA");
	HX_VISIT_MEMBER_NAME(GL_obj::ONE_MINUS_SRC_ALPHA,"ONE_MINUS_SRC_ALPHA");
	HX_VISIT_MEMBER_NAME(GL_obj::DST_ALPHA,"DST_ALPHA");
	HX_VISIT_MEMBER_NAME(GL_obj::ONE_MINUS_DST_ALPHA,"ONE_MINUS_DST_ALPHA");
	HX_VISIT_MEMBER_NAME(GL_obj::DST_COLOR,"DST_COLOR");
	HX_VISIT_MEMBER_NAME(GL_obj::ONE_MINUS_DST_COLOR,"ONE_MINUS_DST_COLOR");
	HX_VISIT_MEMBER_NAME(GL_obj::SRC_ALPHA_SATURATE,"SRC_ALPHA_SATURATE");
	HX_VISIT_MEMBER_NAME(GL_obj::FUNC_ADD,"FUNC_ADD");
	HX_VISIT_MEMBER_NAME(GL_obj::BLEND_EQUATION,"BLEND_EQUATION");
	HX_VISIT_MEMBER_NAME(GL_obj::BLEND_EQUATION_RGB,"BLEND_EQUATION_RGB");
	HX_VISIT_MEMBER_NAME(GL_obj::BLEND_EQUATION_ALPHA,"BLEND_EQUATION_ALPHA");
	HX_VISIT_MEMBER_NAME(GL_obj::FUNC_SUBTRACT,"FUNC_SUBTRACT");
	HX_VISIT_MEMBER_NAME(GL_obj::FUNC_REVERSE_SUBTRACT,"FUNC_REVERSE_SUBTRACT");
	HX_VISIT_MEMBER_NAME(GL_obj::BLEND_DST_RGB,"BLEND_DST_RGB");
	HX_VISIT_MEMBER_NAME(GL_obj::BLEND_SRC_RGB,"BLEND_SRC_RGB");
	HX_VISIT_MEMBER_NAME(GL_obj::BLEND_DST_ALPHA,"BLEND_DST_ALPHA");
	HX_VISIT_MEMBER_NAME(GL_obj::BLEND_SRC_ALPHA,"BLEND_SRC_ALPHA");
	HX_VISIT_MEMBER_NAME(GL_obj::CONSTANT_COLOR,"CONSTANT_COLOR");
	HX_VISIT_MEMBER_NAME(GL_obj::ONE_MINUS_CONSTANT_COLOR,"ONE_MINUS_CONSTANT_COLOR");
	HX_VISIT_MEMBER_NAME(GL_obj::CONSTANT_ALPHA,"CONSTANT_ALPHA");
	HX_VISIT_MEMBER_NAME(GL_obj::ONE_MINUS_CONSTANT_ALPHA,"ONE_MINUS_CONSTANT_ALPHA");
	HX_VISIT_MEMBER_NAME(GL_obj::BLEND_COLOR,"BLEND_COLOR");
	HX_VISIT_MEMBER_NAME(GL_obj::ARRAY_BUFFER,"ARRAY_BUFFER");
	HX_VISIT_MEMBER_NAME(GL_obj::ELEMENT_ARRAY_BUFFER,"ELEMENT_ARRAY_BUFFER");
	HX_VISIT_MEMBER_NAME(GL_obj::ARRAY_BUFFER_BINDING,"ARRAY_BUFFER_BINDING");
	HX_VISIT_MEMBER_NAME(GL_obj::ELEMENT_ARRAY_BUFFER_BINDING,"ELEMENT_ARRAY_BUFFER_BINDING");
	HX_VISIT_MEMBER_NAME(GL_obj::STREAM_DRAW,"STREAM_DRAW");
	HX_VISIT_MEMBER_NAME(GL_obj::STATIC_DRAW,"STATIC_DRAW");
	HX_VISIT_MEMBER_NAME(GL_obj::DYNAMIC_DRAW,"DYNAMIC_DRAW");
	HX_VISIT_MEMBER_NAME(GL_obj::BUFFER_SIZE,"BUFFER_SIZE");
	HX_VISIT_MEMBER_NAME(GL_obj::BUFFER_USAGE,"BUFFER_USAGE");
	HX_VISIT_MEMBER_NAME(GL_obj::CURRENT_VERTEX_ATTRIB,"CURRENT_VERTEX_ATTRIB");
	HX_VISIT_MEMBER_NAME(GL_obj::FRONT,"FRONT");
	HX_VISIT_MEMBER_NAME(GL_obj::BACK,"BACK");
	HX_VISIT_MEMBER_NAME(GL_obj::FRONT_AND_BACK,"FRONT_AND_BACK");
	HX_VISIT_MEMBER_NAME(GL_obj::CULL_FACE,"CULL_FACE");
	HX_VISIT_MEMBER_NAME(GL_obj::BLEND,"BLEND");
	HX_VISIT_MEMBER_NAME(GL_obj::DITHER,"DITHER");
	HX_VISIT_MEMBER_NAME(GL_obj::STENCIL_TEST,"STENCIL_TEST");
	HX_VISIT_MEMBER_NAME(GL_obj::DEPTH_TEST,"DEPTH_TEST");
	HX_VISIT_MEMBER_NAME(GL_obj::SCISSOR_TEST,"SCISSOR_TEST");
	HX_VISIT_MEMBER_NAME(GL_obj::POLYGON_OFFSET_FILL,"POLYGON_OFFSET_FILL");
	HX_VISIT_MEMBER_NAME(GL_obj::SAMPLE_ALPHA_TO_COVERAGE,"SAMPLE_ALPHA_TO_COVERAGE");
	HX_VISIT_MEMBER_NAME(GL_obj::SAMPLE_COVERAGE,"SAMPLE_COVERAGE");
	HX_VISIT_MEMBER_NAME(GL_obj::NO_ERROR,"NO_ERROR");
	HX_VISIT_MEMBER_NAME(GL_obj::INVALID_ENUM,"INVALID_ENUM");
	HX_VISIT_MEMBER_NAME(GL_obj::INVALID_VALUE,"INVALID_VALUE");
	HX_VISIT_MEMBER_NAME(GL_obj::INVALID_OPERATION,"INVALID_OPERATION");
	HX_VISIT_MEMBER_NAME(GL_obj::OUT_OF_MEMORY,"OUT_OF_MEMORY");
	HX_VISIT_MEMBER_NAME(GL_obj::CW,"CW");
	HX_VISIT_MEMBER_NAME(GL_obj::CCW,"CCW");
	HX_VISIT_MEMBER_NAME(GL_obj::LINE_WIDTH,"LINE_WIDTH");
	HX_VISIT_MEMBER_NAME(GL_obj::ALIASED_POINT_SIZE_RANGE,"ALIASED_POINT_SIZE_RANGE");
	HX_VISIT_MEMBER_NAME(GL_obj::ALIASED_LINE_WIDTH_RANGE,"ALIASED_LINE_WIDTH_RANGE");
	HX_VISIT_MEMBER_NAME(GL_obj::CULL_FACE_MODE,"CULL_FACE_MODE");
	HX_VISIT_MEMBER_NAME(GL_obj::FRONT_FACE,"FRONT_FACE");
	HX_VISIT_MEMBER_NAME(GL_obj::DEPTH_RANGE,"DEPTH_RANGE");
	HX_VISIT_MEMBER_NAME(GL_obj::DEPTH_WRITEMASK,"DEPTH_WRITEMASK");
	HX_VISIT_MEMBER_NAME(GL_obj::DEPTH_CLEAR_VALUE,"DEPTH_CLEAR_VALUE");
	HX_VISIT_MEMBER_NAME(GL_obj::DEPTH_FUNC,"DEPTH_FUNC");
	HX_VISIT_MEMBER_NAME(GL_obj::STENCIL_CLEAR_VALUE,"STENCIL_CLEAR_VALUE");
	HX_VISIT_MEMBER_NAME(GL_obj::STENCIL_FUNC,"STENCIL_FUNC");
	HX_VISIT_MEMBER_NAME(GL_obj::STENCIL_FAIL,"STENCIL_FAIL");
	HX_VISIT_MEMBER_NAME(GL_obj::STENCIL_PASS_DEPTH_FAIL,"STENCIL_PASS_DEPTH_FAIL");
	HX_VISIT_MEMBER_NAME(GL_obj::STENCIL_PASS_DEPTH_PASS,"STENCIL_PASS_DEPTH_PASS");
	HX_VISIT_MEMBER_NAME(GL_obj::STENCIL_REF,"STENCIL_REF");
	HX_VISIT_MEMBER_NAME(GL_obj::STENCIL_VALUE_MASK,"STENCIL_VALUE_MASK");
	HX_VISIT_MEMBER_NAME(GL_obj::STENCIL_WRITEMASK,"STENCIL_WRITEMASK");
	HX_VISIT_MEMBER_NAME(GL_obj::STENCIL_BACK_FUNC,"STENCIL_BACK_FUNC");
	HX_VISIT_MEMBER_NAME(GL_obj::STENCIL_BACK_FAIL,"STENCIL_BACK_FAIL");
	HX_VISIT_MEMBER_NAME(GL_obj::STENCIL_BACK_PASS_DEPTH_FAIL,"STENCIL_BACK_PASS_DEPTH_FAIL");
	HX_VISIT_MEMBER_NAME(GL_obj::STENCIL_BACK_PASS_DEPTH_PASS,"STENCIL_BACK_PASS_DEPTH_PASS");
	HX_VISIT_MEMBER_NAME(GL_obj::STENCIL_BACK_REF,"STENCIL_BACK_REF");
	HX_VISIT_MEMBER_NAME(GL_obj::STENCIL_BACK_VALUE_MASK,"STENCIL_BACK_VALUE_MASK");
	HX_VISIT_MEMBER_NAME(GL_obj::STENCIL_BACK_WRITEMASK,"STENCIL_BACK_WRITEMASK");
	HX_VISIT_MEMBER_NAME(GL_obj::VIEWPORT,"VIEWPORT");
	HX_VISIT_MEMBER_NAME(GL_obj::SCISSOR_BOX,"SCISSOR_BOX");
	HX_VISIT_MEMBER_NAME(GL_obj::COLOR_CLEAR_VALUE,"COLOR_CLEAR_VALUE");
	HX_VISIT_MEMBER_NAME(GL_obj::COLOR_WRITEMASK,"COLOR_WRITEMASK");
	HX_VISIT_MEMBER_NAME(GL_obj::UNPACK_ALIGNMENT,"UNPACK_ALIGNMENT");
	HX_VISIT_MEMBER_NAME(GL_obj::PACK_ALIGNMENT,"PACK_ALIGNMENT");
	HX_VISIT_MEMBER_NAME(GL_obj::MAX_TEXTURE_SIZE,"MAX_TEXTURE_SIZE");
	HX_VISIT_MEMBER_NAME(GL_obj::MAX_VIEWPORT_DIMS,"MAX_VIEWPORT_DIMS");
	HX_VISIT_MEMBER_NAME(GL_obj::SUBPIXEL_BITS,"SUBPIXEL_BITS");
	HX_VISIT_MEMBER_NAME(GL_obj::RED_BITS,"RED_BITS");
	HX_VISIT_MEMBER_NAME(GL_obj::GREEN_BITS,"GREEN_BITS");
	HX_VISIT_MEMBER_NAME(GL_obj::BLUE_BITS,"BLUE_BITS");
	HX_VISIT_MEMBER_NAME(GL_obj::ALPHA_BITS,"ALPHA_BITS");
	HX_VISIT_MEMBER_NAME(GL_obj::DEPTH_BITS,"DEPTH_BITS");
	HX_VISIT_MEMBER_NAME(GL_obj::STENCIL_BITS,"STENCIL_BITS");
	HX_VISIT_MEMBER_NAME(GL_obj::POLYGON_OFFSET_UNITS,"POLYGON_OFFSET_UNITS");
	HX_VISIT_MEMBER_NAME(GL_obj::POLYGON_OFFSET_FACTOR,"POLYGON_OFFSET_FACTOR");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE_BINDING_2D,"TEXTURE_BINDING_2D");
	HX_VISIT_MEMBER_NAME(GL_obj::SAMPLE_BUFFERS,"SAMPLE_BUFFERS");
	HX_VISIT_MEMBER_NAME(GL_obj::SAMPLES,"SAMPLES");
	HX_VISIT_MEMBER_NAME(GL_obj::SAMPLE_COVERAGE_VALUE,"SAMPLE_COVERAGE_VALUE");
	HX_VISIT_MEMBER_NAME(GL_obj::SAMPLE_COVERAGE_INVERT,"SAMPLE_COVERAGE_INVERT");
	HX_VISIT_MEMBER_NAME(GL_obj::COMPRESSED_TEXTURE_FORMATS,"COMPRESSED_TEXTURE_FORMATS");
	HX_VISIT_MEMBER_NAME(GL_obj::DONT_CARE,"DONT_CARE");
	HX_VISIT_MEMBER_NAME(GL_obj::FASTEST,"FASTEST");
	HX_VISIT_MEMBER_NAME(GL_obj::NICEST,"NICEST");
	HX_VISIT_MEMBER_NAME(GL_obj::GENERATE_MIPMAP_HINT,"GENERATE_MIPMAP_HINT");
	HX_VISIT_MEMBER_NAME(GL_obj::BYTE,"BYTE");
	HX_VISIT_MEMBER_NAME(GL_obj::UNSIGNED_BYTE,"UNSIGNED_BYTE");
	HX_VISIT_MEMBER_NAME(GL_obj::SHORT,"SHORT");
	HX_VISIT_MEMBER_NAME(GL_obj::UNSIGNED_SHORT,"UNSIGNED_SHORT");
	HX_VISIT_MEMBER_NAME(GL_obj::INT,"INT");
	HX_VISIT_MEMBER_NAME(GL_obj::UNSIGNED_INT,"UNSIGNED_INT");
	HX_VISIT_MEMBER_NAME(GL_obj::FLOAT,"FLOAT");
	HX_VISIT_MEMBER_NAME(GL_obj::DEPTH_COMPONENT,"DEPTH_COMPONENT");
	HX_VISIT_MEMBER_NAME(GL_obj::ALPHA,"ALPHA");
	HX_VISIT_MEMBER_NAME(GL_obj::RGB,"RGB");
	HX_VISIT_MEMBER_NAME(GL_obj::RGBA,"RGBA");
	HX_VISIT_MEMBER_NAME(GL_obj::BGR_EXT,"BGR_EXT");
	HX_VISIT_MEMBER_NAME(GL_obj::BGRA_EXT,"BGRA_EXT");
	HX_VISIT_MEMBER_NAME(GL_obj::LUMINANCE,"LUMINANCE");
	HX_VISIT_MEMBER_NAME(GL_obj::LUMINANCE_ALPHA,"LUMINANCE_ALPHA");
	HX_VISIT_MEMBER_NAME(GL_obj::UNSIGNED_SHORT_4_4_4_4,"UNSIGNED_SHORT_4_4_4_4");
	HX_VISIT_MEMBER_NAME(GL_obj::UNSIGNED_SHORT_5_5_5_1,"UNSIGNED_SHORT_5_5_5_1");
	HX_VISIT_MEMBER_NAME(GL_obj::UNSIGNED_SHORT_5_6_5,"UNSIGNED_SHORT_5_6_5");
	HX_VISIT_MEMBER_NAME(GL_obj::FRAGMENT_SHADER,"FRAGMENT_SHADER");
	HX_VISIT_MEMBER_NAME(GL_obj::VERTEX_SHADER,"VERTEX_SHADER");
	HX_VISIT_MEMBER_NAME(GL_obj::MAX_VERTEX_ATTRIBS,"MAX_VERTEX_ATTRIBS");
	HX_VISIT_MEMBER_NAME(GL_obj::MAX_VERTEX_UNIFORM_VECTORS,"MAX_VERTEX_UNIFORM_VECTORS");
	HX_VISIT_MEMBER_NAME(GL_obj::MAX_VARYING_VECTORS,"MAX_VARYING_VECTORS");
	HX_VISIT_MEMBER_NAME(GL_obj::MAX_COMBINED_TEXTURE_IMAGE_UNITS,"MAX_COMBINED_TEXTURE_IMAGE_UNITS");
	HX_VISIT_MEMBER_NAME(GL_obj::MAX_VERTEX_TEXTURE_IMAGE_UNITS,"MAX_VERTEX_TEXTURE_IMAGE_UNITS");
	HX_VISIT_MEMBER_NAME(GL_obj::MAX_TEXTURE_IMAGE_UNITS,"MAX_TEXTURE_IMAGE_UNITS");
	HX_VISIT_MEMBER_NAME(GL_obj::MAX_FRAGMENT_UNIFORM_VECTORS,"MAX_FRAGMENT_UNIFORM_VECTORS");
	HX_VISIT_MEMBER_NAME(GL_obj::SHADER_TYPE,"SHADER_TYPE");
	HX_VISIT_MEMBER_NAME(GL_obj::DELETE_STATUS,"DELETE_STATUS");
	HX_VISIT_MEMBER_NAME(GL_obj::LINK_STATUS,"LINK_STATUS");
	HX_VISIT_MEMBER_NAME(GL_obj::VALIDATE_STATUS,"VALIDATE_STATUS");
	HX_VISIT_MEMBER_NAME(GL_obj::ATTACHED_SHADERS,"ATTACHED_SHADERS");
	HX_VISIT_MEMBER_NAME(GL_obj::ACTIVE_UNIFORMS,"ACTIVE_UNIFORMS");
	HX_VISIT_MEMBER_NAME(GL_obj::ACTIVE_ATTRIBUTES,"ACTIVE_ATTRIBUTES");
	HX_VISIT_MEMBER_NAME(GL_obj::SHADING_LANGUAGE_VERSION,"SHADING_LANGUAGE_VERSION");
	HX_VISIT_MEMBER_NAME(GL_obj::CURRENT_PROGRAM,"CURRENT_PROGRAM");
	HX_VISIT_MEMBER_NAME(GL_obj::NEVER,"NEVER");
	HX_VISIT_MEMBER_NAME(GL_obj::LESS,"LESS");
	HX_VISIT_MEMBER_NAME(GL_obj::EQUAL,"EQUAL");
	HX_VISIT_MEMBER_NAME(GL_obj::LEQUAL,"LEQUAL");
	HX_VISIT_MEMBER_NAME(GL_obj::GREATER,"GREATER");
	HX_VISIT_MEMBER_NAME(GL_obj::NOTEQUAL,"NOTEQUAL");
	HX_VISIT_MEMBER_NAME(GL_obj::GEQUAL,"GEQUAL");
	HX_VISIT_MEMBER_NAME(GL_obj::ALWAYS,"ALWAYS");
	HX_VISIT_MEMBER_NAME(GL_obj::KEEP,"KEEP");
	HX_VISIT_MEMBER_NAME(GL_obj::REPLACE,"REPLACE");
	HX_VISIT_MEMBER_NAME(GL_obj::INCR,"INCR");
	HX_VISIT_MEMBER_NAME(GL_obj::DECR,"DECR");
	HX_VISIT_MEMBER_NAME(GL_obj::INVERT,"INVERT");
	HX_VISIT_MEMBER_NAME(GL_obj::INCR_WRAP,"INCR_WRAP");
	HX_VISIT_MEMBER_NAME(GL_obj::DECR_WRAP,"DECR_WRAP");
	HX_VISIT_MEMBER_NAME(GL_obj::VENDOR,"VENDOR");
	HX_VISIT_MEMBER_NAME(GL_obj::RENDERER,"RENDERER");
	HX_VISIT_MEMBER_NAME(GL_obj::VERSION,"VERSION");
	HX_VISIT_MEMBER_NAME(GL_obj::NEAREST,"NEAREST");
	HX_VISIT_MEMBER_NAME(GL_obj::LINEAR,"LINEAR");
	HX_VISIT_MEMBER_NAME(GL_obj::NEAREST_MIPMAP_NEAREST,"NEAREST_MIPMAP_NEAREST");
	HX_VISIT_MEMBER_NAME(GL_obj::LINEAR_MIPMAP_NEAREST,"LINEAR_MIPMAP_NEAREST");
	HX_VISIT_MEMBER_NAME(GL_obj::NEAREST_MIPMAP_LINEAR,"NEAREST_MIPMAP_LINEAR");
	HX_VISIT_MEMBER_NAME(GL_obj::LINEAR_MIPMAP_LINEAR,"LINEAR_MIPMAP_LINEAR");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE_MAG_FILTER,"TEXTURE_MAG_FILTER");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE_MIN_FILTER,"TEXTURE_MIN_FILTER");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE_WRAP_S,"TEXTURE_WRAP_S");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE_WRAP_T,"TEXTURE_WRAP_T");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE_2D,"TEXTURE_2D");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE,"TEXTURE");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE_CUBE_MAP,"TEXTURE_CUBE_MAP");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE_BINDING_CUBE_MAP,"TEXTURE_BINDING_CUBE_MAP");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE_CUBE_MAP_POSITIVE_X,"TEXTURE_CUBE_MAP_POSITIVE_X");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE_CUBE_MAP_NEGATIVE_X,"TEXTURE_CUBE_MAP_NEGATIVE_X");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE_CUBE_MAP_POSITIVE_Y,"TEXTURE_CUBE_MAP_POSITIVE_Y");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE_CUBE_MAP_NEGATIVE_Y,"TEXTURE_CUBE_MAP_NEGATIVE_Y");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE_CUBE_MAP_POSITIVE_Z,"TEXTURE_CUBE_MAP_POSITIVE_Z");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE_CUBE_MAP_NEGATIVE_Z,"TEXTURE_CUBE_MAP_NEGATIVE_Z");
	HX_VISIT_MEMBER_NAME(GL_obj::MAX_CUBE_MAP_TEXTURE_SIZE,"MAX_CUBE_MAP_TEXTURE_SIZE");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE0,"TEXTURE0");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE1,"TEXTURE1");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE2,"TEXTURE2");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE3,"TEXTURE3");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE4,"TEXTURE4");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE5,"TEXTURE5");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE6,"TEXTURE6");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE7,"TEXTURE7");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE8,"TEXTURE8");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE9,"TEXTURE9");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE10,"TEXTURE10");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE11,"TEXTURE11");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE12,"TEXTURE12");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE13,"TEXTURE13");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE14,"TEXTURE14");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE15,"TEXTURE15");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE16,"TEXTURE16");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE17,"TEXTURE17");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE18,"TEXTURE18");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE19,"TEXTURE19");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE20,"TEXTURE20");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE21,"TEXTURE21");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE22,"TEXTURE22");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE23,"TEXTURE23");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE24,"TEXTURE24");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE25,"TEXTURE25");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE26,"TEXTURE26");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE27,"TEXTURE27");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE28,"TEXTURE28");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE29,"TEXTURE29");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE30,"TEXTURE30");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE31,"TEXTURE31");
	HX_VISIT_MEMBER_NAME(GL_obj::ACTIVE_TEXTURE,"ACTIVE_TEXTURE");
	HX_VISIT_MEMBER_NAME(GL_obj::REPEAT,"REPEAT");
	HX_VISIT_MEMBER_NAME(GL_obj::CLAMP_TO_EDGE,"CLAMP_TO_EDGE");
	HX_VISIT_MEMBER_NAME(GL_obj::MIRRORED_REPEAT,"MIRRORED_REPEAT");
	HX_VISIT_MEMBER_NAME(GL_obj::FLOAT_VEC2,"FLOAT_VEC2");
	HX_VISIT_MEMBER_NAME(GL_obj::FLOAT_VEC3,"FLOAT_VEC3");
	HX_VISIT_MEMBER_NAME(GL_obj::FLOAT_VEC4,"FLOAT_VEC4");
	HX_VISIT_MEMBER_NAME(GL_obj::INT_VEC2,"INT_VEC2");
	HX_VISIT_MEMBER_NAME(GL_obj::INT_VEC3,"INT_VEC3");
	HX_VISIT_MEMBER_NAME(GL_obj::INT_VEC4,"INT_VEC4");
	HX_VISIT_MEMBER_NAME(GL_obj::BOOL,"BOOL");
	HX_VISIT_MEMBER_NAME(GL_obj::BOOL_VEC2,"BOOL_VEC2");
	HX_VISIT_MEMBER_NAME(GL_obj::BOOL_VEC3,"BOOL_VEC3");
	HX_VISIT_MEMBER_NAME(GL_obj::BOOL_VEC4,"BOOL_VEC4");
	HX_VISIT_MEMBER_NAME(GL_obj::FLOAT_MAT2,"FLOAT_MAT2");
	HX_VISIT_MEMBER_NAME(GL_obj::FLOAT_MAT3,"FLOAT_MAT3");
	HX_VISIT_MEMBER_NAME(GL_obj::FLOAT_MAT4,"FLOAT_MAT4");
	HX_VISIT_MEMBER_NAME(GL_obj::SAMPLER_2D,"SAMPLER_2D");
	HX_VISIT_MEMBER_NAME(GL_obj::SAMPLER_CUBE,"SAMPLER_CUBE");
	HX_VISIT_MEMBER_NAME(GL_obj::VERTEX_ATTRIB_ARRAY_ENABLED,"VERTEX_ATTRIB_ARRAY_ENABLED");
	HX_VISIT_MEMBER_NAME(GL_obj::VERTEX_ATTRIB_ARRAY_SIZE,"VERTEX_ATTRIB_ARRAY_SIZE");
	HX_VISIT_MEMBER_NAME(GL_obj::VERTEX_ATTRIB_ARRAY_STRIDE,"VERTEX_ATTRIB_ARRAY_STRIDE");
	HX_VISIT_MEMBER_NAME(GL_obj::VERTEX_ATTRIB_ARRAY_TYPE,"VERTEX_ATTRIB_ARRAY_TYPE");
	HX_VISIT_MEMBER_NAME(GL_obj::VERTEX_ATTRIB_ARRAY_NORMALIZED,"VERTEX_ATTRIB_ARRAY_NORMALIZED");
	HX_VISIT_MEMBER_NAME(GL_obj::VERTEX_ATTRIB_ARRAY_POINTER,"VERTEX_ATTRIB_ARRAY_POINTER");
	HX_VISIT_MEMBER_NAME(GL_obj::VERTEX_ATTRIB_ARRAY_BUFFER_BINDING,"VERTEX_ATTRIB_ARRAY_BUFFER_BINDING");
	HX_VISIT_MEMBER_NAME(GL_obj::VERTEX_PROGRAM_POINT_SIZE,"VERTEX_PROGRAM_POINT_SIZE");
	HX_VISIT_MEMBER_NAME(GL_obj::POINT_SPRITE,"POINT_SPRITE");
	HX_VISIT_MEMBER_NAME(GL_obj::COMPILE_STATUS,"COMPILE_STATUS");
	HX_VISIT_MEMBER_NAME(GL_obj::LOW_FLOAT,"LOW_FLOAT");
	HX_VISIT_MEMBER_NAME(GL_obj::MEDIUM_FLOAT,"MEDIUM_FLOAT");
	HX_VISIT_MEMBER_NAME(GL_obj::HIGH_FLOAT,"HIGH_FLOAT");
	HX_VISIT_MEMBER_NAME(GL_obj::LOW_INT,"LOW_INT");
	HX_VISIT_MEMBER_NAME(GL_obj::MEDIUM_INT,"MEDIUM_INT");
	HX_VISIT_MEMBER_NAME(GL_obj::HIGH_INT,"HIGH_INT");
	HX_VISIT_MEMBER_NAME(GL_obj::FRAMEBUFFER,"FRAMEBUFFER");
	HX_VISIT_MEMBER_NAME(GL_obj::RENDERBUFFER,"RENDERBUFFER");
	HX_VISIT_MEMBER_NAME(GL_obj::RGBA4,"RGBA4");
	HX_VISIT_MEMBER_NAME(GL_obj::RGB5_A1,"RGB5_A1");
	HX_VISIT_MEMBER_NAME(GL_obj::RGB565,"RGB565");
	HX_VISIT_MEMBER_NAME(GL_obj::DEPTH_COMPONENT16,"DEPTH_COMPONENT16");
	HX_VISIT_MEMBER_NAME(GL_obj::STENCIL_INDEX,"STENCIL_INDEX");
	HX_VISIT_MEMBER_NAME(GL_obj::STENCIL_INDEX8,"STENCIL_INDEX8");
	HX_VISIT_MEMBER_NAME(GL_obj::DEPTH_STENCIL,"DEPTH_STENCIL");
	HX_VISIT_MEMBER_NAME(GL_obj::RENDERBUFFER_WIDTH,"RENDERBUFFER_WIDTH");
	HX_VISIT_MEMBER_NAME(GL_obj::RENDERBUFFER_HEIGHT,"RENDERBUFFER_HEIGHT");
	HX_VISIT_MEMBER_NAME(GL_obj::RENDERBUFFER_INTERNAL_FORMAT,"RENDERBUFFER_INTERNAL_FORMAT");
	HX_VISIT_MEMBER_NAME(GL_obj::RENDERBUFFER_RED_SIZE,"RENDERBUFFER_RED_SIZE");
	HX_VISIT_MEMBER_NAME(GL_obj::RENDERBUFFER_GREEN_SIZE,"RENDERBUFFER_GREEN_SIZE");
	HX_VISIT_MEMBER_NAME(GL_obj::RENDERBUFFER_BLUE_SIZE,"RENDERBUFFER_BLUE_SIZE");
	HX_VISIT_MEMBER_NAME(GL_obj::RENDERBUFFER_ALPHA_SIZE,"RENDERBUFFER_ALPHA_SIZE");
	HX_VISIT_MEMBER_NAME(GL_obj::RENDERBUFFER_DEPTH_SIZE,"RENDERBUFFER_DEPTH_SIZE");
	HX_VISIT_MEMBER_NAME(GL_obj::RENDERBUFFER_STENCIL_SIZE,"RENDERBUFFER_STENCIL_SIZE");
	HX_VISIT_MEMBER_NAME(GL_obj::FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE,"FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE");
	HX_VISIT_MEMBER_NAME(GL_obj::FRAMEBUFFER_ATTACHMENT_OBJECT_NAME,"FRAMEBUFFER_ATTACHMENT_OBJECT_NAME");
	HX_VISIT_MEMBER_NAME(GL_obj::FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL,"FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL");
	HX_VISIT_MEMBER_NAME(GL_obj::FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE,"FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE");
	HX_VISIT_MEMBER_NAME(GL_obj::COLOR_ATTACHMENT0,"COLOR_ATTACHMENT0");
	HX_VISIT_MEMBER_NAME(GL_obj::DEPTH_ATTACHMENT,"DEPTH_ATTACHMENT");
	HX_VISIT_MEMBER_NAME(GL_obj::STENCIL_ATTACHMENT,"STENCIL_ATTACHMENT");
	HX_VISIT_MEMBER_NAME(GL_obj::DEPTH_STENCIL_ATTACHMENT,"DEPTH_STENCIL_ATTACHMENT");
	HX_VISIT_MEMBER_NAME(GL_obj::NONE,"NONE");
	HX_VISIT_MEMBER_NAME(GL_obj::FRAMEBUFFER_COMPLETE,"FRAMEBUFFER_COMPLETE");
	HX_VISIT_MEMBER_NAME(GL_obj::FRAMEBUFFER_INCOMPLETE_ATTACHMENT,"FRAMEBUFFER_INCOMPLETE_ATTACHMENT");
	HX_VISIT_MEMBER_NAME(GL_obj::FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT,"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT");
	HX_VISIT_MEMBER_NAME(GL_obj::FRAMEBUFFER_INCOMPLETE_DIMENSIONS,"FRAMEBUFFER_INCOMPLETE_DIMENSIONS");
	HX_VISIT_MEMBER_NAME(GL_obj::FRAMEBUFFER_UNSUPPORTED,"FRAMEBUFFER_UNSUPPORTED");
	HX_VISIT_MEMBER_NAME(GL_obj::FRAMEBUFFER_BINDING,"FRAMEBUFFER_BINDING");
	HX_VISIT_MEMBER_NAME(GL_obj::RENDERBUFFER_BINDING,"RENDERBUFFER_BINDING");
	HX_VISIT_MEMBER_NAME(GL_obj::MAX_RENDERBUFFER_SIZE,"MAX_RENDERBUFFER_SIZE");
	HX_VISIT_MEMBER_NAME(GL_obj::INVALID_FRAMEBUFFER_OPERATION,"INVALID_FRAMEBUFFER_OPERATION");
	HX_VISIT_MEMBER_NAME(GL_obj::UNPACK_FLIP_Y_WEBGL,"UNPACK_FLIP_Y_WEBGL");
	HX_VISIT_MEMBER_NAME(GL_obj::UNPACK_PREMULTIPLY_ALPHA_WEBGL,"UNPACK_PREMULTIPLY_ALPHA_WEBGL");
	HX_VISIT_MEMBER_NAME(GL_obj::CONTEXT_LOST_WEBGL,"CONTEXT_LOST_WEBGL");
	HX_VISIT_MEMBER_NAME(GL_obj::UNPACK_COLORSPACE_CONVERSION_WEBGL,"UNPACK_COLORSPACE_CONVERSION_WEBGL");
	HX_VISIT_MEMBER_NAME(GL_obj::BROWSER_DEFAULT_WEBGL,"BROWSER_DEFAULT_WEBGL");
	HX_VISIT_MEMBER_NAME(GL_obj::version,"version");
	HX_VISIT_MEMBER_NAME(GL_obj::context,"context");
	HX_VISIT_MEMBER_NAME(GL_obj::_hx___currentProgram,"__currentProgram");
};

#endif

hx::Class GL_obj::__mClass;

static ::String GL_obj_sStaticFields[] = {
	HX_HCSTRING("DEPTH_BUFFER_BIT","\xca","\x5b","\xce","\xc6"),
	HX_HCSTRING("STENCIL_BUFFER_BIT","\x71","\x93","\x29","\xde"),
	HX_HCSTRING("COLOR_BUFFER_BIT","\x6a","\xf7","\x74","\xfb"),
	HX_HCSTRING("POINTS","\x23","\xbe","\xb0","\xa9"),
	HX_HCSTRING("LINES","\xdf","\x15","\xf0","\xf2"),
	HX_HCSTRING("LINE_LOOP","\xcf","\x55","\xc1","\x16"),
	HX_HCSTRING("LINE_STRIP","\xed","\x20","\x88","\xdd"),
	HX_HCSTRING("TRIANGLES","\x8b","\xa0","\x99","\x7a"),
	HX_HCSTRING("TRIANGLE_STRIP","\xc1","\x66","\x6c","\xf6"),
	HX_HCSTRING("TRIANGLE_FAN","\x7c","\xee","\x2e","\x91"),
	HX_HCSTRING("ZERO","\x28","\xd7","\xb1","\x3b"),
	HX_HCSTRING("ONE","\x46","\x36","\x3c","\x00"),
	HX_HCSTRING("SRC_COLOR","\x48","\x9e","\xbd","\x5c"),
	HX_HCSTRING("ONE_MINUS_SRC_COLOR","\x20","\x3b","\xe1","\x48"),
	HX_HCSTRING("SRC_ALPHA","\x43","\xd4","\xf7","\x33"),
	HX_HCSTRING("ONE_MINUS_SRC_ALPHA","\x1b","\x71","\x1b","\x20"),
	HX_HCSTRING("DST_ALPHA","\x24","\x02","\xf2","\xd3"),
	HX_HCSTRING("ONE_MINUS_DST_ALPHA","\xfc","\x9e","\x15","\xc0"),
	HX_HCSTRING("DST_COLOR","\x29","\xcc","\xb7","\xfc"),
	HX_HCSTRING("ONE_MINUS_DST_COLOR","\x01","\x69","\xdb","\xe8"),
	HX_HCSTRING("SRC_ALPHA_SATURATE","\xab","\xe2","\x3d","\x33"),
	HX_HCSTRING("FUNC_ADD","\x46","\x78","\x17","\x75"),
	HX_HCSTRING("BLEND_EQUATION","\x9a","\x14","\x92","\x71"),
	HX_HCSTRING("BLEND_EQUATION_RGB","\x88","\x25","\xeb","\x90"),
	HX_HCSTRING("BLEND_EQUATION_ALPHA","\x99","\xaa","\xae","\x37"),
	HX_HCSTRING("FUNC_SUBTRACT","\xaf","\xc0","\xa0","\x17"),
	HX_HCSTRING("FUNC_REVERSE_SUBTRACT","\xcc","\x8d","\xef","\xf3"),
	HX_HCSTRING("BLEND_DST_RGB","\x05","\x87","\xf5","\xec"),
	HX_HCSTRING("BLEND_SRC_RGB","\x64","\x43","\x8c","\x2c"),
	HX_HCSTRING("BLEND_DST_ALPHA","\x56","\x25","\x32","\x74"),
	HX_HCSTRING("BLEND_SRC_ALPHA","\x75","\xf7","\x37","\xd4"),
	HX_HCSTRING("CONSTANT_COLOR","\xe8","\x64","\x8a","\xc8"),
	HX_HCSTRING("ONE_MINUS_CONSTANT_COLOR","\x10","\x39","\xe7","\x06"),
	HX_HCSTRING("CONSTANT_ALPHA","\xe3","\x9a","\xc4","\x9f"),
	HX_HCSTRING("ONE_MINUS_CONSTANT_ALPHA","\x0b","\x6f","\x21","\xde"),
	HX_HCSTRING("BLEND_COLOR","\x75","\xcb","\xc8","\x67"),
	HX_HCSTRING("ARRAY_BUFFER","\x46","\x66","\x17","\xf4"),
	HX_HCSTRING("ELEMENT_ARRAY_BUFFER","\x09","\x05","\x53","\x3d"),
	HX_HCSTRING("ARRAY_BUFFER_BINDING","\xec","\xd4","\xa9","\x79"),
	HX_HCSTRING("ELEMENT_ARRAY_BUFFER_BINDING","\xaf","\x6e","\x96","\xa2"),
	HX_HCSTRING("STREAM_DRAW","\x63","\x7f","\x28","\x15"),
	HX_HCSTRING("STATIC_DRAW","\x75","\x50","\x2f","\xba"),
	HX_HCSTRING("DYNAMIC_DRAW","\x24","\x04","\x1f","\x24"),
	HX_HCSTRING("BUFFER_SIZE","\xa0","\x7b","\x91","\x4c"),
	HX_HCSTRING("BUFFER_USAGE","\x42","\x05","\x11","\xe0"),
	HX_HCSTRING("CURRENT_VERTEX_ATTRIB","\x1f","\x8c","\x2f","\xab"),
	HX_HCSTRING("FRONT","\x89","\x50","\x7c","\x84"),
	HX_HCSTRING("BACK","\x27","\xa2","\xd1","\x2b"),
	HX_HCSTRING("FRONT_AND_BACK","\xa5","\x3d","\x6a","\xc1"),
	HX_HCSTRING("CULL_FACE","\x8a","\xa5","\xf4","\xcf"),
	HX_HCSTRING("BLEND","\x31","\x20","\xe3","\x32"),
	HX_HCSTRING("DITHER","\xe6","\xac","\x41","\x70"),
	HX_HCSTRING("STENCIL_TEST","\xd5","\xdc","\x69","\xd5"),
	HX_HCSTRING("DEPTH_TEST","\x6e","\x6c","\x25","\x28"),
	HX_HCSTRING("SCISSOR_TEST","\xb5","\xbe","\x51","\x59"),
	HX_HCSTRING("POLYGON_OFFSET_FILL","\x4a","\x3d","\x32","\xac"),
	HX_HCSTRING("SAMPLE_ALPHA_TO_COVERAGE","\x16","\x3e","\x56","\xe1"),
	HX_HCSTRING("SAMPLE_COVERAGE","\xdd","\xb7","\x0e","\xc1"),
	HX_HCSTRING("NO_ERROR","\xea","\xb5","\x7d","\x2f"),
	HX_HCSTRING("INVALID_ENUM","\xa9","\x74","\x70","\x13"),
	HX_HCSTRING("INVALID_VALUE","\xa9","\xe8","\x26","\xb0"),
	HX_HCSTRING("INVALID_OPERATION","\x5f","\xb1","\xc8","\x29"),
	HX_HCSTRING("OUT_OF_MEMORY","\x18","\xf2","\x97","\xe1"),
	HX_HCSTRING("CW","\xb4","\x3a","\x00","\x00"),
	HX_HCSTRING("CCW","\xb7","\x11","\x33","\x00"),
	HX_HCSTRING("LINE_WIDTH","\x1b","\x84","\xd2","\x23"),
	HX_HCSTRING("ALIASED_POINT_SIZE_RANGE","\xfe","\xf6","\xa4","\x7b"),
	HX_HCSTRING("ALIASED_LINE_WIDTH_RANGE","\xe9","\x22","\xd5","\x8a"),
	HX_HCSTRING("CULL_FACE_MODE","\x78","\xbd","\x87","\xd1"),
	HX_HCSTRING("FRONT_FACE","\x53","\xb7","\x4d","\xef"),
	HX_HCSTRING("DEPTH_RANGE","\x01","\x9a","\x23","\xcf"),
	HX_HCSTRING("DEPTH_WRITEMASK","\x8f","\x37","\x3f","\x66"),
	HX_HCSTRING("DEPTH_CLEAR_VALUE","\x23","\x17","\x0d","\x1b"),
	HX_HCSTRING("DEPTH_FUNC","\x60","\x8f","\xf0","\x1e"),
	HX_HCSTRING("STENCIL_CLEAR_VALUE","\x9c","\x91","\x82","\x73"),
	HX_HCSTRING("STENCIL_FUNC","\xc7","\xff","\x34","\xcc"),
	HX_HCSTRING("STENCIL_FAIL","\x61","\xce","\x25","\xcc"),
	HX_HCSTRING("STENCIL_PASS_DEPTH_FAIL","\x45","\xca","\xb9","\xc8"),
	HX_HCSTRING("STENCIL_PASS_DEPTH_PASS","\x38","\xf5","\x55","\xcf"),
	HX_HCSTRING("STENCIL_REF","\x10","\x6a","\xa5","\x3c"),
	HX_HCSTRING("STENCIL_VALUE_MASK","\x9d","\x58","\x5e","\xa0"),
	HX_HCSTRING("STENCIL_WRITEMASK","\xc8","\xf1","\xa6","\x49"),
	HX_HCSTRING("STENCIL_BACK_FUNC","\x39","\x78","\xa2","\x90"),
	HX_HCSTRING("STENCIL_BACK_FAIL","\xd3","\x46","\x93","\x90"),
	HX_HCSTRING("STENCIL_BACK_PASS_DEPTH_FAIL","\x13","\x23","\x0e","\x34"),
	HX_HCSTRING("STENCIL_BACK_PASS_DEPTH_PASS","\x06","\x4e","\xaa","\x3a"),
	HX_HCSTRING("STENCIL_BACK_REF","\xde","\x45","\xb8","\x08"),
	HX_HCSTRING("STENCIL_BACK_VALUE_MASK","\x8f","\xb2","\xc4","\x88"),
	HX_HCSTRING("STENCIL_BACK_WRITEMASK","\x16","\x9c","\x15","\xc2"),
	HX_HCSTRING("VIEWPORT","\x66","\xdc","\x2a","\xf6"),
	HX_HCSTRING("SCISSOR_BOX","\xe8","\x48","\x4c","\x55"),
	HX_HCSTRING("COLOR_CLEAR_VALUE","\x83","\xa7","\x2e","\xf8"),
	HX_HCSTRING("COLOR_WRITEMASK","\xef","\xef","\xf9","\x14"),
	HX_HCSTRING("UNPACK_ALIGNMENT","\xb6","\x2a","\x2e","\x4b"),
	HX_HCSTRING("PACK_ALIGNMENT","\x9d","\xd6","\x85","\xc3"),
	HX_HCSTRING("MAX_TEXTURE_SIZE","\xe0","\x0b","\x5b","\xfb"),
	HX_HCSTRING("MAX_VIEWPORT_DIMS","\xa9","\x2d","\xfb","\x08"),
	HX_HCSTRING("SUBPIXEL_BITS","\x1f","\xac","\x14","\x0a"),
	HX_HCSTRING("RED_BITS","\x14","\xf8","\x9e","\x96"),
	HX_HCSTRING("GREEN_BITS","\x62","\xa9","\x9b","\x94"),
	HX_HCSTRING("BLUE_BITS","\x0b","\x26","\x60","\xa1"),
	HX_HCSTRING("ALPHA_BITS","\xe7","\xfe","\x7b","\xe0"),
	HX_HCSTRING("DEPTH_BITS","\x22","\x9f","\x42","\x1c"),
	HX_HCSTRING("STENCIL_BITS","\x89","\x0f","\x87","\xc9"),
	HX_HCSTRING("POLYGON_OFFSET_UNITS","\xa8","\xe8","\x11","\xa6"),
	HX_HCSTRING("POLYGON_OFFSET_FACTOR","\x56","\x6b","\x12","\x2a"),
	HX_HCSTRING("TEXTURE_BINDING_2D","\x30","\xec","\x98","\xb1"),
	HX_HCSTRING("SAMPLE_BUFFERS","\xfe","\x16","\x71","\x3c"),
	HX_HCSTRING("SAMPLES","\xe9","\x98","\x9d","\x03"),
	HX_HCSTRING("SAMPLE_COVERAGE_VALUE","\x2f","\x7a","\x07","\x69"),
	HX_HCSTRING("SAMPLE_COVERAGE_INVERT","\x78","\x52","\xa5","\xcd"),
	HX_HCSTRING("COMPRESSED_TEXTURE_FORMATS","\x7a","\x13","\xe3","\x12"),
	HX_HCSTRING("DONT_CARE","\x7f","\x9b","\xc1","\xcf"),
	HX_HCSTRING("FASTEST","\x0a","\xa3","\x0d","\x5e"),
	HX_HCSTRING("NICEST","\x7e","\x6d","\x94","\x64"),
	HX_HCSTRING("GENERATE_MIPMAP_HINT","\x94","\xd3","\xd5","\x83"),
	HX_HCSTRING("BYTE","\x08","\xe7","\xe3","\x2b"),
	HX_HCSTRING("UNSIGNED_BYTE","\xd2","\x79","\x6b","\x01"),
	HX_HCSTRING("SHORT","\x5c","\xbc","\x15","\xfa"),
	HX_HCSTRING("UNSIGNED_SHORT","\x52","\x9a","\x2e","\xfb"),
	HX_HCSTRING("INT","\xcf","\xa8","\x37","\x00"),
	HX_HCSTRING("UNSIGNED_INT","\x45","\xfd","\xb9","\x1c"),
	HX_HCSTRING("FLOAT","\x7c","\xfd","\x84","\x80"),
	HX_HCSTRING("DEPTH_COMPONENT","\x01","\x1f","\x62","\x0f"),
	HX_HCSTRING("ALPHA","\x3e","\xdf","\x84","\x9f"),
	HX_HCSTRING("RGB","\xed","\x76","\x3e","\x00"),
	HX_HCSTRING("RGBA","\xb4","\x98","\x69","\x36"),
	HX_HCSTRING("BGR_EXT","\xef","\xba","\xba","\x91"),
	HX_HCSTRING("BGRA_EXT","\x36","\x94","\xc4","\xbc"),
	HX_HCSTRING("LUMINANCE","\xd8","\xa7","\xe0","\x63"),
	HX_HCSTRING("LUMINANCE_ALPHA","\x57","\x40","\xe0","\xbd"),
	HX_HCSTRING("UNSIGNED_SHORT_4_4_4_4","\xa6","\x33","\x71","\x7b"),
	HX_HCSTRING("UNSIGNED_SHORT_5_5_5_1","\x26","\x01","\x6e","\x38"),
	HX_HCSTRING("UNSIGNED_SHORT_5_6_5","\x75","\xbb","\x16","\x8c"),
	HX_HCSTRING("FRAGMENT_SHADER","\xf4","\x26","\x78","\xe9"),
	HX_HCSTRING("VERTEX_SHADER","\xe0","\x69","\x73","\x49"),
	HX_HCSTRING("MAX_VERTEX_ATTRIBS","\x49","\xc9","\x15","\x5f"),
	HX_HCSTRING("MAX_VERTEX_UNIFORM_VECTORS","\x45","\x6c","\x16","\x5a"),
	HX_HCSTRING("MAX_VARYING_VECTORS","\x06","\xb9","\xf7","\x37"),
	HX_HCSTRING("MAX_COMBINED_TEXTURE_IMAGE_UNITS","\xa8","\xd1","\xa6","\x77"),
	HX_HCSTRING("MAX_VERTEX_TEXTURE_IMAGE_UNITS","\xc7","\x90","\x95","\x2b"),
	HX_HCSTRING("MAX_TEXTURE_IMAGE_UNITS","\xcc","\x6c","\x61","\x54"),
	HX_HCSTRING("MAX_FRAGMENT_UNIFORM_VECTORS","\x71","\x49","\xf5","\x0a"),
	HX_HCSTRING("SHADER_TYPE","\x54","\xe5","\x27","\x87"),
	HX_HCSTRING("DELETE_STATUS","\x06","\xe4","\x98","\x1e"),
	HX_HCSTRING("LINK_STATUS","\x17","\x18","\x8f","\x45"),
	HX_HCSTRING("VALIDATE_STATUS","\xfb","\x22","\x07","\xc6"),
	HX_HCSTRING("ATTACHED_SHADERS","\x73","\xd2","\x76","\x75"),
	HX_HCSTRING("ACTIVE_UNIFORMS","\x98","\x7d","\x3a","\x2c"),
	HX_HCSTRING("ACTIVE_ATTRIBUTES","\xf0","\xe5","\xc7","\x4a"),
	HX_HCSTRING("SHADING_LANGUAGE_VERSION","\xe6","\xc4","\xef","\x70"),
	HX_HCSTRING("CURRENT_PROGRAM","\xfe","\x28","\xc0","\x3f"),
	HX_HCSTRING("NEVER","\x6c","\x76","\x1e","\x17"),
	HX_HCSTRING("LESS","\x59","\xdb","\x70","\x32"),
	HX_HCSTRING("EQUAL","\x94","\x07","\x71","\xf0"),
	HX_HCSTRING("LEQUAL","\xc8","\x73","\x90","\x53"),
	HX_HCSTRING("GREATER","\xda","\x64","\x94","\x37"),
	HX_HCSTRING("NOTEQUAL","\xc1","\xc1","\xe9","\xc8"),
	HX_HCSTRING("GEQUAL","\xed","\xa5","\xc7","\x53"),
	HX_HCSTRING("ALWAYS","\xcf","\xba","\x59","\xf9"),
	HX_HCSTRING("KEEP","\x85","\x98","\xc7","\x31"),
	HX_HCSTRING("REPLACE","\x14","\x1c","\xfc","\x2a"),
	HX_HCSTRING("INCR","\xd4","\xfd","\x7b","\x30"),
	HX_HCSTRING("DECR","\x70","\x18","\x27","\x2d"),
	HX_HCSTRING("INVERT","\x16","\x93","\x5b","\x52"),
	HX_HCSTRING("INCR_WRAP","\x55","\x7f","\x68","\x2c"),
	HX_HCSTRING("DECR_WRAP","\x39","\x6f","\xeb","\x0a"),
	HX_HCSTRING("VENDOR","\x88","\x91","\x19","\x51"),
	HX_HCSTRING("RENDERER","\x43","\x55","\x61","\x0c"),
	HX_HCSTRING("VERSION","\xf8","\xba","\xc5","\xfc"),
	HX_HCSTRING("NEAREST","\x3e","\xec","\x9d","\xe5"),
	HX_HCSTRING("LINEAR","\xe5","\xfd","\x22","\x9f"),
	HX_HCSTRING("NEAREST_MIPMAP_NEAREST","\x68","\xb9","\x63","\x7e"),
	HX_HCSTRING("LINEAR_MIPMAP_NEAREST","\xa1","\x9b","\xa4","\x65"),
	HX_HCSTRING("NEAREST_MIPMAP_LINEAR","\xfb","\x83","\xf2","\x3b"),
	HX_HCSTRING("LINEAR_MIPMAP_LINEAR","\xe2","\x8b","\xf8","\x99"),
	HX_HCSTRING("TEXTURE_MAG_FILTER","\x88","\xff","\xd5","\x1e"),
	HX_HCSTRING("TEXTURE_MIN_FILTER","\x69","\x66","\xc2","\x46"),
	HX_HCSTRING("TEXTURE_WRAP_S","\xa2","\x2d","\xc3","\xfe"),
	HX_HCSTRING("TEXTURE_WRAP_T","\xa3","\x2d","\xc3","\xfe"),
	HX_HCSTRING("TEXTURE_2D","\x16","\x0c","\xf8","\xa2"),
	HX_HCSTRING("TEXTURE","\xbb","\x9c","\xb4","\x1e"),
	HX_HCSTRING("TEXTURE_CUBE_MAP","\x36","\x7a","\xe1","\xad"),
	HX_HCSTRING("TEXTURE_BINDING_CUBE_MAP","\xd0","\x69","\x98","\x75"),
	HX_HCSTRING("TEXTURE_CUBE_MAP_POSITIVE_X","\xbb","\x1c","\xee","\x24"),
	HX_HCSTRING("TEXTURE_CUBE_MAP_NEGATIVE_X","\x77","\x03","\xe2","\x6b"),
	HX_HCSTRING("TEXTURE_CUBE_MAP_POSITIVE_Y","\xbc","\x1c","\xee","\x24"),
	HX_HCSTRING("TEXTURE_CUBE_MAP_NEGATIVE_Y","\x78","\x03","\xe2","\x6b"),
	HX_HCSTRING("TEXTURE_CUBE_MAP_POSITIVE_Z","\xbd","\x1c","\xee","\x24"),
	HX_HCSTRING("TEXTURE_CUBE_MAP_NEGATIVE_Z","\x79","\x03","\xe2","\x6b"),
	HX_HCSTRING("MAX_CUBE_MAP_TEXTURE_SIZE","\x77","\xb9","\x24","\x9d"),
	HX_HCSTRING("TEXTURE0","\x15","\x87","\x54","\xbf"),
	HX_HCSTRING("TEXTURE1","\x16","\x87","\x54","\xbf"),
	HX_HCSTRING("TEXTURE2","\x17","\x87","\x54","\xbf"),
	HX_HCSTRING("TEXTURE3","\x18","\x87","\x54","\xbf"),
	HX_HCSTRING("TEXTURE4","\x19","\x87","\x54","\xbf"),
	HX_HCSTRING("TEXTURE5","\x1a","\x87","\x54","\xbf"),
	HX_HCSTRING("TEXTURE6","\x1b","\x87","\x54","\xbf"),
	HX_HCSTRING("TEXTURE7","\x1c","\x87","\x54","\xbf"),
	HX_HCSTRING("TEXTURE8","\x1d","\x87","\x54","\xbf"),
	HX_HCSTRING("TEXTURE9","\x1e","\x87","\x54","\xbf"),
	HX_HCSTRING("TEXTURE10","\x5a","\xac","\xa1","\xaa"),
	HX_HCSTRING("TEXTURE11","\x5b","\xac","\xa1","\xaa"),
	HX_HCSTRING("TEXTURE12","\x5c","\xac","\xa1","\xaa"),
	HX_HCSTRING("TEXTURE13","\x5d","\xac","\xa1","\xaa"),
	HX_HCSTRING("TEXTURE14","\x5e","\xac","\xa1","\xaa"),
	HX_HCSTRING("TEXTURE15","\x5f","\xac","\xa1","\xaa"),
	HX_HCSTRING("TEXTURE16","\x60","\xac","\xa1","\xaa"),
	HX_HCSTRING("TEXTURE17","\x61","\xac","\xa1","\xaa"),
	HX_HCSTRING("TEXTURE18","\x62","\xac","\xa1","\xaa"),
	HX_HCSTRING("TEXTURE19","\x63","\xac","\xa1","\xaa"),
	HX_HCSTRING("TEXTURE20","\x39","\xad","\xa1","\xaa"),
	HX_HCSTRING("TEXTURE21","\x3a","\xad","\xa1","\xaa"),
	HX_HCSTRING("TEXTURE22","\x3b","\xad","\xa1","\xaa"),
	HX_HCSTRING("TEXTURE23","\x3c","\xad","\xa1","\xaa"),
	HX_HCSTRING("TEXTURE24","\x3d","\xad","\xa1","\xaa"),
	HX_HCSTRING("TEXTURE25","\x3e","\xad","\xa1","\xaa"),
	HX_HCSTRING("TEXTURE26","\x3f","\xad","\xa1","\xaa"),
	HX_HCSTRING("TEXTURE27","\x40","\xad","\xa1","\xaa"),
	HX_HCSTRING("TEXTURE28","\x41","\xad","\xa1","\xaa"),
	HX_HCSTRING("TEXTURE29","\x42","\xad","\xa1","\xaa"),
	HX_HCSTRING("TEXTURE30","\x18","\xae","\xa1","\xaa"),
	HX_HCSTRING("TEXTURE31","\x19","\xae","\xa1","\xaa"),
	HX_HCSTRING("ACTIVE_TEXTURE","\x02","\x1a","\x22","\xce"),
	HX_HCSTRING("REPEAT","\x5b","\x43","\xff","\xb8"),
	HX_HCSTRING("CLAMP_TO_EDGE","\x1d","\xfc","\x5a","\x96"),
	HX_HCSTRING("MIRRORED_REPEAT","\x5c","\x94","\x80","\x4a"),
	HX_HCSTRING("FLOAT_VEC2","\x61","\xac","\xa4","\xeb"),
	HX_HCSTRING("FLOAT_VEC3","\x62","\xac","\xa4","\xeb"),
	HX_HCSTRING("FLOAT_VEC4","\x63","\xac","\xa4","\xeb"),
	HX_HCSTRING("INT_VEC2","\x2e","\x14","\x05","\x7d"),
	HX_HCSTRING("INT_VEC3","\x2f","\x14","\x05","\x7d"),
	HX_HCSTRING("INT_VEC4","\x30","\x14","\x05","\x7d"),
	HX_HCSTRING("BOOL","\x2a","\x4c","\xdc","\x2b"),
	HX_HCSTRING("BOOL_VEC2","\xf3","\x66","\x2b","\x2d"),
	HX_HCSTRING("BOOL_VEC3","\xf4","\x66","\x2b","\x2d"),
	HX_HCSTRING("BOOL_VEC4","\xf5","\x66","\x2b","\x2d"),
	HX_HCSTRING("FLOAT_MAT2","\x95","\xc6","\xae","\xe5"),
	HX_HCSTRING("FLOAT_MAT3","\x96","\xc6","\xae","\xe5"),
	HX_HCSTRING("FLOAT_MAT4","\x97","\xc6","\xae","\xe5"),
	HX_HCSTRING("SAMPLER_2D","\x09","\x2a","\x93","\x6e"),
	HX_HCSTRING("SAMPLER_CUBE","\xec","\x3e","\x82","\xa4"),
	HX_HCSTRING("VERTEX_ATTRIB_ARRAY_ENABLED","\x61","\x99","\x09","\x66"),
	HX_HCSTRING("VERTEX_ATTRIB_ARRAY_SIZE","\xc1","\x07","\xfd","\x08"),
	HX_HCSTRING("VERTEX_ATTRIB_ARRAY_STRIDE","\x19","\x2b","\x41","\x58"),
	HX_HCSTRING("VERTEX_ATTRIB_ARRAY_TYPE","\xba","\x59","\xb2","\x09"),
	HX_HCSTRING("VERTEX_ATTRIB_ARRAY_NORMALIZED","\x37","\xb7","\x22","\x78"),
	HX_HCSTRING("VERTEX_ATTRIB_ARRAY_POINTER","\x9d","\x55","\xfa","\x38"),
	HX_HCSTRING("VERTEX_ATTRIB_ARRAY_BUFFER_BINDING","\xa6","\x80","\x67","\x97"),
	HX_HCSTRING("VERTEX_PROGRAM_POINT_SIZE","\xe6","\x56","\xbe","\x34"),
	HX_HCSTRING("POINT_SPRITE","\x74","\x93","\x5c","\x14"),
	HX_HCSTRING("COMPILE_STATUS","\xde","\xcb","\x4e","\x8c"),
	HX_HCSTRING("LOW_FLOAT","\x31","\x04","\x74","\xe4"),
	HX_HCSTRING("MEDIUM_FLOAT","\xf2","\x8a","\x46","\xb9"),
	HX_HCSTRING("HIGH_FLOAT","\x9f","\xf9","\x3b","\x47"),
	HX_HCSTRING("LOW_INT","\x44","\x28","\x70","\x45"),
	HX_HCSTRING("MEDIUM_INT","\xc5","\xcc","\xaf","\x4f"),
	HX_HCSTRING("HIGH_INT","\x32","\x46","\x02","\x09"),
	HX_HCSTRING("FRAMEBUFFER","\xcd","\x20","\x84","\x50"),
	HX_HCSTRING("RENDERBUFFER","\xd6","\xa4","\xa4","\xa9"),
	HX_HCSTRING("RGBA4","\x00","\x05","\xfc","\x65"),
	HX_HCSTRING("RGB5_A1","\x47","\x8f","\xf9","\xd8"),
	HX_HCSTRING("RGB565","\xe7","\x41","\x7f","\xd6"),
	HX_HCSTRING("DEPTH_COMPONENT16","\x26","\xcc","\x68","\x43"),
	HX_HCSTRING("STENCIL_INDEX","\x0f","\x79","\xb6","\x97"),
	HX_HCSTRING("STENCIL_INDEX8","\x49","\x74","\xf3","\x27"),
	HX_HCSTRING("DEPTH_STENCIL","\x40","\x2f","\x20","\x2b"),
	HX_HCSTRING("RENDERBUFFER_WIDTH","\x7d","\x1e","\xe1","\x43"),
	HX_HCSTRING("RENDERBUFFER_HEIGHT","\x70","\x07","\x69","\xd7"),
	HX_HCSTRING("RENDERBUFFER_INTERNAL_FORMAT","\x90","\xda","\xeb","\xb5"),
	HX_HCSTRING("RENDERBUFFER_RED_SIZE","\x98","\xa5","\x58","\x5e"),
	HX_HCSTRING("RENDERBUFFER_GREEN_SIZE","\x26","\x9b","\x7d","\x3b"),
	HX_HCSTRING("RENDERBUFFER_BLUE_SIZE","\xdd","\x93","\x86","\xdd"),
	HX_HCSTRING("RENDERBUFFER_ALPHA_SIZE","\xab","\xf0","\x5d","\x87"),
	HX_HCSTRING("RENDERBUFFER_DEPTH_SIZE","\xe6","\x90","\x24","\xc3"),
	HX_HCSTRING("RENDERBUFFER_STENCIL_SIZE","\x8d","\xd5","\x5a","\x9d"),
	HX_HCSTRING("FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE","\x50","\x22","\x44","\x50"),
	HX_HCSTRING("FRAMEBUFFER_ATTACHMENT_OBJECT_NAME","\xe1","\xa1","\x3a","\x4c"),
	HX_HCSTRING("FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL","\xf6","\x9b","\xba","\x81"),
	HX_HCSTRING("FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE","\xdc","\x4c","\x39","\x8a"),
	HX_HCSTRING("COLOR_ATTACHMENT0","\xb1","\x9a","\xfe","\x86"),
	HX_HCSTRING("DEPTH_ATTACHMENT","\xff","\x54","\xcd","\xe9"),
	HX_HCSTRING("STENCIL_ATTACHMENT","\xa6","\x8c","\x28","\x01"),
	HX_HCSTRING("DEPTH_STENCIL_ATTACHMENT","\xc2","\xe1","\xe1","\x9f"),
	HX_HCSTRING("NONE","\xb8","\xda","\xca","\x33"),
	HX_HCSTRING("FRAMEBUFFER_COMPLETE","\xab","\x65","\x7d","\xea"),
	HX_HCSTRING("FRAMEBUFFER_INCOMPLETE_ATTACHMENT","\xf2","\xcf","\xb7","\x1d"),
	HX_HCSTRING("FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT","\x8b","\x0a","\xcd","\x77"),
	HX_HCSTRING("FRAMEBUFFER_INCOMPLETE_DIMENSIONS","\x5c","\x86","\xe4","\x1c"),
	HX_HCSTRING("FRAMEBUFFER_UNSUPPORTED","\xe3","\xa6","\x4e","\xc8"),
	HX_HCSTRING("FRAMEBUFFER_BINDING","\x73","\xee","\xae","\xc5"),
	HX_HCSTRING("RENDERBUFFER_BINDING","\x7c","\x23","\x70","\x23"),
	HX_HCSTRING("MAX_RENDERBUFFER_SIZE","\x4f","\xd4","\x3d","\x65"),
	HX_HCSTRING("INVALID_FRAMEBUFFER_OPERATION","\x2d","\xd4","\xc5","\x43"),
	HX_HCSTRING("UNPACK_FLIP_Y_WEBGL","\x0e","\x9f","\x94","\x9d"),
	HX_HCSTRING("UNPACK_PREMULTIPLY_ALPHA_WEBGL","\x73","\x5d","\xcb","\xc6"),
	HX_HCSTRING("CONTEXT_LOST_WEBGL","\x6e","\x67","\x71","\x45"),
	HX_HCSTRING("UNPACK_COLORSPACE_CONVERSION_WEBGL","\x9f","\xd9","\xf0","\xb9"),
	HX_HCSTRING("BROWSER_DEFAULT_WEBGL","\x04","\x04","\x92","\xc0"),
	HX_HCSTRING("version","\x18","\xe7","\xf1","\x7c"),
	HX_HCSTRING("context","\xef","\x95","\x77","\x19"),
	HX_HCSTRING("__currentProgram","\x6b","\x4a","\xcd","\x35"),
	HX_HCSTRING("activeTexture","\xb5","\x13","\xaa","\x56"),
	HX_HCSTRING("attachShader","\xca","\xd0","\x77","\xb2"),
	HX_HCSTRING("bindAttribLocation","\x3c","\xa6","\x30","\x1e"),
	HX_HCSTRING("bindBuffer","\x9d","\x92","\xbe","\xf8"),
	HX_HCSTRING("bindFramebuffer","\x30","\xc6","\x61","\xe7"),
	HX_HCSTRING("bindRenderbuffer","\x33","\xb6","\xb7","\x14"),
	HX_HCSTRING("bindTexture","\x9e","\xdc","\x51","\x9b"),
	HX_HCSTRING("blendColor","\x52","\x33","\xb4","\xe2"),
	HX_HCSTRING("blendEquation","\xfd","\x98","\xad","\x02"),
	HX_HCSTRING("blendEquationSeparate","\x80","\x39","\x68","\xa7"),
	HX_HCSTRING("blendFunc","\x35","\xfc","\x9b","\x07"),
	HX_HCSTRING("blendFuncSeparate","\xb8","\x94","\xc0","\xca"),
	HX_HCSTRING("bufferData","\x4a","\xbf","\x73","\x93"),
	HX_HCSTRING("bufferSubData","\xaa","\xf6","\xe4","\x45"),
	HX_HCSTRING("checkFramebufferStatus","\x17","\x26","\x75","\x0a"),
	HX_HCSTRING("clear","\x8d","\x71","\x5b","\x48"),
	HX_HCSTRING("clearColor","\x96","\xb0","\x66","\x1f"),
	HX_HCSTRING("clearDepth","\x36","\x30","\x34","\xac"),
	HX_HCSTRING("clearStencil","\xef","\x6f","\x82","\x5b"),
	HX_HCSTRING("colorMask","\xef","\xcb","\xc3","\x23"),
	HX_HCSTRING("compileShader","\xf8","\x70","\xb2","\xda"),
	HX_HCSTRING("compressedTexImage2D","\xa7","\xd8","\x5d","\x24"),
	HX_HCSTRING("compressedTexSubImage2D","\xd3","\xb5","\x7d","\x36"),
	HX_HCSTRING("copyTexImage2D","\xdb","\xd0","\x76","\xe4"),
	HX_HCSTRING("copyTexSubImage2D","\x1f","\xd6","\xae","\xa4"),
	HX_HCSTRING("createBuffer","\x1c","\xfd","\xe9","\xf2"),
	HX_HCSTRING("createFramebuffer","\x51","\xef","\xe8","\xcc"),
	HX_HCSTRING("createProgram","\xe8","\x22","\x3c","\xdc"),
	HX_HCSTRING("createRenderbuffer","\xf2","\x89","\x74","\x05"),
	HX_HCSTRING("createShader","\x41","\xff","\x75","\x3f"),
	HX_HCSTRING("createTexture","\x3f","\xa1","\x23","\x87"),
	HX_HCSTRING("cullFace","\x6f","\xe7","\x31","\xac"),
	HX_HCSTRING("deleteBuffer","\x8b","\xe3","\x2c","\x37"),
	HX_HCSTRING("deleteFramebuffer","\x82","\x56","\x01","\x50"),
	HX_HCSTRING("deleteProgram","\x99","\xdd","\x82","\x52"),
	HX_HCSTRING("deleteRenderbuffer","\xa1","\x6d","\xb6","\x37"),
	HX_HCSTRING("deleteShader","\xb0","\xe5","\xb8","\x83"),
	HX_HCSTRING("deleteTexture","\xf0","\x5b","\x6a","\xfd"),
	HX_HCSTRING("depthFunc","\xe7","\x45","\x48","\x9a"),
	HX_HCSTRING("depthMask","\x8f","\x9b","\xd9","\x9e"),
	HX_HCSTRING("depthRange","\xba","\x99","\x8b","\x40"),
	HX_HCSTRING("detachShader","\xd8","\xd0","\xad","\xea"),
	HX_HCSTRING("disable","\xe8","\x69","\x58","\xb1"),
	HX_HCSTRING("disableVertexAttribArray","\xe3","\x69","\x74","\x4a"),
	HX_HCSTRING("drawArrays","\xde","\xf3","\xb3","\xf9"),
	HX_HCSTRING("drawElements","\x5b","\xc2","\xb7","\x59"),
	HX_HCSTRING("enable","\x83","\xae","\x87","\xf8"),
	HX_HCSTRING("enableVertexAttribArray","\xe8","\x46","\x5a","\xac"),
	HX_HCSTRING("finish","\x53","\x40","\x7f","\x86"),
	HX_HCSTRING("flush","\xc4","\x62","\x9b","\x02"),
	HX_HCSTRING("framebufferRenderbuffer","\x63","\xdd","\xb2","\x36"),
	HX_HCSTRING("framebufferTexture2D","\xc0","\x66","\x22","\x24"),
	HX_HCSTRING("frontFace","\xe6","\x01","\xc1","\x80"),
	HX_HCSTRING("generateMipmap","\x9d","\xd6","\x0d","\x5b"),
	HX_HCSTRING("getActiveAttrib","\x66","\x8b","\x22","\x63"),
	HX_HCSTRING("getActiveUniform","\x98","\x35","\x4e","\xd7"),
	HX_HCSTRING("getAttachedShaders","\xb4","\x2e","\x77","\x93"),
	HX_HCSTRING("getAttribLocation","\xd5","\x1a","\x10","\x5d"),
	HX_HCSTRING("getBufferParameter","\x93","\x58","\xb4","\x14"),
	HX_HCSTRING("getContextAttributes","\x30","\xda","\xe1","\xad"),
	HX_HCSTRING("getError","\x52","\xdb","\x00","\xd3"),
	HX_HCSTRING("getExtension","\x09","\x30","\x67","\xf4"),
	HX_HCSTRING("getFramebufferAttachmentParameter","\x8f","\xbf","\x8d","\xff"),
	HX_HCSTRING("getParameter","\x33","\xd2","\x06","\x58"),
	HX_HCSTRING("getProgramInfoLog","\xc8","\xf1","\xf2","\xcd"),
	HX_HCSTRING("getProgramParameter","\x3b","\xc3","\x9c","\x96"),
	HX_HCSTRING("getRenderbufferParameter","\x7d","\xc1","\xd7","\x3c"),
	HX_HCSTRING("getShaderInfoLog","\x9b","\xbd","\xc8","\xf3"),
	HX_HCSTRING("getShaderParameter","\xce","\x69","\x5b","\x36"),
	HX_HCSTRING("getShaderPrecisionFormat","\xfa","\xb8","\xcf","\xce"),
	HX_HCSTRING("getShaderSource","\x96","\xa3","\x04","\xc5"),
	HX_HCSTRING("getSupportedExtensions","\xec","\x78","\x6d","\xa1"),
	HX_HCSTRING("getTexParameter","\x78","\x98","\xd3","\xd2"),
	HX_HCSTRING("getUniform","\x3e","\xc7","\xc5","\x04"),
	HX_HCSTRING("getUniformLocation","\x93","\x5f","\xd4","\x4f"),
	HX_HCSTRING("getVertexAttrib","\x84","\x2f","\x1c","\xa3"),
	HX_HCSTRING("getVertexAttribOffset","\x37","\xb6","\xce","\x56"),
	HX_HCSTRING("hint","\x87","\x3d","\x0e","\x45"),
	HX_HCSTRING("isBuffer","\x8a","\x58","\xfe","\x28"),
	HX_HCSTRING("isContextLost","\xa9","\xdf","\xdf","\x2d"),
	HX_HCSTRING("isEnabled","\xb7","\x81","\x2f","\x82"),
	HX_HCSTRING("isFramebuffer","\x23","\x65","\x6c","\x83"),
	HX_HCSTRING("isProgram","\xba","\xc7","\xf7","\xf7"),
	HX_HCSTRING("isRenderbuffer","\xe0","\x2b","\xf8","\x01"),
	HX_HCSTRING("isShader","\xaf","\x5a","\x8a","\x75"),
	HX_HCSTRING("isTexture","\x11","\x46","\xdf","\xa2"),
	HX_HCSTRING("lineWidth","\x72","\xb9","\x5d","\x11"),
	HX_HCSTRING("linkProgram","\xaa","\xad","\x7b","\x89"),
	HX_HCSTRING("pixelStorei","\x8e","\x34","\xc8","\x80"),
	HX_HCSTRING("polygonOffset","\xad","\x25","\x4d","\x66"),
	HX_HCSTRING("readPixels","\x23","\xd3","\x25","\x86"),
	HX_HCSTRING("renderbufferStorage","\x05","\xa1","\x70","\x87"),
	HX_HCSTRING("sampleCoverage","\x32","\x68","\x81","\x3b"),
	HX_HCSTRING("scissor","\x1c","\x28","\xe7","\x04"),
	HX_HCSTRING("shaderSource","\xe0","\x4d","\x1a","\xa2"),
	HX_HCSTRING("stencilFunc","\x60","\x83","\xbe","\x40"),
	HX_HCSTRING("stencilFuncSeparate","\xe3","\xbe","\xce","\xb2"),
	HX_HCSTRING("stencilMask","\x08","\xd9","\x4f","\x45"),
	HX_HCSTRING("stencilMaskSeparate","\x8b","\xfc","\xa9","\xc6"),
	HX_HCSTRING("stencilOp","\x3d","\x7a","\xec","\x56"),
	HX_HCSTRING("stencilOpSeparate","\xc0","\x5a","\x4a","\x53"),
	HX_HCSTRING("texImage2D","\xc6","\x7c","\x67","\xb9"),
	HX_HCSTRING("texParameterf","\x64","\x27","\x31","\x3c"),
	HX_HCSTRING("texParameteri","\x67","\x27","\x31","\x3c"),
	HX_HCSTRING("texSubImage2D","\x14","\x2f","\x90","\x28"),
	HX_HCSTRING("uniform1f","\x49","\x21","\xde","\x07"),
	HX_HCSTRING("uniform1fv","\x0d","\xff","\x7e","\xda"),
	HX_HCSTRING("uniform1i","\x4c","\x21","\xde","\x07"),
	HX_HCSTRING("uniform1iv","\xaa","\x01","\x7f","\xda"),
	HX_HCSTRING("uniform2f","\x28","\x22","\xde","\x07"),
	HX_HCSTRING("uniform2fv","\x4e","\xc1","\x7f","\xda"),
	HX_HCSTRING("uniform2i","\x2b","\x22","\xde","\x07"),
	HX_HCSTRING("uniform2iv","\xeb","\xc3","\x7f","\xda"),
	HX_HCSTRING("uniform3f","\x07","\x23","\xde","\x07"),
	HX_HCSTRING("uniform3fv","\x8f","\x83","\x80","\xda"),
	HX_HCSTRING("uniform3i","\x0a","\x23","\xde","\x07"),
	HX_HCSTRING("uniform3iv","\x2c","\x86","\x80","\xda"),
	HX_HCSTRING("uniform4f","\xe6","\x23","\xde","\x07"),
	HX_HCSTRING("uniform4fv","\xd0","\x45","\x81","\xda"),
	HX_HCSTRING("uniform4i","\xe9","\x23","\xde","\x07"),
	HX_HCSTRING("uniform4iv","\x6d","\x48","\x81","\xda"),
	HX_HCSTRING("uniformMatrix2fv","\x8d","\x8a","\x59","\xc5"),
	HX_HCSTRING("uniformMatrix3fv","\xce","\x4c","\x5a","\xc5"),
	HX_HCSTRING("uniformMatrix4fv","\x0f","\x0f","\x5b","\xc5"),
	HX_HCSTRING("useProgram","\xfd","\x6c","\xac","\xf6"),
	HX_HCSTRING("validateProgram","\x8e","\x80","\x0f","\xef"),
	HX_HCSTRING("vertexAttrib1f","\x63","\x94","\xb6","\x53"),
	HX_HCSTRING("vertexAttrib1fv","\xb3","\x42","\x0b","\xec"),
	HX_HCSTRING("vertexAttrib2f","\x42","\x95","\xb6","\x53"),
	HX_HCSTRING("vertexAttrib2fv","\xf4","\x04","\x0c","\xec"),
	HX_HCSTRING("vertexAttrib3f","\x21","\x96","\xb6","\x53"),
	HX_HCSTRING("vertexAttrib3fv","\x35","\xc7","\x0c","\xec"),
	HX_HCSTRING("vertexAttrib4f","\x00","\x97","\xb6","\x53"),
	HX_HCSTRING("vertexAttrib4fv","\x76","\x89","\x0d","\xec"),
	HX_HCSTRING("vertexAttribPointer","\x8f","\x04","\xb6","\x3f"),
	HX_HCSTRING("viewport","\x66","\x4c","\xa5","\x9c"),
	HX_HCSTRING("get_version","\x2f","\x47","\xec","\x02"),
	::String(null())
};

void GL_obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("lime.graphics.opengl.GL","\x1a","\xed","\x24","\xf2");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &GL_obj::__GetStatic;
	__mClass->mSetStaticField = &GL_obj::__SetStatic;
	__mClass->mMarkFunc = GL_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(GL_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< GL_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = GL_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = GL_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = GL_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void GL_obj::__boot()
{
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",19,0xa5aa2623)
HXLINE(  19)		DEPTH_BUFFER_BIT = (int)256;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",20,0xa5aa2623)
HXLINE(  20)		STENCIL_BUFFER_BIT = (int)1024;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",21,0xa5aa2623)
HXLINE(  21)		COLOR_BUFFER_BIT = (int)16384;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",23,0xa5aa2623)
HXLINE(  23)		POINTS = (int)0;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",24,0xa5aa2623)
HXLINE(  24)		LINES = (int)1;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",25,0xa5aa2623)
HXLINE(  25)		LINE_LOOP = (int)2;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",26,0xa5aa2623)
HXLINE(  26)		LINE_STRIP = (int)3;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",27,0xa5aa2623)
HXLINE(  27)		TRIANGLES = (int)4;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",28,0xa5aa2623)
HXLINE(  28)		TRIANGLE_STRIP = (int)5;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",29,0xa5aa2623)
HXLINE(  29)		TRIANGLE_FAN = (int)6;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",31,0xa5aa2623)
HXLINE(  31)		ZERO = (int)0;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",32,0xa5aa2623)
HXLINE(  32)		ONE = (int)1;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",33,0xa5aa2623)
HXLINE(  33)		SRC_COLOR = (int)768;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",34,0xa5aa2623)
HXLINE(  34)		ONE_MINUS_SRC_COLOR = (int)769;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",35,0xa5aa2623)
HXLINE(  35)		SRC_ALPHA = (int)770;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",36,0xa5aa2623)
HXLINE(  36)		ONE_MINUS_SRC_ALPHA = (int)771;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",37,0xa5aa2623)
HXLINE(  37)		DST_ALPHA = (int)772;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",38,0xa5aa2623)
HXLINE(  38)		ONE_MINUS_DST_ALPHA = (int)773;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",40,0xa5aa2623)
HXLINE(  40)		DST_COLOR = (int)774;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",41,0xa5aa2623)
HXLINE(  41)		ONE_MINUS_DST_COLOR = (int)775;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",42,0xa5aa2623)
HXLINE(  42)		SRC_ALPHA_SATURATE = (int)776;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",44,0xa5aa2623)
HXLINE(  44)		FUNC_ADD = (int)32774;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",45,0xa5aa2623)
HXLINE(  45)		BLEND_EQUATION = (int)32777;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",46,0xa5aa2623)
HXLINE(  46)		BLEND_EQUATION_RGB = (int)32777;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",47,0xa5aa2623)
HXLINE(  47)		BLEND_EQUATION_ALPHA = (int)34877;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",49,0xa5aa2623)
HXLINE(  49)		FUNC_SUBTRACT = (int)32778;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",50,0xa5aa2623)
HXLINE(  50)		FUNC_REVERSE_SUBTRACT = (int)32779;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",52,0xa5aa2623)
HXLINE(  52)		BLEND_DST_RGB = (int)32968;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",53,0xa5aa2623)
HXLINE(  53)		BLEND_SRC_RGB = (int)32969;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",54,0xa5aa2623)
HXLINE(  54)		BLEND_DST_ALPHA = (int)32970;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",55,0xa5aa2623)
HXLINE(  55)		BLEND_SRC_ALPHA = (int)32971;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",56,0xa5aa2623)
HXLINE(  56)		CONSTANT_COLOR = (int)32769;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",57,0xa5aa2623)
HXLINE(  57)		ONE_MINUS_CONSTANT_COLOR = (int)32770;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",58,0xa5aa2623)
HXLINE(  58)		CONSTANT_ALPHA = (int)32771;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",59,0xa5aa2623)
HXLINE(  59)		ONE_MINUS_CONSTANT_ALPHA = (int)32772;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",60,0xa5aa2623)
HXLINE(  60)		BLEND_COLOR = (int)32773;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",62,0xa5aa2623)
HXLINE(  62)		ARRAY_BUFFER = (int)34962;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",63,0xa5aa2623)
HXLINE(  63)		ELEMENT_ARRAY_BUFFER = (int)34963;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",64,0xa5aa2623)
HXLINE(  64)		ARRAY_BUFFER_BINDING = (int)34964;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",65,0xa5aa2623)
HXLINE(  65)		ELEMENT_ARRAY_BUFFER_BINDING = (int)34965;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",67,0xa5aa2623)
HXLINE(  67)		STREAM_DRAW = (int)35040;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",68,0xa5aa2623)
HXLINE(  68)		STATIC_DRAW = (int)35044;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",69,0xa5aa2623)
HXLINE(  69)		DYNAMIC_DRAW = (int)35048;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",71,0xa5aa2623)
HXLINE(  71)		BUFFER_SIZE = (int)34660;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",72,0xa5aa2623)
HXLINE(  72)		BUFFER_USAGE = (int)34661;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",74,0xa5aa2623)
HXLINE(  74)		CURRENT_VERTEX_ATTRIB = (int)34342;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",76,0xa5aa2623)
HXLINE(  76)		FRONT = (int)1028;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",77,0xa5aa2623)
HXLINE(  77)		BACK = (int)1029;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",78,0xa5aa2623)
HXLINE(  78)		FRONT_AND_BACK = (int)1032;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",80,0xa5aa2623)
HXLINE(  80)		CULL_FACE = (int)2884;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",81,0xa5aa2623)
HXLINE(  81)		BLEND = (int)3042;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",82,0xa5aa2623)
HXLINE(  82)		DITHER = (int)3024;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",83,0xa5aa2623)
HXLINE(  83)		STENCIL_TEST = (int)2960;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",84,0xa5aa2623)
HXLINE(  84)		DEPTH_TEST = (int)2929;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",85,0xa5aa2623)
HXLINE(  85)		SCISSOR_TEST = (int)3089;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",86,0xa5aa2623)
HXLINE(  86)		POLYGON_OFFSET_FILL = (int)32823;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",87,0xa5aa2623)
HXLINE(  87)		SAMPLE_ALPHA_TO_COVERAGE = (int)32926;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",88,0xa5aa2623)
HXLINE(  88)		SAMPLE_COVERAGE = (int)32928;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",90,0xa5aa2623)
HXLINE(  90)		NO_ERROR = (int)0;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",91,0xa5aa2623)
HXLINE(  91)		INVALID_ENUM = (int)1280;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",92,0xa5aa2623)
HXLINE(  92)		INVALID_VALUE = (int)1281;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",93,0xa5aa2623)
HXLINE(  93)		INVALID_OPERATION = (int)1282;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",94,0xa5aa2623)
HXLINE(  94)		OUT_OF_MEMORY = (int)1285;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",96,0xa5aa2623)
HXLINE(  96)		CW = (int)2304;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",97,0xa5aa2623)
HXLINE(  97)		CCW = (int)2305;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",99,0xa5aa2623)
HXLINE(  99)		LINE_WIDTH = (int)2849;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",100,0xa5aa2623)
HXLINE( 100)		ALIASED_POINT_SIZE_RANGE = (int)33901;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",101,0xa5aa2623)
HXLINE( 101)		ALIASED_LINE_WIDTH_RANGE = (int)33902;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",102,0xa5aa2623)
HXLINE( 102)		CULL_FACE_MODE = (int)2885;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",103,0xa5aa2623)
HXLINE( 103)		FRONT_FACE = (int)2886;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",104,0xa5aa2623)
HXLINE( 104)		DEPTH_RANGE = (int)2928;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",105,0xa5aa2623)
HXLINE( 105)		DEPTH_WRITEMASK = (int)2930;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",106,0xa5aa2623)
HXLINE( 106)		DEPTH_CLEAR_VALUE = (int)2931;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",107,0xa5aa2623)
HXLINE( 107)		DEPTH_FUNC = (int)2932;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",108,0xa5aa2623)
HXLINE( 108)		STENCIL_CLEAR_VALUE = (int)2961;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",109,0xa5aa2623)
HXLINE( 109)		STENCIL_FUNC = (int)2962;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",110,0xa5aa2623)
HXLINE( 110)		STENCIL_FAIL = (int)2964;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",111,0xa5aa2623)
HXLINE( 111)		STENCIL_PASS_DEPTH_FAIL = (int)2965;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",112,0xa5aa2623)
HXLINE( 112)		STENCIL_PASS_DEPTH_PASS = (int)2966;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",113,0xa5aa2623)
HXLINE( 113)		STENCIL_REF = (int)2967;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",114,0xa5aa2623)
HXLINE( 114)		STENCIL_VALUE_MASK = (int)2963;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",115,0xa5aa2623)
HXLINE( 115)		STENCIL_WRITEMASK = (int)2968;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",116,0xa5aa2623)
HXLINE( 116)		STENCIL_BACK_FUNC = (int)34816;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",117,0xa5aa2623)
HXLINE( 117)		STENCIL_BACK_FAIL = (int)34817;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",118,0xa5aa2623)
HXLINE( 118)		STENCIL_BACK_PASS_DEPTH_FAIL = (int)34818;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",119,0xa5aa2623)
HXLINE( 119)		STENCIL_BACK_PASS_DEPTH_PASS = (int)34819;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",120,0xa5aa2623)
HXLINE( 120)		STENCIL_BACK_REF = (int)36003;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",121,0xa5aa2623)
HXLINE( 121)		STENCIL_BACK_VALUE_MASK = (int)36004;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",122,0xa5aa2623)
HXLINE( 122)		STENCIL_BACK_WRITEMASK = (int)36005;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",123,0xa5aa2623)
HXLINE( 123)		VIEWPORT = (int)2978;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",124,0xa5aa2623)
HXLINE( 124)		SCISSOR_BOX = (int)3088;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",126,0xa5aa2623)
HXLINE( 126)		COLOR_CLEAR_VALUE = (int)3106;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",127,0xa5aa2623)
HXLINE( 127)		COLOR_WRITEMASK = (int)3107;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",128,0xa5aa2623)
HXLINE( 128)		UNPACK_ALIGNMENT = (int)3317;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",129,0xa5aa2623)
HXLINE( 129)		PACK_ALIGNMENT = (int)3333;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",130,0xa5aa2623)
HXLINE( 130)		MAX_TEXTURE_SIZE = (int)3379;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",131,0xa5aa2623)
HXLINE( 131)		MAX_VIEWPORT_DIMS = (int)3386;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",132,0xa5aa2623)
HXLINE( 132)		SUBPIXEL_BITS = (int)3408;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",133,0xa5aa2623)
HXLINE( 133)		RED_BITS = (int)3410;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",134,0xa5aa2623)
HXLINE( 134)		GREEN_BITS = (int)3411;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",135,0xa5aa2623)
HXLINE( 135)		BLUE_BITS = (int)3412;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",136,0xa5aa2623)
HXLINE( 136)		ALPHA_BITS = (int)3413;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",137,0xa5aa2623)
HXLINE( 137)		DEPTH_BITS = (int)3414;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",138,0xa5aa2623)
HXLINE( 138)		STENCIL_BITS = (int)3415;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",139,0xa5aa2623)
HXLINE( 139)		POLYGON_OFFSET_UNITS = (int)10752;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",141,0xa5aa2623)
HXLINE( 141)		POLYGON_OFFSET_FACTOR = (int)32824;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",142,0xa5aa2623)
HXLINE( 142)		TEXTURE_BINDING_2D = (int)32873;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",143,0xa5aa2623)
HXLINE( 143)		SAMPLE_BUFFERS = (int)32936;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",144,0xa5aa2623)
HXLINE( 144)		SAMPLES = (int)32937;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",145,0xa5aa2623)
HXLINE( 145)		SAMPLE_COVERAGE_VALUE = (int)32938;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",146,0xa5aa2623)
HXLINE( 146)		SAMPLE_COVERAGE_INVERT = (int)32939;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",148,0xa5aa2623)
HXLINE( 148)		COMPRESSED_TEXTURE_FORMATS = (int)34467;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",150,0xa5aa2623)
HXLINE( 150)		DONT_CARE = (int)4352;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",151,0xa5aa2623)
HXLINE( 151)		FASTEST = (int)4353;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",152,0xa5aa2623)
HXLINE( 152)		NICEST = (int)4354;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",154,0xa5aa2623)
HXLINE( 154)		GENERATE_MIPMAP_HINT = (int)33170;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",156,0xa5aa2623)
HXLINE( 156)		BYTE = (int)5120;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",157,0xa5aa2623)
HXLINE( 157)		UNSIGNED_BYTE = (int)5121;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",158,0xa5aa2623)
HXLINE( 158)		SHORT = (int)5122;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",159,0xa5aa2623)
HXLINE( 159)		UNSIGNED_SHORT = (int)5123;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",160,0xa5aa2623)
HXLINE( 160)		INT = (int)5124;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",161,0xa5aa2623)
HXLINE( 161)		UNSIGNED_INT = (int)5125;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",162,0xa5aa2623)
HXLINE( 162)		FLOAT = (int)5126;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",164,0xa5aa2623)
HXLINE( 164)		DEPTH_COMPONENT = (int)6402;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",165,0xa5aa2623)
HXLINE( 165)		ALPHA = (int)6406;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",166,0xa5aa2623)
HXLINE( 166)		RGB = (int)6407;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",167,0xa5aa2623)
HXLINE( 167)		RGBA = (int)6408;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",168,0xa5aa2623)
HXLINE( 168)		BGR_EXT = (int)32992;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",169,0xa5aa2623)
HXLINE( 169)		BGRA_EXT = (int)32993;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",170,0xa5aa2623)
HXLINE( 170)		LUMINANCE = (int)6409;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",171,0xa5aa2623)
HXLINE( 171)		LUMINANCE_ALPHA = (int)6410;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",173,0xa5aa2623)
HXLINE( 173)		UNSIGNED_SHORT_4_4_4_4 = (int)32819;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",174,0xa5aa2623)
HXLINE( 174)		UNSIGNED_SHORT_5_5_5_1 = (int)32820;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",175,0xa5aa2623)
HXLINE( 175)		UNSIGNED_SHORT_5_6_5 = (int)33635;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",177,0xa5aa2623)
HXLINE( 177)		FRAGMENT_SHADER = (int)35632;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",178,0xa5aa2623)
HXLINE( 178)		VERTEX_SHADER = (int)35633;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",179,0xa5aa2623)
HXLINE( 179)		MAX_VERTEX_ATTRIBS = (int)34921;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",180,0xa5aa2623)
HXLINE( 180)		MAX_VERTEX_UNIFORM_VECTORS = (int)36347;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",181,0xa5aa2623)
HXLINE( 181)		MAX_VARYING_VECTORS = (int)36348;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",182,0xa5aa2623)
HXLINE( 182)		MAX_COMBINED_TEXTURE_IMAGE_UNITS = (int)35661;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",183,0xa5aa2623)
HXLINE( 183)		MAX_VERTEX_TEXTURE_IMAGE_UNITS = (int)35660;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",184,0xa5aa2623)
HXLINE( 184)		MAX_TEXTURE_IMAGE_UNITS = (int)34930;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",185,0xa5aa2623)
HXLINE( 185)		MAX_FRAGMENT_UNIFORM_VECTORS = (int)36349;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",186,0xa5aa2623)
HXLINE( 186)		SHADER_TYPE = (int)35663;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",187,0xa5aa2623)
HXLINE( 187)		DELETE_STATUS = (int)35712;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",188,0xa5aa2623)
HXLINE( 188)		LINK_STATUS = (int)35714;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",189,0xa5aa2623)
HXLINE( 189)		VALIDATE_STATUS = (int)35715;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",190,0xa5aa2623)
HXLINE( 190)		ATTACHED_SHADERS = (int)35717;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",191,0xa5aa2623)
HXLINE( 191)		ACTIVE_UNIFORMS = (int)35718;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",192,0xa5aa2623)
HXLINE( 192)		ACTIVE_ATTRIBUTES = (int)35721;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",193,0xa5aa2623)
HXLINE( 193)		SHADING_LANGUAGE_VERSION = (int)35724;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",194,0xa5aa2623)
HXLINE( 194)		CURRENT_PROGRAM = (int)35725;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",196,0xa5aa2623)
HXLINE( 196)		NEVER = (int)512;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",197,0xa5aa2623)
HXLINE( 197)		LESS = (int)513;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",198,0xa5aa2623)
HXLINE( 198)		EQUAL = (int)514;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",199,0xa5aa2623)
HXLINE( 199)		LEQUAL = (int)515;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",200,0xa5aa2623)
HXLINE( 200)		GREATER = (int)516;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",201,0xa5aa2623)
HXLINE( 201)		NOTEQUAL = (int)517;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",202,0xa5aa2623)
HXLINE( 202)		GEQUAL = (int)518;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",203,0xa5aa2623)
HXLINE( 203)		ALWAYS = (int)519;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",205,0xa5aa2623)
HXLINE( 205)		KEEP = (int)7680;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",206,0xa5aa2623)
HXLINE( 206)		REPLACE = (int)7681;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",207,0xa5aa2623)
HXLINE( 207)		INCR = (int)7682;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",208,0xa5aa2623)
HXLINE( 208)		DECR = (int)7683;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",209,0xa5aa2623)
HXLINE( 209)		INVERT = (int)5386;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",210,0xa5aa2623)
HXLINE( 210)		INCR_WRAP = (int)34055;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",211,0xa5aa2623)
HXLINE( 211)		DECR_WRAP = (int)34056;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",213,0xa5aa2623)
HXLINE( 213)		VENDOR = (int)7936;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",214,0xa5aa2623)
HXLINE( 214)		RENDERER = (int)7937;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",215,0xa5aa2623)
HXLINE( 215)		VERSION = (int)7938;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",217,0xa5aa2623)
HXLINE( 217)		NEAREST = (int)9728;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",218,0xa5aa2623)
HXLINE( 218)		LINEAR = (int)9729;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",220,0xa5aa2623)
HXLINE( 220)		NEAREST_MIPMAP_NEAREST = (int)9984;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",221,0xa5aa2623)
HXLINE( 221)		LINEAR_MIPMAP_NEAREST = (int)9985;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",222,0xa5aa2623)
HXLINE( 222)		NEAREST_MIPMAP_LINEAR = (int)9986;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",223,0xa5aa2623)
HXLINE( 223)		LINEAR_MIPMAP_LINEAR = (int)9987;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",225,0xa5aa2623)
HXLINE( 225)		TEXTURE_MAG_FILTER = (int)10240;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",226,0xa5aa2623)
HXLINE( 226)		TEXTURE_MIN_FILTER = (int)10241;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",227,0xa5aa2623)
HXLINE( 227)		TEXTURE_WRAP_S = (int)10242;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",228,0xa5aa2623)
HXLINE( 228)		TEXTURE_WRAP_T = (int)10243;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",230,0xa5aa2623)
HXLINE( 230)		TEXTURE_2D = (int)3553;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",231,0xa5aa2623)
HXLINE( 231)		TEXTURE = (int)5890;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",233,0xa5aa2623)
HXLINE( 233)		TEXTURE_CUBE_MAP = (int)34067;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",234,0xa5aa2623)
HXLINE( 234)		TEXTURE_BINDING_CUBE_MAP = (int)34068;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",235,0xa5aa2623)
HXLINE( 235)		TEXTURE_CUBE_MAP_POSITIVE_X = (int)34069;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",236,0xa5aa2623)
HXLINE( 236)		TEXTURE_CUBE_MAP_NEGATIVE_X = (int)34070;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",237,0xa5aa2623)
HXLINE( 237)		TEXTURE_CUBE_MAP_POSITIVE_Y = (int)34071;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",238,0xa5aa2623)
HXLINE( 238)		TEXTURE_CUBE_MAP_NEGATIVE_Y = (int)34072;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",239,0xa5aa2623)
HXLINE( 239)		TEXTURE_CUBE_MAP_POSITIVE_Z = (int)34073;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",240,0xa5aa2623)
HXLINE( 240)		TEXTURE_CUBE_MAP_NEGATIVE_Z = (int)34074;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",241,0xa5aa2623)
HXLINE( 241)		MAX_CUBE_MAP_TEXTURE_SIZE = (int)34076;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",243,0xa5aa2623)
HXLINE( 243)		TEXTURE0 = (int)33984;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",244,0xa5aa2623)
HXLINE( 244)		TEXTURE1 = (int)33985;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",245,0xa5aa2623)
HXLINE( 245)		TEXTURE2 = (int)33986;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",246,0xa5aa2623)
HXLINE( 246)		TEXTURE3 = (int)33987;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",247,0xa5aa2623)
HXLINE( 247)		TEXTURE4 = (int)33988;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",248,0xa5aa2623)
HXLINE( 248)		TEXTURE5 = (int)33989;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",249,0xa5aa2623)
HXLINE( 249)		TEXTURE6 = (int)33990;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",250,0xa5aa2623)
HXLINE( 250)		TEXTURE7 = (int)33991;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",251,0xa5aa2623)
HXLINE( 251)		TEXTURE8 = (int)33992;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",252,0xa5aa2623)
HXLINE( 252)		TEXTURE9 = (int)33993;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",253,0xa5aa2623)
HXLINE( 253)		TEXTURE10 = (int)33994;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",254,0xa5aa2623)
HXLINE( 254)		TEXTURE11 = (int)33995;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",255,0xa5aa2623)
HXLINE( 255)		TEXTURE12 = (int)33996;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",256,0xa5aa2623)
HXLINE( 256)		TEXTURE13 = (int)33997;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",257,0xa5aa2623)
HXLINE( 257)		TEXTURE14 = (int)33998;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",258,0xa5aa2623)
HXLINE( 258)		TEXTURE15 = (int)33999;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",259,0xa5aa2623)
HXLINE( 259)		TEXTURE16 = (int)34000;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",260,0xa5aa2623)
HXLINE( 260)		TEXTURE17 = (int)34001;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",261,0xa5aa2623)
HXLINE( 261)		TEXTURE18 = (int)34002;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",262,0xa5aa2623)
HXLINE( 262)		TEXTURE19 = (int)34003;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",263,0xa5aa2623)
HXLINE( 263)		TEXTURE20 = (int)34004;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",264,0xa5aa2623)
HXLINE( 264)		TEXTURE21 = (int)34005;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",265,0xa5aa2623)
HXLINE( 265)		TEXTURE22 = (int)34006;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",266,0xa5aa2623)
HXLINE( 266)		TEXTURE23 = (int)34007;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",267,0xa5aa2623)
HXLINE( 267)		TEXTURE24 = (int)34008;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",268,0xa5aa2623)
HXLINE( 268)		TEXTURE25 = (int)34009;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",269,0xa5aa2623)
HXLINE( 269)		TEXTURE26 = (int)34010;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",270,0xa5aa2623)
HXLINE( 270)		TEXTURE27 = (int)34011;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",271,0xa5aa2623)
HXLINE( 271)		TEXTURE28 = (int)34012;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",272,0xa5aa2623)
HXLINE( 272)		TEXTURE29 = (int)34013;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",273,0xa5aa2623)
HXLINE( 273)		TEXTURE30 = (int)34014;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",274,0xa5aa2623)
HXLINE( 274)		TEXTURE31 = (int)34015;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",275,0xa5aa2623)
HXLINE( 275)		ACTIVE_TEXTURE = (int)34016;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",277,0xa5aa2623)
HXLINE( 277)		REPEAT = (int)10497;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",278,0xa5aa2623)
HXLINE( 278)		CLAMP_TO_EDGE = (int)33071;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",279,0xa5aa2623)
HXLINE( 279)		MIRRORED_REPEAT = (int)33648;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",281,0xa5aa2623)
HXLINE( 281)		FLOAT_VEC2 = (int)35664;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",282,0xa5aa2623)
HXLINE( 282)		FLOAT_VEC3 = (int)35665;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",283,0xa5aa2623)
HXLINE( 283)		FLOAT_VEC4 = (int)35666;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",284,0xa5aa2623)
HXLINE( 284)		INT_VEC2 = (int)35667;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",285,0xa5aa2623)
HXLINE( 285)		INT_VEC3 = (int)35668;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",286,0xa5aa2623)
HXLINE( 286)		INT_VEC4 = (int)35669;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",287,0xa5aa2623)
HXLINE( 287)		BOOL = (int)35670;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",288,0xa5aa2623)
HXLINE( 288)		BOOL_VEC2 = (int)35671;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",289,0xa5aa2623)
HXLINE( 289)		BOOL_VEC3 = (int)35672;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",290,0xa5aa2623)
HXLINE( 290)		BOOL_VEC4 = (int)35673;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",291,0xa5aa2623)
HXLINE( 291)		FLOAT_MAT2 = (int)35674;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",292,0xa5aa2623)
HXLINE( 292)		FLOAT_MAT3 = (int)35675;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",293,0xa5aa2623)
HXLINE( 293)		FLOAT_MAT4 = (int)35676;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",294,0xa5aa2623)
HXLINE( 294)		SAMPLER_2D = (int)35678;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",295,0xa5aa2623)
HXLINE( 295)		SAMPLER_CUBE = (int)35680;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",297,0xa5aa2623)
HXLINE( 297)		VERTEX_ATTRIB_ARRAY_ENABLED = (int)34338;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",298,0xa5aa2623)
HXLINE( 298)		VERTEX_ATTRIB_ARRAY_SIZE = (int)34339;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",299,0xa5aa2623)
HXLINE( 299)		VERTEX_ATTRIB_ARRAY_STRIDE = (int)34340;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",300,0xa5aa2623)
HXLINE( 300)		VERTEX_ATTRIB_ARRAY_TYPE = (int)34341;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",301,0xa5aa2623)
HXLINE( 301)		VERTEX_ATTRIB_ARRAY_NORMALIZED = (int)34922;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",302,0xa5aa2623)
HXLINE( 302)		VERTEX_ATTRIB_ARRAY_POINTER = (int)34373;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",303,0xa5aa2623)
HXLINE( 303)		VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = (int)34975;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",305,0xa5aa2623)
HXLINE( 305)		VERTEX_PROGRAM_POINT_SIZE = (int)34370;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",306,0xa5aa2623)
HXLINE( 306)		POINT_SPRITE = (int)34913;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",308,0xa5aa2623)
HXLINE( 308)		COMPILE_STATUS = (int)35713;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",310,0xa5aa2623)
HXLINE( 310)		LOW_FLOAT = (int)36336;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",311,0xa5aa2623)
HXLINE( 311)		MEDIUM_FLOAT = (int)36337;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",312,0xa5aa2623)
HXLINE( 312)		HIGH_FLOAT = (int)36338;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",313,0xa5aa2623)
HXLINE( 313)		LOW_INT = (int)36339;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",314,0xa5aa2623)
HXLINE( 314)		MEDIUM_INT = (int)36340;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",315,0xa5aa2623)
HXLINE( 315)		HIGH_INT = (int)36341;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",317,0xa5aa2623)
HXLINE( 317)		FRAMEBUFFER = (int)36160;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",318,0xa5aa2623)
HXLINE( 318)		RENDERBUFFER = (int)36161;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",320,0xa5aa2623)
HXLINE( 320)		RGBA4 = (int)32854;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",321,0xa5aa2623)
HXLINE( 321)		RGB5_A1 = (int)32855;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",322,0xa5aa2623)
HXLINE( 322)		RGB565 = (int)36194;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",323,0xa5aa2623)
HXLINE( 323)		DEPTH_COMPONENT16 = (int)33189;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",324,0xa5aa2623)
HXLINE( 324)		STENCIL_INDEX = (int)6401;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",325,0xa5aa2623)
HXLINE( 325)		STENCIL_INDEX8 = (int)36168;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",326,0xa5aa2623)
HXLINE( 326)		DEPTH_STENCIL = (int)34041;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",328,0xa5aa2623)
HXLINE( 328)		RENDERBUFFER_WIDTH = (int)36162;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",329,0xa5aa2623)
HXLINE( 329)		RENDERBUFFER_HEIGHT = (int)36163;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",330,0xa5aa2623)
HXLINE( 330)		RENDERBUFFER_INTERNAL_FORMAT = (int)36164;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",331,0xa5aa2623)
HXLINE( 331)		RENDERBUFFER_RED_SIZE = (int)36176;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",332,0xa5aa2623)
HXLINE( 332)		RENDERBUFFER_GREEN_SIZE = (int)36177;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",333,0xa5aa2623)
HXLINE( 333)		RENDERBUFFER_BLUE_SIZE = (int)36178;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",334,0xa5aa2623)
HXLINE( 334)		RENDERBUFFER_ALPHA_SIZE = (int)36179;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",335,0xa5aa2623)
HXLINE( 335)		RENDERBUFFER_DEPTH_SIZE = (int)36180;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",336,0xa5aa2623)
HXLINE( 336)		RENDERBUFFER_STENCIL_SIZE = (int)36181;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",338,0xa5aa2623)
HXLINE( 338)		FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = (int)36048;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",339,0xa5aa2623)
HXLINE( 339)		FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = (int)36049;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",340,0xa5aa2623)
HXLINE( 340)		FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = (int)36050;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",341,0xa5aa2623)
HXLINE( 341)		FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = (int)36051;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",343,0xa5aa2623)
HXLINE( 343)		COLOR_ATTACHMENT0 = (int)36064;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",344,0xa5aa2623)
HXLINE( 344)		DEPTH_ATTACHMENT = (int)36096;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",345,0xa5aa2623)
HXLINE( 345)		STENCIL_ATTACHMENT = (int)36128;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",346,0xa5aa2623)
HXLINE( 346)		DEPTH_STENCIL_ATTACHMENT = (int)33306;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",348,0xa5aa2623)
HXLINE( 348)		NONE = (int)0;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",350,0xa5aa2623)
HXLINE( 350)		FRAMEBUFFER_COMPLETE = (int)36053;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",351,0xa5aa2623)
HXLINE( 351)		FRAMEBUFFER_INCOMPLETE_ATTACHMENT = (int)36054;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",352,0xa5aa2623)
HXLINE( 352)		FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = (int)36055;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",353,0xa5aa2623)
HXLINE( 353)		FRAMEBUFFER_INCOMPLETE_DIMENSIONS = (int)36057;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",354,0xa5aa2623)
HXLINE( 354)		FRAMEBUFFER_UNSUPPORTED = (int)36061;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",356,0xa5aa2623)
HXLINE( 356)		FRAMEBUFFER_BINDING = (int)36006;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",357,0xa5aa2623)
HXLINE( 357)		RENDERBUFFER_BINDING = (int)36007;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",358,0xa5aa2623)
HXLINE( 358)		MAX_RENDERBUFFER_SIZE = (int)34024;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",360,0xa5aa2623)
HXLINE( 360)		INVALID_FRAMEBUFFER_OPERATION = (int)1286;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",362,0xa5aa2623)
HXLINE( 362)		UNPACK_FLIP_Y_WEBGL = (int)37440;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",363,0xa5aa2623)
HXLINE( 363)		UNPACK_PREMULTIPLY_ALPHA_WEBGL = (int)37441;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",364,0xa5aa2623)
HXLINE( 364)		CONTEXT_LOST_WEBGL = (int)37442;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",365,0xa5aa2623)
HXLINE( 365)		UNPACK_COLORSPACE_CONVERSION_WEBGL = (int)37443;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",366,0xa5aa2623)
HXLINE( 366)		BROWSER_DEFAULT_WEBGL = (int)37444;
            	}
}

} // end namespace lime
} // end namespace graphics
} // end namespace opengl
