// Generated by Haxe 3.3.0
#include <hxcpp.h>

#include "hxMath.h"
#ifndef INCLUDED_Date
#include <Date.h>
#endif
#ifndef INCLUDED_List
#include <List.h>
#endif
#ifndef INCLUDED_Reflect
#include <Reflect.h>
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_StringBuf
#include <StringBuf.h>
#endif
#ifndef INCLUDED_StringTools
#include <StringTools.h>
#endif
#ifndef INCLUDED_Type
#include <Type.h>
#endif
#ifndef INCLUDED_ValueType
#include <ValueType.h>
#endif
#ifndef INCLUDED__List_ListNode
#include <_List/ListNode.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_Serializer
#include <haxe/Serializer.h>
#endif
#ifndef INCLUDED_haxe_ds_IntMap
#include <haxe/ds/IntMap.h>
#endif
#ifndef INCLUDED_haxe_ds_ObjectMap
#include <haxe/ds/ObjectMap.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif
#ifndef INCLUDED_haxe_io_Bytes
#include <haxe/io/Bytes.h>
#endif

namespace haxe{

void Serializer_obj::__construct(){
            	HX_STACK_FRAME("haxe.Serializer","new",0xcdbbc7ec,"haxe.Serializer.new","C:\\HaxeToolkit\\haxe\\std/haxe/Serializer.hx",101,0xfce2327c)
            	HX_STACK_THIS(this)
HXLINE( 102)		this->buf =  ::StringBuf_obj::__new();
HXLINE( 103)		this->cache = ::cpp::VirtualArray_obj::__new();
HXLINE( 104)		this->useCache = ::haxe::Serializer_obj::USE_CACHE;
HXLINE( 105)		this->useEnumIndex = ::haxe::Serializer_obj::USE_ENUM_INDEX;
HXLINE( 106)		this->shash =  ::haxe::ds::StringMap_obj::__new();
HXLINE( 107)		this->scount = (int)0;
            	}

Dynamic Serializer_obj::__CreateEmpty() { return new Serializer_obj; }

hx::ObjectPtr< Serializer_obj > Serializer_obj::__new()
{
	hx::ObjectPtr< Serializer_obj > _hx_result = new Serializer_obj();
	_hx_result->__construct();
	return _hx_result;
}

Dynamic Serializer_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Serializer_obj > _hx_result = new Serializer_obj();
	_hx_result->__construct();
	return _hx_result;
}

::String Serializer_obj::toString(){
            	HX_STACK_FRAME("haxe.Serializer","toString",0x95bdfda0,"haxe.Serializer.toString","C:\\HaxeToolkit\\haxe\\std/haxe/Serializer.hx",117,0xfce2327c)
            	HX_STACK_THIS(this)
HXLINE( 117)		HX_VARI(  ::StringBuf,_this) = this->buf;
HXDLIN( 117)		Bool _hx_tmp = hx::IsNotNull( _this->charBuf );
HXDLIN( 117)		if (_hx_tmp) {
HXLINE( 117)			_this->flush();
            		}
HXDLIN( 117)		return _this->b->join(HX_("",00,00,00,00));
            	}


HX_DEFINE_DYNAMIC_FUNC0(Serializer_obj,toString,return )

void Serializer_obj::serializeString(::String s){
            	HX_STACK_FRAME("haxe.Serializer","serializeString",0xd565bc5d,"haxe.Serializer.serializeString","C:\\HaxeToolkit\\haxe\\std/haxe/Serializer.hx",153,0xfce2327c)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(s,"s")
HXLINE( 154)		HX_VARI(  ::Dynamic,x) = this->shash->get(s);
HXLINE( 155)		Bool _hx_tmp = hx::IsNotNull( x );
HXDLIN( 155)		if (_hx_tmp) {
HXLINE( 156)			{
HXLINE( 156)				HX_VARI(  ::StringBuf,_this) = this->buf;
HXDLIN( 156)				Bool _hx_tmp1 = hx::IsNotNull( _this->charBuf );
HXDLIN( 156)				if (_hx_tmp1) {
HXLINE( 156)					_this->flush();
            				}
HXDLIN( 156)				_this->b->push(HX_("R",52,00,00,00));
            			}
HXLINE( 157)			{
HXLINE( 157)				HX_VARI_NAME(  ::StringBuf,_this1,"_this") = this->buf;
HXDLIN( 157)				Bool _hx_tmp2 = hx::IsNotNull( _this1->charBuf );
HXDLIN( 157)				if (_hx_tmp2) {
HXLINE( 157)					_this1->flush();
            				}
HXDLIN( 157)				::String _hx_tmp3 = ::Std_obj::string(x);
HXDLIN( 157)				_this1->b->push(_hx_tmp3);
            			}
HXLINE( 158)			return;
            		}
HXLINE( 160)		this->shash->set(s,this->scount++);
HXLINE( 165)		{
HXLINE( 165)			HX_VARI_NAME(  ::StringBuf,_this2,"_this") = this->buf;
HXDLIN( 165)			Bool _hx_tmp4 = hx::IsNotNull( _this2->charBuf );
HXDLIN( 165)			if (_hx_tmp4) {
HXLINE( 165)				_this2->flush();
            			}
HXDLIN( 165)			_this2->b->push(HX_("y",79,00,00,00));
            		}
HXLINE( 166)		s = ::StringTools_obj::urlEncode(s);
HXLINE( 167)		{
HXLINE( 167)			HX_VARI_NAME(  ::StringBuf,_this3,"_this") = this->buf;
HXDLIN( 167)			Int x1 = s.length;
HXDLIN( 167)			Bool _hx_tmp5 = hx::IsNotNull( _this3->charBuf );
HXDLIN( 167)			if (_hx_tmp5) {
HXLINE( 167)				_this3->flush();
            			}
HXDLIN( 167)			::String _hx_tmp6 = ::Std_obj::string(x1);
HXDLIN( 167)			_this3->b->push(_hx_tmp6);
            		}
HXLINE( 168)		{
HXLINE( 168)			HX_VARI_NAME(  ::StringBuf,_this4,"_this") = this->buf;
HXDLIN( 168)			Bool _hx_tmp7 = hx::IsNotNull( _this4->charBuf );
HXDLIN( 168)			if (_hx_tmp7) {
HXLINE( 168)				_this4->flush();
            			}
HXDLIN( 168)			_this4->b->push(HX_(":",3a,00,00,00));
            		}
HXLINE( 169)		{
HXLINE( 169)			HX_VARI_NAME(  ::StringBuf,_this5,"_this") = this->buf;
HXDLIN( 169)			Bool _hx_tmp8 = hx::IsNotNull( _this5->charBuf );
HXDLIN( 169)			if (_hx_tmp8) {
HXLINE( 169)				_this5->flush();
            			}
HXDLIN( 169)			::String _hx_tmp9 = ::Std_obj::string(s);
HXDLIN( 169)			_this5->b->push(_hx_tmp9);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(Serializer_obj,serializeString,(void))

Bool Serializer_obj::serializeRef( ::Dynamic v){
            	HX_STACK_FRAME("haxe.Serializer","serializeRef",0x0b8ed647,"haxe.Serializer.serializeRef","C:\\HaxeToolkit\\haxe\\std/haxe/Serializer.hx",172,0xfce2327c)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(v,"v")
HXLINE( 176)		{
HXLINE( 176)			HX_VARI( Int,_g1) = (int)0;
HXDLIN( 176)			HX_VARI( Int,_g) = this->cache->get_length();
HXDLIN( 176)			while((_g1 < _g)){
HXLINE( 176)				HX_VARI( Int,i) = _g1++;
HXLINE( 181)				Bool _hx_tmp = hx::IsEq( this->cache->__get(i),v );
HXDLIN( 181)				if (_hx_tmp) {
HXLINE( 183)					{
HXLINE( 183)						HX_VARI(  ::StringBuf,_this) = this->buf;
HXDLIN( 183)						Bool _hx_tmp1 = hx::IsNotNull( _this->charBuf );
HXDLIN( 183)						if (_hx_tmp1) {
HXLINE( 183)							_this->flush();
            						}
HXDLIN( 183)						_this->b->push(HX_("r",72,00,00,00));
            					}
HXLINE( 184)					{
HXLINE( 184)						HX_VARI_NAME(  ::StringBuf,_this1,"_this") = this->buf;
HXDLIN( 184)						Bool _hx_tmp2 = hx::IsNotNull( _this1->charBuf );
HXDLIN( 184)						if (_hx_tmp2) {
HXLINE( 184)							_this1->flush();
            						}
HXDLIN( 184)						::String _hx_tmp3 = ::Std_obj::string(i);
HXDLIN( 184)						_this1->b->push(_hx_tmp3);
            					}
HXLINE( 185)					return true;
            				}
            			}
            		}
HXLINE( 188)		this->cache->push(v);
HXLINE( 189)		return false;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Serializer_obj,serializeRef,return )

void Serializer_obj::serializeFields( ::Dynamic v){
            	HX_STACK_FRAME("haxe.Serializer","serializeFields",0x44c42205,"haxe.Serializer.serializeFields","C:\\HaxeToolkit\\haxe\\std/haxe/Serializer.hx",209,0xfce2327c)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(v,"v")
HXLINE( 210)		{
HXLINE( 210)			HX_VARI( Int,_g) = (int)0;
HXDLIN( 210)			HX_VARI( ::Array< ::String >,_g1) = ::Reflect_obj::fields(v);
HXDLIN( 210)			while((_g < _g1->length)){
HXLINE( 210)				HX_VARI( ::String,f) = _g1->__get(_g);
HXDLIN( 210)				++_g;
HXLINE( 211)				this->serializeString(f);
HXLINE( 212)				 ::Dynamic _hx_tmp = ::Reflect_obj::field(v,f);
HXDLIN( 212)				this->serialize(_hx_tmp);
            			}
            		}
HXLINE( 214)		{
HXLINE( 214)			HX_VARI(  ::StringBuf,_this) = this->buf;
HXDLIN( 214)			Bool _hx_tmp1 = hx::IsNotNull( _this->charBuf );
HXDLIN( 214)			if (_hx_tmp1) {
HXLINE( 214)				_this->flush();
            			}
HXDLIN( 214)			_this->b->push(HX_("g",67,00,00,00));
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(Serializer_obj,serializeFields,(void))

void Serializer_obj::serialize( ::Dynamic v){
            	HX_STACK_FRAME("haxe.Serializer","serialize",0x3cea866c,"haxe.Serializer.serialize","C:\\HaxeToolkit\\haxe\\std/haxe/Serializer.hx",228,0xfce2327c)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(v,"v")
HXLINE( 228)		HX_VARI( ::hx::EnumBase,_g) = ::Type_obj::_hx_typeof(v);
HXDLIN( 228)		Int _hx_tmp = ( ( ::hx::EnumBase)(_g) )->_hx_getIndex();
HXDLIN( 228)		switch((int)(_hx_tmp)){
            			case (int)0: {
HXLINE( 230)				HX_VARI(  ::StringBuf,_this) = this->buf;
HXDLIN( 230)				Bool _hx_tmp1 = hx::IsNotNull( _this->charBuf );
HXDLIN( 230)				if (_hx_tmp1) {
HXLINE( 230)					_this->flush();
            				}
HXDLIN( 230)				_this->b->push(HX_("n",6e,00,00,00));
            			}
            			break;
            			case (int)1: {
HXLINE( 232)				HX_VARI_NAME( Int,v1,"v") = ( (Int)(v) );
HXLINE( 233)				if ((v1 == (int)0)) {
HXLINE( 234)					{
HXLINE( 234)						HX_VARI_NAME(  ::StringBuf,_this1,"_this") = this->buf;
HXDLIN( 234)						Bool _hx_tmp2 = hx::IsNotNull( _this1->charBuf );
HXDLIN( 234)						if (_hx_tmp2) {
HXLINE( 234)							_this1->flush();
            						}
HXDLIN( 234)						_this1->b->push(HX_("z",7a,00,00,00));
            					}
HXLINE( 235)					return;
            				}
HXLINE( 237)				{
HXLINE( 237)					HX_VARI_NAME(  ::StringBuf,_this2,"_this") = this->buf;
HXDLIN( 237)					Bool _hx_tmp3 = hx::IsNotNull( _this2->charBuf );
HXDLIN( 237)					if (_hx_tmp3) {
HXLINE( 237)						_this2->flush();
            					}
HXDLIN( 237)					_this2->b->push(HX_("i",69,00,00,00));
            				}
HXLINE( 238)				{
HXLINE( 238)					HX_VARI_NAME(  ::StringBuf,_this3,"_this") = this->buf;
HXDLIN( 238)					Bool _hx_tmp4 = hx::IsNotNull( _this3->charBuf );
HXDLIN( 238)					if (_hx_tmp4) {
HXLINE( 238)						_this3->flush();
            					}
HXDLIN( 238)					::String _hx_tmp5 = ::Std_obj::string(v1);
HXDLIN( 238)					_this3->b->push(_hx_tmp5);
            				}
            			}
            			break;
            			case (int)2: {
HXLINE( 240)				HX_VARI_NAME( Float,v2,"v") = ( (Float)(v) );
HXLINE( 241)				Bool _hx_tmp6 = ::Math_obj::isNaN(v2);
HXDLIN( 241)				if (_hx_tmp6) {
HXLINE( 242)					HX_VARI_NAME(  ::StringBuf,_this4,"_this") = this->buf;
HXDLIN( 242)					Bool _hx_tmp7 = hx::IsNotNull( _this4->charBuf );
HXDLIN( 242)					if (_hx_tmp7) {
HXLINE( 242)						_this4->flush();
            					}
HXDLIN( 242)					_this4->b->push(HX_("k",6b,00,00,00));
            				}
            				else {
HXLINE( 243)					Bool _hx_tmp8 = !(::Math_obj::isFinite(v2));
HXDLIN( 243)					if (_hx_tmp8) {
HXLINE( 244)						HX_VARI_NAME(  ::StringBuf,_this5,"_this") = this->buf;
HXDLIN( 244)						Bool _hx_tmp9 = hx::IsNotNull( _this5->charBuf );
HXDLIN( 244)						if (_hx_tmp9) {
HXLINE( 244)							_this5->flush();
            						}
HXDLIN( 244)						::String _hx_tmp10;
HXDLIN( 244)						if ((v2 < (int)0)) {
HXLINE( 244)							_hx_tmp10 = HX_("m",6d,00,00,00);
            						}
            						else {
HXLINE( 244)							_hx_tmp10 = HX_("p",70,00,00,00);
            						}
HXDLIN( 244)						_this5->b->push(_hx_tmp10);
            					}
            					else {
HXLINE( 246)						{
HXLINE( 246)							HX_VARI_NAME(  ::StringBuf,_this6,"_this") = this->buf;
HXDLIN( 246)							Bool _hx_tmp11 = hx::IsNotNull( _this6->charBuf );
HXDLIN( 246)							if (_hx_tmp11) {
HXLINE( 246)								_this6->flush();
            							}
HXDLIN( 246)							_this6->b->push(HX_("d",64,00,00,00));
            						}
HXLINE( 247)						{
HXLINE( 247)							HX_VARI_NAME(  ::StringBuf,_this7,"_this") = this->buf;
HXDLIN( 247)							Bool _hx_tmp12 = hx::IsNotNull( _this7->charBuf );
HXDLIN( 247)							if (_hx_tmp12) {
HXLINE( 247)								_this7->flush();
            							}
HXDLIN( 247)							::String _hx_tmp13 = ::Std_obj::string(v2);
HXDLIN( 247)							_this7->b->push(_hx_tmp13);
            						}
            					}
            				}
            			}
            			break;
            			case (int)3: {
HXLINE( 250)				HX_VARI_NAME(  ::StringBuf,_this8,"_this") = this->buf;
HXDLIN( 250)				Bool _hx_tmp14 = hx::IsNotNull( _this8->charBuf );
HXDLIN( 250)				if (_hx_tmp14) {
HXLINE( 250)					_this8->flush();
            				}
HXDLIN( 250)				::String _hx_tmp15;
HXDLIN( 250)				if (( (Bool)(v) )) {
HXLINE( 250)					_hx_tmp15 = HX_("t",74,00,00,00);
            				}
            				else {
HXLINE( 250)					_hx_tmp15 = HX_("f",66,00,00,00);
            				}
HXDLIN( 250)				_this8->b->push(_hx_tmp15);
            			}
            			break;
            			case (int)4: {
HXLINE( 398)				Bool _hx_tmp16 = ::Std_obj::is(v,hx::ClassOf< ::hx::Class >());
HXDLIN( 398)				if (_hx_tmp16) {
HXLINE( 399)					HX_VARI( ::String,className) = ::Type_obj::getClassName(v);
HXLINE( 403)					hx::Class _hx_tmp17 = ::Type_obj::resolveEnum(className);
HXDLIN( 403)					Bool _hx_tmp18 = hx::IsNotNull( _hx_tmp17 );
HXDLIN( 403)					if (_hx_tmp18) {
HXLINE( 403)						HX_VARI_NAME(  ::StringBuf,_this9,"_this") = this->buf;
HXDLIN( 403)						Bool _hx_tmp19 = hx::IsNotNull( _this9->charBuf );
HXDLIN( 403)						if (_hx_tmp19) {
HXLINE( 403)							_this9->flush();
            						}
HXDLIN( 403)						_this9->b->push(HX_("B",42,00,00,00));
            					}
            					else {
HXLINE( 405)						HX_VARI_NAME(  ::StringBuf,_this10,"_this") = this->buf;
HXDLIN( 405)						Bool _hx_tmp20 = hx::IsNotNull( _this10->charBuf );
HXDLIN( 405)						if (_hx_tmp20) {
HXLINE( 405)							_this10->flush();
            						}
HXDLIN( 405)						_this10->b->push(HX_("A",41,00,00,00));
            					}
HXLINE( 406)					this->serializeString(className);
            				}
            				else {
HXLINE( 407)					Bool _hx_tmp21 = ::Std_obj::is(v,hx::ClassOf< ::Enum >());
HXDLIN( 407)					if (_hx_tmp21) {
HXLINE( 408)						{
HXLINE( 408)							HX_VARI_NAME(  ::StringBuf,_this11,"_this") = this->buf;
HXDLIN( 408)							Bool _hx_tmp22 = hx::IsNotNull( _this11->charBuf );
HXDLIN( 408)							if (_hx_tmp22) {
HXLINE( 408)								_this11->flush();
            							}
HXDLIN( 408)							_this11->b->push(HX_("B",42,00,00,00));
            						}
HXLINE( 409)						::String _hx_tmp23 = ::Type_obj::getEnumName(v);
HXDLIN( 409)						this->serializeString(_hx_tmp23);
            					}
            					else {
HXLINE( 411)						Bool _hx_tmp24;
HXDLIN( 411)						Bool _hx_tmp25 = this->useCache;
HXDLIN( 411)						if (_hx_tmp25) {
HXLINE( 411)							_hx_tmp24 = this->serializeRef(v);
            						}
            						else {
HXLINE( 411)							_hx_tmp24 = false;
            						}
HXDLIN( 411)						if (_hx_tmp24) {
HXLINE( 412)							return;
            						}
HXLINE( 413)						{
HXLINE( 413)							HX_VARI_NAME(  ::StringBuf,_this12,"_this") = this->buf;
HXDLIN( 413)							Bool _hx_tmp26 = hx::IsNotNull( _this12->charBuf );
HXDLIN( 413)							if (_hx_tmp26) {
HXLINE( 413)								_this12->flush();
            							}
HXDLIN( 413)							_this12->b->push(HX_("o",6f,00,00,00));
            						}
HXLINE( 414)						this->serializeFields(v);
            					}
            				}
            			}
            			break;
            			case (int)5: {
HXLINE( 513)				HX_STACK_DO_THROW(HX_("Cannot serialize function",35,d8,fc,3d));
            			}
            			break;
            			case (int)6: {
HXLINE( 251)				HX_VARI( hx::Class,c) = _g->_hx_getObject(0).StaticCast< hx::Class >();
HXDLIN( 251)				{
HXLINE( 252)					if (hx::IsEq( c,hx::ClassOf< ::String >() )) {
HXLINE( 253)						this->serializeString(v);
HXLINE( 254)						return;
            					}
HXLINE( 256)					Bool _hx_tmp27;
HXDLIN( 256)					Bool _hx_tmp28 = this->useCache;
HXDLIN( 256)					if (_hx_tmp28) {
HXLINE( 256)						_hx_tmp27 = this->serializeRef(v);
            					}
            					else {
HXLINE( 256)						_hx_tmp27 = false;
            					}
HXDLIN( 256)					if (_hx_tmp27) {
HXLINE( 257)						return;
            					}
HXLINE( 258)					hx::Class _hx_switch_0 = c;
            					if (  (_hx_switch_0==hx::ArrayBase::__mClass) ){
HXLINE( 260)						HX_VARI( Int,ucount) = (int)0;
HXLINE( 261)						{
HXLINE( 261)							HX_VARI_NAME(  ::StringBuf,_this13,"_this") = this->buf;
HXDLIN( 261)							Bool _hx_tmp29 = hx::IsNotNull( _this13->charBuf );
HXDLIN( 261)							if (_hx_tmp29) {
HXLINE( 261)								_this13->flush();
            							}
HXDLIN( 261)							_this13->b->push(HX_("a",61,00,00,00));
            						}
HXLINE( 265)						HX_VARI( Int,l) = ( (Int)(v->__length()) );
HXLINE( 266)						{
HXLINE( 266)							HX_VARI( Int,_g1) = (int)0;
HXDLIN( 266)							while((_g1 < l)){
HXLINE( 266)								HX_VARI( Int,i) = _g1++;
HXLINE( 267)								Bool _hx_tmp30 = hx::IsNull( v->__GetItem(i) );
HXDLIN( 267)								if (_hx_tmp30) {
HXLINE( 268)									++ucount;
            								}
            								else {
HXLINE( 270)									if ((ucount > (int)0)) {
HXLINE( 271)										if ((ucount == (int)1)) {
HXLINE( 272)											HX_VARI_NAME(  ::StringBuf,_this14,"_this") = this->buf;
HXDLIN( 272)											Bool _hx_tmp31 = hx::IsNotNull( _this14->charBuf );
HXDLIN( 272)											if (_hx_tmp31) {
HXLINE( 272)												_this14->flush();
            											}
HXDLIN( 272)											_this14->b->push(HX_("n",6e,00,00,00));
            										}
            										else {
HXLINE( 274)											{
HXLINE( 274)												HX_VARI_NAME(  ::StringBuf,_this15,"_this") = this->buf;
HXDLIN( 274)												Bool _hx_tmp32 = hx::IsNotNull( _this15->charBuf );
HXDLIN( 274)												if (_hx_tmp32) {
HXLINE( 274)													_this15->flush();
            												}
HXDLIN( 274)												_this15->b->push(HX_("u",75,00,00,00));
            											}
HXLINE( 275)											{
HXLINE( 275)												HX_VARI_NAME(  ::StringBuf,_this16,"_this") = this->buf;
HXDLIN( 275)												Bool _hx_tmp33 = hx::IsNotNull( _this16->charBuf );
HXDLIN( 275)												if (_hx_tmp33) {
HXLINE( 275)													_this16->flush();
            												}
HXDLIN( 275)												::String _hx_tmp34 = ::Std_obj::string(ucount);
HXDLIN( 275)												_this16->b->push(_hx_tmp34);
            											}
            										}
HXLINE( 277)										ucount = (int)0;
            									}
HXLINE( 279)									 ::Dynamic _hx_tmp35 = v->__GetItem(i);
HXDLIN( 279)									this->serialize(_hx_tmp35);
            								}
            							}
            						}
HXLINE( 282)						if ((ucount > (int)0)) {
HXLINE( 283)							if ((ucount == (int)1)) {
HXLINE( 284)								HX_VARI_NAME(  ::StringBuf,_this17,"_this") = this->buf;
HXDLIN( 284)								Bool _hx_tmp36 = hx::IsNotNull( _this17->charBuf );
HXDLIN( 284)								if (_hx_tmp36) {
HXLINE( 284)									_this17->flush();
            								}
HXDLIN( 284)								_this17->b->push(HX_("n",6e,00,00,00));
            							}
            							else {
HXLINE( 286)								{
HXLINE( 286)									HX_VARI_NAME(  ::StringBuf,_this18,"_this") = this->buf;
HXDLIN( 286)									Bool _hx_tmp37 = hx::IsNotNull( _this18->charBuf );
HXDLIN( 286)									if (_hx_tmp37) {
HXLINE( 286)										_this18->flush();
            									}
HXDLIN( 286)									_this18->b->push(HX_("u",75,00,00,00));
            								}
HXLINE( 287)								{
HXLINE( 287)									HX_VARI_NAME(  ::StringBuf,_this19,"_this") = this->buf;
HXDLIN( 287)									Bool _hx_tmp38 = hx::IsNotNull( _this19->charBuf );
HXDLIN( 287)									if (_hx_tmp38) {
HXLINE( 287)										_this19->flush();
            									}
HXDLIN( 287)									::String _hx_tmp39 = ::Std_obj::string(ucount);
HXDLIN( 287)									_this19->b->push(_hx_tmp39);
            								}
            							}
            						}
HXLINE( 290)						{
HXLINE( 290)							HX_VARI_NAME(  ::StringBuf,_this20,"_this") = this->buf;
HXDLIN( 290)							Bool _hx_tmp40 = hx::IsNotNull( _this20->charBuf );
HXDLIN( 290)							if (_hx_tmp40) {
HXLINE( 290)								_this20->flush();
            							}
HXDLIN( 290)							_this20->b->push(HX_("h",68,00,00,00));
            						}
HXLINE( 259)						goto _hx_goto_2;
            					}
            					if (  (_hx_switch_0==hx::ClassOf< ::Date >()) ){
HXLINE( 298)						HX_VARI(  ::Date,d) = ( ( ::Date)(v) );
HXLINE( 299)						{
HXLINE( 299)							HX_VARI_NAME(  ::StringBuf,_this21,"_this") = this->buf;
HXDLIN( 299)							Bool _hx_tmp41 = hx::IsNotNull( _this21->charBuf );
HXDLIN( 299)							if (_hx_tmp41) {
HXLINE( 299)								_this21->flush();
            							}
HXDLIN( 299)							_this21->b->push(HX_("v",76,00,00,00));
            						}
HXLINE( 300)						{
HXLINE( 300)							HX_VARI_NAME(  ::StringBuf,_this22,"_this") = this->buf;
HXDLIN( 300)							Float x = d->getTime();
HXDLIN( 300)							Bool _hx_tmp42 = hx::IsNotNull( _this22->charBuf );
HXDLIN( 300)							if (_hx_tmp42) {
HXLINE( 300)								_this22->flush();
            							}
HXDLIN( 300)							::String _hx_tmp43 = ::Std_obj::string(x);
HXDLIN( 300)							_this22->b->push(_hx_tmp43);
            						}
HXLINE( 297)						goto _hx_goto_2;
            					}
            					if (  (_hx_switch_0==hx::ClassOf< ::List >()) ){
HXLINE( 292)						{
HXLINE( 292)							HX_VARI_NAME(  ::StringBuf,_this23,"_this") = this->buf;
HXDLIN( 292)							Bool _hx_tmp44 = hx::IsNotNull( _this23->charBuf );
HXDLIN( 292)							if (_hx_tmp44) {
HXLINE( 292)								_this23->flush();
            							}
HXDLIN( 292)							_this23->b->push(HX_("l",6c,00,00,00));
            						}
HXLINE( 293)						HX_VARI_NAME(  ::List,v3,"v") = ( ( ::List)(v) );
HXLINE( 294)						{
HXLINE( 294)							HX_VARI(  ::_List::ListNode,_g_head) = v3->h;
HXDLIN( 294)							while(true){
HXLINE( 294)								Bool _hx_tmp45 = !(hx::IsNotNull( _g_head ));
HXDLIN( 294)								if (_hx_tmp45) {
HXLINE( 294)									goto _hx_goto_4;
            								}
HXDLIN( 294)								HX_VARI(  ::Dynamic,val) = _g_head->item;
HXLINE( 227)								_g_head = _g_head->next;
HXLINE( 295)								this->serialize(val);
            							}
            							_hx_goto_4:;
            						}
HXLINE( 296)						{
HXLINE( 296)							HX_VARI_NAME(  ::StringBuf,_this24,"_this") = this->buf;
HXDLIN( 296)							Bool _hx_tmp46 = hx::IsNotNull( _this24->charBuf );
HXDLIN( 296)							if (_hx_tmp46) {
HXLINE( 296)								_this24->flush();
            							}
HXDLIN( 296)							_this24->b->push(HX_("h",68,00,00,00));
            						}
HXLINE( 291)						goto _hx_goto_2;
            					}
            					if (  (_hx_switch_0==hx::ClassOf< ::haxe::ds::IntMap >()) ){
HXLINE( 310)						{
HXLINE( 310)							HX_VARI_NAME(  ::StringBuf,_this25,"_this") = this->buf;
HXDLIN( 310)							Bool _hx_tmp47 = hx::IsNotNull( _this25->charBuf );
HXDLIN( 310)							if (_hx_tmp47) {
HXLINE( 310)								_this25->flush();
            							}
HXDLIN( 310)							_this25->b->push(HX_("q",71,00,00,00));
            						}
HXLINE( 311)						HX_VARI_NAME(  ::haxe::ds::IntMap,v4,"v") = ( ( ::haxe::ds::IntMap)(v) );
HXLINE( 312)						{
HXLINE( 312)							HX_VARI(  ::Dynamic,tmp) = v4->keys();
HXDLIN( 312)							while(true){
HXLINE( 312)								Bool _hx_tmp48 = !(( (Bool)( ::Dynamic(tmp->__Field(HX_("hasNext",6d,a5,46,18),hx::paccDynamic))()) ));
HXDLIN( 312)								if (_hx_tmp48) {
HXLINE( 312)									goto _hx_goto_5;
            								}
HXDLIN( 312)								HX_VARI( Int,k) = ( (Int)( ::Dynamic(tmp->__Field(HX_("next",f3,84,02,49),hx::paccDynamic))()) );
HXLINE( 313)								{
HXLINE( 313)									HX_VARI_NAME(  ::StringBuf,_this26,"_this") = this->buf;
HXDLIN( 313)									Bool _hx_tmp49 = hx::IsNotNull( _this26->charBuf );
HXDLIN( 313)									if (_hx_tmp49) {
HXLINE( 313)										_this26->flush();
            									}
HXDLIN( 313)									_this26->b->push(HX_(":",3a,00,00,00));
            								}
HXLINE( 314)								{
HXLINE( 314)									HX_VARI_NAME(  ::StringBuf,_this27,"_this") = this->buf;
HXDLIN( 314)									Bool _hx_tmp50 = hx::IsNotNull( _this27->charBuf );
HXDLIN( 314)									if (_hx_tmp50) {
HXLINE( 314)										_this27->flush();
            									}
HXDLIN( 314)									::String _hx_tmp51 = ::Std_obj::string(k);
HXDLIN( 314)									_this27->b->push(_hx_tmp51);
            								}
HXLINE( 315)								 ::Dynamic _hx_tmp52 = v4->get(k);
HXDLIN( 315)								this->serialize(_hx_tmp52);
            							}
            							_hx_goto_5:;
            						}
HXLINE( 317)						{
HXLINE( 317)							HX_VARI_NAME(  ::StringBuf,_this28,"_this") = this->buf;
HXDLIN( 317)							Bool _hx_tmp53 = hx::IsNotNull( _this28->charBuf );
HXDLIN( 317)							if (_hx_tmp53) {
HXLINE( 317)								_this28->flush();
            							}
HXDLIN( 317)							_this28->b->push(HX_("h",68,00,00,00));
            						}
HXLINE( 309)						goto _hx_goto_2;
            					}
            					if (  (_hx_switch_0==hx::ClassOf< ::haxe::ds::ObjectMap >()) ){
HXLINE( 319)						{
HXLINE( 319)							HX_VARI_NAME(  ::StringBuf,_this29,"_this") = this->buf;
HXDLIN( 319)							Bool _hx_tmp54 = hx::IsNotNull( _this29->charBuf );
HXDLIN( 319)							if (_hx_tmp54) {
HXLINE( 319)								_this29->flush();
            							}
HXDLIN( 319)							_this29->b->push(HX_("M",4d,00,00,00));
            						}
HXLINE( 320)						HX_VARI_NAME(  ::haxe::ds::ObjectMap,v5,"v") = ( ( ::haxe::ds::ObjectMap)(v) );
HXLINE( 321)						{
HXLINE( 321)							HX_VARI_NAME(  ::Dynamic,tmp1,"tmp") = v5->keys();
HXDLIN( 321)							while(true){
HXLINE( 321)								Bool _hx_tmp55 = !(( (Bool)( ::Dynamic(tmp1->__Field(HX_("hasNext",6d,a5,46,18),hx::paccDynamic))()) ));
HXDLIN( 321)								if (_hx_tmp55) {
HXLINE( 321)									goto _hx_goto_6;
            								}
HXDLIN( 321)								HX_VARI_NAME(  ::Dynamic,k1,"k") =  ::Dynamic(tmp1->__Field(HX_("next",f3,84,02,49),hx::paccDynamic))();
HXLINE( 328)								this->serialize(k1);
HXLINE( 330)								 ::Dynamic _hx_tmp56 = v5->get(k1);
HXDLIN( 330)								this->serialize(_hx_tmp56);
            							}
            							_hx_goto_6:;
            						}
HXLINE( 332)						{
HXLINE( 332)							HX_VARI_NAME(  ::StringBuf,_this30,"_this") = this->buf;
HXDLIN( 332)							Bool _hx_tmp57 = hx::IsNotNull( _this30->charBuf );
HXDLIN( 332)							if (_hx_tmp57) {
HXLINE( 332)								_this30->flush();
            							}
HXDLIN( 332)							_this30->b->push(HX_("h",68,00,00,00));
            						}
HXLINE( 318)						goto _hx_goto_2;
            					}
            					if (  (_hx_switch_0==hx::ClassOf< ::haxe::ds::StringMap >()) ){
HXLINE( 302)						{
HXLINE( 302)							HX_VARI_NAME(  ::StringBuf,_this31,"_this") = this->buf;
HXDLIN( 302)							Bool _hx_tmp58 = hx::IsNotNull( _this31->charBuf );
HXDLIN( 302)							if (_hx_tmp58) {
HXLINE( 302)								_this31->flush();
            							}
HXDLIN( 302)							_this31->b->push(HX_("b",62,00,00,00));
            						}
HXLINE( 303)						HX_VARI_NAME(  ::haxe::ds::StringMap,v6,"v") = ( ( ::haxe::ds::StringMap)(v) );
HXLINE( 304)						{
HXLINE( 304)							HX_VARI_NAME(  ::Dynamic,tmp2,"tmp") = v6->keys();
HXDLIN( 304)							while(true){
HXLINE( 304)								Bool _hx_tmp59 = !(( (Bool)( ::Dynamic(tmp2->__Field(HX_("hasNext",6d,a5,46,18),hx::paccDynamic))()) ));
HXDLIN( 304)								if (_hx_tmp59) {
HXLINE( 304)									goto _hx_goto_7;
            								}
HXDLIN( 304)								HX_VARI_NAME( ::String,k2,"k") = ( (::String)( ::Dynamic(tmp2->__Field(HX_("next",f3,84,02,49),hx::paccDynamic))()) );
HXLINE( 305)								this->serializeString(k2);
HXLINE( 306)								 ::Dynamic _hx_tmp60 = v6->get(k2);
HXDLIN( 306)								this->serialize(_hx_tmp60);
            							}
            							_hx_goto_7:;
            						}
HXLINE( 308)						{
HXLINE( 308)							HX_VARI_NAME(  ::StringBuf,_this32,"_this") = this->buf;
HXDLIN( 308)							Bool _hx_tmp61 = hx::IsNotNull( _this32->charBuf );
HXDLIN( 308)							if (_hx_tmp61) {
HXLINE( 308)								_this32->flush();
            							}
HXDLIN( 308)							_this32->b->push(HX_("h",68,00,00,00));
            						}
HXLINE( 301)						goto _hx_goto_2;
            					}
            					if (  (_hx_switch_0==hx::ClassOf< ::haxe::io::Bytes >()) ){
HXLINE( 334)						HX_VARI_NAME(  ::haxe::io::Bytes,v7,"v") = ( ( ::haxe::io::Bytes)(v) );
HXLINE( 343)						{
HXLINE( 343)							HX_VARI_NAME(  ::StringBuf,_this33,"_this") = this->buf;
HXDLIN( 343)							Bool _hx_tmp62 = hx::IsNotNull( _this33->charBuf );
HXDLIN( 343)							if (_hx_tmp62) {
HXLINE( 343)								_this33->flush();
            							}
HXDLIN( 343)							_this33->b->push(HX_("s",73,00,00,00));
            						}
HXLINE( 344)						{
HXLINE( 344)							HX_VARI_NAME(  ::StringBuf,_this34,"_this") = this->buf;
HXDLIN( 344)							Float _hx_tmp63 = ((Float)(v7->length * (int)8) / (Float)(int)6);
HXDLIN( 344)							Int x1 = ::Math_obj::ceil(_hx_tmp63);
HXDLIN( 344)							Bool _hx_tmp64 = hx::IsNotNull( _this34->charBuf );
HXDLIN( 344)							if (_hx_tmp64) {
HXLINE( 344)								_this34->flush();
            							}
HXDLIN( 344)							::String _hx_tmp65 = ::Std_obj::string(x1);
HXDLIN( 344)							_this34->b->push(_hx_tmp65);
            						}
HXLINE( 345)						{
HXLINE( 345)							HX_VARI_NAME(  ::StringBuf,_this35,"_this") = this->buf;
HXDLIN( 345)							Bool _hx_tmp66 = hx::IsNotNull( _this35->charBuf );
HXDLIN( 345)							if (_hx_tmp66) {
HXLINE( 345)								_this35->flush();
            							}
HXDLIN( 345)							_this35->b->push(HX_(":",3a,00,00,00));
            						}
HXLINE( 347)						HX_VARI_NAME( Int,i1,"i") = (int)0;
HXLINE( 348)						HX_VARI( Int,max) = (v7->length - (int)2);
HXLINE( 349)						HX_VARI( ::Array< ::Dynamic>,b64) = ::haxe::Serializer_obj::BASE64_CODES;
HXLINE( 350)						Bool _hx_tmp67 = hx::IsNull( b64 );
HXDLIN( 350)						if (_hx_tmp67) {
HXLINE( 351)							Int length = ::haxe::Serializer_obj::BASE64.length;
HXDLIN( 351)							HX_VARI_NAME( ::Array< ::Dynamic>,this1,"this") = ::Array_obj< ::Dynamic>::__new();
HXDLIN( 351)							_hx_array_set_size_exact(this1,length);
HXDLIN( 351)							b64 = this1;
HXLINE( 352)							{
HXLINE( 352)								HX_VARI_NAME( Int,_g11,"_g1") = (int)0;
HXDLIN( 352)								HX_VARI_NAME( Int,_g2,"_g") = ::haxe::Serializer_obj::BASE64.length;
HXDLIN( 352)								while((_g11 < _g2)){
HXLINE( 352)									HX_VARI_NAME( Int,i2,"i") = _g11++;
HXLINE( 353)									{
HXLINE( 353)										 ::Dynamic val1 = ::haxe::Serializer_obj::BASE64.charCodeAt(i2);
HXDLIN( 353)										b64->__unsafe_set(i2,val1);
            									}
            								}
            							}
HXLINE( 354)							::haxe::Serializer_obj::BASE64_CODES = b64;
            						}
HXLINE( 356)						while((i1 < max)){
HXLINE( 357)							Int pos = i1++;
HXDLIN( 357)							HX_VARI( Int,b1) = v7->b->__get(pos);
HXLINE( 358)							Int pos1 = i1++;
HXDLIN( 358)							HX_VARI( Int,b2) = v7->b->__get(pos1);
HXLINE( 359)							Int pos2 = i1++;
HXDLIN( 359)							HX_VARI( Int,b3) = v7->b->__get(pos2);
HXLINE( 361)							{
HXLINE( 361)								HX_VARI_NAME(  ::StringBuf,_this36,"_this") = this->buf;
HXDLIN( 361)								Int c1 = ( (Int)(_hx_array_unsafe_get(b64,((int)b1 >> (int)(int)2))) );
HXDLIN( 361)								Bool _hx_tmp68 = hx::IsNull( _this36->charBuf );
HXDLIN( 361)								if (_hx_tmp68) {
HXLINE( 361)									_this36->charBuf = ::Array_obj< char >::__new();
            								}
HXDLIN( 361)								_this36->charBuf->push(c1);
            							}
HXLINE( 362)							{
HXLINE( 362)								HX_VARI_NAME(  ::StringBuf,_this37,"_this") = this->buf;
HXDLIN( 362)								Int c2 = ( (Int)(_hx_array_unsafe_get(b64,((int)((int)((int)b1 << (int)(int)4) | (int)((int)b2 >> (int)(int)4)) & (int)(int)63))) );
HXDLIN( 362)								Bool _hx_tmp69 = hx::IsNull( _this37->charBuf );
HXDLIN( 362)								if (_hx_tmp69) {
HXLINE( 362)									_this37->charBuf = ::Array_obj< char >::__new();
            								}
HXDLIN( 362)								_this37->charBuf->push(c2);
            							}
HXLINE( 363)							{
HXLINE( 363)								HX_VARI_NAME(  ::StringBuf,_this38,"_this") = this->buf;
HXDLIN( 363)								Int c3 = ( (Int)(_hx_array_unsafe_get(b64,((int)((int)((int)b2 << (int)(int)2) | (int)((int)b3 >> (int)(int)6)) & (int)(int)63))) );
HXDLIN( 363)								Bool _hx_tmp70 = hx::IsNull( _this38->charBuf );
HXDLIN( 363)								if (_hx_tmp70) {
HXLINE( 363)									_this38->charBuf = ::Array_obj< char >::__new();
            								}
HXDLIN( 363)								_this38->charBuf->push(c3);
            							}
HXLINE( 364)							{
HXLINE( 364)								HX_VARI_NAME(  ::StringBuf,_this39,"_this") = this->buf;
HXDLIN( 364)								Int c4 = ( (Int)(_hx_array_unsafe_get(b64,((int)b3 & (int)(int)63))) );
HXDLIN( 364)								Bool _hx_tmp71 = hx::IsNull( _this39->charBuf );
HXDLIN( 364)								if (_hx_tmp71) {
HXLINE( 364)									_this39->charBuf = ::Array_obj< char >::__new();
            								}
HXDLIN( 364)								_this39->charBuf->push(c4);
            							}
            						}
HXLINE( 366)						if ((i1 == max)) {
HXLINE( 367)							Int pos3 = i1++;
HXDLIN( 367)							HX_VARI_NAME( Int,b11,"b1") = v7->b->__get(pos3);
HXLINE( 368)							Int pos4 = i1++;
HXDLIN( 368)							HX_VARI_NAME( Int,b21,"b2") = v7->b->__get(pos4);
HXLINE( 369)							{
HXLINE( 369)								HX_VARI_NAME(  ::StringBuf,_this40,"_this") = this->buf;
HXDLIN( 369)								Int c5 = ( (Int)(_hx_array_unsafe_get(b64,((int)b11 >> (int)(int)2))) );
HXDLIN( 369)								Bool _hx_tmp72 = hx::IsNull( _this40->charBuf );
HXDLIN( 369)								if (_hx_tmp72) {
HXLINE( 369)									_this40->charBuf = ::Array_obj< char >::__new();
            								}
HXDLIN( 369)								_this40->charBuf->push(c5);
            							}
HXLINE( 370)							{
HXLINE( 370)								HX_VARI_NAME(  ::StringBuf,_this41,"_this") = this->buf;
HXDLIN( 370)								Int c6 = ( (Int)(_hx_array_unsafe_get(b64,((int)((int)((int)b11 << (int)(int)4) | (int)((int)b21 >> (int)(int)4)) & (int)(int)63))) );
HXDLIN( 370)								Bool _hx_tmp73 = hx::IsNull( _this41->charBuf );
HXDLIN( 370)								if (_hx_tmp73) {
HXLINE( 370)									_this41->charBuf = ::Array_obj< char >::__new();
            								}
HXDLIN( 370)								_this41->charBuf->push(c6);
            							}
HXLINE( 371)							{
HXLINE( 371)								HX_VARI_NAME(  ::StringBuf,_this42,"_this") = this->buf;
HXDLIN( 371)								Int c7 = ( (Int)(_hx_array_unsafe_get(b64,((int)((int)b21 << (int)(int)2) & (int)(int)63))) );
HXDLIN( 371)								Bool _hx_tmp74 = hx::IsNull( _this42->charBuf );
HXDLIN( 371)								if (_hx_tmp74) {
HXLINE( 371)									_this42->charBuf = ::Array_obj< char >::__new();
            								}
HXDLIN( 371)								_this42->charBuf->push(c7);
            							}
            						}
            						else {
HXLINE( 372)							if ((i1 == (max + (int)1))) {
HXLINE( 373)								Int pos5 = i1++;
HXDLIN( 373)								HX_VARI_NAME( Int,b12,"b1") = v7->b->__get(pos5);
HXLINE( 374)								{
HXLINE( 374)									HX_VARI_NAME(  ::StringBuf,_this43,"_this") = this->buf;
HXDLIN( 374)									Int c8 = ( (Int)(_hx_array_unsafe_get(b64,((int)b12 >> (int)(int)2))) );
HXDLIN( 374)									Bool _hx_tmp75 = hx::IsNull( _this43->charBuf );
HXDLIN( 374)									if (_hx_tmp75) {
HXLINE( 374)										_this43->charBuf = ::Array_obj< char >::__new();
            									}
HXDLIN( 374)									_this43->charBuf->push(c8);
            								}
HXLINE( 375)								{
HXLINE( 375)									HX_VARI_NAME(  ::StringBuf,_this44,"_this") = this->buf;
HXDLIN( 375)									Int c9 = ( (Int)(_hx_array_unsafe_get(b64,((int)((int)b12 << (int)(int)4) & (int)(int)63))) );
HXDLIN( 375)									Bool _hx_tmp76 = hx::IsNull( _this44->charBuf );
HXDLIN( 375)									if (_hx_tmp76) {
HXLINE( 375)										_this44->charBuf = ::Array_obj< char >::__new();
            									}
HXDLIN( 375)									_this44->charBuf->push(c9);
            								}
            							}
            						}
HXLINE( 333)						goto _hx_goto_2;
            					}
            					/* default */{
HXLINE( 379)						Bool _hx_tmp77 = this->useCache;
HXDLIN( 379)						if (_hx_tmp77) {
HXLINE( 379)							this->cache->pop();
            						}
HXLINE( 380)						Bool _hx_tmp78 = hx::IsNotNull(  ::Dynamic(v->__Field(HX_("hxSerialize",b0,00,09,14),hx::paccDynamic)) );
HXDLIN( 380)						if (_hx_tmp78) {
HXLINE( 381)							{
HXLINE( 381)								HX_VARI_NAME(  ::StringBuf,_this45,"_this") = this->buf;
HXDLIN( 381)								Bool _hx_tmp79 = hx::IsNotNull( _this45->charBuf );
HXDLIN( 381)								if (_hx_tmp79) {
HXLINE( 381)									_this45->flush();
            								}
HXDLIN( 381)								_this45->b->push(HX_("C",43,00,00,00));
            							}
HXLINE( 382)							this->serializeString(::Type_obj::getClassName(c));
HXLINE( 383)							Bool _hx_tmp80 = this->useCache;
HXDLIN( 383)							if (_hx_tmp80) {
HXLINE( 383)								this->cache->push(v);
            							}
HXLINE( 384)							 ::Dynamic(v->__Field(HX_("hxSerialize",b0,00,09,14),hx::paccDynamic))(hx::ObjectPtr<OBJ_>(this));
HXLINE( 385)							{
HXLINE( 385)								HX_VARI_NAME(  ::StringBuf,_this46,"_this") = this->buf;
HXDLIN( 385)								Bool _hx_tmp81 = hx::IsNotNull( _this46->charBuf );
HXDLIN( 385)								if (_hx_tmp81) {
HXLINE( 385)									_this46->flush();
            								}
HXDLIN( 385)								_this46->b->push(HX_("g",67,00,00,00));
            							}
            						}
            						else {
HXLINE( 387)							{
HXLINE( 387)								HX_VARI_NAME(  ::StringBuf,_this47,"_this") = this->buf;
HXDLIN( 387)								Bool _hx_tmp82 = hx::IsNotNull( _this47->charBuf );
HXDLIN( 387)								if (_hx_tmp82) {
HXLINE( 387)									_this47->flush();
            								}
HXDLIN( 387)								_this47->b->push(HX_("c",63,00,00,00));
            							}
HXLINE( 388)							this->serializeString(::Type_obj::getClassName(c));
HXLINE( 389)							Bool _hx_tmp83 = this->useCache;
HXDLIN( 389)							if (_hx_tmp83) {
HXLINE( 389)								this->cache->push(v);
            							}
HXLINE( 393)							this->serializeFields(v);
            						}
            					}
            					_hx_goto_2:;
            				}
            			}
            			break;
            			case (int)7: {
HXLINE( 417)				Bool _hx_tmp84 = this->useCache;
HXDLIN( 417)				if (_hx_tmp84) {
HXLINE( 418)					Bool _hx_tmp85 = this->serializeRef(v);
HXDLIN( 418)					if (_hx_tmp85) {
HXLINE( 419)						return;
            					}
HXLINE( 420)					this->cache->pop();
            				}
HXLINE( 422)				{
HXLINE( 422)					HX_VARI_NAME(  ::StringBuf,_this48,"_this") = this->buf;
HXDLIN( 422)					::String x2;
HXDLIN( 422)					if (this->useEnumIndex) {
HXLINE( 422)						x2 = HX_("j",6a,00,00,00);
            					}
            					else {
HXLINE( 422)						x2 = HX_("w",77,00,00,00);
            					}
HXDLIN( 422)					Bool _hx_tmp86 = hx::IsNotNull( _this48->charBuf );
HXDLIN( 422)					if (_hx_tmp86) {
HXLINE( 422)						_this48->flush();
            					}
HXDLIN( 422)					::String _hx_tmp87 = ::Std_obj::string(x2);
HXDLIN( 422)					_this48->b->push(_hx_tmp87);
            				}
HXLINE( 423)				::String _hx_tmp88 = ::Type_obj::getEnumName(_g->_hx_getObject(0).StaticCast< hx::Class >());
HXDLIN( 423)				this->serializeString(_hx_tmp88);
HXLINE( 456)				HX_VARI(  ::hx::EnumBase,enumBase) = ( ( ::hx::EnumBase)(v) );
HXLINE( 457)				Bool _hx_tmp89 = this->useEnumIndex;
HXDLIN( 457)				if (_hx_tmp89) {
HXLINE( 458)					{
HXLINE( 458)						HX_VARI_NAME(  ::StringBuf,_this49,"_this") = this->buf;
HXDLIN( 458)						Bool _hx_tmp90 = hx::IsNotNull( _this49->charBuf );
HXDLIN( 458)						if (_hx_tmp90) {
HXLINE( 458)							_this49->flush();
            						}
HXDLIN( 458)						_this49->b->push(HX_(":",3a,00,00,00));
            					}
HXLINE( 459)					{
HXLINE( 459)						HX_VARI_NAME(  ::StringBuf,_this50,"_this") = this->buf;
HXDLIN( 459)						Int x3 = enumBase->_hx_getIndex();
HXDLIN( 459)						Bool _hx_tmp91 = hx::IsNotNull( _this50->charBuf );
HXDLIN( 459)						if (_hx_tmp91) {
HXLINE( 459)							_this50->flush();
            						}
HXDLIN( 459)						::String _hx_tmp92 = ::Std_obj::string(x3);
HXDLIN( 459)						_this50->b->push(_hx_tmp92);
            					}
            				}
            				else {
HXLINE( 461)					::String _hx_tmp93 = enumBase->_hx_getTag();
HXDLIN( 461)					this->serializeString(_hx_tmp93);
            				}
HXLINE( 462)				{
HXLINE( 462)					HX_VARI_NAME(  ::StringBuf,_this51,"_this") = this->buf;
HXDLIN( 462)					Bool _hx_tmp94 = hx::IsNotNull( _this51->charBuf );
HXDLIN( 462)					if (_hx_tmp94) {
HXLINE( 462)						_this51->flush();
            					}
HXDLIN( 462)					_this51->b->push(HX_(":",3a,00,00,00));
            				}
HXLINE( 463)				HX_VARI( Int,len) = enumBase->_hx_getParamCount();
HXLINE( 464)				{
HXLINE( 464)					HX_VARI_NAME(  ::StringBuf,_this52,"_this") = this->buf;
HXDLIN( 464)					Bool _hx_tmp95 = hx::IsNotNull( _this52->charBuf );
HXDLIN( 464)					if (_hx_tmp95) {
HXLINE( 464)						_this52->flush();
            					}
HXDLIN( 464)					::String _hx_tmp96 = ::Std_obj::string(len);
HXDLIN( 464)					_this52->b->push(_hx_tmp96);
            				}
HXLINE( 465)				{
HXLINE( 465)					HX_VARI_NAME( Int,_g12,"_g1") = (int)0;
HXDLIN( 465)					while((_g12 < len)){
HXLINE( 465)						HX_VARI( Int,p) = _g12++;
HXLINE( 466)						 ::Dynamic _hx_tmp97 = enumBase->_hx_getParamI(p);
HXDLIN( 466)						this->serialize(_hx_tmp97);
            					}
            				}
HXLINE( 511)				Bool _hx_tmp98 = this->useCache;
HXDLIN( 511)				if (_hx_tmp98) {
HXLINE( 511)					this->cache->push(v);
            				}
            			}
            			break;
            			default:{
HXLINE( 522)				::String _hx_tmp99 = ::Std_obj::string(v);
HXDLIN( 522)				HX_STACK_DO_THROW((HX_("Cannot serialize ",1d,48,c9,ed) + _hx_tmp99));
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(Serializer_obj,serialize,(void))

Bool Serializer_obj::USE_CACHE;

Bool Serializer_obj::USE_ENUM_INDEX;

::String Serializer_obj::BASE64;

::Array< ::Dynamic> Serializer_obj::BASE64_CODES;

::String Serializer_obj::run( ::Dynamic v){
            	HX_STACK_FRAME("haxe.Serializer","run",0xcdbeded7,"haxe.Serializer.run","C:\\HaxeToolkit\\haxe\\std/haxe/Serializer.hx",551,0xfce2327c)
            	HX_STACK_ARG(v,"v")
HXLINE( 552)		HX_VARI(  ::haxe::Serializer,s) =  ::haxe::Serializer_obj::__new();
HXLINE( 553)		s->serialize(v);
HXLINE( 554)		return s->toString();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Serializer_obj,run,return )


Serializer_obj::Serializer_obj()
{
}

void Serializer_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Serializer);
	HX_MARK_MEMBER_NAME(buf,"buf");
	HX_MARK_MEMBER_NAME(cache,"cache");
	HX_MARK_MEMBER_NAME(shash,"shash");
	HX_MARK_MEMBER_NAME(scount,"scount");
	HX_MARK_MEMBER_NAME(useCache,"useCache");
	HX_MARK_MEMBER_NAME(useEnumIndex,"useEnumIndex");
	HX_MARK_END_CLASS();
}

void Serializer_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(buf,"buf");
	HX_VISIT_MEMBER_NAME(cache,"cache");
	HX_VISIT_MEMBER_NAME(shash,"shash");
	HX_VISIT_MEMBER_NAME(scount,"scount");
	HX_VISIT_MEMBER_NAME(useCache,"useCache");
	HX_VISIT_MEMBER_NAME(useEnumIndex,"useEnumIndex");
}

hx::Val Serializer_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"buf") ) { return hx::Val( buf); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"cache") ) { return hx::Val( cache); }
		if (HX_FIELD_EQ(inName,"shash") ) { return hx::Val( shash); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"scount") ) { return hx::Val( scount); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"useCache") ) { return hx::Val( useCache); }
		if (HX_FIELD_EQ(inName,"toString") ) { return hx::Val( toString_dyn()); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"serialize") ) { return hx::Val( serialize_dyn()); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"useEnumIndex") ) { return hx::Val( useEnumIndex); }
		if (HX_FIELD_EQ(inName,"serializeRef") ) { return hx::Val( serializeRef_dyn()); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"serializeString") ) { return hx::Val( serializeString_dyn()); }
		if (HX_FIELD_EQ(inName,"serializeFields") ) { return hx::Val( serializeFields_dyn()); }
	}
	return super::__Field(inName,inCallProp);
}

bool Serializer_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"run") ) { outValue = run_dyn(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"BASE64") ) { outValue = BASE64; return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"USE_CACHE") ) { outValue = USE_CACHE; return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"BASE64_CODES") ) { outValue = BASE64_CODES; return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"USE_ENUM_INDEX") ) { outValue = USE_ENUM_INDEX; return true; }
	}
	return false;
}

hx::Val Serializer_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"buf") ) { buf=inValue.Cast<  ::StringBuf >(); return inValue; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"cache") ) { cache=inValue.Cast< ::cpp::VirtualArray >(); return inValue; }
		if (HX_FIELD_EQ(inName,"shash") ) { shash=inValue.Cast<  ::haxe::ds::StringMap >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"scount") ) { scount=inValue.Cast< Int >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"useCache") ) { useCache=inValue.Cast< Bool >(); return inValue; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"useEnumIndex") ) { useEnumIndex=inValue.Cast< Bool >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

bool Serializer_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"BASE64") ) { BASE64=ioValue.Cast< ::String >(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"USE_CACHE") ) { USE_CACHE=ioValue.Cast< Bool >(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"BASE64_CODES") ) { BASE64_CODES=ioValue.Cast< ::Array< ::Dynamic> >(); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"USE_ENUM_INDEX") ) { USE_ENUM_INDEX=ioValue.Cast< Bool >(); return true; }
	}
	return false;
}

void Serializer_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("buf","\x33","\xc3","\x4a","\x00"));
	outFields->push(HX_HCSTRING("cache","\x42","\x9a","\x14","\x41"));
	outFields->push(HX_HCSTRING("shash","\xc1","\xe5","\x1c","\x7c"));
	outFields->push(HX_HCSTRING("scount","\x7c","\xc3","\x6d","\x45"));
	outFields->push(HX_HCSTRING("useCache","\x7b","\xfc","\x7f","\x08"));
	outFields->push(HX_HCSTRING("useEnumIndex","\x0a","\x8f","\xfe","\x23"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo Serializer_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::StringBuf*/ ,(int)offsetof(Serializer_obj,buf),HX_HCSTRING("buf","\x33","\xc3","\x4a","\x00")},
	{hx::fsObject /*cpp::ArrayBase*/ ,(int)offsetof(Serializer_obj,cache),HX_HCSTRING("cache","\x42","\x9a","\x14","\x41")},
	{hx::fsObject /*::haxe::ds::StringMap*/ ,(int)offsetof(Serializer_obj,shash),HX_HCSTRING("shash","\xc1","\xe5","\x1c","\x7c")},
	{hx::fsInt,(int)offsetof(Serializer_obj,scount),HX_HCSTRING("scount","\x7c","\xc3","\x6d","\x45")},
	{hx::fsBool,(int)offsetof(Serializer_obj,useCache),HX_HCSTRING("useCache","\x7b","\xfc","\x7f","\x08")},
	{hx::fsBool,(int)offsetof(Serializer_obj,useEnumIndex),HX_HCSTRING("useEnumIndex","\x0a","\x8f","\xfe","\x23")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo Serializer_obj_sStaticStorageInfo[] = {
	{hx::fsBool,(void *) &Serializer_obj::USE_CACHE,HX_HCSTRING("USE_CACHE","\xca","\xf8","\xb5","\x85")},
	{hx::fsBool,(void *) &Serializer_obj::USE_ENUM_INDEX,HX_HCSTRING("USE_ENUM_INDEX","\x4c","\xbc","\x56","\x9d")},
	{hx::fsString,(void *) &Serializer_obj::BASE64,HX_HCSTRING("BASE64","\x8f","\xc5","\xaa","\x07")},
	{hx::fsObject /*Array< ::Dynamic >*/ ,(void *) &Serializer_obj::BASE64_CODES,HX_HCSTRING("BASE64_CODES","\x96","\xb0","\x35","\x26")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static ::String Serializer_obj_sMemberFields[] = {
	HX_HCSTRING("buf","\x33","\xc3","\x4a","\x00"),
	HX_HCSTRING("cache","\x42","\x9a","\x14","\x41"),
	HX_HCSTRING("shash","\xc1","\xe5","\x1c","\x7c"),
	HX_HCSTRING("scount","\x7c","\xc3","\x6d","\x45"),
	HX_HCSTRING("useCache","\x7b","\xfc","\x7f","\x08"),
	HX_HCSTRING("useEnumIndex","\x0a","\x8f","\xfe","\x23"),
	HX_HCSTRING("toString","\xac","\xd0","\x6e","\x38"),
	HX_HCSTRING("serializeString","\xd1","\xa2","\x22","\x2b"),
	HX_HCSTRING("serializeRef","\x53","\x1f","\x74","\x3b"),
	HX_HCSTRING("serializeFields","\x79","\x08","\x81","\x9a"),
	HX_HCSTRING("serialize","\xe0","\x5d","\xf2","\xf4"),
	::String(null()) };

static void Serializer_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Serializer_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(Serializer_obj::USE_CACHE,"USE_CACHE");
	HX_MARK_MEMBER_NAME(Serializer_obj::USE_ENUM_INDEX,"USE_ENUM_INDEX");
	HX_MARK_MEMBER_NAME(Serializer_obj::BASE64,"BASE64");
	HX_MARK_MEMBER_NAME(Serializer_obj::BASE64_CODES,"BASE64_CODES");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Serializer_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Serializer_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(Serializer_obj::USE_CACHE,"USE_CACHE");
	HX_VISIT_MEMBER_NAME(Serializer_obj::USE_ENUM_INDEX,"USE_ENUM_INDEX");
	HX_VISIT_MEMBER_NAME(Serializer_obj::BASE64,"BASE64");
	HX_VISIT_MEMBER_NAME(Serializer_obj::BASE64_CODES,"BASE64_CODES");
};

#endif

hx::Class Serializer_obj::__mClass;

static ::String Serializer_obj_sStaticFields[] = {
	HX_HCSTRING("USE_CACHE","\xca","\xf8","\xb5","\x85"),
	HX_HCSTRING("USE_ENUM_INDEX","\x4c","\xbc","\x56","\x9d"),
	HX_HCSTRING("BASE64","\x8f","\xc5","\xaa","\x07"),
	HX_HCSTRING("BASE64_CODES","\x96","\xb0","\x35","\x26"),
	HX_HCSTRING("run","\x4b","\xe7","\x56","\x00"),
	::String(null())
};

void Serializer_obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("haxe.Serializer","\xfa","\xa1","\x6e","\x6a");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Serializer_obj::__GetStatic;
	__mClass->mSetStaticField = &Serializer_obj::__SetStatic;
	__mClass->mMarkFunc = Serializer_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Serializer_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(Serializer_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< Serializer_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Serializer_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Serializer_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Serializer_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void Serializer_obj::__boot()
{
{
            	HX_STACK_FRAME("haxe.Serializer","boot",0x2eac2726,"haxe.Serializer.boot","C:\\HaxeToolkit\\haxe\\std/haxe/Serializer.hx",55,0xfce2327c)
HXLINE(  55)		USE_CACHE = false;
            	}
{
            	HX_STACK_FRAME("haxe.Serializer","boot",0x2eac2726,"haxe.Serializer.boot","C:\\HaxeToolkit\\haxe\\std/haxe/Serializer.hx",67,0xfce2327c)
HXLINE(  67)		USE_ENUM_INDEX = false;
            	}
{
            	HX_STACK_FRAME("haxe.Serializer","boot",0x2eac2726,"haxe.Serializer.boot","C:\\HaxeToolkit\\haxe\\std/haxe/Serializer.hx",69,0xfce2327c)
HXLINE(  69)		BASE64 = HX_("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:",d4,3b,03,7f);
            	}
{
            	HX_STACK_FRAME("haxe.Serializer","boot",0x2eac2726,"haxe.Serializer.boot","C:\\HaxeToolkit\\haxe\\std/haxe/Serializer.hx",70,0xfce2327c)
HXLINE(  70)		BASE64_CODES = null();
            	}
}

} // end namespace haxe
