// Generated by Haxe 3.4.0
#include <hxcpp.h>

#ifndef INCLUDED_38344beec7696400
#define INCLUDED_38344beec7696400
#include "cpp/Int64.h"
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_StringBuf
#include <StringBuf.h>
#endif
#ifndef INCLUDED_haxe_io_Bytes
#include <haxe/io/Bytes.h>
#endif
#ifndef INCLUDED_lime__backend_native_NativeGLRenderContext
#include <lime/_backend/native/NativeGLRenderContext.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_GL
#include <lime/graphics/opengl/GL.h>
#endif
#ifndef INCLUDED_openfl__internal_stage3D_AGALConverter
#include <openfl/_internal/stage3D/AGALConverter.h>
#endif
#ifndef INCLUDED_openfl__internal_stage3D_RegisterMap
#include <openfl/_internal/stage3D/RegisterMap.h>
#endif
#ifndef INCLUDED_openfl__internal_stage3D_SamplerState
#include <openfl/_internal/stage3D/SamplerState.h>
#endif
#ifndef INCLUDED_openfl__internal_stage3D__AGALConverter_DestRegister
#include <openfl/_internal/stage3D/_AGALConverter/DestRegister.h>
#endif
#ifndef INCLUDED_openfl__internal_stage3D__AGALConverter_ProgramType
#include <openfl/_internal/stage3D/_AGALConverter/ProgramType.h>
#endif
#ifndef INCLUDED_openfl__internal_stage3D__AGALConverter_RegisterUsage
#include <openfl/_internal/stage3D/_AGALConverter/RegisterUsage.h>
#endif
#ifndef INCLUDED_openfl__internal_stage3D__AGALConverter_SamplerRegister
#include <openfl/_internal/stage3D/_AGALConverter/SamplerRegister.h>
#endif
#ifndef INCLUDED_openfl__internal_stage3D__AGALConverter_SourceRegister
#include <openfl/_internal/stage3D/_AGALConverter/SourceRegister.h>
#endif
#ifndef INCLUDED_openfl_errors_Error
#include <openfl/errors/Error.h>
#endif
#ifndef INCLUDED_openfl_errors_IllegalOperationError
#include <openfl/errors/IllegalOperationError.h>
#endif
#ifndef INCLUDED_openfl_utils_ByteArrayData
#include <openfl/utils/ByteArrayData.h>
#endif
#ifndef INCLUDED_openfl_utils_IDataInput
#include <openfl/utils/IDataInput.h>
#endif
#ifndef INCLUDED_openfl_utils_IDataOutput
#include <openfl/utils/IDataOutput.h>
#endif
#ifndef INCLUDED_openfl_utils__ByteArray_ByteArray_Impl_
#include <openfl/utils/_ByteArray/ByteArray_Impl_.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_dbea68197720f69f_20_prefixFromType,"openfl._internal.stage3D.AGALConverter","prefixFromType",0xf2d51404,"openfl._internal.stage3D.AGALConverter.prefixFromType","openfl/_internal/stage3D/AGALConverter.hx",20,0x0a35cc61)
HX_DEFINE_STACK_FRAME(_hx_pos_dbea68197720f69f_35_readUInt64,"openfl._internal.stage3D.AGALConverter","readUInt64",0xe0c9dd3c,"openfl._internal.stage3D.AGALConverter.readUInt64","openfl/_internal/stage3D/AGALConverter.hx",35,0x0a35cc61)
HX_DEFINE_STACK_FRAME(_hx_pos_dbea68197720f69f_44_convertToGLSL,"openfl._internal.stage3D.AGALConverter","convertToGLSL",0x2f4203fe,"openfl._internal.stage3D.AGALConverter.convertToGLSL","openfl/_internal/stage3D/AGALConverter.hx",44,0x0a35cc61)
static const ::String _hx_array_data_9ee22da0_4[] = {
	HX_("\t",09,00,00,00),
};
static const ::String _hx_array_data_9ee22da0_5[] = {
	HX_("\n",0a,00,00,00),
};
static const ::String _hx_array_data_9ee22da0_6[] = {
	HX_("precision highp float;\n",57,4a,f7,14),
};
static const ::String _hx_array_data_9ee22da0_7[] = {
	HX_("uniform vec4 vcPositionScale;\n",cf,aa,4f,18),
};
static const ::String _hx_array_data_9ee22da0_8[] = {
	HX_("void main() {\n",49,b0,bf,fb),
};
static const ::String _hx_array_data_9ee22da0_9[] = {
	HX_("\tgl_Position *= vcPositionScale;\n",7c,ad,85,8d),
};
static const ::String _hx_array_data_9ee22da0_10[] = {
	HX_("}\n",ed,6c,00,00),
};
namespace openfl{
namespace _internal{
namespace stage3D{

void AGALConverter_obj::__construct() { }

Dynamic AGALConverter_obj::__CreateEmpty() { return new AGALConverter_obj; }

void *AGALConverter_obj::_hx_vtable = 0;

Dynamic AGALConverter_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< AGALConverter_obj > _hx_result = new AGALConverter_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool AGALConverter_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x07c627cc;
}

 ::Dynamic AGALConverter_obj::limitedProfile;

::String AGALConverter_obj::prefixFromType(int regType, ::openfl::_internal::stage3D::_AGALConverter::ProgramType programType){
            	HX_GC_STACKFRAME(&_hx_pos_dbea68197720f69f_20_prefixFromType)
            	HX_STACK_ARG(regType,"regType")
            	HX_STACK_ARG(programType,"programType")
HXLINE(  20)		switch((int)(regType)){
            			case (int)0: {
HXLINE(  22)				return HX_("va",2b,67,00,00);
            			}
            			break;
            			case (int)1: {
HXLINE(  23)				if (hx::IsEq( programType,::openfl::_internal::stage3D::_AGALConverter::ProgramType_obj::VERTEX_dyn() )) {
HXLINE(  23)					return HX_("vc",2d,67,00,00);
            				}
            				else {
HXLINE(  23)					return HX_("fc",3d,59,00,00);
            				}
            			}
            			break;
            			case (int)2: {
HXLINE(  24)				if (hx::IsEq( programType,::openfl::_internal::stage3D::_AGALConverter::ProgramType_obj::VERTEX_dyn() )) {
HXLINE(  24)					return HX_("vt",3e,67,00,00);
            				}
            				else {
HXLINE(  24)					return HX_("ft",4e,59,00,00);
            				}
            			}
            			break;
            			case (int)3: {
HXLINE(  25)				return HX_("output_",3e,12,6c,e4);
            			}
            			break;
            			case (int)4: {
HXLINE(  26)				return HX_("v",76,00,00,00);
            			}
            			break;
            			case (int)5: {
HXLINE(  27)				return HX_("sampler",08,c5,c9,83);
            			}
            			break;
            			default:{
HXLINE(  28)				HX_STACK_DO_THROW( ::openfl::errors::IllegalOperationError_obj::__alloc( HX_CTX ,HX_("Invalid data!",ae,d8,c0,b8)));
            			}
            		}
HXLINE(  20)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(AGALConverter_obj,prefixFromType,return )

 ::cpp::Int64Struct AGALConverter_obj::readUInt64( ::openfl::utils::ByteArrayData byteArray){
            	HX_STACKFRAME(&_hx_pos_dbea68197720f69f_35_readUInt64)
            	HX_STACK_ARG(byteArray,"byteArray")
HXLINE(  37)		HX_VARI( int,low) = byteArray->readInt();
HXLINE(  39)		return _hx_int64_make(byteArray->readInt(),low);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AGALConverter_obj,readUInt64,return )

::String AGALConverter_obj::convertToGLSL( ::openfl::utils::ByteArrayData agal,::Array< ::Dynamic> samplerState){
            	HX_GC_STACKFRAME(&_hx_pos_dbea68197720f69f_44_convertToGLSL)
            	HX_STACK_ARG(agal,"agal")
            	HX_STACK_ARG(samplerState,"samplerState")
HXLINE(  46)		agal->position = (int)0;
HXLINE(  47)		agal->_hx___endian = (int)1;
HXLINE(  49)		HX_VARI( int,magic) = ((int)agal->readByte() & (int)(int)255);
HXLINE(  51)		if ((magic == (int)176)) {
HXLINE(  54)			return agal->readUTF();
            		}
HXLINE(  58)		if ((magic != (int)160)) {
HXLINE(  60)			HX_STACK_DO_THROW( ::openfl::errors::IllegalOperationError_obj::__alloc( HX_CTX ,HX_("Magic value must be 0xA0, may not be AGAL",33,cd,d9,2e)));
            		}
HXLINE(  66)		if ((agal->readInt() != (int)1)) {
HXLINE(  68)			HX_STACK_DO_THROW( ::openfl::errors::IllegalOperationError_obj::__alloc( HX_CTX ,HX_("Version must be 1",e3,ba,ef,98)));
            		}
HXLINE(  74)		if ((((int)agal->readByte() & (int)(int)255) != (int)161)) {
HXLINE(  76)			HX_STACK_DO_THROW( ::openfl::errors::IllegalOperationError_obj::__alloc( HX_CTX ,HX_("Shader type ID must be 0xA1",38,36,8f,05)));
            		}
HXLINE(  80)		HX_VAR(  ::openfl::_internal::stage3D::_AGALConverter::ProgramType,programType);
HXDLIN(  80)		if ((((int)agal->readByte() & (int)(int)255) == (int)0)) {
HXLINE(  80)			programType = ::openfl::_internal::stage3D::_AGALConverter::ProgramType_obj::VERTEX_dyn();
            		}
            		else {
HXLINE(  80)			programType = ::openfl::_internal::stage3D::_AGALConverter::ProgramType_obj::FRAGMENT_dyn();
            		}
HXLINE(  82)		HX_VARI(  ::openfl::_internal::stage3D::RegisterMap,map) =  ::openfl::_internal::stage3D::RegisterMap_obj::__alloc( HX_CTX );
HXLINE(  83)		HX_VARI(  ::StringBuf,sb) =  ::StringBuf_obj::__alloc( HX_CTX );
HXLINE(  85)		while((agal->position < ::openfl::utils::_ByteArray::ByteArray_Impl__obj::get_length(agal))){
HXLINE(  88)			HX_VARI( int,opcode) = agal->readInt();
HXLINE(  89)			HX_VARI( int,dest) = agal->readUnsignedInt();
HXLINE(  90)			HX_VARI(  ::cpp::Int64Struct,source1) = ::openfl::_internal::stage3D::AGALConverter_obj::readUInt64(agal);
HXLINE(  91)			HX_VARI(  ::cpp::Int64Struct,source2) = ::openfl::_internal::stage3D::AGALConverter_obj::readUInt64(agal);
HXLINE(  94)			HX_VARI(  ::openfl::_internal::stage3D::_AGALConverter::DestRegister,dr) = ::openfl::_internal::stage3D::_AGALConverter::DestRegister_obj::parse(dest,programType);
HXLINE(  95)			HX_VARI(  ::openfl::_internal::stage3D::_AGALConverter::SourceRegister,sr1) = ::openfl::_internal::stage3D::_AGALConverter::SourceRegister_obj::parse(source1,programType,dr->mask);
HXLINE(  96)			HX_VARI(  ::openfl::_internal::stage3D::_AGALConverter::SourceRegister,sr2) = ::openfl::_internal::stage3D::_AGALConverter::SourceRegister_obj::parse(source2,programType,dr->mask);
HXLINE(  99)			{
HXLINE(  99)				if (hx::IsNotNull( sb->charBuf )) {
HXLINE(  99)					sb->flush();
            				}
HXDLIN(  99)				if (hx::IsNull( sb->b )) {
HXLINE(  99)					sb->b = ::Array_obj< ::String >::fromData( _hx_array_data_9ee22da0_4,1);
            				}
            				else {
HXLINE(  99)					sb->b->push(HX_("\t",09,00,00,00));
            				}
            			}
HXLINE( 101)			switch((int)(opcode)){
            				case (int)0: {
HXLINE( 105)					{
HXLINE( 105)						HX_VARI( ::String,x) = (dr->toGLSL(null()) + HX_(" = ",63,7d,18,00));
HXDLIN( 105)						HX_VARI_NAME( ::String,x1,"x") = ((x + sr1->toGLSL(null(),null())) + HX_("; // mov",19,49,64,51));
HXDLIN( 105)						if (hx::IsNotNull( sb->charBuf )) {
HXLINE( 105)							sb->flush();
            						}
HXDLIN( 105)						if (hx::IsNull( sb->b )) {
HXLINE( 105)							sb->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x1));
            						}
            						else {
HXLINE( 105)							HX_VARI_NAME( ::Array< ::String >,sb1,"sb") = sb->b;
HXDLIN( 105)							sb1->push(::Std_obj::string(x1));
            						}
            					}
HXLINE( 106)					map->addDR(dr,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn());
HXLINE( 107)					map->addSR(sr1,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn(),null());
            				}
            				break;
            				case (int)1: {
HXLINE( 111)					{
HXLINE( 111)						HX_VARI_NAME( ::String,x2,"x") = (dr->toGLSL(null()) + HX_(" = ",63,7d,18,00));
HXDLIN( 111)						HX_VARI_NAME( ::String,x3,"x") = ((x2 + sr1->toGLSL(null(),null())) + HX_(" + ",b5,6d,18,00));
HXDLIN( 111)						HX_VARI_NAME( ::String,x4,"x") = ((x3 + sr2->toGLSL(null(),null())) + HX_("; // add",66,24,5b,51));
HXDLIN( 111)						if (hx::IsNotNull( sb->charBuf )) {
HXLINE( 111)							sb->flush();
            						}
HXDLIN( 111)						if (hx::IsNull( sb->b )) {
HXLINE( 111)							sb->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x4));
            						}
            						else {
HXLINE( 111)							HX_VARI_NAME( ::Array< ::String >,sb2,"sb") = sb->b;
HXDLIN( 111)							sb2->push(::Std_obj::string(x4));
            						}
            					}
HXLINE( 112)					map->addDR(dr,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn());
HXLINE( 113)					map->addSR(sr1,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn(),null());
HXLINE( 114)					map->addSR(sr2,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn(),null());
            				}
            				break;
            				case (int)2: {
HXLINE( 118)					{
HXLINE( 118)						HX_VARI_NAME( ::String,x5,"x") = (dr->toGLSL(null()) + HX_(" = ",63,7d,18,00));
HXDLIN( 118)						HX_VARI_NAME( ::String,x6,"x") = ((x5 + sr1->toGLSL(null(),null())) + HX_(" - ",73,6f,18,00));
HXDLIN( 118)						HX_VARI_NAME( ::String,x7,"x") = ((x6 + sr2->toGLSL(null(),null())) + HX_("; // sub",c5,db,68,51));
HXDLIN( 118)						if (hx::IsNotNull( sb->charBuf )) {
HXLINE( 118)							sb->flush();
            						}
HXDLIN( 118)						if (hx::IsNull( sb->b )) {
HXLINE( 118)							sb->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x7));
            						}
            						else {
HXLINE( 118)							HX_VARI_NAME( ::Array< ::String >,sb3,"sb") = sb->b;
HXDLIN( 118)							sb3->push(::Std_obj::string(x7));
            						}
            					}
HXLINE( 119)					map->addDR(dr,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn());
HXLINE( 120)					map->addSR(sr1,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn(),null());
HXLINE( 121)					map->addSR(sr2,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn(),null());
            				}
            				break;
            				case (int)3: {
HXLINE( 125)					{
HXLINE( 125)						HX_VARI_NAME( ::String,x8,"x") = (dr->toGLSL(null()) + HX_(" = ",63,7d,18,00));
HXDLIN( 125)						HX_VARI_NAME( ::String,x9,"x") = ((x8 + sr1->toGLSL(null(),null())) + HX_(" * ",d6,6c,18,00));
HXDLIN( 125)						HX_VARI_NAME( ::String,x10,"x") = ((x9 + sr2->toGLSL(null(),null())) + HX_("; // mul",49,4e,64,51));
HXDLIN( 125)						if (hx::IsNotNull( sb->charBuf )) {
HXLINE( 125)							sb->flush();
            						}
HXDLIN( 125)						if (hx::IsNull( sb->b )) {
HXLINE( 125)							sb->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x10));
            						}
            						else {
HXLINE( 125)							HX_VARI_NAME( ::Array< ::String >,sb4,"sb") = sb->b;
HXDLIN( 125)							sb4->push(::Std_obj::string(x10));
            						}
            					}
HXLINE( 126)					map->addDR(dr,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn());
HXLINE( 127)					map->addSR(sr1,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn(),null());
HXLINE( 128)					map->addSR(sr2,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn(),null());
            				}
            				break;
            				case (int)4: {
HXLINE( 132)					{
HXLINE( 132)						HX_VARI_NAME( ::String,x11,"x") = (dr->toGLSL(null()) + HX_(" = ",63,7d,18,00));
HXDLIN( 132)						HX_VARI_NAME( ::String,x12,"x") = ((x11 + sr1->toGLSL(null(),null())) + HX_(" / ",31,71,18,00));
HXDLIN( 132)						HX_VARI_NAME( ::String,x13,"x") = ((x12 + sr2->toGLSL(null(),null())) + HX_("; // div",96,6f,5d,51));
HXDLIN( 132)						if (hx::IsNotNull( sb->charBuf )) {
HXLINE( 132)							sb->flush();
            						}
HXDLIN( 132)						if (hx::IsNull( sb->b )) {
HXLINE( 132)							sb->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x13));
            						}
            						else {
HXLINE( 132)							HX_VARI_NAME( ::Array< ::String >,sb5,"sb") = sb->b;
HXDLIN( 132)							sb5->push(::Std_obj::string(x13));
            						}
            					}
HXLINE( 133)					map->addDR(dr,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn());
HXLINE( 134)					map->addSR(sr1,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn(),null());
HXLINE( 135)					map->addSR(sr2,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn(),null());
            				}
            				break;
            				case (int)5: {
HXLINE( 139)					{
HXLINE( 139)						HX_VARI_NAME( ::String,x14,"x") = (dr->toGLSL(null()) + HX_(" = vec4(1) / ",b4,32,05,3b));
HXDLIN( 139)						HX_VARI_NAME( ::String,x15,"x") = ((x14 + sr1->toGLSL(null(),null())) + HX_(", ",74,26,00,00));
HXDLIN( 139)						HX_VARI_NAME( ::String,x16,"x") = ((x15 + sr2->toGLSL(null(),null())) + HX_("; // rcp (untested)",33,14,36,02));
HXDLIN( 139)						if (hx::IsNotNull( sb->charBuf )) {
HXLINE( 139)							sb->flush();
            						}
HXDLIN( 139)						if (hx::IsNull( sb->b )) {
HXLINE( 139)							sb->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x16));
            						}
            						else {
HXLINE( 139)							HX_VARI_NAME( ::Array< ::String >,sb6,"sb") = sb->b;
HXDLIN( 139)							sb6->push(::Std_obj::string(x16));
            						}
            					}
HXLINE( 140)					map->addDR(dr,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn());
HXLINE( 141)					map->addSR(sr1,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn(),null());
            				}
            				break;
            				case (int)6: {
HXLINE( 145)					{
HXLINE( 145)						HX_VARI_NAME( ::String,x17,"x") = (dr->toGLSL(null()) + HX_(" = min(",39,b9,a2,4b));
HXDLIN( 145)						HX_VARI_NAME( ::String,x18,"x") = ((x17 + sr1->toGLSL(null(),null())) + HX_(", ",74,26,00,00));
HXDLIN( 145)						HX_VARI_NAME( ::String,x19,"x") = ((x18 + sr2->toGLSL(null(),null())) + HX_("); // min",00,15,0e,1a));
HXDLIN( 145)						if (hx::IsNotNull( sb->charBuf )) {
HXLINE( 145)							sb->flush();
            						}
HXDLIN( 145)						if (hx::IsNull( sb->b )) {
HXLINE( 145)							sb->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x19));
            						}
            						else {
HXLINE( 145)							HX_VARI_NAME( ::Array< ::String >,sb7,"sb") = sb->b;
HXDLIN( 145)							sb7->push(::Std_obj::string(x19));
            						}
            					}
HXLINE( 146)					map->addDR(dr,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn());
HXLINE( 147)					map->addSR(sr1,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn(),null());
HXLINE( 148)					map->addSR(sr2,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn(),null());
            				}
            				break;
            				case (int)7: {
HXLINE( 152)					{
HXLINE( 152)						HX_VARI_NAME( ::String,x20,"x") = (dr->toGLSL(null()) + HX_(" = max(",e7,af,9c,4b));
HXDLIN( 152)						HX_VARI_NAME( ::String,x21,"x") = ((x20 + sr1->toGLSL(null(),null())) + HX_(", ",74,26,00,00));
HXDLIN( 152)						HX_VARI_NAME( ::String,x22,"x") = ((x21 + sr2->toGLSL(null(),null())) + HX_("); // max",12,0e,0e,1a));
HXDLIN( 152)						if (hx::IsNotNull( sb->charBuf )) {
HXLINE( 152)							sb->flush();
            						}
HXDLIN( 152)						if (hx::IsNull( sb->b )) {
HXLINE( 152)							sb->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x22));
            						}
            						else {
HXLINE( 152)							HX_VARI_NAME( ::Array< ::String >,sb8,"sb") = sb->b;
HXDLIN( 152)							sb8->push(::Std_obj::string(x22));
            						}
            					}
HXLINE( 153)					map->addDR(dr,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn());
HXLINE( 154)					map->addSR(sr1,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn(),null());
HXLINE( 155)					map->addSR(sr2,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn(),null());
            				}
            				break;
            				case (int)8: {
HXLINE( 159)					{
HXLINE( 159)						HX_VARI_NAME( ::String,x23,"x") = (dr->toGLSL(null()) + HX_(" = fract(",85,4f,5f,de));
HXDLIN( 159)						HX_VARI_NAME( ::String,x24,"x") = ((x23 + sr1->toGLSL(null(),null())) + HX_("); // frc",05,cd,08,1a));
HXDLIN( 159)						if (hx::IsNotNull( sb->charBuf )) {
HXLINE( 159)							sb->flush();
            						}
HXDLIN( 159)						if (hx::IsNull( sb->b )) {
HXLINE( 159)							sb->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x24));
            						}
            						else {
HXLINE( 159)							HX_VARI_NAME( ::Array< ::String >,sb9,"sb") = sb->b;
HXDLIN( 159)							sb9->push(::Std_obj::string(x24));
            						}
            					}
HXLINE( 160)					map->addDR(dr,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn());
HXLINE( 161)					map->addSR(sr1,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn(),null());
            				}
            				break;
            				case (int)9: {
HXLINE( 165)					{
HXLINE( 165)						HX_VARI_NAME( ::String,x25,"x") = (dr->toGLSL(null()) + HX_(" = sqrt(",05,d4,73,5c));
HXDLIN( 165)						HX_VARI_NAME( ::String,x26,"x") = ((x25 + sr1->toGLSL(null(),null())) + HX_("); // sqrt",b2,a8,41,b6));
HXDLIN( 165)						if (hx::IsNotNull( sb->charBuf )) {
HXLINE( 165)							sb->flush();
            						}
HXDLIN( 165)						if (hx::IsNull( sb->b )) {
HXLINE( 165)							sb->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x26));
            						}
            						else {
HXLINE( 165)							HX_VARI_NAME( ::Array< ::String >,sb10,"sb") = sb->b;
HXDLIN( 165)							sb10->push(::Std_obj::string(x26));
            						}
            					}
HXLINE( 166)					map->addDR(dr,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn());
HXLINE( 167)					map->addSR(sr1,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn(),null());
            				}
            				break;
            				case (int)10: {
HXLINE( 171)					{
HXLINE( 171)						HX_VARI_NAME( ::String,x27,"x") = (dr->toGLSL(null()) + HX_(" = inversesqrt(",7b,94,3b,f8));
HXDLIN( 171)						HX_VARI_NAME( ::String,x28,"x") = ((x27 + sr1->toGLSL(null(),null())) + HX_("); // rsq",fe,e8,11,1a));
HXDLIN( 171)						if (hx::IsNotNull( sb->charBuf )) {
HXLINE( 171)							sb->flush();
            						}
HXDLIN( 171)						if (hx::IsNull( sb->b )) {
HXLINE( 171)							sb->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x28));
            						}
            						else {
HXLINE( 171)							HX_VARI_NAME( ::Array< ::String >,sb11,"sb") = sb->b;
HXDLIN( 171)							sb11->push(::Std_obj::string(x28));
            						}
            					}
HXLINE( 172)					map->addDR(dr,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn());
HXLINE( 173)					map->addSR(sr1,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn(),null());
            				}
            				break;
            				case (int)11: {
HXLINE( 177)					{
HXLINE( 177)						HX_VARI_NAME( ::String,x29,"x") = (dr->toGLSL(null()) + HX_(" = pow(",73,f2,a2,4d));
HXDLIN( 177)						HX_VARI_NAME( ::String,x30,"x") = ((x29 + sr1->toGLSL(null(),null())) + HX_(", ",74,26,00,00));
HXDLIN( 177)						HX_VARI_NAME( ::String,x31,"x") = ((x30 + sr2->toGLSL(null(),null())) + HX_("); // pow",06,61,10,1a));
HXDLIN( 177)						if (hx::IsNotNull( sb->charBuf )) {
HXLINE( 177)							sb->flush();
            						}
HXDLIN( 177)						if (hx::IsNull( sb->b )) {
HXLINE( 177)							sb->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x31));
            						}
            						else {
HXLINE( 177)							HX_VARI_NAME( ::Array< ::String >,sb12,"sb") = sb->b;
HXDLIN( 177)							sb12->push(::Std_obj::string(x31));
            						}
            					}
HXLINE( 178)					map->addDR(dr,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn());
HXLINE( 179)					map->addSR(sr1,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn(),null());
HXLINE( 180)					map->addSR(sr2,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn(),null());
            				}
            				break;
            				case (int)12: {
HXLINE( 184)					{
HXLINE( 184)						HX_VARI_NAME( ::String,x32,"x") = (dr->toGLSL(null()) + HX_(" = log2(",f7,c4,4a,53));
HXDLIN( 184)						HX_VARI_NAME( ::String,x33,"x") = ((x32 + sr1->toGLSL(null(),null())) + HX_("); // log",f2,57,0d,1a));
HXDLIN( 184)						if (hx::IsNotNull( sb->charBuf )) {
HXLINE( 184)							sb->flush();
            						}
HXDLIN( 184)						if (hx::IsNull( sb->b )) {
HXLINE( 184)							sb->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x33));
            						}
            						else {
HXLINE( 184)							HX_VARI_NAME( ::Array< ::String >,sb13,"sb") = sb->b;
HXDLIN( 184)							sb13->push(::Std_obj::string(x33));
            						}
            					}
HXLINE( 185)					map->addDR(dr,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn());
HXLINE( 186)					map->addSR(sr1,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn(),null());
            				}
            				break;
            				case (int)13: {
HXLINE( 190)					{
HXLINE( 190)						HX_VARI_NAME( ::String,x34,"x") = (dr->toGLSL(null()) + HX_(" = exp2(",50,75,76,51));
HXDLIN( 190)						HX_VARI_NAME( ::String,x35,"x") = ((x34 + sr1->toGLSL(null(),null())) + HX_("); // exp",0b,10,08,1a));
HXDLIN( 190)						if (hx::IsNotNull( sb->charBuf )) {
HXLINE( 190)							sb->flush();
            						}
HXDLIN( 190)						if (hx::IsNull( sb->b )) {
HXLINE( 190)							sb->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x35));
            						}
            						else {
HXLINE( 190)							HX_VARI_NAME( ::Array< ::String >,sb14,"sb") = sb->b;
HXDLIN( 190)							sb14->push(::Std_obj::string(x35));
            						}
            					}
HXLINE( 191)					map->addDR(dr,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn());
HXLINE( 192)					map->addSR(sr1,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn(),null());
            				}
            				break;
            				case (int)14: {
HXLINE( 196)					{
HXLINE( 196)						HX_VARI_NAME( ::String,x36,"x") = (dr->toGLSL(null()) + HX_(" = normalize(",1e,9b,e9,ff));
HXDLIN( 196)						HX_VARI_NAME( ::String,x37,"x") = ((x36 + sr1->toGLSL(null(),null())) + HX_("); // normalize",7b,81,39,e2));
HXDLIN( 196)						if (hx::IsNotNull( sb->charBuf )) {
HXLINE( 196)							sb->flush();
            						}
HXDLIN( 196)						if (hx::IsNull( sb->b )) {
HXLINE( 196)							sb->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x37));
            						}
            						else {
HXLINE( 196)							HX_VARI_NAME( ::Array< ::String >,sb15,"sb") = sb->b;
HXDLIN( 196)							sb15->push(::Std_obj::string(x37));
            						}
            					}
HXLINE( 197)					map->addDR(dr,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn());
HXLINE( 198)					map->addSR(sr1,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn(),null());
            				}
            				break;
            				case (int)15: {
HXLINE( 202)					{
HXLINE( 202)						HX_VARI_NAME( ::String,x38,"x") = (dr->toGLSL(null()) + HX_(" = sin(",f3,00,9a,4f));
HXDLIN( 202)						HX_VARI_NAME( ::String,x39,"x") = ((x38 + sr1->toGLSL(null(),null())) + HX_("); // sin",86,a2,12,1a));
HXDLIN( 202)						if (hx::IsNotNull( sb->charBuf )) {
HXLINE( 202)							sb->flush();
            						}
HXDLIN( 202)						if (hx::IsNull( sb->b )) {
HXLINE( 202)							sb->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x39));
            						}
            						else {
HXLINE( 202)							HX_VARI_NAME( ::Array< ::String >,sb16,"sb") = sb->b;
HXDLIN( 202)							sb16->push(::Std_obj::string(x39));
            						}
            					}
HXLINE( 203)					map->addDR(dr,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn());
HXLINE( 204)					map->addSR(sr1,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn(),null());
            				}
            				break;
            				case (int)16: {
HXLINE( 208)					{
HXLINE( 208)						HX_VARI_NAME( ::String,x40,"x") = (dr->toGLSL(null()) + HX_(" = cos(",e4,28,0b,45));
HXDLIN( 208)						HX_VARI_NAME( ::String,x41,"x") = ((x40 + sr1->toGLSL(null(),null())) + HX_("); // cos",b5,83,06,1a));
HXDLIN( 208)						if (hx::IsNotNull( sb->charBuf )) {
HXLINE( 208)							sb->flush();
            						}
HXDLIN( 208)						if (hx::IsNull( sb->b )) {
HXLINE( 208)							sb->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x41));
            						}
            						else {
HXLINE( 208)							HX_VARI_NAME( ::Array< ::String >,sb17,"sb") = sb->b;
HXDLIN( 208)							sb17->push(::Std_obj::string(x41));
            						}
            					}
HXLINE( 209)					map->addDR(dr,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn());
HXLINE( 210)					map->addSR(sr1,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn(),null());
            				}
            				break;
            				case (int)17: {
HXLINE( 214)					sr1->sourceMask = (sr2->sourceMask = (int)7);
HXLINE( 215)					{
HXLINE( 215)						HX_VARI_NAME( ::String,x42,"x") = (dr->toGLSL(null()) + HX_(" = cross(vec3(",be,c1,b9,ac));
HXDLIN( 215)						HX_VARI_NAME( ::String,x43,"x") = ((x42 + sr1->toGLSL(null(),null())) + HX_("), vec3(",ec,87,86,4e));
HXDLIN( 215)						HX_VARI_NAME( ::String,x44,"x") = ((x43 + sr2->toGLSL(null(),null())) + HX_(")); // crs",09,b9,f3,e5));
HXDLIN( 215)						if (hx::IsNotNull( sb->charBuf )) {
HXLINE( 215)							sb->flush();
            						}
HXDLIN( 215)						if (hx::IsNull( sb->b )) {
HXLINE( 215)							sb->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x44));
            						}
            						else {
HXLINE( 215)							HX_VARI_NAME( ::Array< ::String >,sb18,"sb") = sb->b;
HXDLIN( 215)							sb18->push(::Std_obj::string(x44));
            						}
            					}
HXLINE( 216)					map->addDR(dr,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn());
HXLINE( 217)					map->addSR(sr1,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn(),null());
HXLINE( 218)					map->addSR(sr2,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn(),null());
            				}
            				break;
            				case (int)18: {
HXLINE( 222)					sr1->sourceMask = (sr2->sourceMask = (int)7);
HXLINE( 223)					{
HXLINE( 223)						HX_VARI_NAME( ::String,x45,"x") = (dr->toGLSL(null()) + HX_(" = vec4(dot(vec3(",e5,e8,98,98));
HXDLIN( 223)						HX_VARI_NAME( ::String,x46,"x") = ((x45 + sr1->toGLSL(null(),null())) + HX_("), vec3(",ec,87,86,4e));
HXDLIN( 223)						HX_VARI_NAME( ::String,x47,"x") = ((x46 + sr2->toGLSL(null(),null())) + HX_(")))",49,40,1f,00));
HXDLIN( 223)						HX_VARI_NAME( ::String,x48,"x") = ((x47 + dr->getWriteMask()) + HX_("; // dp3",6c,75,5d,51));
HXDLIN( 223)						if (hx::IsNotNull( sb->charBuf )) {
HXLINE( 223)							sb->flush();
            						}
HXDLIN( 223)						if (hx::IsNull( sb->b )) {
HXLINE( 223)							sb->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x48));
            						}
            						else {
HXLINE( 223)							HX_VARI_NAME( ::Array< ::String >,sb19,"sb") = sb->b;
HXDLIN( 223)							sb19->push(::Std_obj::string(x48));
            						}
            					}
HXLINE( 224)					map->addDR(dr,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn());
HXLINE( 225)					map->addSR(sr1,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn(),null());
HXLINE( 226)					map->addSR(sr2,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn(),null());
            				}
            				break;
            				case (int)19: {
HXLINE( 230)					sr1->sourceMask = (sr2->sourceMask = (int)15);
HXLINE( 231)					{
HXLINE( 231)						HX_VARI_NAME( ::String,x49,"x") = (dr->toGLSL(null()) + HX_(" = vec4(dot(vec4(",c4,e9,98,98));
HXDLIN( 231)						HX_VARI_NAME( ::String,x50,"x") = ((x49 + sr1->toGLSL(null(),null())) + HX_("), vec4(",cb,88,86,4e));
HXDLIN( 231)						HX_VARI_NAME( ::String,x51,"x") = ((x50 + sr2->toGLSL(null(),null())) + HX_(")))",49,40,1f,00));
HXDLIN( 231)						HX_VARI_NAME( ::String,x52,"x") = ((x51 + dr->getWriteMask()) + HX_("; // dp4",6d,75,5d,51));
HXDLIN( 231)						if (hx::IsNotNull( sb->charBuf )) {
HXLINE( 231)							sb->flush();
            						}
HXDLIN( 231)						if (hx::IsNull( sb->b )) {
HXLINE( 231)							sb->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x52));
            						}
            						else {
HXLINE( 231)							HX_VARI_NAME( ::Array< ::String >,sb20,"sb") = sb->b;
HXDLIN( 231)							sb20->push(::Std_obj::string(x52));
            						}
            					}
HXLINE( 232)					map->addDR(dr,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn());
HXLINE( 233)					map->addSR(sr1,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn(),null());
HXLINE( 234)					map->addSR(sr2,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn(),null());
            				}
            				break;
            				case (int)20: {
HXLINE( 238)					{
HXLINE( 238)						HX_VARI_NAME( ::String,x53,"x") = (dr->toGLSL(null()) + HX_(" = abs(",59,de,ae,43));
HXDLIN( 238)						HX_VARI_NAME( ::String,x54,"x") = ((x53 + sr1->toGLSL(null(),null())) + HX_("); // abs",e0,f3,04,1a));
HXDLIN( 238)						if (hx::IsNotNull( sb->charBuf )) {
HXLINE( 238)							sb->flush();
            						}
HXDLIN( 238)						if (hx::IsNull( sb->b )) {
HXLINE( 238)							sb->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x54));
            						}
            						else {
HXLINE( 238)							HX_VARI_NAME( ::Array< ::String >,sb21,"sb") = sb->b;
HXDLIN( 238)							sb21->push(::Std_obj::string(x54));
            						}
            					}
HXLINE( 239)					map->addDR(dr,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn());
HXLINE( 240)					map->addSR(sr1,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn(),null());
            				}
            				break;
            				case (int)21: {
HXLINE( 244)					{
HXLINE( 244)						HX_VARI_NAME( ::String,x55,"x") = (dr->toGLSL(null()) + HX_(" = -",6a,39,55,15));
HXDLIN( 244)						HX_VARI_NAME( ::String,x56,"x") = ((x55 + sr1->toGLSL(null(),null())) + HX_("; // neg",95,02,65,51));
HXDLIN( 244)						if (hx::IsNotNull( sb->charBuf )) {
HXLINE( 244)							sb->flush();
            						}
HXDLIN( 244)						if (hx::IsNull( sb->b )) {
HXLINE( 244)							sb->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x56));
            						}
            						else {
HXLINE( 244)							HX_VARI_NAME( ::Array< ::String >,sb22,"sb") = sb->b;
HXDLIN( 244)							sb22->push(::Std_obj::string(x56));
            						}
            					}
HXLINE( 245)					map->addDR(dr,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn());
HXLINE( 246)					map->addSR(sr1,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn(),null());
            				}
            				break;
            				case (int)22: {
HXLINE( 250)					{
HXLINE( 250)						HX_VARI_NAME( ::String,x57,"x") = (dr->toGLSL(null()) + HX_(" = clamp(",70,52,ed,36));
HXDLIN( 250)						HX_VARI_NAME( ::String,x58,"x") = ((x57 + sr1->toGLSL(null(),null())) + HX_(", 0.0, 1.0); // saturate",02,d7,59,d0));
HXDLIN( 250)						if (hx::IsNotNull( sb->charBuf )) {
HXLINE( 250)							sb->flush();
            						}
HXDLIN( 250)						if (hx::IsNull( sb->b )) {
HXLINE( 250)							sb->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x58));
            						}
            						else {
HXLINE( 250)							HX_VARI_NAME( ::Array< ::String >,sb23,"sb") = sb->b;
HXDLIN( 250)							sb23->push(::Std_obj::string(x58));
            						}
            					}
HXLINE( 251)					map->addDR(dr,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn());
HXLINE( 252)					map->addSR(sr1,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn(),null());
            				}
            				break;
            				case (int)23: {
HXLINE( 260)					HX_VARI(  ::openfl::_internal::stage3D::_AGALConverter::RegisterUsage,existingUsage) = map->getRegisterUsage(sr2);
HXLINE( 262)					bool _hx_tmp;
HXDLIN( 262)					if (hx::IsNotEq( existingUsage,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn() )) {
HXLINE( 262)						_hx_tmp = hx::IsNotEq( existingUsage,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_ARRAY_dyn() );
            					}
            					else {
HXLINE( 262)						_hx_tmp = false;
            					}
HXDLIN( 262)					if (_hx_tmp) {
HXLINE( 264)						{
HXLINE( 264)							HX_VARI_NAME( ::String,x59,"x") = (dr->toGLSL(null()) + HX_(" = ",63,7d,18,00));
HXDLIN( 264)							HX_VARI_NAME( ::String,x60,"x") = ((x59 + sr1->toGLSL(null(),null())) + HX_(" * mat3(",9f,6a,62,c7));
HXDLIN( 264)							HX_VARI_NAME( ::String,x61,"x") = ((x60 + sr2->toGLSL(false,null())) + HX_("); // m33",bb,e5,0d,1a));
HXDLIN( 264)							if (hx::IsNotNull( sb->charBuf )) {
HXLINE( 264)								sb->flush();
            							}
HXDLIN( 264)							if (hx::IsNull( sb->b )) {
HXLINE( 264)								sb->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x61));
            							}
            							else {
HXLINE( 264)								HX_VARI_NAME( ::Array< ::String >,sb24,"sb") = sb->b;
HXDLIN( 264)								sb24->push(::Std_obj::string(x61));
            							}
            						}
HXLINE( 265)						map->addDR(dr,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn());
HXLINE( 266)						map->addSR(sr1,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn(),null());
HXLINE( 267)						map->addSR(sr2,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::MATRIX_4_4_dyn(),null());
            					}
            					else {
HXLINE( 272)						sr1->sourceMask = (sr2->sourceMask = (int)7);
HXLINE( 273)						{
HXLINE( 273)							HX_VARI_NAME( ::String,x62,"x") = ((dr->toGLSL(null()) + HX_(" = vec3(",a6,67,ad,0e)) + HX_("dot(",7f,f5,6d,42));
HXDLIN( 273)							HX_VARI_NAME( ::String,x63,"x") = ((x62 + sr1->toGLSL(true,null())) + HX_(",",2c,00,00,00));
HXDLIN( 273)							HX_VARI_NAME( ::String,x64,"x") = (((x63 + sr2->toGLSL(true,(int)0)) + HX_("), ",dd,42,1f,00)) + HX_("dot(",7f,f5,6d,42));
HXDLIN( 273)							HX_VARI_NAME( ::String,x65,"x") = ((x64 + sr1->toGLSL(true,null())) + HX_(",",2c,00,00,00));
HXDLIN( 273)							HX_VARI_NAME( ::String,x66,"x") = (((x65 + sr2->toGLSL(true,(int)1)) + HX_("),",e3,23,00,00)) + HX_("dot(",7f,f5,6d,42));
HXDLIN( 273)							HX_VARI_NAME( ::String,x67,"x") = ((x66 + sr1->toGLSL(true,null())) + HX_(",",2c,00,00,00));
HXDLIN( 273)							HX_VARI_NAME( ::String,x68,"x") = ((x67 + sr2->toGLSL(true,(int)2)) + HX_(")); // m33",72,18,fb,e5));
HXDLIN( 273)							if (hx::IsNotNull( sb->charBuf )) {
HXLINE( 273)								sb->flush();
            							}
HXDLIN( 273)							if (hx::IsNull( sb->b )) {
HXLINE( 273)								sb->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x68));
            							}
            							else {
HXLINE( 273)								HX_VARI_NAME( ::Array< ::String >,sb25,"sb") = sb->b;
HXDLIN( 273)								sb25->push(::Std_obj::string(x68));
            							}
            						}
HXLINE( 278)						map->addDR(dr,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn());
HXLINE( 279)						map->addSR(sr1,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn(),null());
HXLINE( 280)						map->addSR(sr2,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn(),(int)0);
HXLINE( 281)						map->addSR(sr2,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn(),(int)1);
HXLINE( 282)						map->addSR(sr2,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn(),(int)2);
            					}
            				}
            				break;
            				case (int)24: {
HXLINE( 294)					HX_VARI_NAME(  ::openfl::_internal::stage3D::_AGALConverter::RegisterUsage,existingUsage1,"existingUsage") = map->getRegisterUsage(sr2);
HXLINE( 296)					bool _hx_tmp1;
HXDLIN( 296)					if (hx::IsNotEq( existingUsage1,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn() )) {
HXLINE( 296)						_hx_tmp1 = hx::IsNotEq( existingUsage1,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_ARRAY_dyn() );
            					}
            					else {
HXLINE( 296)						_hx_tmp1 = false;
            					}
HXDLIN( 296)					if (_hx_tmp1) {
HXLINE( 298)						{
HXLINE( 298)							HX_VARI_NAME( ::String,x69,"x") = (dr->toGLSL(null()) + HX_(" = ",63,7d,18,00));
HXDLIN( 298)							HX_VARI_NAME( ::String,x70,"x") = ((x69 + sr1->toGLSL(null(),null())) + HX_(" * ",d6,6c,18,00));
HXDLIN( 298)							HX_VARI_NAME( ::String,x71,"x") = ((x70 + sr2->toGLSL(false,null())) + HX_("; // m44",72,15,64,51));
HXDLIN( 298)							if (hx::IsNotNull( sb->charBuf )) {
HXLINE( 298)								sb->flush();
            							}
HXDLIN( 298)							if (hx::IsNull( sb->b )) {
HXLINE( 298)								sb->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x71));
            							}
            							else {
HXLINE( 298)								HX_VARI_NAME( ::Array< ::String >,sb26,"sb") = sb->b;
HXDLIN( 298)								sb26->push(::Std_obj::string(x71));
            							}
            						}
HXLINE( 299)						map->addDR(dr,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn());
HXLINE( 300)						map->addSR(sr1,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn(),null());
HXLINE( 301)						map->addSR(sr2,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::MATRIX_4_4_dyn(),null());
            					}
            					else {
HXLINE( 306)						sr1->sourceMask = (sr2->sourceMask = (int)15);
HXLINE( 307)						{
HXLINE( 307)							HX_VARI_NAME( ::String,x72,"x") = ((dr->toGLSL(null()) + HX_(" = vec4(",85,68,ad,0e)) + HX_("dot(",7f,f5,6d,42));
HXDLIN( 307)							HX_VARI_NAME( ::String,x73,"x") = ((x72 + sr1->toGLSL(true,null())) + HX_(",",2c,00,00,00));
HXDLIN( 307)							HX_VARI_NAME( ::String,x74,"x") = (((x73 + sr2->toGLSL(true,(int)0)) + HX_("), ",dd,42,1f,00)) + HX_("dot(",7f,f5,6d,42));
HXDLIN( 307)							HX_VARI_NAME( ::String,x75,"x") = ((x74 + sr1->toGLSL(true,null())) + HX_(",",2c,00,00,00));
HXDLIN( 307)							HX_VARI_NAME( ::String,x76,"x") = (((x75 + sr2->toGLSL(true,(int)1)) + HX_("), ",dd,42,1f,00)) + HX_("dot(",7f,f5,6d,42));
HXDLIN( 307)							HX_VARI_NAME( ::String,x77,"x") = ((x76 + sr1->toGLSL(true,null())) + HX_(",",2c,00,00,00));
HXDLIN( 307)							HX_VARI_NAME( ::String,x78,"x") = (((x77 + sr2->toGLSL(true,(int)2)) + HX_("), ",dd,42,1f,00)) + HX_("dot(",7f,f5,6d,42));
HXDLIN( 307)							HX_VARI_NAME( ::String,x79,"x") = ((x78 + sr1->toGLSL(true,null())) + HX_(",",2c,00,00,00));
HXDLIN( 307)							HX_VARI_NAME( ::String,x80,"x") = ((x79 + sr2->toGLSL(true,(int)3)) + HX_(")); // m44",52,19,fb,e5));
HXDLIN( 307)							if (hx::IsNotNull( sb->charBuf )) {
HXLINE( 307)								sb->flush();
            							}
HXDLIN( 307)							if (hx::IsNull( sb->b )) {
HXLINE( 307)								sb->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x80));
            							}
            							else {
HXLINE( 307)								HX_VARI_NAME( ::Array< ::String >,sb27,"sb") = sb->b;
HXDLIN( 307)								sb27->push(::Std_obj::string(x80));
            							}
            						}
HXLINE( 313)						map->addDR(dr,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn());
HXLINE( 314)						map->addSR(sr1,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn(),null());
HXLINE( 315)						map->addSR(sr2,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn(),(int)0);
HXLINE( 316)						map->addSR(sr2,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn(),(int)1);
HXLINE( 317)						map->addSR(sr2,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn(),(int)2);
HXLINE( 318)						map->addSR(sr2,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn(),(int)3);
            					}
            				}
            				break;
            				case (int)25: {
HXLINE( 330)					dr->mask = ((int)dr->mask & (int)(int)7);
HXLINE( 332)					HX_VARI_NAME(  ::openfl::_internal::stage3D::_AGALConverter::RegisterUsage,existingUsage2,"existingUsage") = map->getRegisterUsage(sr2);
HXLINE( 334)					bool _hx_tmp2;
HXDLIN( 334)					if (hx::IsNotEq( existingUsage2,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn() )) {
HXLINE( 334)						_hx_tmp2 = hx::IsNotEq( existingUsage2,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_ARRAY_dyn() );
            					}
            					else {
HXLINE( 334)						_hx_tmp2 = false;
            					}
HXDLIN( 334)					if (_hx_tmp2) {
HXLINE( 336)						{
HXLINE( 336)							HX_VARI_NAME( ::String,x81,"x") = (dr->toGLSL(null()) + HX_(" = ",63,7d,18,00));
HXDLIN( 336)							HX_VARI_NAME( ::String,x82,"x") = ((x81 + sr1->toGLSL(null(),null())) + HX_(" * ",d6,6c,18,00));
HXDLIN( 336)							HX_VARI_NAME( ::String,x83,"x") = ((x82 + sr2->toGLSL(false,null())) + HX_("; // m34",93,14,64,51));
HXDLIN( 336)							if (hx::IsNotNull( sb->charBuf )) {
HXLINE( 336)								sb->flush();
            							}
HXDLIN( 336)							if (hx::IsNull( sb->b )) {
HXLINE( 336)								sb->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x83));
            							}
            							else {
HXLINE( 336)								HX_VARI_NAME( ::Array< ::String >,sb28,"sb") = sb->b;
HXDLIN( 336)								sb28->push(::Std_obj::string(x83));
            							}
            						}
HXLINE( 337)						map->addDR(dr,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn());
HXLINE( 338)						map->addSR(sr1,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn(),null());
HXLINE( 339)						map->addSR(sr2,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::MATRIX_4_4_dyn(),null());
            					}
            					else {
HXLINE( 344)						sr1->sourceMask = (sr2->sourceMask = (int)15);
HXLINE( 345)						{
HXLINE( 345)							HX_VARI_NAME( ::String,x84,"x") = ((dr->toGLSL(null()) + HX_(" = vec3(",a6,67,ad,0e)) + HX_("dot(",7f,f5,6d,42));
HXDLIN( 345)							HX_VARI_NAME( ::String,x85,"x") = ((x84 + sr1->toGLSL(true,null())) + HX_(",",2c,00,00,00));
HXDLIN( 345)							HX_VARI_NAME( ::String,x86,"x") = (((x85 + sr2->toGLSL(true,(int)0)) + HX_("), ",dd,42,1f,00)) + HX_("dot(",7f,f5,6d,42));
HXDLIN( 345)							HX_VARI_NAME( ::String,x87,"x") = ((x86 + sr1->toGLSL(true,null())) + HX_(",",2c,00,00,00));
HXDLIN( 345)							HX_VARI_NAME( ::String,x88,"x") = (((x87 + sr2->toGLSL(true,(int)1)) + HX_("),",e3,23,00,00)) + HX_("dot(",7f,f5,6d,42));
HXDLIN( 345)							HX_VARI_NAME( ::String,x89,"x") = ((x88 + sr1->toGLSL(true,null())) + HX_(",",2c,00,00,00));
HXDLIN( 345)							HX_VARI_NAME( ::String,x90,"x") = ((x89 + sr2->toGLSL(true,(int)2)) + HX_(")); // m34",73,18,fb,e5));
HXDLIN( 345)							if (hx::IsNotNull( sb->charBuf )) {
HXLINE( 345)								sb->flush();
            							}
HXDLIN( 345)							if (hx::IsNull( sb->b )) {
HXLINE( 345)								sb->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x90));
            							}
            							else {
HXLINE( 345)								HX_VARI_NAME( ::Array< ::String >,sb29,"sb") = sb->b;
HXDLIN( 345)								sb29->push(::Std_obj::string(x90));
            							}
            						}
HXLINE( 350)						map->addDR(dr,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn());
HXLINE( 351)						map->addSR(sr1,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn(),null());
HXLINE( 352)						map->addSR(sr2,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn(),(int)0);
HXLINE( 353)						map->addSR(sr2,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn(),(int)1);
HXLINE( 354)						map->addSR(sr2,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn(),(int)2);
            					}
            				}
            				break;
            				case (int)39: {
HXLINE( 363)					sr1->sourceMask = (int)15;
HXLINE( 364)					{
HXLINE( 364)						HX_VARI_NAME( ::String,x91,"x") = ((HX_("if (any(lessThan(",0d,a8,4d,9b) + sr1->toGLSL(null(),null())) + HX_(", vec4(0)))) discard;",61,d7,c4,f0));
HXDLIN( 364)						if (hx::IsNotNull( sb->charBuf )) {
HXLINE( 364)							sb->flush();
            						}
HXDLIN( 364)						if (hx::IsNull( sb->b )) {
HXLINE( 364)							sb->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x91));
            						}
            						else {
HXLINE( 364)							HX_VARI_NAME( ::Array< ::String >,sb30,"sb") = sb->b;
HXDLIN( 364)							sb30->push(::Std_obj::string(x91));
            						}
            					}
HXLINE( 365)					map->addSR(sr1,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn(),null());
            				}
            				break;
            				case (int)40: {
HXLINE( 371)					HX_VARI(  ::openfl::_internal::stage3D::_AGALConverter::SamplerRegister,sampler) = ::openfl::_internal::stage3D::_AGALConverter::SamplerRegister_obj::parse(source2,programType);
HXLINE( 373)					switch((int)(sampler->d)){
            						case (int)0: {
HXLINE( 377)							sr1->sourceMask = (int)3;
HXLINE( 378)							map->addSaR(sampler,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::SAMPLER_2D_dyn());
HXLINE( 379)							{
HXLINE( 379)								HX_VARI_NAME( ::String,x92,"x") = (dr->toGLSL(null()) + HX_(" = texture2D(",3e,55,2e,2f));
HXDLIN( 379)								HX_VARI_NAME( ::String,x93,"x") = ((x92 + sampler->toGLSL()) + HX_(", ",74,26,00,00));
HXDLIN( 379)								HX_VARI_NAME( ::String,x94,"x") = ((x93 + sr1->toGLSL(null(),null())) + HX_("); // tex",55,61,13,1a));
HXDLIN( 379)								if (hx::IsNotNull( sb->charBuf )) {
HXLINE( 379)									sb->flush();
            								}
HXDLIN( 379)								if (hx::IsNull( sb->b )) {
HXLINE( 379)									sb->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x94));
            								}
            								else {
HXLINE( 379)									HX_VARI_NAME( ::Array< ::String >,sb31,"sb") = sb->b;
HXDLIN( 379)									sb31->push(::Std_obj::string(x94));
            								}
            							}
            						}
            						break;
            						case (int)1: {
HXLINE( 383)							sr1->sourceMask = (int)7;
HXLINE( 384)							{
HXLINE( 384)								HX_VARI_NAME( ::String,x95,"x") = (dr->toGLSL(null()) + HX_(" = textureCube(",9b,4c,bc,01));
HXDLIN( 384)								HX_VARI_NAME( ::String,x96,"x") = ((x95 + sampler->toGLSL()) + HX_(", ",74,26,00,00));
HXDLIN( 384)								HX_VARI_NAME( ::String,x97,"x") = ((x96 + sr1->toGLSL(null(),null())) + HX_("); // tex",55,61,13,1a));
HXDLIN( 384)								if (hx::IsNotNull( sb->charBuf )) {
HXLINE( 384)									sb->flush();
            								}
HXDLIN( 384)								if (hx::IsNull( sb->b )) {
HXLINE( 384)									sb->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x97));
            								}
            								else {
HXLINE( 384)									HX_VARI_NAME( ::Array< ::String >,sb32,"sb") = sb->b;
HXDLIN( 384)									sb32->push(::Std_obj::string(x97));
            								}
            							}
HXLINE( 385)							map->addSaR(sampler,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::SAMPLER_CUBE_dyn());
            						}
            						break;
            					}
HXLINE( 390)					map->addDR(dr,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn());
HXLINE( 391)					map->addSR(sr1,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn(),null());
HXLINE( 393)					if (hx::IsNotNull( samplerState )) {
HXLINE( 396)						samplerState[sampler->n] = sampler->toSamplerState();
            					}
            				}
            				break;
            				case (int)41: {
HXLINE( 402)					sr1->sourceMask = (sr2->sourceMask = (int)15);
HXLINE( 403)					{
HXLINE( 403)						HX_VARI_NAME( ::String,x98,"x") = (dr->toGLSL(null()) + HX_(" = vec4(greaterThanEqual(",aa,a3,51,ec));
HXDLIN( 403)						HX_VARI_NAME( ::String,x99,"x") = ((x98 + sr1->toGLSL(null(),null())) + HX_(", ",74,26,00,00));
HXDLIN( 403)						HX_VARI_NAME( ::String,x100,"x") = ((x99 + sr2->toGLSL(null(),null())) + HX_("))",e0,23,00,00));
HXDLIN( 403)						HX_VARI_NAME( ::String,x101,"x") = ((x100 + dr->getWriteMask()) + HX_("; // ste",e9,da,68,51));
HXDLIN( 403)						if (hx::IsNotNull( sb->charBuf )) {
HXLINE( 403)							sb->flush();
            						}
HXDLIN( 403)						if (hx::IsNull( sb->b )) {
HXLINE( 403)							sb->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x101));
            						}
            						else {
HXLINE( 403)							HX_VARI_NAME( ::Array< ::String >,sb33,"sb") = sb->b;
HXDLIN( 403)							sb33->push(::Std_obj::string(x101));
            						}
            					}
HXLINE( 404)					map->addDR(dr,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn());
HXLINE( 405)					map->addSR(sr1,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn(),null());
HXLINE( 406)					map->addSR(sr2,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn(),null());
            				}
            				break;
            				case (int)42: {
HXLINE( 410)					sr1->sourceMask = (sr2->sourceMask = (int)15);
HXLINE( 411)					{
HXLINE( 411)						HX_VARI_NAME( ::String,x102,"x") = (dr->toGLSL(null()) + HX_(" = vec4(lessThan(",69,ee,b4,35));
HXDLIN( 411)						HX_VARI_NAME( ::String,x103,"x") = ((x102 + sr1->toGLSL(null(),null())) + HX_(", ",74,26,00,00));
HXDLIN( 411)						HX_VARI_NAME( ::String,x104,"x") = ((x103 + sr2->toGLSL(null(),null())) + HX_("))",e0,23,00,00));
HXDLIN( 411)						HX_VARI_NAME( ::String,x105,"x") = ((x104 + dr->getWriteMask()) + HX_("; // slt",00,d4,68,51));
HXDLIN( 411)						if (hx::IsNotNull( sb->charBuf )) {
HXLINE( 411)							sb->flush();
            						}
HXDLIN( 411)						if (hx::IsNull( sb->b )) {
HXLINE( 411)							sb->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x105));
            						}
            						else {
HXLINE( 411)							HX_VARI_NAME( ::Array< ::String >,sb34,"sb") = sb->b;
HXDLIN( 411)							sb34->push(::Std_obj::string(x105));
            						}
            					}
HXLINE( 412)					map->addDR(dr,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn());
HXLINE( 413)					map->addSR(sr1,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn(),null());
HXLINE( 414)					map->addSR(sr2,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn(),null());
            				}
            				break;
            				case (int)44: {
HXLINE( 418)					sr1->sourceMask = (sr2->sourceMask = (int)15);
HXLINE( 419)					{
HXLINE( 419)						HX_VARI_NAME( ::String,x106,"x") = (dr->toGLSL(null()) + HX_(" = vec4(equal(",39,08,45,e1));
HXDLIN( 419)						HX_VARI_NAME( ::String,x107,"x") = ((x106 + sr1->toGLSL(null(),null())) + HX_(", ",74,26,00,00));
HXDLIN( 419)						HX_VARI_NAME( ::String,x108,"x") = ((x107 + sr2->toGLSL(null(),null())) + HX_("))",e0,23,00,00));
HXDLIN( 419)						HX_VARI_NAME( ::String,x109,"x") = ((x108 + dr->getWriteMask()) + HX_("; // seq",e4,cd,68,51));
HXDLIN( 419)						if (hx::IsNotNull( sb->charBuf )) {
HXLINE( 419)							sb->flush();
            						}
HXDLIN( 419)						if (hx::IsNull( sb->b )) {
HXLINE( 419)							sb->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x109));
            						}
            						else {
HXLINE( 419)							HX_VARI_NAME( ::Array< ::String >,sb35,"sb") = sb->b;
HXDLIN( 419)							sb35->push(::Std_obj::string(x109));
            						}
            					}
HXLINE( 420)					map->addDR(dr,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn());
HXLINE( 421)					map->addSR(sr1,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn(),null());
HXLINE( 422)					map->addSR(sr2,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn(),null());
            				}
            				break;
            				case (int)45: {
HXLINE( 426)					sr1->sourceMask = (sr2->sourceMask = (int)15);
HXLINE( 427)					{
HXLINE( 427)						HX_VARI_NAME( ::String,x110,"x") = (dr->toGLSL(null()) + HX_(" = vec4(notEqual(",42,aa,f1,97));
HXDLIN( 427)						HX_VARI_NAME( ::String,x111,"x") = ((x110 + sr1->toGLSL(null(),null())) + HX_(", ",74,26,00,00));
HXDLIN( 427)						HX_VARI_NAME( ::String,x112,"x") = ((x111 + sr2->toGLSL(null(),null())) + HX_("))",e0,23,00,00));
HXDLIN( 427)						HX_VARI_NAME( ::String,x113,"x") = ((x112 + dr->getWriteMask()) + HX_("; // sne",af,d5,68,51));
HXDLIN( 427)						if (hx::IsNotNull( sb->charBuf )) {
HXLINE( 427)							sb->flush();
            						}
HXDLIN( 427)						if (hx::IsNull( sb->b )) {
HXLINE( 427)							sb->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x113));
            						}
            						else {
HXLINE( 427)							HX_VARI_NAME( ::Array< ::String >,sb36,"sb") = sb->b;
HXDLIN( 427)							sb36->push(::Std_obj::string(x113));
            						}
            					}
HXLINE( 428)					map->addDR(dr,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn());
HXLINE( 429)					map->addSR(sr1,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn(),null());
HXLINE( 430)					map->addSR(sr2,::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::VECTOR_4_dyn(),null());
            				}
            				break;
            				default:{
HXLINE( 435)					HX_STACK_DO_THROW( ::openfl::errors::IllegalOperationError_obj::__alloc( HX_CTX ,(HX_("Opcode ",72,65,6e,e7) + opcode)));
            				}
            			}
HXLINE( 439)			{
HXLINE( 439)				if (hx::IsNotNull( sb->charBuf )) {
HXLINE( 439)					sb->flush();
            				}
HXDLIN( 439)				if (hx::IsNull( sb->b )) {
HXLINE( 439)					sb->b = ::Array_obj< ::String >::fromData( _hx_array_data_9ee22da0_5,1);
            				}
            				else {
HXLINE( 439)					sb->b->push(HX_("\n",0a,00,00,00));
            				}
            			}
            		}
HXLINE( 443)		if (hx::IsNull( ::openfl::_internal::stage3D::AGALConverter_obj::limitedProfile )) {
HXLINE( 445)			HX_VARI( ::String,version) = ( (::String)(::lime::graphics::opengl::GL_obj::context->getParameter((int)7938)) );
HXLINE( 446)			bool _hx_tmp3;
HXDLIN( 446)			if ((version.indexOf(HX_("OpenGL ES",5f,cb,92,95),null()) <= (int)-1)) {
HXLINE( 446)				_hx_tmp3 = (version.indexOf(HX_("WebGL",99,9f,e9,5a),null()) > (int)-1);
            			}
            			else {
HXLINE( 446)				_hx_tmp3 = true;
            			}
HXDLIN( 446)			::openfl::_internal::stage3D::AGALConverter_obj::limitedProfile = _hx_tmp3;
            		}
HXLINE( 453)		HX_VARI(  ::StringBuf,glsl) =  ::StringBuf_obj::__alloc( HX_CTX );
HXLINE( 454)		{
HXLINE( 454)			::String x114;
HXDLIN( 454)			if (hx::IsEq( programType,::openfl::_internal::stage3D::_AGALConverter::ProgramType_obj::VERTEX_dyn() )) {
HXLINE( 454)				x114 = HX_("vertex",64,db,47,a1);
            			}
            			else {
HXLINE( 454)				x114 = HX_("fragment",d0,5f,e5,ad);
            			}
HXDLIN( 454)			HX_VARI_NAME( ::String,x115,"x") = ((HX_("// AGAL ",af,bc,4a,8a) + x114) + HX_(" shader\n",25,c5,d4,85));
HXDLIN( 454)			if (hx::IsNotNull( glsl->charBuf )) {
HXLINE( 454)				glsl->flush();
            			}
HXDLIN( 454)			if (hx::IsNull( glsl->b )) {
HXLINE( 454)				glsl->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x115));
            			}
            			else {
HXLINE( 454)				HX_VARI_NAME( ::Array< ::String >,glsl1,"glsl") = glsl->b;
HXDLIN( 454)				glsl1->push(::Std_obj::string(x115));
            			}
            		}
HXLINE( 456)		if (::openfl::_internal::stage3D::AGALConverter_obj::limitedProfile) {
HXLINE( 458)			{
HXLINE( 458)				HX_VARI_NAME( ::String,x116,"x") = ((HX_("#version ",2b,a9,b9,ad) + (int)100) + HX_("\n",0a,00,00,00));
HXDLIN( 458)				if (hx::IsNotNull( glsl->charBuf )) {
HXLINE( 458)					glsl->flush();
            				}
HXDLIN( 458)				if (hx::IsNull( glsl->b )) {
HXLINE( 458)					glsl->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x116));
            				}
            				else {
HXLINE( 458)					HX_VARI_NAME( ::Array< ::String >,glsl2,"glsl") = glsl->b;
HXDLIN( 458)					glsl2->push(::Std_obj::string(x116));
            				}
            			}
HXLINE( 461)			{
HXLINE( 461)				if (hx::IsNotNull( glsl->charBuf )) {
HXLINE( 461)					glsl->flush();
            				}
HXDLIN( 461)				if (hx::IsNull( glsl->b )) {
HXLINE( 461)					glsl->b = ::Array_obj< ::String >::fromData( _hx_array_data_9ee22da0_6,1);
            				}
            				else {
HXLINE( 461)					glsl->b->push(HX_("precision highp float;\n",57,4a,f7,14));
            				}
            			}
            		}
HXLINE( 465)		{
HXLINE( 465)			HX_VARI_NAME( ::String,x117,"x") = map->toGLSL(false);
HXDLIN( 465)			if (hx::IsNotNull( glsl->charBuf )) {
HXLINE( 465)				glsl->flush();
            			}
HXDLIN( 465)			if (hx::IsNull( glsl->b )) {
HXLINE( 465)				glsl->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x117));
            			}
            			else {
HXLINE( 465)				HX_VARI_NAME( ::Array< ::String >,glsl3,"glsl") = glsl->b;
HXDLIN( 465)				glsl3->push(::Std_obj::string(x117));
            			}
            		}
HXLINE( 467)		if (hx::IsEq( programType,::openfl::_internal::stage3D::_AGALConverter::ProgramType_obj::VERTEX_dyn() )) {
HXLINE( 470)			if (hx::IsNotNull( glsl->charBuf )) {
HXLINE( 470)				glsl->flush();
            			}
HXDLIN( 470)			if (hx::IsNull( glsl->b )) {
HXLINE( 470)				glsl->b = ::Array_obj< ::String >::fromData( _hx_array_data_9ee22da0_7,1);
            			}
            			else {
HXLINE( 470)				glsl->b->push(HX_("uniform vec4 vcPositionScale;\n",cf,aa,4f,18));
            			}
            		}
HXLINE( 474)		{
HXLINE( 474)			if (hx::IsNotNull( glsl->charBuf )) {
HXLINE( 474)				glsl->flush();
            			}
HXDLIN( 474)			if (hx::IsNull( glsl->b )) {
HXLINE( 474)				glsl->b = ::Array_obj< ::String >::fromData( _hx_array_data_9ee22da0_8,1);
            			}
            			else {
HXLINE( 474)				glsl->b->push(HX_("void main() {\n",49,b0,bf,fb));
            			}
            		}
HXLINE( 475)		{
HXLINE( 475)			HX_VARI_NAME( ::String,x118,"x") = map->toGLSL(true);
HXDLIN( 475)			if (hx::IsNotNull( glsl->charBuf )) {
HXLINE( 475)				glsl->flush();
            			}
HXDLIN( 475)			if (hx::IsNull( glsl->b )) {
HXLINE( 475)				glsl->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x118));
            			}
            			else {
HXLINE( 475)				HX_VARI_NAME( ::Array< ::String >,glsl4,"glsl") = glsl->b;
HXDLIN( 475)				glsl4->push(::Std_obj::string(x118));
            			}
            		}
HXLINE( 476)		{
HXLINE( 476)			HX_VARI_NAME( ::String,x119,"x") = sb->toString();
HXDLIN( 476)			if (hx::IsNotNull( glsl->charBuf )) {
HXLINE( 476)				glsl->flush();
            			}
HXDLIN( 476)			if (hx::IsNull( glsl->b )) {
HXLINE( 476)				glsl->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x119));
            			}
            			else {
HXLINE( 476)				HX_VARI_NAME( ::Array< ::String >,glsl5,"glsl") = glsl->b;
HXDLIN( 476)				glsl5->push(::Std_obj::string(x119));
            			}
            		}
HXLINE( 478)		if (hx::IsEq( programType,::openfl::_internal::stage3D::_AGALConverter::ProgramType_obj::VERTEX_dyn() )) {
HXLINE( 481)			if (hx::IsNotNull( glsl->charBuf )) {
HXLINE( 481)				glsl->flush();
            			}
HXDLIN( 481)			if (hx::IsNull( glsl->b )) {
HXLINE( 481)				glsl->b = ::Array_obj< ::String >::fromData( _hx_array_data_9ee22da0_9,1);
            			}
            			else {
HXLINE( 481)				glsl->b->push(HX_("\tgl_Position *= vcPositionScale;\n",7c,ad,85,8d));
            			}
            		}
HXLINE( 485)		{
HXLINE( 485)			if (hx::IsNotNull( glsl->charBuf )) {
HXLINE( 485)				glsl->flush();
            			}
HXDLIN( 485)			if (hx::IsNull( glsl->b )) {
HXLINE( 485)				glsl->b = ::Array_obj< ::String >::fromData( _hx_array_data_9ee22da0_10,1);
            			}
            			else {
HXLINE( 485)				glsl->b->push(HX_("}\n",ed,6c,00,00));
            			}
            		}
HXLINE( 488)		return glsl->toString();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(AGALConverter_obj,convertToGLSL,return )


AGALConverter_obj::AGALConverter_obj()
{
}

bool AGALConverter_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 10:
		if (HX_FIELD_EQ(inName,"readUInt64") ) { outValue = readUInt64_dyn(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"convertToGLSL") ) { outValue = convertToGLSL_dyn(); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"limitedProfile") ) { outValue = limitedProfile; return true; }
		if (HX_FIELD_EQ(inName,"prefixFromType") ) { outValue = prefixFromType_dyn(); return true; }
	}
	return false;
}

bool AGALConverter_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 14:
		if (HX_FIELD_EQ(inName,"limitedProfile") ) { limitedProfile=ioValue.Cast<  ::Dynamic >(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *AGALConverter_obj_sMemberStorageInfo = 0;
static hx::StaticInfo AGALConverter_obj_sStaticStorageInfo[] = {
	{hx::fsObject /*Dynamic*/ ,(void *) &AGALConverter_obj::limitedProfile,HX_HCSTRING("limitedProfile","\xef","\x13","\x1a","\x0a")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static void AGALConverter_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(AGALConverter_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(AGALConverter_obj::limitedProfile,"limitedProfile");
};

#ifdef HXCPP_VISIT_ALLOCS
static void AGALConverter_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(AGALConverter_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(AGALConverter_obj::limitedProfile,"limitedProfile");
};

#endif

hx::Class AGALConverter_obj::__mClass;

static ::String AGALConverter_obj_sStaticFields[] = {
	HX_HCSTRING("limitedProfile","\xef","\x13","\x1a","\x0a"),
	HX_HCSTRING("prefixFromType","\xf6","\x38","\xec","\xc8"),
	HX_HCSTRING("readUInt64","\x2e","\x21","\x8b","\x12"),
	HX_HCSTRING("convertToGLSL","\x4c","\x43","\x62","\xb5"),
	::String(null())
};

void AGALConverter_obj::__register()
{
	hx::Object *dummy = new AGALConverter_obj;
	AGALConverter_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("openfl._internal.stage3D.AGALConverter","\xa0","\x2d","\xe2","\x9e");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &AGALConverter_obj::__GetStatic;
	__mClass->mSetStaticField = &AGALConverter_obj::__SetStatic;
	__mClass->mMarkFunc = AGALConverter_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(AGALConverter_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< AGALConverter_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = AGALConverter_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = AGALConverter_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = AGALConverter_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace openfl
} // end namespace _internal
} // end namespace stage3D
