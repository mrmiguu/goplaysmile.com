// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_openfl__internal_renderer_RenderSession
#include <openfl/_internal/renderer/RenderSession.h>
#endif
#ifndef INCLUDED_openfl__internal_renderer_dom_DOMTilemap
#include <openfl/_internal/renderer/dom/DOMTilemap.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_Tilemap
#include <openfl/display/Tilemap.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif

namespace openfl{
namespace _internal{
namespace renderer{
namespace dom{

void DOMTilemap_obj::__construct() { }

Dynamic DOMTilemap_obj::__CreateEmpty() { return new DOMTilemap_obj; }

hx::ObjectPtr< DOMTilemap_obj > DOMTilemap_obj::__new()
{
	hx::ObjectPtr< DOMTilemap_obj > _hx_result = new DOMTilemap_obj();
	_hx_result->__construct();
	return _hx_result;
}

Dynamic DOMTilemap_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< DOMTilemap_obj > _hx_result = new DOMTilemap_obj();
	_hx_result->__construct();
	return _hx_result;
}

void DOMTilemap_obj::render( ::openfl::display::Tilemap tilemap, ::openfl::_internal::renderer::RenderSession renderSession){
            	HX_STACK_FRAME("openfl._internal.renderer.dom.DOMTilemap","render",0xd81a7b71,"openfl._internal.renderer.dom.DOMTilemap.render","openfl/_internal/renderer/dom/DOMTilemap.hx",19,0x619cb9ab)
            	HX_STACK_ARG(tilemap,"tilemap")
            	HX_STACK_ARG(renderSession,"renderSession")
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(DOMTilemap_obj,render,(void))


DOMTilemap_obj::DOMTilemap_obj()
{
}

bool DOMTilemap_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"render") ) { outValue = render_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *DOMTilemap_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *DOMTilemap_obj_sStaticStorageInfo = 0;
#endif

static void DOMTilemap_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(DOMTilemap_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void DOMTilemap_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(DOMTilemap_obj::__mClass,"__mClass");
};

#endif

hx::Class DOMTilemap_obj::__mClass;

static ::String DOMTilemap_obj_sStaticFields[] = {
	HX_HCSTRING("render","\x56","\x6b","\x29","\x05"),
	::String(null())
};

void DOMTilemap_obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("openfl._internal.renderer.dom.DOMTilemap","\xf3","\xda","\x5b","\x57");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &DOMTilemap_obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = DOMTilemap_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(DOMTilemap_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< DOMTilemap_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = DOMTilemap_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = DOMTilemap_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = DOMTilemap_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace openfl
} // end namespace _internal
} // end namespace renderer
} // end namespace dom
