// Generated by Haxe 3.4.0
#include <hxcpp.h>

#ifndef INCLUDED_95f339a1d026d52c
#define INCLUDED_95f339a1d026d52c
#include "hxMath.h"
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_Type
#include <Type.h>
#endif
#ifndef INCLUDED_lime_graphics_Image
#include <lime/graphics/Image.h>
#endif
#ifndef INCLUDED_lime_graphics_cairo_Cairo
#include <lime/graphics/cairo/Cairo.h>
#endif
#ifndef INCLUDED_lime_graphics_cairo__CairoImageSurface_CairoImageSurface_Impl_
#include <lime/graphics/cairo/_CairoImageSurface/CairoImageSurface_Impl_.h>
#endif
#ifndef INCLUDED_lime_graphics_cairo__CairoPattern_CairoPattern_Impl_
#include <lime/graphics/cairo/_CairoPattern/CairoPattern_Impl_.h>
#endif
#ifndef INCLUDED_lime_math_Matrix3
#include <lime/math/Matrix3.h>
#endif
#ifndef INCLUDED_lime_math_Vector2
#include <lime/math/Vector2.h>
#endif
#ifndef INCLUDED_openfl__Vector_FloatVector
#include <openfl/_Vector/FloatVector.h>
#endif
#ifndef INCLUDED_openfl__Vector_IVector
#include <openfl/_Vector/IVector.h>
#endif
#ifndef INCLUDED_openfl__Vector_IntVector
#include <openfl/_Vector/IntVector.h>
#endif
#ifndef INCLUDED_openfl__internal_renderer_DrawCommandBuffer
#include <openfl/_internal/renderer/DrawCommandBuffer.h>
#endif
#ifndef INCLUDED_openfl__internal_renderer_DrawCommandReader
#include <openfl/_internal/renderer/DrawCommandReader.h>
#endif
#ifndef INCLUDED_openfl__internal_renderer_DrawCommandType
#include <openfl/_internal/renderer/DrawCommandType.h>
#endif
#ifndef INCLUDED_openfl__internal_renderer_RenderSession
#include <openfl/_internal/renderer/RenderSession.h>
#endif
#ifndef INCLUDED_openfl__internal_renderer_cairo_CairoGraphics
#include <openfl/_internal/renderer/cairo/CairoGraphics.h>
#endif
#ifndef INCLUDED_openfl_display_BitmapData
#include <openfl/display/BitmapData.h>
#endif
#ifndef INCLUDED_openfl_display_Graphics
#include <openfl/display/Graphics.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_geom_Matrix
#include <openfl/geom/Matrix.h>
#endif
#ifndef INCLUDED_openfl_geom_Point
#include <openfl/geom/Point.h>
#endif
#ifndef INCLUDED_openfl_geom_Rectangle
#include <openfl/geom/Rectangle.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_7c423d109b848e15_59_closePath,"openfl._internal.renderer.cairo.CairoGraphics","closePath",0x6dffa481,"openfl._internal.renderer.cairo.CairoGraphics.closePath","openfl/_internal/renderer/cairo/CairoGraphics.hx",59,0x744ae94c)
HX_LOCAL_STACK_FRAME(_hx_pos_7c423d109b848e15_87_createGradientPattern,"openfl._internal.renderer.cairo.CairoGraphics","createGradientPattern",0x9888a3a8,"openfl._internal.renderer.cairo.CairoGraphics.createGradientPattern","openfl/_internal/renderer/cairo/CairoGraphics.hx",87,0x744ae94c)
HX_LOCAL_STACK_FRAME(_hx_pos_7c423d109b848e15_148_createImagePattern,"openfl._internal.renderer.cairo.CairoGraphics","createImagePattern",0x42487dcd,"openfl._internal.renderer.cairo.CairoGraphics.createImagePattern","openfl/_internal/renderer/cairo/CairoGraphics.hx",148,0x744ae94c)
HX_LOCAL_STACK_FRAME(_hx_pos_7c423d109b848e15_166_drawRoundRect,"openfl._internal.renderer.cairo.CairoGraphics","drawRoundRect",0xa42fd4f2,"openfl._internal.renderer.cairo.CairoGraphics.drawRoundRect","openfl/_internal/renderer/cairo/CairoGraphics.hx",166,0x744ae94c)
HX_LOCAL_STACK_FRAME(_hx_pos_7c423d109b848e15_200_endFill,"openfl._internal.renderer.cairo.CairoGraphics","endFill",0x21233e02,"openfl._internal.renderer.cairo.CairoGraphics.endFill","openfl/_internal/renderer/cairo/CairoGraphics.hx",200,0x744ae94c)
HX_LOCAL_STACK_FRAME(_hx_pos_7c423d109b848e15_209_endStroke,"openfl._internal.renderer.cairo.CairoGraphics","endStroke",0xaaf640f7,"openfl._internal.renderer.cairo.CairoGraphics.endStroke","openfl/_internal/renderer/cairo/CairoGraphics.hx",209,0x744ae94c)
HX_LOCAL_STACK_FRAME(_hx_pos_7c423d109b848e15_219_hitTest,"openfl._internal.renderer.cairo.CairoGraphics","hitTest",0xddc21649,"openfl._internal.renderer.cairo.CairoGraphics.hitTest","openfl/_internal/renderer/cairo/CairoGraphics.hx",219,0x744ae94c)
HX_LOCAL_STACK_FRAME(_hx_pos_7c423d109b848e15_433_isCCW,"openfl._internal.renderer.cairo.CairoGraphics","isCCW",0x5353f111,"openfl._internal.renderer.cairo.CairoGraphics.isCCW","openfl/_internal/renderer/cairo/CairoGraphics.hx",433,0x744ae94c)
HX_LOCAL_STACK_FRAME(_hx_pos_7c423d109b848e15_438_normalizeUVT,"openfl._internal.renderer.cairo.CairoGraphics","normalizeUVT",0xc9c604e2,"openfl._internal.renderer.cairo.CairoGraphics.normalizeUVT","openfl/_internal/renderer/cairo/CairoGraphics.hx",438,0x744ae94c)
HX_LOCAL_STACK_FRAME(_hx_pos_7c423d109b848e15_487_playCommands,"openfl._internal.renderer.cairo.CairoGraphics","playCommands",0xcc85aa58,"openfl._internal.renderer.cairo.CairoGraphics.playCommands","openfl/_internal/renderer/cairo/CairoGraphics.hx",487,0x744ae94c)
HX_LOCAL_STACK_FRAME(_hx_pos_7c423d109b848e15_983_quadraticCurveTo,"openfl._internal.renderer.cairo.CairoGraphics","quadraticCurveTo",0x01a3b18e,"openfl._internal.renderer.cairo.CairoGraphics.quadraticCurveTo","openfl/_internal/renderer/cairo/CairoGraphics.hx",983,0x744ae94c)
HX_LOCAL_STACK_FRAME(_hx_pos_7c423d109b848e15_1008_render,"openfl._internal.renderer.cairo.CairoGraphics","render",0x3c3e61d2,"openfl._internal.renderer.cairo.CairoGraphics.render","openfl/_internal/renderer/cairo/CairoGraphics.hx",1008,0x744ae94c)
HX_LOCAL_STACK_FRAME(_hx_pos_7c423d109b848e15_1212_renderMask,"openfl._internal.renderer.cairo.CairoGraphics","renderMask",0x2ed81fde,"openfl._internal.renderer.cairo.CairoGraphics.renderMask","openfl/_internal/renderer/cairo/CairoGraphics.hx",1212,0x744ae94c)
HX_LOCAL_STACK_FRAME(_hx_pos_7c423d109b848e15_38_boot,"openfl._internal.renderer.cairo.CairoGraphics","boot",0x820ca3ae,"openfl._internal.renderer.cairo.CairoGraphics.boot","openfl/_internal/renderer/cairo/CairoGraphics.hx",38,0x744ae94c)
HX_LOCAL_STACK_FRAME(_hx_pos_7c423d109b848e15_39_boot,"openfl._internal.renderer.cairo.CairoGraphics","boot",0x820ca3ae,"openfl._internal.renderer.cairo.CairoGraphics.boot","openfl/_internal/renderer/cairo/CairoGraphics.hx",39,0x744ae94c)
HX_LOCAL_STACK_FRAME(_hx_pos_7c423d109b848e15_46_boot,"openfl._internal.renderer.cairo.CairoGraphics","boot",0x820ca3ae,"openfl._internal.renderer.cairo.CairoGraphics.boot","openfl/_internal/renderer/cairo/CairoGraphics.hx",46,0x744ae94c)
HX_LOCAL_STACK_FRAME(_hx_pos_7c423d109b848e15_55_boot,"openfl._internal.renderer.cairo.CairoGraphics","boot",0x820ca3ae,"openfl._internal.renderer.cairo.CairoGraphics.boot","openfl/_internal/renderer/cairo/CairoGraphics.hx",55,0x744ae94c)
namespace openfl{
namespace _internal{
namespace renderer{
namespace cairo{

void CairoGraphics_obj::__construct() { }

Dynamic CairoGraphics_obj::__CreateEmpty() { return new CairoGraphics_obj; }

void *CairoGraphics_obj::_hx_vtable = 0;

Dynamic CairoGraphics_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< CairoGraphics_obj > _hx_result = new CairoGraphics_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool CairoGraphics_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x5163c976;
}

Float CairoGraphics_obj::SIN45;

Float CairoGraphics_obj::TAN22;

bool CairoGraphics_obj::allowSmoothing;

 ::openfl::display::BitmapData CairoGraphics_obj::bitmapFill;

bool CairoGraphics_obj::bitmapRepeat;

 ::openfl::geom::Rectangle CairoGraphics_obj::bounds;

 ::lime::graphics::cairo::Cairo CairoGraphics_obj::cairo;

 ::openfl::_internal::renderer::DrawCommandBuffer CairoGraphics_obj::fillCommands;

 ::Dynamic CairoGraphics_obj::fillPattern;

 ::openfl::geom::Matrix CairoGraphics_obj::fillPatternMatrix;

 ::openfl::display::Graphics CairoGraphics_obj::graphics;

bool CairoGraphics_obj::hasFill;

bool CairoGraphics_obj::hasStroke;

bool CairoGraphics_obj::hitTesting;

 ::openfl::geom::Matrix CairoGraphics_obj::inversePendingMatrix;

 ::openfl::geom::Matrix CairoGraphics_obj::pendingMatrix;

 ::openfl::_internal::renderer::DrawCommandBuffer CairoGraphics_obj::strokeCommands;

 ::Dynamic CairoGraphics_obj::strokePattern;

void CairoGraphics_obj::closePath(hx::Null< bool >  __o_strokeBefore){
bool strokeBefore = __o_strokeBefore.Default(false);
            	HX_STACKFRAME(&_hx_pos_7c423d109b848e15_59_closePath)
HXLINE(  61)		if (hx::IsNull( ::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokePattern )) {
HXLINE(  63)			return;
            		}
HXLINE(  67)		if (!(strokeBefore)) {
HXLINE(  69)			::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->closePath();
            		}
HXLINE(  73)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->set_source(::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokePattern);
HXLINE(  74)		if (!(::openfl::_internal::renderer::cairo::CairoGraphics_obj::hitTesting)) {
HXLINE(  74)			::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->strokePreserve();
            		}
HXLINE(  76)		if (strokeBefore) {
HXLINE(  78)			::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->closePath();
            		}
HXLINE(  82)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->newPath();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(CairoGraphics_obj,closePath,(void))

 ::Dynamic CairoGraphics_obj::createGradientPattern( ::Dynamic type,::cpp::VirtualArray colors,::cpp::VirtualArray alphas,::cpp::VirtualArray ratios, ::openfl::geom::Matrix matrix, ::Dynamic spreadMethod, ::Dynamic interpolationMethod,Float focalPointRatio){
            	HX_GC_STACKFRAME(&_hx_pos_7c423d109b848e15_87_createGradientPattern)
HXLINE(  89)		 ::Dynamic pattern = null();
HXLINE(  91)		 ::Dynamic _hx_switch_0 = type;
            		if (  (_hx_switch_0==(int)0) ){
HXLINE( 106)			if (hx::IsNull( matrix )) {
HXLINE( 106)				matrix =  ::openfl::geom::Matrix_obj::__alloc( HX_CTX ,null(),null(),null(),null(),null(),null());
            			}
HXLINE( 108)			 ::openfl::geom::Point point1 = matrix->transformPoint( ::openfl::geom::Point_obj::__alloc( HX_CTX ,((Float)-819.2),(int)0));
HXLINE( 109)			 ::openfl::geom::Point point2 = matrix->transformPoint( ::openfl::geom::Point_obj::__alloc( HX_CTX ,((Float)819.2),(int)0));
HXLINE( 111)			 ::openfl::geom::Point point11 = point1;
HXDLIN( 111)			point11->x = (point11->x + ::openfl::_internal::renderer::cairo::CairoGraphics_obj::graphics->_hx___bounds->x);
HXLINE( 112)			 ::openfl::geom::Point point21 = point2;
HXDLIN( 112)			point21->x = (point21->x + ::openfl::_internal::renderer::cairo::CairoGraphics_obj::graphics->_hx___bounds->x);
HXLINE( 113)			 ::openfl::geom::Point point12 = point1;
HXDLIN( 113)			point12->y = (point12->y + ::openfl::_internal::renderer::cairo::CairoGraphics_obj::graphics->_hx___bounds->y);
HXLINE( 114)			 ::openfl::geom::Point point22 = point2;
HXDLIN( 114)			point22->y = (point22->y + ::openfl::_internal::renderer::cairo::CairoGraphics_obj::graphics->_hx___bounds->y);
HXLINE( 116)			pattern = ::lime::graphics::cairo::_CairoPattern::CairoPattern_Impl__obj::createLinear(point1->x,point1->y,point2->x,point2->y);
HXLINE( 104)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==(int)1) ){
HXLINE(  95)			if (hx::IsNull( matrix )) {
HXLINE(  95)				matrix =  ::openfl::geom::Matrix_obj::__alloc( HX_CTX ,null(),null(),null(),null(),null(),null());
            			}
HXLINE(  97)			 ::openfl::geom::Point point = matrix->transformPoint( ::openfl::geom::Point_obj::__alloc( HX_CTX ,((Float)1638.4),(int)0));
HXLINE(  99)			Float x = (matrix->tx + ::openfl::_internal::renderer::cairo::CairoGraphics_obj::graphics->_hx___bounds->x);
HXLINE( 100)			Float y = (matrix->ty + ::openfl::_internal::renderer::cairo::CairoGraphics_obj::graphics->_hx___bounds->y);
HXLINE( 102)			pattern = ::lime::graphics::cairo::_CairoPattern::CairoPattern_Impl__obj::createRadial(x,y,(int)0,x,y,::Math_obj::abs(((Float)(point->x - matrix->tx) / (Float)(int)2)));
HXLINE(  93)			goto _hx_goto_1;
            		}
            		_hx_goto_1:;
HXLINE( 120)		{
HXLINE( 120)			int _g1 = (int)0;
HXDLIN( 120)			int _g = colors->get_length();
HXDLIN( 120)			while((_g1 < _g)){
HXLINE( 120)				_g1 = (_g1 + (int)1);
HXDLIN( 120)				int i = (_g1 - (int)1);
HXLINE( 122)				int rgb = ( (int)(colors->__get(i)) );
HXLINE( 123)				Float alpha = ( (Float)(alphas->__get(i)) );
HXLINE( 124)				Float r = ((Float)hx::UShr(((int)rgb & (int)(int)16711680),(int)16) / (Float)(int)255);
HXLINE( 125)				Float g = ((Float)hx::UShr(((int)rgb & (int)(int)65280),(int)8) / (Float)(int)255);
HXLINE( 126)				Float b = ((Float)((int)rgb & (int)(int)255) / (Float)(int)255);
HXLINE( 128)				Float ratio = ((Float)ratios->__get(i) / (Float)(int)255);
HXLINE( 129)				if ((ratio < (int)0)) {
HXLINE( 129)					ratio = (int)0;
            				}
HXLINE( 130)				if ((ratio > (int)1)) {
HXLINE( 130)					ratio = (int)1;
            				}
HXLINE( 132)				::lime::graphics::cairo::_CairoPattern::CairoPattern_Impl__obj::addColorStopRGBA(pattern,ratio,r,g,b,alpha);
            			}
            		}
HXLINE( 136)		 ::lime::math::Matrix3 mat = ::lime::graphics::cairo::_CairoPattern::CairoPattern_Impl__obj::get_matrix(pattern);
HXLINE( 138)		mat->tx = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::bounds->x;
HXLINE( 139)		mat->ty = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::bounds->y;
HXLINE( 141)		::lime::graphics::cairo::_CairoPattern::CairoPattern_Impl__obj::set_matrix(pattern,mat);
HXLINE( 143)		return pattern;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC8(CairoGraphics_obj,createGradientPattern,return )

 ::Dynamic CairoGraphics_obj::createImagePattern( ::openfl::display::BitmapData bitmapFill, ::openfl::geom::Matrix matrix,bool bitmapRepeat,bool smooth){
            	HX_STACKFRAME(&_hx_pos_7c423d109b848e15_148_createImagePattern)
HXLINE( 150)		 ::Dynamic pattern = ::lime::graphics::cairo::_CairoPattern::CairoPattern_Impl__obj::createForSurface(bitmapFill->getSurface());
HXLINE( 151)		int _hx_tmp;
HXDLIN( 151)		bool _hx_tmp1;
HXDLIN( 151)		if (smooth) {
HXLINE( 151)			_hx_tmp1 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::allowSmoothing;
            		}
            		else {
HXLINE( 151)			_hx_tmp1 = false;
            		}
HXDLIN( 151)		if (_hx_tmp1) {
HXLINE( 151)			_hx_tmp = (int)1;
            		}
            		else {
HXLINE( 151)			_hx_tmp = (int)3;
            		}
HXDLIN( 151)		::lime::graphics::cairo::_CairoPattern::CairoPattern_Impl__obj::set_filter(pattern,_hx_tmp);
HXLINE( 153)		if (bitmapRepeat) {
HXLINE( 155)			::lime::graphics::cairo::_CairoPattern::CairoPattern_Impl__obj::set_extend(pattern,(int)1);
            		}
HXLINE( 159)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillPatternMatrix = matrix;
HXLINE( 161)		return pattern;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(CairoGraphics_obj,createImagePattern,return )

void CairoGraphics_obj::drawRoundRect(Float x,Float y,Float width,Float height,Float ellipseWidth, ::Dynamic ellipseHeight){
            	HX_STACKFRAME(&_hx_pos_7c423d109b848e15_166_drawRoundRect)
HXLINE( 168)		if (hx::IsNull( ellipseHeight )) {
HXLINE( 168)			ellipseHeight = ellipseWidth;
            		}
HXLINE( 170)		ellipseWidth = (ellipseWidth * ((Float)0.5));
HXLINE( 171)		ellipseHeight = (ellipseHeight * ((Float)0.5));
HXLINE( 173)		if ((ellipseWidth > ((Float)width / (Float)(int)2))) {
HXLINE( 173)			ellipseWidth = ((Float)width / (Float)(int)2);
            		}
HXLINE( 174)		if (hx::IsGreater( ellipseHeight,((Float)height / (Float)(int)2) )) {
HXLINE( 174)			ellipseHeight = ((Float)height / (Float)(int)2);
            		}
HXLINE( 176)		Float xe = (x + width);
HXDLIN( 176)		Float ye = (y + height);
HXDLIN( 176)		Float cx1 = (-(ellipseWidth) + (ellipseWidth * ::openfl::_internal::renderer::cairo::CairoGraphics_obj::SIN45));
HXDLIN( 176)		Float cx2 = (-(ellipseWidth) + (ellipseWidth * ::openfl::_internal::renderer::cairo::CairoGraphics_obj::TAN22));
HXDLIN( 176)		Float cy1 = (-(ellipseHeight) + (ellipseHeight * ::openfl::_internal::renderer::cairo::CairoGraphics_obj::SIN45));
HXDLIN( 176)		Float cy2 = (-(ellipseHeight) + (ellipseHeight * ::openfl::_internal::renderer::cairo::CairoGraphics_obj::TAN22));
HXLINE( 183)		 ::lime::graphics::cairo::Cairo _hx_tmp = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN( 183)		_hx_tmp->moveTo(xe,(ye - ellipseHeight));
HXLINE( 184)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::quadraticCurveTo(xe,(ye + cy2),(xe + cx1),(ye + cy1));
HXLINE( 185)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::quadraticCurveTo((xe + cx2),ye,(xe - ellipseWidth),ye);
HXLINE( 186)		 ::lime::graphics::cairo::Cairo _hx_tmp1 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN( 186)		_hx_tmp1->lineTo((x + ellipseWidth),ye);
HXLINE( 187)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::quadraticCurveTo((x - cx2),ye,(x - cx1),(ye + cy1));
HXLINE( 188)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::quadraticCurveTo(x,(ye + cy2),x,(ye - ellipseHeight));
HXLINE( 189)		 ::lime::graphics::cairo::Cairo _hx_tmp2 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN( 189)		_hx_tmp2->lineTo(x,(y + ellipseHeight));
HXLINE( 190)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::quadraticCurveTo(x,(y - cy2),(x - cx1),(y - cy1));
HXLINE( 191)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::quadraticCurveTo((x - cx2),y,(x + ellipseWidth),y);
HXLINE( 192)		 ::lime::graphics::cairo::Cairo _hx_tmp3 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN( 192)		_hx_tmp3->lineTo((xe - ellipseWidth),y);
HXLINE( 193)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::quadraticCurveTo((xe + cx2),y,(xe + cx1),(y - cy1));
HXLINE( 194)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::quadraticCurveTo(xe,(y - cy2),xe,(y + ellipseHeight));
HXLINE( 195)		 ::lime::graphics::cairo::Cairo _hx_tmp4 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN( 195)		_hx_tmp4->lineTo(xe,(ye - ellipseHeight));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC6(CairoGraphics_obj,drawRoundRect,(void))

void CairoGraphics_obj::endFill(){
            	HX_STACKFRAME(&_hx_pos_7c423d109b848e15_200_endFill)
HXLINE( 202)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->newPath();
HXLINE( 203)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::playCommands(::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands,false);
HXLINE( 204)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands->clear();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(CairoGraphics_obj,endFill,(void))

void CairoGraphics_obj::endStroke(){
            	HX_STACKFRAME(&_hx_pos_7c423d109b848e15_209_endStroke)
HXLINE( 211)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->newPath();
HXLINE( 212)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::playCommands(::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands,true);
HXLINE( 213)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->closePath();
HXLINE( 214)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands->clear();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(CairoGraphics_obj,endStroke,(void))

bool CairoGraphics_obj::hitTest( ::openfl::display::Graphics graphics,Float x,Float y){
            	HX_GC_STACKFRAME(&_hx_pos_7c423d109b848e15_219_hitTest)
HXLINE( 222)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::graphics = graphics;
HXLINE( 223)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::bounds = graphics->_hx___bounds;
HXLINE( 225)		bool _hx_tmp;
HXDLIN( 225)		bool _hx_tmp1;
HXDLIN( 225)		bool _hx_tmp2;
HXDLIN( 225)		bool _hx_tmp3;
HXDLIN( 225)		if ((graphics->_hx___commands->get_length() != (int)0)) {
HXLINE( 225)			_hx_tmp3 = hx::IsNull( ::openfl::_internal::renderer::cairo::CairoGraphics_obj::bounds );
            		}
            		else {
HXLINE( 225)			_hx_tmp3 = true;
            		}
HXDLIN( 225)		if (!(_hx_tmp3)) {
HXLINE( 225)			_hx_tmp2 = (::openfl::_internal::renderer::cairo::CairoGraphics_obj::bounds->width == (int)0);
            		}
            		else {
HXLINE( 225)			_hx_tmp2 = true;
            		}
HXDLIN( 225)		if (!(_hx_tmp2)) {
HXLINE( 225)			_hx_tmp1 = (::openfl::_internal::renderer::cairo::CairoGraphics_obj::bounds->height == (int)0);
            		}
            		else {
HXLINE( 225)			_hx_tmp1 = true;
            		}
HXDLIN( 225)		if (!(_hx_tmp1)) {
HXLINE( 225)			_hx_tmp = !(::openfl::_internal::renderer::cairo::CairoGraphics_obj::bounds->contains(x,y));
            		}
            		else {
HXLINE( 225)			_hx_tmp = true;
            		}
HXDLIN( 225)		if (_hx_tmp) {
HXLINE( 227)			return false;
            		}
            		else {
HXLINE( 231)			::openfl::_internal::renderer::cairo::CairoGraphics_obj::hitTesting = true;
HXLINE( 233)			x = (x - ::openfl::_internal::renderer::cairo::CairoGraphics_obj::bounds->x);
HXLINE( 234)			y = (y - ::openfl::_internal::renderer::cairo::CairoGraphics_obj::bounds->y);
HXLINE( 236)			if (hx::IsNull( graphics->_hx___cairo )) {
HXLINE( 238)				int bitmap = ::Math_obj::floor(::openfl::_internal::renderer::cairo::CairoGraphics_obj::bounds->width);
HXDLIN( 238)				 ::openfl::display::BitmapData bitmap1 =  ::openfl::display::BitmapData_obj::__alloc( HX_CTX ,bitmap,::Math_obj::floor(::openfl::_internal::renderer::cairo::CairoGraphics_obj::bounds->height),true,(int)0);
HXLINE( 239)				 ::Dynamic surface = bitmap1->getSurface();
HXLINE( 240)				graphics->_hx___cairo =  ::lime::graphics::cairo::Cairo_obj::__alloc( HX_CTX ,surface);
            			}
HXLINE( 245)			::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo = graphics->_hx___cairo;
HXLINE( 247)			::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands->clear();
HXLINE( 248)			::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands->clear();
HXLINE( 250)			::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasFill = false;
HXLINE( 251)			::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasStroke = false;
HXLINE( 253)			::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillPattern = null();
HXLINE( 254)			::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokePattern = null();
HXLINE( 256)			::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->newPath();
HXLINE( 258)			 ::openfl::_internal::renderer::DrawCommandReader data =  ::openfl::_internal::renderer::DrawCommandReader_obj::__alloc( HX_CTX ,graphics->_hx___commands);
HXLINE( 260)			{
HXLINE( 260)				int _g = (int)0;
HXDLIN( 260)				::Array< ::Dynamic> _g1 = graphics->_hx___commands->types;
HXDLIN( 260)				while((_g < _g1->length)){
HXLINE( 260)					 ::openfl::_internal::renderer::DrawCommandType type = _g1->__get(_g).StaticCast<  ::openfl::_internal::renderer::DrawCommandType >();
HXDLIN( 260)					_g = (_g + (int)1);
HXLINE( 262)					switch((int)(_hx_getEnumValueIndex(type))){
            						case (int)0: case (int)1: case (int)2: {
HXLINE( 328)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::endFill();
HXLINE( 329)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::endStroke();
HXLINE( 331)							bool _hx_tmp4;
HXDLIN( 331)							if (::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasFill) {
HXLINE( 331)								_hx_tmp4 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->inFill(x,y);
            							}
            							else {
HXLINE( 331)								_hx_tmp4 = false;
            							}
HXDLIN( 331)							if (_hx_tmp4) {
HXLINE( 333)								data->destroy();
HXLINE( 334)								return true;
            							}
HXLINE( 338)							bool _hx_tmp5;
HXDLIN( 338)							if (::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasStroke) {
HXLINE( 338)								_hx_tmp5 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->inStroke(x,y);
            							}
            							else {
HXLINE( 338)								_hx_tmp5 = false;
            							}
HXDLIN( 338)							if (_hx_tmp5) {
HXLINE( 340)								data->destroy();
HXLINE( 341)								return true;
            							}
HXLINE( 345)							if (hx::IsEq( type,::openfl::_internal::renderer::DrawCommandType_obj::BEGIN_BITMAP_FILL_dyn() )) {
HXLINE( 347)								{
HXLINE( 347)									 ::openfl::_internal::renderer::DrawCommandType _g2 = data->prev;
HXDLIN( 347)									switch((int)(_hx_getEnumValueIndex(_g2))){
            										case (int)0: {
HXLINE( 347)											 ::openfl::_internal::renderer::DrawCommandReader data1 = data;
HXDLIN( 347)											data1->oPos = (data1->oPos + (int)2);
HXDLIN( 347)											 ::openfl::_internal::renderer::DrawCommandReader data2 = data;
HXDLIN( 347)											data2->bPos = (data2->bPos + (int)2);
            										}
            										break;
            										case (int)1: {
HXLINE( 347)											 ::openfl::_internal::renderer::DrawCommandReader data3 = data;
HXDLIN( 347)											data3->iPos = (data3->iPos + (int)1);
HXDLIN( 347)											 ::openfl::_internal::renderer::DrawCommandReader data4 = data;
HXDLIN( 347)											data4->fPos = (data4->fPos + (int)1);
            										}
            										break;
            										case (int)2: {
HXLINE( 347)											 ::openfl::_internal::renderer::DrawCommandReader data5 = data;
HXDLIN( 347)											data5->oPos = (data5->oPos + (int)4);
HXDLIN( 347)											 ::openfl::_internal::renderer::DrawCommandReader data6 = data;
HXDLIN( 347)											data6->iiPos = (data6->iiPos + (int)2);
HXDLIN( 347)											 ::openfl::_internal::renderer::DrawCommandReader data7 = data;
HXDLIN( 347)											data7->ffPos = (data7->ffPos + (int)1);
HXDLIN( 347)											 ::openfl::_internal::renderer::DrawCommandReader data8 = data;
HXDLIN( 347)											data8->fPos = (data8->fPos + (int)1);
            										}
            										break;
            										case (int)3: {
HXLINE( 347)											 ::openfl::_internal::renderer::DrawCommandReader data9 = data;
HXDLIN( 347)											data9->fPos = (data9->fPos + (int)6);
            										}
            										break;
            										case (int)4: {
HXLINE( 347)											 ::openfl::_internal::renderer::DrawCommandReader data10 = data;
HXDLIN( 347)											data10->fPos = (data10->fPos + (int)4);
            										}
            										break;
            										case (int)5: {
HXLINE( 347)											 ::openfl::_internal::renderer::DrawCommandReader data11 = data;
HXDLIN( 347)											data11->fPos = (data11->fPos + (int)3);
            										}
            										break;
            										case (int)6: {
HXLINE( 347)											 ::openfl::_internal::renderer::DrawCommandReader data12 = data;
HXDLIN( 347)											data12->fPos = (data12->fPos + (int)4);
            										}
            										break;
            										case (int)7: {
HXLINE( 347)											 ::openfl::_internal::renderer::DrawCommandReader data13 = data;
HXDLIN( 347)											data13->fPos = (data13->fPos + (int)4);
            										}
            										break;
            										case (int)8: {
HXLINE( 347)											 ::openfl::_internal::renderer::DrawCommandReader data14 = data;
HXDLIN( 347)											data14->fPos = (data14->fPos + (int)5);
HXDLIN( 347)											 ::openfl::_internal::renderer::DrawCommandReader data15 = data;
HXDLIN( 347)											data15->oPos = (data15->oPos + (int)1);
            										}
            										break;
            										case (int)10: {
HXLINE( 347)											 ::openfl::_internal::renderer::DrawCommandReader data16 = data;
HXDLIN( 347)											data16->oPos = (data16->oPos + (int)4);
            										}
            										break;
            										case (int)11: {
            										}
            										break;
            										case (int)12: {
HXLINE( 347)											 ::openfl::_internal::renderer::DrawCommandReader data17 = data;
HXDLIN( 347)											data17->oPos = (data17->oPos + (int)2);
HXDLIN( 347)											 ::openfl::_internal::renderer::DrawCommandReader data18 = data;
HXDLIN( 347)											data18->bPos = (data18->bPos + (int)2);
            										}
            										break;
            										case (int)13: {
HXLINE( 347)											 ::openfl::_internal::renderer::DrawCommandReader data19 = data;
HXDLIN( 347)											data19->oPos = (data19->oPos + (int)4);
HXDLIN( 347)											 ::openfl::_internal::renderer::DrawCommandReader data20 = data;
HXDLIN( 347)											data20->iiPos = (data20->iiPos + (int)2);
HXDLIN( 347)											 ::openfl::_internal::renderer::DrawCommandReader data21 = data;
HXDLIN( 347)											data21->ffPos = (data21->ffPos + (int)1);
HXDLIN( 347)											 ::openfl::_internal::renderer::DrawCommandReader data22 = data;
HXDLIN( 347)											data22->fPos = (data22->fPos + (int)1);
            										}
            										break;
            										case (int)14: {
HXLINE( 347)											 ::openfl::_internal::renderer::DrawCommandReader data23 = data;
HXDLIN( 347)											data23->oPos = (data23->oPos + (int)4);
HXDLIN( 347)											 ::openfl::_internal::renderer::DrawCommandReader data24 = data;
HXDLIN( 347)											data24->iPos = (data24->iPos + (int)1);
HXDLIN( 347)											 ::openfl::_internal::renderer::DrawCommandReader data25 = data;
HXDLIN( 347)											data25->fPos = (data25->fPos + (int)2);
HXDLIN( 347)											 ::openfl::_internal::renderer::DrawCommandReader data26 = data;
HXDLIN( 347)											data26->bPos = (data26->bPos + (int)1);
            										}
            										break;
            										case (int)15: {
HXLINE( 347)											 ::openfl::_internal::renderer::DrawCommandReader data27 = data;
HXDLIN( 347)											data27->fPos = (data27->fPos + (int)2);
            										}
            										break;
            										case (int)16: {
HXLINE( 347)											 ::openfl::_internal::renderer::DrawCommandReader data28 = data;
HXDLIN( 347)											data28->fPos = (data28->fPos + (int)2);
            										}
            										break;
            										case (int)17: {
HXLINE( 347)											 ::openfl::_internal::renderer::DrawCommandReader data29 = data;
HXDLIN( 347)											data29->oPos = (data29->oPos + (int)1);
            										}
            										break;
            										default:{
            										}
            									}
            								}
HXLINE( 347)								data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::BEGIN_BITMAP_FILL_dyn();
HXDLIN( 347)								 ::openfl::_internal::renderer::DrawCommandReader this1 = data;
HXDLIN( 347)								 ::openfl::_internal::renderer::DrawCommandReader c = this1;
HXLINE( 348)								 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp6 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands;
HXDLIN( 348)								 ::openfl::display::BitmapData c1 = ( ( ::openfl::display::BitmapData)(c->buffer->o->__get(c->oPos)) );
HXDLIN( 348)								::cpp::VirtualArray c2 = c->buffer->o;
HXDLIN( 348)								 ::openfl::geom::Matrix c3 = ( ( ::openfl::geom::Matrix)(c2->__get((c->oPos + (int)1))) );
HXDLIN( 348)								bool c4 = c->buffer->b->__get(c->bPos);
HXDLIN( 348)								::Array< bool > c5 = c->buffer->b;
HXDLIN( 348)								_hx_tmp6->beginBitmapFill(c1,c3,c4,c5->__get((c->bPos + (int)1)));
HXLINE( 349)								 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp7 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands;
HXDLIN( 349)								 ::openfl::display::BitmapData c6 = ( ( ::openfl::display::BitmapData)(c->buffer->o->__get(c->oPos)) );
HXDLIN( 349)								::cpp::VirtualArray c7 = c->buffer->o;
HXDLIN( 349)								 ::openfl::geom::Matrix c8 = ( ( ::openfl::geom::Matrix)(c7->__get((c->oPos + (int)1))) );
HXDLIN( 349)								bool c9 = c->buffer->b->__get(c->bPos);
HXDLIN( 349)								::Array< bool > c10 = c->buffer->b;
HXDLIN( 349)								_hx_tmp7->beginBitmapFill(c6,c8,c9,c10->__get((c->bPos + (int)1)));
            							}
            							else {
HXLINE( 351)								if (hx::IsEq( type,::openfl::_internal::renderer::DrawCommandType_obj::BEGIN_GRADIENT_FILL_dyn() )) {
HXLINE( 353)									{
HXLINE( 353)										 ::openfl::_internal::renderer::DrawCommandType _g3 = data->prev;
HXDLIN( 353)										switch((int)(_hx_getEnumValueIndex(_g3))){
            											case (int)0: {
HXLINE( 353)												 ::openfl::_internal::renderer::DrawCommandReader data30 = data;
HXDLIN( 353)												data30->oPos = (data30->oPos + (int)2);
HXDLIN( 353)												 ::openfl::_internal::renderer::DrawCommandReader data31 = data;
HXDLIN( 353)												data31->bPos = (data31->bPos + (int)2);
            											}
            											break;
            											case (int)1: {
HXLINE( 353)												 ::openfl::_internal::renderer::DrawCommandReader data32 = data;
HXDLIN( 353)												data32->iPos = (data32->iPos + (int)1);
HXDLIN( 353)												 ::openfl::_internal::renderer::DrawCommandReader data33 = data;
HXDLIN( 353)												data33->fPos = (data33->fPos + (int)1);
            											}
            											break;
            											case (int)2: {
HXLINE( 353)												 ::openfl::_internal::renderer::DrawCommandReader data34 = data;
HXDLIN( 353)												data34->oPos = (data34->oPos + (int)4);
HXDLIN( 353)												 ::openfl::_internal::renderer::DrawCommandReader data35 = data;
HXDLIN( 353)												data35->iiPos = (data35->iiPos + (int)2);
HXDLIN( 353)												 ::openfl::_internal::renderer::DrawCommandReader data36 = data;
HXDLIN( 353)												data36->ffPos = (data36->ffPos + (int)1);
HXDLIN( 353)												 ::openfl::_internal::renderer::DrawCommandReader data37 = data;
HXDLIN( 353)												data37->fPos = (data37->fPos + (int)1);
            											}
            											break;
            											case (int)3: {
HXLINE( 353)												 ::openfl::_internal::renderer::DrawCommandReader data38 = data;
HXDLIN( 353)												data38->fPos = (data38->fPos + (int)6);
            											}
            											break;
            											case (int)4: {
HXLINE( 353)												 ::openfl::_internal::renderer::DrawCommandReader data39 = data;
HXDLIN( 353)												data39->fPos = (data39->fPos + (int)4);
            											}
            											break;
            											case (int)5: {
HXLINE( 353)												 ::openfl::_internal::renderer::DrawCommandReader data40 = data;
HXDLIN( 353)												data40->fPos = (data40->fPos + (int)3);
            											}
            											break;
            											case (int)6: {
HXLINE( 353)												 ::openfl::_internal::renderer::DrawCommandReader data41 = data;
HXDLIN( 353)												data41->fPos = (data41->fPos + (int)4);
            											}
            											break;
            											case (int)7: {
HXLINE( 353)												 ::openfl::_internal::renderer::DrawCommandReader data42 = data;
HXDLIN( 353)												data42->fPos = (data42->fPos + (int)4);
            											}
            											break;
            											case (int)8: {
HXLINE( 353)												 ::openfl::_internal::renderer::DrawCommandReader data43 = data;
HXDLIN( 353)												data43->fPos = (data43->fPos + (int)5);
HXDLIN( 353)												 ::openfl::_internal::renderer::DrawCommandReader data44 = data;
HXDLIN( 353)												data44->oPos = (data44->oPos + (int)1);
            											}
            											break;
            											case (int)10: {
HXLINE( 353)												 ::openfl::_internal::renderer::DrawCommandReader data45 = data;
HXDLIN( 353)												data45->oPos = (data45->oPos + (int)4);
            											}
            											break;
            											case (int)11: {
            											}
            											break;
            											case (int)12: {
HXLINE( 353)												 ::openfl::_internal::renderer::DrawCommandReader data46 = data;
HXDLIN( 353)												data46->oPos = (data46->oPos + (int)2);
HXDLIN( 353)												 ::openfl::_internal::renderer::DrawCommandReader data47 = data;
HXDLIN( 353)												data47->bPos = (data47->bPos + (int)2);
            											}
            											break;
            											case (int)13: {
HXLINE( 353)												 ::openfl::_internal::renderer::DrawCommandReader data48 = data;
HXDLIN( 353)												data48->oPos = (data48->oPos + (int)4);
HXDLIN( 353)												 ::openfl::_internal::renderer::DrawCommandReader data49 = data;
HXDLIN( 353)												data49->iiPos = (data49->iiPos + (int)2);
HXDLIN( 353)												 ::openfl::_internal::renderer::DrawCommandReader data50 = data;
HXDLIN( 353)												data50->ffPos = (data50->ffPos + (int)1);
HXDLIN( 353)												 ::openfl::_internal::renderer::DrawCommandReader data51 = data;
HXDLIN( 353)												data51->fPos = (data51->fPos + (int)1);
            											}
            											break;
            											case (int)14: {
HXLINE( 353)												 ::openfl::_internal::renderer::DrawCommandReader data52 = data;
HXDLIN( 353)												data52->oPos = (data52->oPos + (int)4);
HXDLIN( 353)												 ::openfl::_internal::renderer::DrawCommandReader data53 = data;
HXDLIN( 353)												data53->iPos = (data53->iPos + (int)1);
HXDLIN( 353)												 ::openfl::_internal::renderer::DrawCommandReader data54 = data;
HXDLIN( 353)												data54->fPos = (data54->fPos + (int)2);
HXDLIN( 353)												 ::openfl::_internal::renderer::DrawCommandReader data55 = data;
HXDLIN( 353)												data55->bPos = (data55->bPos + (int)1);
            											}
            											break;
            											case (int)15: {
HXLINE( 353)												 ::openfl::_internal::renderer::DrawCommandReader data56 = data;
HXDLIN( 353)												data56->fPos = (data56->fPos + (int)2);
            											}
            											break;
            											case (int)16: {
HXLINE( 353)												 ::openfl::_internal::renderer::DrawCommandReader data57 = data;
HXDLIN( 353)												data57->fPos = (data57->fPos + (int)2);
            											}
            											break;
            											case (int)17: {
HXLINE( 353)												 ::openfl::_internal::renderer::DrawCommandReader data58 = data;
HXDLIN( 353)												data58->oPos = (data58->oPos + (int)1);
            											}
            											break;
            											default:{
            											}
            										}
            									}
HXLINE( 353)									data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::BEGIN_GRADIENT_FILL_dyn();
HXDLIN( 353)									 ::openfl::_internal::renderer::DrawCommandReader this2 = data;
HXDLIN( 353)									 ::openfl::_internal::renderer::DrawCommandReader c11 = this2;
HXLINE( 354)									::Array< ::Dynamic> c12 = c11->buffer->ii;
HXDLIN( 354)									::cpp::VirtualArray c13 = c11->buffer->o;
HXDLIN( 354)									::cpp::VirtualArray c14 = c11->buffer->o;
HXDLIN( 354)									::cpp::VirtualArray c15 = c11->buffer->o;
HXDLIN( 354)									::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands->beginGradientFill(c11->buffer->o->__get(c11->oPos),c11->buffer->ii->__get(c11->iiPos).StaticCast< ::Array< int > >(),c11->buffer->ff->__get(c11->ffPos).StaticCast< ::Array< Float > >(),c12->__get((c11->iiPos + (int)1)).StaticCast< ::Array< int > >(),( ( ::openfl::geom::Matrix)(c13->__get((c11->oPos + (int)1))) ),c14->__get((c11->oPos + (int)2)),c15->__get((c11->oPos + (int)3)),c11->buffer->f->__get(c11->fPos));
HXLINE( 355)									::Array< ::Dynamic> c16 = c11->buffer->ii;
HXDLIN( 355)									::cpp::VirtualArray c17 = c11->buffer->o;
HXDLIN( 355)									::cpp::VirtualArray c18 = c11->buffer->o;
HXDLIN( 355)									::cpp::VirtualArray c19 = c11->buffer->o;
HXDLIN( 355)									::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands->beginGradientFill(c11->buffer->o->__get(c11->oPos),c11->buffer->ii->__get(c11->iiPos).StaticCast< ::Array< int > >(),c11->buffer->ff->__get(c11->ffPos).StaticCast< ::Array< Float > >(),c16->__get((c11->iiPos + (int)1)).StaticCast< ::Array< int > >(),( ( ::openfl::geom::Matrix)(c17->__get((c11->oPos + (int)1))) ),c18->__get((c11->oPos + (int)2)),c19->__get((c11->oPos + (int)3)),c11->buffer->f->__get(c11->fPos));
            								}
            								else {
HXLINE( 359)									{
HXLINE( 359)										 ::openfl::_internal::renderer::DrawCommandType _g4 = data->prev;
HXDLIN( 359)										switch((int)(_hx_getEnumValueIndex(_g4))){
            											case (int)0: {
HXLINE( 359)												 ::openfl::_internal::renderer::DrawCommandReader data59 = data;
HXDLIN( 359)												data59->oPos = (data59->oPos + (int)2);
HXDLIN( 359)												 ::openfl::_internal::renderer::DrawCommandReader data60 = data;
HXDLIN( 359)												data60->bPos = (data60->bPos + (int)2);
            											}
            											break;
            											case (int)1: {
HXLINE( 359)												 ::openfl::_internal::renderer::DrawCommandReader data61 = data;
HXDLIN( 359)												data61->iPos = (data61->iPos + (int)1);
HXDLIN( 359)												 ::openfl::_internal::renderer::DrawCommandReader data62 = data;
HXDLIN( 359)												data62->fPos = (data62->fPos + (int)1);
            											}
            											break;
            											case (int)2: {
HXLINE( 359)												 ::openfl::_internal::renderer::DrawCommandReader data63 = data;
HXDLIN( 359)												data63->oPos = (data63->oPos + (int)4);
HXDLIN( 359)												 ::openfl::_internal::renderer::DrawCommandReader data64 = data;
HXDLIN( 359)												data64->iiPos = (data64->iiPos + (int)2);
HXDLIN( 359)												 ::openfl::_internal::renderer::DrawCommandReader data65 = data;
HXDLIN( 359)												data65->ffPos = (data65->ffPos + (int)1);
HXDLIN( 359)												 ::openfl::_internal::renderer::DrawCommandReader data66 = data;
HXDLIN( 359)												data66->fPos = (data66->fPos + (int)1);
            											}
            											break;
            											case (int)3: {
HXLINE( 359)												 ::openfl::_internal::renderer::DrawCommandReader data67 = data;
HXDLIN( 359)												data67->fPos = (data67->fPos + (int)6);
            											}
            											break;
            											case (int)4: {
HXLINE( 359)												 ::openfl::_internal::renderer::DrawCommandReader data68 = data;
HXDLIN( 359)												data68->fPos = (data68->fPos + (int)4);
            											}
            											break;
            											case (int)5: {
HXLINE( 359)												 ::openfl::_internal::renderer::DrawCommandReader data69 = data;
HXDLIN( 359)												data69->fPos = (data69->fPos + (int)3);
            											}
            											break;
            											case (int)6: {
HXLINE( 359)												 ::openfl::_internal::renderer::DrawCommandReader data70 = data;
HXDLIN( 359)												data70->fPos = (data70->fPos + (int)4);
            											}
            											break;
            											case (int)7: {
HXLINE( 359)												 ::openfl::_internal::renderer::DrawCommandReader data71 = data;
HXDLIN( 359)												data71->fPos = (data71->fPos + (int)4);
            											}
            											break;
            											case (int)8: {
HXLINE( 359)												 ::openfl::_internal::renderer::DrawCommandReader data72 = data;
HXDLIN( 359)												data72->fPos = (data72->fPos + (int)5);
HXDLIN( 359)												 ::openfl::_internal::renderer::DrawCommandReader data73 = data;
HXDLIN( 359)												data73->oPos = (data73->oPos + (int)1);
            											}
            											break;
            											case (int)10: {
HXLINE( 359)												 ::openfl::_internal::renderer::DrawCommandReader data74 = data;
HXDLIN( 359)												data74->oPos = (data74->oPos + (int)4);
            											}
            											break;
            											case (int)11: {
            											}
            											break;
            											case (int)12: {
HXLINE( 359)												 ::openfl::_internal::renderer::DrawCommandReader data75 = data;
HXDLIN( 359)												data75->oPos = (data75->oPos + (int)2);
HXDLIN( 359)												 ::openfl::_internal::renderer::DrawCommandReader data76 = data;
HXDLIN( 359)												data76->bPos = (data76->bPos + (int)2);
            											}
            											break;
            											case (int)13: {
HXLINE( 359)												 ::openfl::_internal::renderer::DrawCommandReader data77 = data;
HXDLIN( 359)												data77->oPos = (data77->oPos + (int)4);
HXDLIN( 359)												 ::openfl::_internal::renderer::DrawCommandReader data78 = data;
HXDLIN( 359)												data78->iiPos = (data78->iiPos + (int)2);
HXDLIN( 359)												 ::openfl::_internal::renderer::DrawCommandReader data79 = data;
HXDLIN( 359)												data79->ffPos = (data79->ffPos + (int)1);
HXDLIN( 359)												 ::openfl::_internal::renderer::DrawCommandReader data80 = data;
HXDLIN( 359)												data80->fPos = (data80->fPos + (int)1);
            											}
            											break;
            											case (int)14: {
HXLINE( 359)												 ::openfl::_internal::renderer::DrawCommandReader data81 = data;
HXDLIN( 359)												data81->oPos = (data81->oPos + (int)4);
HXDLIN( 359)												 ::openfl::_internal::renderer::DrawCommandReader data82 = data;
HXDLIN( 359)												data82->iPos = (data82->iPos + (int)1);
HXDLIN( 359)												 ::openfl::_internal::renderer::DrawCommandReader data83 = data;
HXDLIN( 359)												data83->fPos = (data83->fPos + (int)2);
HXDLIN( 359)												 ::openfl::_internal::renderer::DrawCommandReader data84 = data;
HXDLIN( 359)												data84->bPos = (data84->bPos + (int)1);
            											}
            											break;
            											case (int)15: {
HXLINE( 359)												 ::openfl::_internal::renderer::DrawCommandReader data85 = data;
HXDLIN( 359)												data85->fPos = (data85->fPos + (int)2);
            											}
            											break;
            											case (int)16: {
HXLINE( 359)												 ::openfl::_internal::renderer::DrawCommandReader data86 = data;
HXDLIN( 359)												data86->fPos = (data86->fPos + (int)2);
            											}
            											break;
            											case (int)17: {
HXLINE( 359)												 ::openfl::_internal::renderer::DrawCommandReader data87 = data;
HXDLIN( 359)												data87->oPos = (data87->oPos + (int)1);
            											}
            											break;
            											default:{
            											}
            										}
            									}
HXLINE( 359)									data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::BEGIN_FILL_dyn();
HXDLIN( 359)									 ::openfl::_internal::renderer::DrawCommandReader this3 = data;
HXDLIN( 359)									 ::openfl::_internal::renderer::DrawCommandReader c20 = this3;
HXLINE( 360)									 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp8 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands;
HXDLIN( 360)									_hx_tmp8->beginFill(c20->buffer->i->__get(c20->iPos),(int)1);
HXLINE( 361)									 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp9 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands;
HXDLIN( 361)									_hx_tmp9->beginFill(c20->buffer->i->__get(c20->iPos),(int)1);
            								}
            							}
            						}
            						break;
            						case (int)3: {
HXLINE( 266)							{
HXLINE( 266)								 ::openfl::_internal::renderer::DrawCommandType _g5 = data->prev;
HXDLIN( 266)								switch((int)(_hx_getEnumValueIndex(_g5))){
            									case (int)0: {
HXLINE( 266)										 ::openfl::_internal::renderer::DrawCommandReader data88 = data;
HXDLIN( 266)										data88->oPos = (data88->oPos + (int)2);
HXDLIN( 266)										 ::openfl::_internal::renderer::DrawCommandReader data89 = data;
HXDLIN( 266)										data89->bPos = (data89->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE( 266)										 ::openfl::_internal::renderer::DrawCommandReader data90 = data;
HXDLIN( 266)										data90->iPos = (data90->iPos + (int)1);
HXDLIN( 266)										 ::openfl::_internal::renderer::DrawCommandReader data91 = data;
HXDLIN( 266)										data91->fPos = (data91->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE( 266)										 ::openfl::_internal::renderer::DrawCommandReader data92 = data;
HXDLIN( 266)										data92->oPos = (data92->oPos + (int)4);
HXDLIN( 266)										 ::openfl::_internal::renderer::DrawCommandReader data93 = data;
HXDLIN( 266)										data93->iiPos = (data93->iiPos + (int)2);
HXDLIN( 266)										 ::openfl::_internal::renderer::DrawCommandReader data94 = data;
HXDLIN( 266)										data94->ffPos = (data94->ffPos + (int)1);
HXDLIN( 266)										 ::openfl::_internal::renderer::DrawCommandReader data95 = data;
HXDLIN( 266)										data95->fPos = (data95->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE( 266)										 ::openfl::_internal::renderer::DrawCommandReader data96 = data;
HXDLIN( 266)										data96->fPos = (data96->fPos + (int)6);
            									}
            									break;
            									case (int)4: {
HXLINE( 266)										 ::openfl::_internal::renderer::DrawCommandReader data97 = data;
HXDLIN( 266)										data97->fPos = (data97->fPos + (int)4);
            									}
            									break;
            									case (int)5: {
HXLINE( 266)										 ::openfl::_internal::renderer::DrawCommandReader data98 = data;
HXDLIN( 266)										data98->fPos = (data98->fPos + (int)3);
            									}
            									break;
            									case (int)6: {
HXLINE( 266)										 ::openfl::_internal::renderer::DrawCommandReader data99 = data;
HXDLIN( 266)										data99->fPos = (data99->fPos + (int)4);
            									}
            									break;
            									case (int)7: {
HXLINE( 266)										 ::openfl::_internal::renderer::DrawCommandReader data100 = data;
HXDLIN( 266)										data100->fPos = (data100->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE( 266)										 ::openfl::_internal::renderer::DrawCommandReader data101 = data;
HXDLIN( 266)										data101->fPos = (data101->fPos + (int)5);
HXDLIN( 266)										 ::openfl::_internal::renderer::DrawCommandReader data102 = data;
HXDLIN( 266)										data102->oPos = (data102->oPos + (int)1);
            									}
            									break;
            									case (int)10: {
HXLINE( 266)										 ::openfl::_internal::renderer::DrawCommandReader data103 = data;
HXDLIN( 266)										data103->oPos = (data103->oPos + (int)4);
            									}
            									break;
            									case (int)11: {
            									}
            									break;
            									case (int)12: {
HXLINE( 266)										 ::openfl::_internal::renderer::DrawCommandReader data104 = data;
HXDLIN( 266)										data104->oPos = (data104->oPos + (int)2);
HXDLIN( 266)										 ::openfl::_internal::renderer::DrawCommandReader data105 = data;
HXDLIN( 266)										data105->bPos = (data105->bPos + (int)2);
            									}
            									break;
            									case (int)13: {
HXLINE( 266)										 ::openfl::_internal::renderer::DrawCommandReader data106 = data;
HXDLIN( 266)										data106->oPos = (data106->oPos + (int)4);
HXDLIN( 266)										 ::openfl::_internal::renderer::DrawCommandReader data107 = data;
HXDLIN( 266)										data107->iiPos = (data107->iiPos + (int)2);
HXDLIN( 266)										 ::openfl::_internal::renderer::DrawCommandReader data108 = data;
HXDLIN( 266)										data108->ffPos = (data108->ffPos + (int)1);
HXDLIN( 266)										 ::openfl::_internal::renderer::DrawCommandReader data109 = data;
HXDLIN( 266)										data109->fPos = (data109->fPos + (int)1);
            									}
            									break;
            									case (int)14: {
HXLINE( 266)										 ::openfl::_internal::renderer::DrawCommandReader data110 = data;
HXDLIN( 266)										data110->oPos = (data110->oPos + (int)4);
HXDLIN( 266)										 ::openfl::_internal::renderer::DrawCommandReader data111 = data;
HXDLIN( 266)										data111->iPos = (data111->iPos + (int)1);
HXDLIN( 266)										 ::openfl::_internal::renderer::DrawCommandReader data112 = data;
HXDLIN( 266)										data112->fPos = (data112->fPos + (int)2);
HXDLIN( 266)										 ::openfl::_internal::renderer::DrawCommandReader data113 = data;
HXDLIN( 266)										data113->bPos = (data113->bPos + (int)1);
            									}
            									break;
            									case (int)15: {
HXLINE( 266)										 ::openfl::_internal::renderer::DrawCommandReader data114 = data;
HXDLIN( 266)										data114->fPos = (data114->fPos + (int)2);
            									}
            									break;
            									case (int)16: {
HXLINE( 266)										 ::openfl::_internal::renderer::DrawCommandReader data115 = data;
HXDLIN( 266)										data115->fPos = (data115->fPos + (int)2);
            									}
            									break;
            									case (int)17: {
HXLINE( 266)										 ::openfl::_internal::renderer::DrawCommandReader data116 = data;
HXDLIN( 266)										data116->oPos = (data116->oPos + (int)1);
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE( 266)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::CUBIC_CURVE_TO_dyn();
HXDLIN( 266)							 ::openfl::_internal::renderer::DrawCommandReader this4 = data;
HXDLIN( 266)							 ::openfl::_internal::renderer::DrawCommandReader c21 = this4;
HXLINE( 267)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp10 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands;
HXDLIN( 267)							Float c22 = c21->buffer->f->__get(c21->fPos);
HXDLIN( 267)							::Array< Float > c23 = c21->buffer->f;
HXDLIN( 267)							Float c24 = c23->__get((c21->fPos + (int)1));
HXDLIN( 267)							::Array< Float > c25 = c21->buffer->f;
HXDLIN( 267)							Float c26 = c25->__get((c21->fPos + (int)2));
HXDLIN( 267)							::Array< Float > c27 = c21->buffer->f;
HXDLIN( 267)							Float c28 = c27->__get((c21->fPos + (int)3));
HXDLIN( 267)							::Array< Float > c29 = c21->buffer->f;
HXDLIN( 267)							Float c30 = c29->__get((c21->fPos + (int)4));
HXDLIN( 267)							::Array< Float > c31 = c21->buffer->f;
HXDLIN( 267)							_hx_tmp10->cubicCurveTo(c22,c24,c26,c28,c30,c31->__get((c21->fPos + (int)5)));
HXLINE( 268)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp11 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands;
HXDLIN( 268)							Float c32 = c21->buffer->f->__get(c21->fPos);
HXDLIN( 268)							::Array< Float > c33 = c21->buffer->f;
HXDLIN( 268)							Float c34 = c33->__get((c21->fPos + (int)1));
HXDLIN( 268)							::Array< Float > c35 = c21->buffer->f;
HXDLIN( 268)							Float c36 = c35->__get((c21->fPos + (int)2));
HXDLIN( 268)							::Array< Float > c37 = c21->buffer->f;
HXDLIN( 268)							Float c38 = c37->__get((c21->fPos + (int)3));
HXDLIN( 268)							::Array< Float > c39 = c21->buffer->f;
HXDLIN( 268)							Float c40 = c39->__get((c21->fPos + (int)4));
HXDLIN( 268)							::Array< Float > c41 = c21->buffer->f;
HXDLIN( 268)							_hx_tmp11->cubicCurveTo(c32,c34,c36,c38,c40,c41->__get((c21->fPos + (int)5)));
            						}
            						break;
            						case (int)4: {
HXLINE( 272)							{
HXLINE( 272)								 ::openfl::_internal::renderer::DrawCommandType _g6 = data->prev;
HXDLIN( 272)								switch((int)(_hx_getEnumValueIndex(_g6))){
            									case (int)0: {
HXLINE( 272)										 ::openfl::_internal::renderer::DrawCommandReader data117 = data;
HXDLIN( 272)										data117->oPos = (data117->oPos + (int)2);
HXDLIN( 272)										 ::openfl::_internal::renderer::DrawCommandReader data118 = data;
HXDLIN( 272)										data118->bPos = (data118->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE( 272)										 ::openfl::_internal::renderer::DrawCommandReader data119 = data;
HXDLIN( 272)										data119->iPos = (data119->iPos + (int)1);
HXDLIN( 272)										 ::openfl::_internal::renderer::DrawCommandReader data120 = data;
HXDLIN( 272)										data120->fPos = (data120->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE( 272)										 ::openfl::_internal::renderer::DrawCommandReader data121 = data;
HXDLIN( 272)										data121->oPos = (data121->oPos + (int)4);
HXDLIN( 272)										 ::openfl::_internal::renderer::DrawCommandReader data122 = data;
HXDLIN( 272)										data122->iiPos = (data122->iiPos + (int)2);
HXDLIN( 272)										 ::openfl::_internal::renderer::DrawCommandReader data123 = data;
HXDLIN( 272)										data123->ffPos = (data123->ffPos + (int)1);
HXDLIN( 272)										 ::openfl::_internal::renderer::DrawCommandReader data124 = data;
HXDLIN( 272)										data124->fPos = (data124->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE( 272)										 ::openfl::_internal::renderer::DrawCommandReader data125 = data;
HXDLIN( 272)										data125->fPos = (data125->fPos + (int)6);
            									}
            									break;
            									case (int)4: {
HXLINE( 272)										 ::openfl::_internal::renderer::DrawCommandReader data126 = data;
HXDLIN( 272)										data126->fPos = (data126->fPos + (int)4);
            									}
            									break;
            									case (int)5: {
HXLINE( 272)										 ::openfl::_internal::renderer::DrawCommandReader data127 = data;
HXDLIN( 272)										data127->fPos = (data127->fPos + (int)3);
            									}
            									break;
            									case (int)6: {
HXLINE( 272)										 ::openfl::_internal::renderer::DrawCommandReader data128 = data;
HXDLIN( 272)										data128->fPos = (data128->fPos + (int)4);
            									}
            									break;
            									case (int)7: {
HXLINE( 272)										 ::openfl::_internal::renderer::DrawCommandReader data129 = data;
HXDLIN( 272)										data129->fPos = (data129->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE( 272)										 ::openfl::_internal::renderer::DrawCommandReader data130 = data;
HXDLIN( 272)										data130->fPos = (data130->fPos + (int)5);
HXDLIN( 272)										 ::openfl::_internal::renderer::DrawCommandReader data131 = data;
HXDLIN( 272)										data131->oPos = (data131->oPos + (int)1);
            									}
            									break;
            									case (int)10: {
HXLINE( 272)										 ::openfl::_internal::renderer::DrawCommandReader data132 = data;
HXDLIN( 272)										data132->oPos = (data132->oPos + (int)4);
            									}
            									break;
            									case (int)11: {
            									}
            									break;
            									case (int)12: {
HXLINE( 272)										 ::openfl::_internal::renderer::DrawCommandReader data133 = data;
HXDLIN( 272)										data133->oPos = (data133->oPos + (int)2);
HXDLIN( 272)										 ::openfl::_internal::renderer::DrawCommandReader data134 = data;
HXDLIN( 272)										data134->bPos = (data134->bPos + (int)2);
            									}
            									break;
            									case (int)13: {
HXLINE( 272)										 ::openfl::_internal::renderer::DrawCommandReader data135 = data;
HXDLIN( 272)										data135->oPos = (data135->oPos + (int)4);
HXDLIN( 272)										 ::openfl::_internal::renderer::DrawCommandReader data136 = data;
HXDLIN( 272)										data136->iiPos = (data136->iiPos + (int)2);
HXDLIN( 272)										 ::openfl::_internal::renderer::DrawCommandReader data137 = data;
HXDLIN( 272)										data137->ffPos = (data137->ffPos + (int)1);
HXDLIN( 272)										 ::openfl::_internal::renderer::DrawCommandReader data138 = data;
HXDLIN( 272)										data138->fPos = (data138->fPos + (int)1);
            									}
            									break;
            									case (int)14: {
HXLINE( 272)										 ::openfl::_internal::renderer::DrawCommandReader data139 = data;
HXDLIN( 272)										data139->oPos = (data139->oPos + (int)4);
HXDLIN( 272)										 ::openfl::_internal::renderer::DrawCommandReader data140 = data;
HXDLIN( 272)										data140->iPos = (data140->iPos + (int)1);
HXDLIN( 272)										 ::openfl::_internal::renderer::DrawCommandReader data141 = data;
HXDLIN( 272)										data141->fPos = (data141->fPos + (int)2);
HXDLIN( 272)										 ::openfl::_internal::renderer::DrawCommandReader data142 = data;
HXDLIN( 272)										data142->bPos = (data142->bPos + (int)1);
            									}
            									break;
            									case (int)15: {
HXLINE( 272)										 ::openfl::_internal::renderer::DrawCommandReader data143 = data;
HXDLIN( 272)										data143->fPos = (data143->fPos + (int)2);
            									}
            									break;
            									case (int)16: {
HXLINE( 272)										 ::openfl::_internal::renderer::DrawCommandReader data144 = data;
HXDLIN( 272)										data144->fPos = (data144->fPos + (int)2);
            									}
            									break;
            									case (int)17: {
HXLINE( 272)										 ::openfl::_internal::renderer::DrawCommandReader data145 = data;
HXDLIN( 272)										data145->oPos = (data145->oPos + (int)1);
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE( 272)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::CURVE_TO_dyn();
HXDLIN( 272)							 ::openfl::_internal::renderer::DrawCommandReader this5 = data;
HXDLIN( 272)							 ::openfl::_internal::renderer::DrawCommandReader c42 = this5;
HXLINE( 273)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp12 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands;
HXDLIN( 273)							Float c43 = c42->buffer->f->__get(c42->fPos);
HXDLIN( 273)							::Array< Float > c44 = c42->buffer->f;
HXDLIN( 273)							Float c45 = c44->__get((c42->fPos + (int)1));
HXDLIN( 273)							::Array< Float > c46 = c42->buffer->f;
HXDLIN( 273)							Float c47 = c46->__get((c42->fPos + (int)2));
HXDLIN( 273)							::Array< Float > c48 = c42->buffer->f;
HXDLIN( 273)							_hx_tmp12->curveTo(c43,c45,c47,c48->__get((c42->fPos + (int)3)));
HXLINE( 274)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp13 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands;
HXDLIN( 274)							Float c49 = c42->buffer->f->__get(c42->fPos);
HXDLIN( 274)							::Array< Float > c50 = c42->buffer->f;
HXDLIN( 274)							Float c51 = c50->__get((c42->fPos + (int)1));
HXDLIN( 274)							::Array< Float > c52 = c42->buffer->f;
HXDLIN( 274)							Float c53 = c52->__get((c42->fPos + (int)2));
HXDLIN( 274)							::Array< Float > c54 = c42->buffer->f;
HXDLIN( 274)							_hx_tmp13->curveTo(c49,c51,c53,c54->__get((c42->fPos + (int)3)));
            						}
            						break;
            						case (int)5: {
HXLINE( 367)							{
HXLINE( 367)								 ::openfl::_internal::renderer::DrawCommandType _g7 = data->prev;
HXDLIN( 367)								switch((int)(_hx_getEnumValueIndex(_g7))){
            									case (int)0: {
HXLINE( 367)										 ::openfl::_internal::renderer::DrawCommandReader data146 = data;
HXDLIN( 367)										data146->oPos = (data146->oPos + (int)2);
HXDLIN( 367)										 ::openfl::_internal::renderer::DrawCommandReader data147 = data;
HXDLIN( 367)										data147->bPos = (data147->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE( 367)										 ::openfl::_internal::renderer::DrawCommandReader data148 = data;
HXDLIN( 367)										data148->iPos = (data148->iPos + (int)1);
HXDLIN( 367)										 ::openfl::_internal::renderer::DrawCommandReader data149 = data;
HXDLIN( 367)										data149->fPos = (data149->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE( 367)										 ::openfl::_internal::renderer::DrawCommandReader data150 = data;
HXDLIN( 367)										data150->oPos = (data150->oPos + (int)4);
HXDLIN( 367)										 ::openfl::_internal::renderer::DrawCommandReader data151 = data;
HXDLIN( 367)										data151->iiPos = (data151->iiPos + (int)2);
HXDLIN( 367)										 ::openfl::_internal::renderer::DrawCommandReader data152 = data;
HXDLIN( 367)										data152->ffPos = (data152->ffPos + (int)1);
HXDLIN( 367)										 ::openfl::_internal::renderer::DrawCommandReader data153 = data;
HXDLIN( 367)										data153->fPos = (data153->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE( 367)										 ::openfl::_internal::renderer::DrawCommandReader data154 = data;
HXDLIN( 367)										data154->fPos = (data154->fPos + (int)6);
            									}
            									break;
            									case (int)4: {
HXLINE( 367)										 ::openfl::_internal::renderer::DrawCommandReader data155 = data;
HXDLIN( 367)										data155->fPos = (data155->fPos + (int)4);
            									}
            									break;
            									case (int)5: {
HXLINE( 367)										 ::openfl::_internal::renderer::DrawCommandReader data156 = data;
HXDLIN( 367)										data156->fPos = (data156->fPos + (int)3);
            									}
            									break;
            									case (int)6: {
HXLINE( 367)										 ::openfl::_internal::renderer::DrawCommandReader data157 = data;
HXDLIN( 367)										data157->fPos = (data157->fPos + (int)4);
            									}
            									break;
            									case (int)7: {
HXLINE( 367)										 ::openfl::_internal::renderer::DrawCommandReader data158 = data;
HXDLIN( 367)										data158->fPos = (data158->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE( 367)										 ::openfl::_internal::renderer::DrawCommandReader data159 = data;
HXDLIN( 367)										data159->fPos = (data159->fPos + (int)5);
HXDLIN( 367)										 ::openfl::_internal::renderer::DrawCommandReader data160 = data;
HXDLIN( 367)										data160->oPos = (data160->oPos + (int)1);
            									}
            									break;
            									case (int)10: {
HXLINE( 367)										 ::openfl::_internal::renderer::DrawCommandReader data161 = data;
HXDLIN( 367)										data161->oPos = (data161->oPos + (int)4);
            									}
            									break;
            									case (int)11: {
            									}
            									break;
            									case (int)12: {
HXLINE( 367)										 ::openfl::_internal::renderer::DrawCommandReader data162 = data;
HXDLIN( 367)										data162->oPos = (data162->oPos + (int)2);
HXDLIN( 367)										 ::openfl::_internal::renderer::DrawCommandReader data163 = data;
HXDLIN( 367)										data163->bPos = (data163->bPos + (int)2);
            									}
            									break;
            									case (int)13: {
HXLINE( 367)										 ::openfl::_internal::renderer::DrawCommandReader data164 = data;
HXDLIN( 367)										data164->oPos = (data164->oPos + (int)4);
HXDLIN( 367)										 ::openfl::_internal::renderer::DrawCommandReader data165 = data;
HXDLIN( 367)										data165->iiPos = (data165->iiPos + (int)2);
HXDLIN( 367)										 ::openfl::_internal::renderer::DrawCommandReader data166 = data;
HXDLIN( 367)										data166->ffPos = (data166->ffPos + (int)1);
HXDLIN( 367)										 ::openfl::_internal::renderer::DrawCommandReader data167 = data;
HXDLIN( 367)										data167->fPos = (data167->fPos + (int)1);
            									}
            									break;
            									case (int)14: {
HXLINE( 367)										 ::openfl::_internal::renderer::DrawCommandReader data168 = data;
HXDLIN( 367)										data168->oPos = (data168->oPos + (int)4);
HXDLIN( 367)										 ::openfl::_internal::renderer::DrawCommandReader data169 = data;
HXDLIN( 367)										data169->iPos = (data169->iPos + (int)1);
HXDLIN( 367)										 ::openfl::_internal::renderer::DrawCommandReader data170 = data;
HXDLIN( 367)										data170->fPos = (data170->fPos + (int)2);
HXDLIN( 367)										 ::openfl::_internal::renderer::DrawCommandReader data171 = data;
HXDLIN( 367)										data171->bPos = (data171->bPos + (int)1);
            									}
            									break;
            									case (int)15: {
HXLINE( 367)										 ::openfl::_internal::renderer::DrawCommandReader data172 = data;
HXDLIN( 367)										data172->fPos = (data172->fPos + (int)2);
            									}
            									break;
            									case (int)16: {
HXLINE( 367)										 ::openfl::_internal::renderer::DrawCommandReader data173 = data;
HXDLIN( 367)										data173->fPos = (data173->fPos + (int)2);
            									}
            									break;
            									case (int)17: {
HXLINE( 367)										 ::openfl::_internal::renderer::DrawCommandReader data174 = data;
HXDLIN( 367)										data174->oPos = (data174->oPos + (int)1);
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE( 367)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::DRAW_CIRCLE_dyn();
HXDLIN( 367)							 ::openfl::_internal::renderer::DrawCommandReader this6 = data;
HXDLIN( 367)							 ::openfl::_internal::renderer::DrawCommandReader c55 = this6;
HXLINE( 368)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp14 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands;
HXDLIN( 368)							Float c56 = c55->buffer->f->__get(c55->fPos);
HXDLIN( 368)							::Array< Float > c57 = c55->buffer->f;
HXDLIN( 368)							Float c58 = c57->__get((c55->fPos + (int)1));
HXDLIN( 368)							::Array< Float > c59 = c55->buffer->f;
HXDLIN( 368)							_hx_tmp14->drawCircle(c56,c58,c59->__get((c55->fPos + (int)2)));
HXLINE( 369)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp15 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands;
HXDLIN( 369)							Float c60 = c55->buffer->f->__get(c55->fPos);
HXDLIN( 369)							::Array< Float > c61 = c55->buffer->f;
HXDLIN( 369)							Float c62 = c61->__get((c55->fPos + (int)1));
HXDLIN( 369)							::Array< Float > c63 = c55->buffer->f;
HXDLIN( 369)							_hx_tmp15->drawCircle(c60,c62,c63->__get((c55->fPos + (int)2)));
            						}
            						break;
            						case (int)6: {
HXLINE( 373)							{
HXLINE( 373)								 ::openfl::_internal::renderer::DrawCommandType _g8 = data->prev;
HXDLIN( 373)								switch((int)(_hx_getEnumValueIndex(_g8))){
            									case (int)0: {
HXLINE( 373)										 ::openfl::_internal::renderer::DrawCommandReader data175 = data;
HXDLIN( 373)										data175->oPos = (data175->oPos + (int)2);
HXDLIN( 373)										 ::openfl::_internal::renderer::DrawCommandReader data176 = data;
HXDLIN( 373)										data176->bPos = (data176->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE( 373)										 ::openfl::_internal::renderer::DrawCommandReader data177 = data;
HXDLIN( 373)										data177->iPos = (data177->iPos + (int)1);
HXDLIN( 373)										 ::openfl::_internal::renderer::DrawCommandReader data178 = data;
HXDLIN( 373)										data178->fPos = (data178->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE( 373)										 ::openfl::_internal::renderer::DrawCommandReader data179 = data;
HXDLIN( 373)										data179->oPos = (data179->oPos + (int)4);
HXDLIN( 373)										 ::openfl::_internal::renderer::DrawCommandReader data180 = data;
HXDLIN( 373)										data180->iiPos = (data180->iiPos + (int)2);
HXDLIN( 373)										 ::openfl::_internal::renderer::DrawCommandReader data181 = data;
HXDLIN( 373)										data181->ffPos = (data181->ffPos + (int)1);
HXDLIN( 373)										 ::openfl::_internal::renderer::DrawCommandReader data182 = data;
HXDLIN( 373)										data182->fPos = (data182->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE( 373)										 ::openfl::_internal::renderer::DrawCommandReader data183 = data;
HXDLIN( 373)										data183->fPos = (data183->fPos + (int)6);
            									}
            									break;
            									case (int)4: {
HXLINE( 373)										 ::openfl::_internal::renderer::DrawCommandReader data184 = data;
HXDLIN( 373)										data184->fPos = (data184->fPos + (int)4);
            									}
            									break;
            									case (int)5: {
HXLINE( 373)										 ::openfl::_internal::renderer::DrawCommandReader data185 = data;
HXDLIN( 373)										data185->fPos = (data185->fPos + (int)3);
            									}
            									break;
            									case (int)6: {
HXLINE( 373)										 ::openfl::_internal::renderer::DrawCommandReader data186 = data;
HXDLIN( 373)										data186->fPos = (data186->fPos + (int)4);
            									}
            									break;
            									case (int)7: {
HXLINE( 373)										 ::openfl::_internal::renderer::DrawCommandReader data187 = data;
HXDLIN( 373)										data187->fPos = (data187->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE( 373)										 ::openfl::_internal::renderer::DrawCommandReader data188 = data;
HXDLIN( 373)										data188->fPos = (data188->fPos + (int)5);
HXDLIN( 373)										 ::openfl::_internal::renderer::DrawCommandReader data189 = data;
HXDLIN( 373)										data189->oPos = (data189->oPos + (int)1);
            									}
            									break;
            									case (int)10: {
HXLINE( 373)										 ::openfl::_internal::renderer::DrawCommandReader data190 = data;
HXDLIN( 373)										data190->oPos = (data190->oPos + (int)4);
            									}
            									break;
            									case (int)11: {
            									}
            									break;
            									case (int)12: {
HXLINE( 373)										 ::openfl::_internal::renderer::DrawCommandReader data191 = data;
HXDLIN( 373)										data191->oPos = (data191->oPos + (int)2);
HXDLIN( 373)										 ::openfl::_internal::renderer::DrawCommandReader data192 = data;
HXDLIN( 373)										data192->bPos = (data192->bPos + (int)2);
            									}
            									break;
            									case (int)13: {
HXLINE( 373)										 ::openfl::_internal::renderer::DrawCommandReader data193 = data;
HXDLIN( 373)										data193->oPos = (data193->oPos + (int)4);
HXDLIN( 373)										 ::openfl::_internal::renderer::DrawCommandReader data194 = data;
HXDLIN( 373)										data194->iiPos = (data194->iiPos + (int)2);
HXDLIN( 373)										 ::openfl::_internal::renderer::DrawCommandReader data195 = data;
HXDLIN( 373)										data195->ffPos = (data195->ffPos + (int)1);
HXDLIN( 373)										 ::openfl::_internal::renderer::DrawCommandReader data196 = data;
HXDLIN( 373)										data196->fPos = (data196->fPos + (int)1);
            									}
            									break;
            									case (int)14: {
HXLINE( 373)										 ::openfl::_internal::renderer::DrawCommandReader data197 = data;
HXDLIN( 373)										data197->oPos = (data197->oPos + (int)4);
HXDLIN( 373)										 ::openfl::_internal::renderer::DrawCommandReader data198 = data;
HXDLIN( 373)										data198->iPos = (data198->iPos + (int)1);
HXDLIN( 373)										 ::openfl::_internal::renderer::DrawCommandReader data199 = data;
HXDLIN( 373)										data199->fPos = (data199->fPos + (int)2);
HXDLIN( 373)										 ::openfl::_internal::renderer::DrawCommandReader data200 = data;
HXDLIN( 373)										data200->bPos = (data200->bPos + (int)1);
            									}
            									break;
            									case (int)15: {
HXLINE( 373)										 ::openfl::_internal::renderer::DrawCommandReader data201 = data;
HXDLIN( 373)										data201->fPos = (data201->fPos + (int)2);
            									}
            									break;
            									case (int)16: {
HXLINE( 373)										 ::openfl::_internal::renderer::DrawCommandReader data202 = data;
HXDLIN( 373)										data202->fPos = (data202->fPos + (int)2);
            									}
            									break;
            									case (int)17: {
HXLINE( 373)										 ::openfl::_internal::renderer::DrawCommandReader data203 = data;
HXDLIN( 373)										data203->oPos = (data203->oPos + (int)1);
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE( 373)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::DRAW_ELLIPSE_dyn();
HXDLIN( 373)							 ::openfl::_internal::renderer::DrawCommandReader this7 = data;
HXDLIN( 373)							 ::openfl::_internal::renderer::DrawCommandReader c64 = this7;
HXLINE( 374)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp16 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands;
HXDLIN( 374)							Float c65 = c64->buffer->f->__get(c64->fPos);
HXDLIN( 374)							::Array< Float > c66 = c64->buffer->f;
HXDLIN( 374)							Float c67 = c66->__get((c64->fPos + (int)1));
HXDLIN( 374)							::Array< Float > c68 = c64->buffer->f;
HXDLIN( 374)							Float c69 = c68->__get((c64->fPos + (int)2));
HXDLIN( 374)							::Array< Float > c70 = c64->buffer->f;
HXDLIN( 374)							_hx_tmp16->drawEllipse(c65,c67,c69,c70->__get((c64->fPos + (int)3)));
HXLINE( 375)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp17 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands;
HXDLIN( 375)							Float c71 = c64->buffer->f->__get(c64->fPos);
HXDLIN( 375)							::Array< Float > c72 = c64->buffer->f;
HXDLIN( 375)							Float c73 = c72->__get((c64->fPos + (int)1));
HXDLIN( 375)							::Array< Float > c74 = c64->buffer->f;
HXDLIN( 375)							Float c75 = c74->__get((c64->fPos + (int)2));
HXDLIN( 375)							::Array< Float > c76 = c64->buffer->f;
HXDLIN( 375)							_hx_tmp17->drawEllipse(c71,c73,c75,c76->__get((c64->fPos + (int)3)));
            						}
            						break;
            						case (int)7: {
HXLINE( 379)							{
HXLINE( 379)								 ::openfl::_internal::renderer::DrawCommandType _g9 = data->prev;
HXDLIN( 379)								switch((int)(_hx_getEnumValueIndex(_g9))){
            									case (int)0: {
HXLINE( 379)										 ::openfl::_internal::renderer::DrawCommandReader data204 = data;
HXDLIN( 379)										data204->oPos = (data204->oPos + (int)2);
HXDLIN( 379)										 ::openfl::_internal::renderer::DrawCommandReader data205 = data;
HXDLIN( 379)										data205->bPos = (data205->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE( 379)										 ::openfl::_internal::renderer::DrawCommandReader data206 = data;
HXDLIN( 379)										data206->iPos = (data206->iPos + (int)1);
HXDLIN( 379)										 ::openfl::_internal::renderer::DrawCommandReader data207 = data;
HXDLIN( 379)										data207->fPos = (data207->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE( 379)										 ::openfl::_internal::renderer::DrawCommandReader data208 = data;
HXDLIN( 379)										data208->oPos = (data208->oPos + (int)4);
HXDLIN( 379)										 ::openfl::_internal::renderer::DrawCommandReader data209 = data;
HXDLIN( 379)										data209->iiPos = (data209->iiPos + (int)2);
HXDLIN( 379)										 ::openfl::_internal::renderer::DrawCommandReader data210 = data;
HXDLIN( 379)										data210->ffPos = (data210->ffPos + (int)1);
HXDLIN( 379)										 ::openfl::_internal::renderer::DrawCommandReader data211 = data;
HXDLIN( 379)										data211->fPos = (data211->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE( 379)										 ::openfl::_internal::renderer::DrawCommandReader data212 = data;
HXDLIN( 379)										data212->fPos = (data212->fPos + (int)6);
            									}
            									break;
            									case (int)4: {
HXLINE( 379)										 ::openfl::_internal::renderer::DrawCommandReader data213 = data;
HXDLIN( 379)										data213->fPos = (data213->fPos + (int)4);
            									}
            									break;
            									case (int)5: {
HXLINE( 379)										 ::openfl::_internal::renderer::DrawCommandReader data214 = data;
HXDLIN( 379)										data214->fPos = (data214->fPos + (int)3);
            									}
            									break;
            									case (int)6: {
HXLINE( 379)										 ::openfl::_internal::renderer::DrawCommandReader data215 = data;
HXDLIN( 379)										data215->fPos = (data215->fPos + (int)4);
            									}
            									break;
            									case (int)7: {
HXLINE( 379)										 ::openfl::_internal::renderer::DrawCommandReader data216 = data;
HXDLIN( 379)										data216->fPos = (data216->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE( 379)										 ::openfl::_internal::renderer::DrawCommandReader data217 = data;
HXDLIN( 379)										data217->fPos = (data217->fPos + (int)5);
HXDLIN( 379)										 ::openfl::_internal::renderer::DrawCommandReader data218 = data;
HXDLIN( 379)										data218->oPos = (data218->oPos + (int)1);
            									}
            									break;
            									case (int)10: {
HXLINE( 379)										 ::openfl::_internal::renderer::DrawCommandReader data219 = data;
HXDLIN( 379)										data219->oPos = (data219->oPos + (int)4);
            									}
            									break;
            									case (int)11: {
            									}
            									break;
            									case (int)12: {
HXLINE( 379)										 ::openfl::_internal::renderer::DrawCommandReader data220 = data;
HXDLIN( 379)										data220->oPos = (data220->oPos + (int)2);
HXDLIN( 379)										 ::openfl::_internal::renderer::DrawCommandReader data221 = data;
HXDLIN( 379)										data221->bPos = (data221->bPos + (int)2);
            									}
            									break;
            									case (int)13: {
HXLINE( 379)										 ::openfl::_internal::renderer::DrawCommandReader data222 = data;
HXDLIN( 379)										data222->oPos = (data222->oPos + (int)4);
HXDLIN( 379)										 ::openfl::_internal::renderer::DrawCommandReader data223 = data;
HXDLIN( 379)										data223->iiPos = (data223->iiPos + (int)2);
HXDLIN( 379)										 ::openfl::_internal::renderer::DrawCommandReader data224 = data;
HXDLIN( 379)										data224->ffPos = (data224->ffPos + (int)1);
HXDLIN( 379)										 ::openfl::_internal::renderer::DrawCommandReader data225 = data;
HXDLIN( 379)										data225->fPos = (data225->fPos + (int)1);
            									}
            									break;
            									case (int)14: {
HXLINE( 379)										 ::openfl::_internal::renderer::DrawCommandReader data226 = data;
HXDLIN( 379)										data226->oPos = (data226->oPos + (int)4);
HXDLIN( 379)										 ::openfl::_internal::renderer::DrawCommandReader data227 = data;
HXDLIN( 379)										data227->iPos = (data227->iPos + (int)1);
HXDLIN( 379)										 ::openfl::_internal::renderer::DrawCommandReader data228 = data;
HXDLIN( 379)										data228->fPos = (data228->fPos + (int)2);
HXDLIN( 379)										 ::openfl::_internal::renderer::DrawCommandReader data229 = data;
HXDLIN( 379)										data229->bPos = (data229->bPos + (int)1);
            									}
            									break;
            									case (int)15: {
HXLINE( 379)										 ::openfl::_internal::renderer::DrawCommandReader data230 = data;
HXDLIN( 379)										data230->fPos = (data230->fPos + (int)2);
            									}
            									break;
            									case (int)16: {
HXLINE( 379)										 ::openfl::_internal::renderer::DrawCommandReader data231 = data;
HXDLIN( 379)										data231->fPos = (data231->fPos + (int)2);
            									}
            									break;
            									case (int)17: {
HXLINE( 379)										 ::openfl::_internal::renderer::DrawCommandReader data232 = data;
HXDLIN( 379)										data232->oPos = (data232->oPos + (int)1);
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE( 379)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::DRAW_RECT_dyn();
HXDLIN( 379)							 ::openfl::_internal::renderer::DrawCommandReader this8 = data;
HXDLIN( 379)							 ::openfl::_internal::renderer::DrawCommandReader c77 = this8;
HXLINE( 380)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp18 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands;
HXDLIN( 380)							Float c78 = c77->buffer->f->__get(c77->fPos);
HXDLIN( 380)							::Array< Float > c79 = c77->buffer->f;
HXDLIN( 380)							Float c80 = c79->__get((c77->fPos + (int)1));
HXDLIN( 380)							::Array< Float > c81 = c77->buffer->f;
HXDLIN( 380)							Float c82 = c81->__get((c77->fPos + (int)2));
HXDLIN( 380)							::Array< Float > c83 = c77->buffer->f;
HXDLIN( 380)							_hx_tmp18->drawRect(c78,c80,c82,c83->__get((c77->fPos + (int)3)));
HXLINE( 381)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp19 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands;
HXDLIN( 381)							Float c84 = c77->buffer->f->__get(c77->fPos);
HXDLIN( 381)							::Array< Float > c85 = c77->buffer->f;
HXDLIN( 381)							Float c86 = c85->__get((c77->fPos + (int)1));
HXDLIN( 381)							::Array< Float > c87 = c77->buffer->f;
HXDLIN( 381)							Float c88 = c87->__get((c77->fPos + (int)2));
HXDLIN( 381)							::Array< Float > c89 = c77->buffer->f;
HXDLIN( 381)							_hx_tmp19->drawRect(c84,c86,c88,c89->__get((c77->fPos + (int)3)));
            						}
            						break;
            						case (int)8: {
HXLINE( 385)							{
HXLINE( 385)								 ::openfl::_internal::renderer::DrawCommandType _g10 = data->prev;
HXDLIN( 385)								switch((int)(_hx_getEnumValueIndex(_g10))){
            									case (int)0: {
HXLINE( 385)										 ::openfl::_internal::renderer::DrawCommandReader data233 = data;
HXDLIN( 385)										data233->oPos = (data233->oPos + (int)2);
HXDLIN( 385)										 ::openfl::_internal::renderer::DrawCommandReader data234 = data;
HXDLIN( 385)										data234->bPos = (data234->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE( 385)										 ::openfl::_internal::renderer::DrawCommandReader data235 = data;
HXDLIN( 385)										data235->iPos = (data235->iPos + (int)1);
HXDLIN( 385)										 ::openfl::_internal::renderer::DrawCommandReader data236 = data;
HXDLIN( 385)										data236->fPos = (data236->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE( 385)										 ::openfl::_internal::renderer::DrawCommandReader data237 = data;
HXDLIN( 385)										data237->oPos = (data237->oPos + (int)4);
HXDLIN( 385)										 ::openfl::_internal::renderer::DrawCommandReader data238 = data;
HXDLIN( 385)										data238->iiPos = (data238->iiPos + (int)2);
HXDLIN( 385)										 ::openfl::_internal::renderer::DrawCommandReader data239 = data;
HXDLIN( 385)										data239->ffPos = (data239->ffPos + (int)1);
HXDLIN( 385)										 ::openfl::_internal::renderer::DrawCommandReader data240 = data;
HXDLIN( 385)										data240->fPos = (data240->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE( 385)										 ::openfl::_internal::renderer::DrawCommandReader data241 = data;
HXDLIN( 385)										data241->fPos = (data241->fPos + (int)6);
            									}
            									break;
            									case (int)4: {
HXLINE( 385)										 ::openfl::_internal::renderer::DrawCommandReader data242 = data;
HXDLIN( 385)										data242->fPos = (data242->fPos + (int)4);
            									}
            									break;
            									case (int)5: {
HXLINE( 385)										 ::openfl::_internal::renderer::DrawCommandReader data243 = data;
HXDLIN( 385)										data243->fPos = (data243->fPos + (int)3);
            									}
            									break;
            									case (int)6: {
HXLINE( 385)										 ::openfl::_internal::renderer::DrawCommandReader data244 = data;
HXDLIN( 385)										data244->fPos = (data244->fPos + (int)4);
            									}
            									break;
            									case (int)7: {
HXLINE( 385)										 ::openfl::_internal::renderer::DrawCommandReader data245 = data;
HXDLIN( 385)										data245->fPos = (data245->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE( 385)										 ::openfl::_internal::renderer::DrawCommandReader data246 = data;
HXDLIN( 385)										data246->fPos = (data246->fPos + (int)5);
HXDLIN( 385)										 ::openfl::_internal::renderer::DrawCommandReader data247 = data;
HXDLIN( 385)										data247->oPos = (data247->oPos + (int)1);
            									}
            									break;
            									case (int)10: {
HXLINE( 385)										 ::openfl::_internal::renderer::DrawCommandReader data248 = data;
HXDLIN( 385)										data248->oPos = (data248->oPos + (int)4);
            									}
            									break;
            									case (int)11: {
            									}
            									break;
            									case (int)12: {
HXLINE( 385)										 ::openfl::_internal::renderer::DrawCommandReader data249 = data;
HXDLIN( 385)										data249->oPos = (data249->oPos + (int)2);
HXDLIN( 385)										 ::openfl::_internal::renderer::DrawCommandReader data250 = data;
HXDLIN( 385)										data250->bPos = (data250->bPos + (int)2);
            									}
            									break;
            									case (int)13: {
HXLINE( 385)										 ::openfl::_internal::renderer::DrawCommandReader data251 = data;
HXDLIN( 385)										data251->oPos = (data251->oPos + (int)4);
HXDLIN( 385)										 ::openfl::_internal::renderer::DrawCommandReader data252 = data;
HXDLIN( 385)										data252->iiPos = (data252->iiPos + (int)2);
HXDLIN( 385)										 ::openfl::_internal::renderer::DrawCommandReader data253 = data;
HXDLIN( 385)										data253->ffPos = (data253->ffPos + (int)1);
HXDLIN( 385)										 ::openfl::_internal::renderer::DrawCommandReader data254 = data;
HXDLIN( 385)										data254->fPos = (data254->fPos + (int)1);
            									}
            									break;
            									case (int)14: {
HXLINE( 385)										 ::openfl::_internal::renderer::DrawCommandReader data255 = data;
HXDLIN( 385)										data255->oPos = (data255->oPos + (int)4);
HXDLIN( 385)										 ::openfl::_internal::renderer::DrawCommandReader data256 = data;
HXDLIN( 385)										data256->iPos = (data256->iPos + (int)1);
HXDLIN( 385)										 ::openfl::_internal::renderer::DrawCommandReader data257 = data;
HXDLIN( 385)										data257->fPos = (data257->fPos + (int)2);
HXDLIN( 385)										 ::openfl::_internal::renderer::DrawCommandReader data258 = data;
HXDLIN( 385)										data258->bPos = (data258->bPos + (int)1);
            									}
            									break;
            									case (int)15: {
HXLINE( 385)										 ::openfl::_internal::renderer::DrawCommandReader data259 = data;
HXDLIN( 385)										data259->fPos = (data259->fPos + (int)2);
            									}
            									break;
            									case (int)16: {
HXLINE( 385)										 ::openfl::_internal::renderer::DrawCommandReader data260 = data;
HXDLIN( 385)										data260->fPos = (data260->fPos + (int)2);
            									}
            									break;
            									case (int)17: {
HXLINE( 385)										 ::openfl::_internal::renderer::DrawCommandReader data261 = data;
HXDLIN( 385)										data261->oPos = (data261->oPos + (int)1);
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE( 385)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::DRAW_ROUND_RECT_dyn();
HXDLIN( 385)							 ::openfl::_internal::renderer::DrawCommandReader this9 = data;
HXDLIN( 385)							 ::openfl::_internal::renderer::DrawCommandReader c90 = this9;
HXLINE( 386)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp20 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands;
HXDLIN( 386)							Float c91 = c90->buffer->f->__get(c90->fPos);
HXDLIN( 386)							::Array< Float > c92 = c90->buffer->f;
HXDLIN( 386)							Float c93 = c92->__get((c90->fPos + (int)1));
HXDLIN( 386)							::Array< Float > c94 = c90->buffer->f;
HXDLIN( 386)							Float c95 = c94->__get((c90->fPos + (int)2));
HXDLIN( 386)							::Array< Float > c96 = c90->buffer->f;
HXDLIN( 386)							Float c97 = c96->__get((c90->fPos + (int)3));
HXDLIN( 386)							::Array< Float > c98 = c90->buffer->f;
HXDLIN( 386)							_hx_tmp20->drawRoundRect(c91,c93,c95,c97,c98->__get((c90->fPos + (int)4)),c90->buffer->o->__get(c90->oPos));
HXLINE( 387)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp21 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands;
HXDLIN( 387)							Float c99 = c90->buffer->f->__get(c90->fPos);
HXDLIN( 387)							::Array< Float > c100 = c90->buffer->f;
HXDLIN( 387)							Float c101 = c100->__get((c90->fPos + (int)1));
HXDLIN( 387)							::Array< Float > c102 = c90->buffer->f;
HXDLIN( 387)							Float c103 = c102->__get((c90->fPos + (int)2));
HXDLIN( 387)							::Array< Float > c104 = c90->buffer->f;
HXDLIN( 387)							Float c105 = c104->__get((c90->fPos + (int)3));
HXDLIN( 387)							::Array< Float > c106 = c90->buffer->f;
HXDLIN( 387)							_hx_tmp21->drawRoundRect(c99,c101,c103,c105,c106->__get((c90->fPos + (int)4)),c90->buffer->o->__get(c90->oPos));
            						}
            						break;
            						case (int)11: {
HXLINE( 305)							{
HXLINE( 305)								{
HXLINE( 305)									 ::openfl::_internal::renderer::DrawCommandType _g11 = data->prev;
HXDLIN( 305)									switch((int)(_hx_getEnumValueIndex(_g11))){
            										case (int)0: {
HXLINE( 305)											 ::openfl::_internal::renderer::DrawCommandReader data262 = data;
HXDLIN( 305)											data262->oPos = (data262->oPos + (int)2);
HXDLIN( 305)											 ::openfl::_internal::renderer::DrawCommandReader data263 = data;
HXDLIN( 305)											data263->bPos = (data263->bPos + (int)2);
            										}
            										break;
            										case (int)1: {
HXLINE( 305)											 ::openfl::_internal::renderer::DrawCommandReader data264 = data;
HXDLIN( 305)											data264->iPos = (data264->iPos + (int)1);
HXDLIN( 305)											 ::openfl::_internal::renderer::DrawCommandReader data265 = data;
HXDLIN( 305)											data265->fPos = (data265->fPos + (int)1);
            										}
            										break;
            										case (int)2: {
HXLINE( 305)											 ::openfl::_internal::renderer::DrawCommandReader data266 = data;
HXDLIN( 305)											data266->oPos = (data266->oPos + (int)4);
HXDLIN( 305)											 ::openfl::_internal::renderer::DrawCommandReader data267 = data;
HXDLIN( 305)											data267->iiPos = (data267->iiPos + (int)2);
HXDLIN( 305)											 ::openfl::_internal::renderer::DrawCommandReader data268 = data;
HXDLIN( 305)											data268->ffPos = (data268->ffPos + (int)1);
HXDLIN( 305)											 ::openfl::_internal::renderer::DrawCommandReader data269 = data;
HXDLIN( 305)											data269->fPos = (data269->fPos + (int)1);
            										}
            										break;
            										case (int)3: {
HXLINE( 305)											 ::openfl::_internal::renderer::DrawCommandReader data270 = data;
HXDLIN( 305)											data270->fPos = (data270->fPos + (int)6);
            										}
            										break;
            										case (int)4: {
HXLINE( 305)											 ::openfl::_internal::renderer::DrawCommandReader data271 = data;
HXDLIN( 305)											data271->fPos = (data271->fPos + (int)4);
            										}
            										break;
            										case (int)5: {
HXLINE( 305)											 ::openfl::_internal::renderer::DrawCommandReader data272 = data;
HXDLIN( 305)											data272->fPos = (data272->fPos + (int)3);
            										}
            										break;
            										case (int)6: {
HXLINE( 305)											 ::openfl::_internal::renderer::DrawCommandReader data273 = data;
HXDLIN( 305)											data273->fPos = (data273->fPos + (int)4);
            										}
            										break;
            										case (int)7: {
HXLINE( 305)											 ::openfl::_internal::renderer::DrawCommandReader data274 = data;
HXDLIN( 305)											data274->fPos = (data274->fPos + (int)4);
            										}
            										break;
            										case (int)8: {
HXLINE( 305)											 ::openfl::_internal::renderer::DrawCommandReader data275 = data;
HXDLIN( 305)											data275->fPos = (data275->fPos + (int)5);
HXDLIN( 305)											 ::openfl::_internal::renderer::DrawCommandReader data276 = data;
HXDLIN( 305)											data276->oPos = (data276->oPos + (int)1);
            										}
            										break;
            										case (int)10: {
HXLINE( 305)											 ::openfl::_internal::renderer::DrawCommandReader data277 = data;
HXDLIN( 305)											data277->oPos = (data277->oPos + (int)4);
            										}
            										break;
            										case (int)11: {
            										}
            										break;
            										case (int)12: {
HXLINE( 305)											 ::openfl::_internal::renderer::DrawCommandReader data278 = data;
HXDLIN( 305)											data278->oPos = (data278->oPos + (int)2);
HXDLIN( 305)											 ::openfl::_internal::renderer::DrawCommandReader data279 = data;
HXDLIN( 305)											data279->bPos = (data279->bPos + (int)2);
            										}
            										break;
            										case (int)13: {
HXLINE( 305)											 ::openfl::_internal::renderer::DrawCommandReader data280 = data;
HXDLIN( 305)											data280->oPos = (data280->oPos + (int)4);
HXDLIN( 305)											 ::openfl::_internal::renderer::DrawCommandReader data281 = data;
HXDLIN( 305)											data281->iiPos = (data281->iiPos + (int)2);
HXDLIN( 305)											 ::openfl::_internal::renderer::DrawCommandReader data282 = data;
HXDLIN( 305)											data282->ffPos = (data282->ffPos + (int)1);
HXDLIN( 305)											 ::openfl::_internal::renderer::DrawCommandReader data283 = data;
HXDLIN( 305)											data283->fPos = (data283->fPos + (int)1);
            										}
            										break;
            										case (int)14: {
HXLINE( 305)											 ::openfl::_internal::renderer::DrawCommandReader data284 = data;
HXDLIN( 305)											data284->oPos = (data284->oPos + (int)4);
HXDLIN( 305)											 ::openfl::_internal::renderer::DrawCommandReader data285 = data;
HXDLIN( 305)											data285->iPos = (data285->iPos + (int)1);
HXDLIN( 305)											 ::openfl::_internal::renderer::DrawCommandReader data286 = data;
HXDLIN( 305)											data286->fPos = (data286->fPos + (int)2);
HXDLIN( 305)											 ::openfl::_internal::renderer::DrawCommandReader data287 = data;
HXDLIN( 305)											data287->bPos = (data287->bPos + (int)1);
            										}
            										break;
            										case (int)15: {
HXLINE( 305)											 ::openfl::_internal::renderer::DrawCommandReader data288 = data;
HXDLIN( 305)											data288->fPos = (data288->fPos + (int)2);
            										}
            										break;
            										case (int)16: {
HXLINE( 305)											 ::openfl::_internal::renderer::DrawCommandReader data289 = data;
HXDLIN( 305)											data289->fPos = (data289->fPos + (int)2);
            										}
            										break;
            										case (int)17: {
HXLINE( 305)											 ::openfl::_internal::renderer::DrawCommandReader data290 = data;
HXDLIN( 305)											data290->oPos = (data290->oPos + (int)1);
            										}
            										break;
            										default:{
            										}
            									}
            								}
HXLINE( 305)								data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::END_FILL_dyn();
HXDLIN( 305)								 ::openfl::_internal::renderer::DrawCommandReader this10 = data;
            							}
HXLINE( 306)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::endFill();
HXLINE( 307)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::endStroke();
HXLINE( 309)							bool _hx_tmp22;
HXDLIN( 309)							if (::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasFill) {
HXLINE( 309)								_hx_tmp22 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->inFill(x,y);
            							}
            							else {
HXLINE( 309)								_hx_tmp22 = false;
            							}
HXDLIN( 309)							if (_hx_tmp22) {
HXLINE( 311)								data->destroy();
HXLINE( 312)								return true;
            							}
HXLINE( 316)							bool _hx_tmp23;
HXDLIN( 316)							if (::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasStroke) {
HXLINE( 316)								_hx_tmp23 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->inStroke(x,y);
            							}
            							else {
HXLINE( 316)								_hx_tmp23 = false;
            							}
HXDLIN( 316)							if (_hx_tmp23) {
HXLINE( 318)								data->destroy();
HXLINE( 319)								return true;
            							}
HXLINE( 323)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasFill = false;
HXLINE( 324)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::bitmapFill = null();
            						}
            						break;
            						case (int)12: {
HXLINE( 300)							{
HXLINE( 300)								 ::openfl::_internal::renderer::DrawCommandType _g12 = data->prev;
HXDLIN( 300)								switch((int)(_hx_getEnumValueIndex(_g12))){
            									case (int)0: {
HXLINE( 300)										 ::openfl::_internal::renderer::DrawCommandReader data291 = data;
HXDLIN( 300)										data291->oPos = (data291->oPos + (int)2);
HXDLIN( 300)										 ::openfl::_internal::renderer::DrawCommandReader data292 = data;
HXDLIN( 300)										data292->bPos = (data292->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE( 300)										 ::openfl::_internal::renderer::DrawCommandReader data293 = data;
HXDLIN( 300)										data293->iPos = (data293->iPos + (int)1);
HXDLIN( 300)										 ::openfl::_internal::renderer::DrawCommandReader data294 = data;
HXDLIN( 300)										data294->fPos = (data294->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE( 300)										 ::openfl::_internal::renderer::DrawCommandReader data295 = data;
HXDLIN( 300)										data295->oPos = (data295->oPos + (int)4);
HXDLIN( 300)										 ::openfl::_internal::renderer::DrawCommandReader data296 = data;
HXDLIN( 300)										data296->iiPos = (data296->iiPos + (int)2);
HXDLIN( 300)										 ::openfl::_internal::renderer::DrawCommandReader data297 = data;
HXDLIN( 300)										data297->ffPos = (data297->ffPos + (int)1);
HXDLIN( 300)										 ::openfl::_internal::renderer::DrawCommandReader data298 = data;
HXDLIN( 300)										data298->fPos = (data298->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE( 300)										 ::openfl::_internal::renderer::DrawCommandReader data299 = data;
HXDLIN( 300)										data299->fPos = (data299->fPos + (int)6);
            									}
            									break;
            									case (int)4: {
HXLINE( 300)										 ::openfl::_internal::renderer::DrawCommandReader data300 = data;
HXDLIN( 300)										data300->fPos = (data300->fPos + (int)4);
            									}
            									break;
            									case (int)5: {
HXLINE( 300)										 ::openfl::_internal::renderer::DrawCommandReader data301 = data;
HXDLIN( 300)										data301->fPos = (data301->fPos + (int)3);
            									}
            									break;
            									case (int)6: {
HXLINE( 300)										 ::openfl::_internal::renderer::DrawCommandReader data302 = data;
HXDLIN( 300)										data302->fPos = (data302->fPos + (int)4);
            									}
            									break;
            									case (int)7: {
HXLINE( 300)										 ::openfl::_internal::renderer::DrawCommandReader data303 = data;
HXDLIN( 300)										data303->fPos = (data303->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE( 300)										 ::openfl::_internal::renderer::DrawCommandReader data304 = data;
HXDLIN( 300)										data304->fPos = (data304->fPos + (int)5);
HXDLIN( 300)										 ::openfl::_internal::renderer::DrawCommandReader data305 = data;
HXDLIN( 300)										data305->oPos = (data305->oPos + (int)1);
            									}
            									break;
            									case (int)10: {
HXLINE( 300)										 ::openfl::_internal::renderer::DrawCommandReader data306 = data;
HXDLIN( 300)										data306->oPos = (data306->oPos + (int)4);
            									}
            									break;
            									case (int)11: {
            									}
            									break;
            									case (int)12: {
HXLINE( 300)										 ::openfl::_internal::renderer::DrawCommandReader data307 = data;
HXDLIN( 300)										data307->oPos = (data307->oPos + (int)2);
HXDLIN( 300)										 ::openfl::_internal::renderer::DrawCommandReader data308 = data;
HXDLIN( 300)										data308->bPos = (data308->bPos + (int)2);
            									}
            									break;
            									case (int)13: {
HXLINE( 300)										 ::openfl::_internal::renderer::DrawCommandReader data309 = data;
HXDLIN( 300)										data309->oPos = (data309->oPos + (int)4);
HXDLIN( 300)										 ::openfl::_internal::renderer::DrawCommandReader data310 = data;
HXDLIN( 300)										data310->iiPos = (data310->iiPos + (int)2);
HXDLIN( 300)										 ::openfl::_internal::renderer::DrawCommandReader data311 = data;
HXDLIN( 300)										data311->ffPos = (data311->ffPos + (int)1);
HXDLIN( 300)										 ::openfl::_internal::renderer::DrawCommandReader data312 = data;
HXDLIN( 300)										data312->fPos = (data312->fPos + (int)1);
            									}
            									break;
            									case (int)14: {
HXLINE( 300)										 ::openfl::_internal::renderer::DrawCommandReader data313 = data;
HXDLIN( 300)										data313->oPos = (data313->oPos + (int)4);
HXDLIN( 300)										 ::openfl::_internal::renderer::DrawCommandReader data314 = data;
HXDLIN( 300)										data314->iPos = (data314->iPos + (int)1);
HXDLIN( 300)										 ::openfl::_internal::renderer::DrawCommandReader data315 = data;
HXDLIN( 300)										data315->fPos = (data315->fPos + (int)2);
HXDLIN( 300)										 ::openfl::_internal::renderer::DrawCommandReader data316 = data;
HXDLIN( 300)										data316->bPos = (data316->bPos + (int)1);
            									}
            									break;
            									case (int)15: {
HXLINE( 300)										 ::openfl::_internal::renderer::DrawCommandReader data317 = data;
HXDLIN( 300)										data317->fPos = (data317->fPos + (int)2);
            									}
            									break;
            									case (int)16: {
HXLINE( 300)										 ::openfl::_internal::renderer::DrawCommandReader data318 = data;
HXDLIN( 300)										data318->fPos = (data318->fPos + (int)2);
            									}
            									break;
            									case (int)17: {
HXLINE( 300)										 ::openfl::_internal::renderer::DrawCommandReader data319 = data;
HXDLIN( 300)										data319->oPos = (data319->oPos + (int)1);
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE( 300)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::LINE_BITMAP_STYLE_dyn();
HXDLIN( 300)							 ::openfl::_internal::renderer::DrawCommandReader this11 = data;
HXDLIN( 300)							 ::openfl::_internal::renderer::DrawCommandReader c107 = this11;
HXLINE( 301)							::cpp::VirtualArray c108 = c107->buffer->o;
HXDLIN( 301)							::Array< bool > c109 = c107->buffer->b;
HXDLIN( 301)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands->lineBitmapStyle(( ( ::openfl::display::BitmapData)(c107->buffer->o->__get(c107->oPos)) ),( ( ::openfl::geom::Matrix)(c108->__get((c107->oPos + (int)1))) ),c107->buffer->b->__get(c107->bPos),c109->__get((c107->bPos + (int)1)));
            						}
            						break;
            						case (int)13: {
HXLINE( 295)							{
HXLINE( 295)								 ::openfl::_internal::renderer::DrawCommandType _g13 = data->prev;
HXDLIN( 295)								switch((int)(_hx_getEnumValueIndex(_g13))){
            									case (int)0: {
HXLINE( 295)										 ::openfl::_internal::renderer::DrawCommandReader data320 = data;
HXDLIN( 295)										data320->oPos = (data320->oPos + (int)2);
HXDLIN( 295)										 ::openfl::_internal::renderer::DrawCommandReader data321 = data;
HXDLIN( 295)										data321->bPos = (data321->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE( 295)										 ::openfl::_internal::renderer::DrawCommandReader data322 = data;
HXDLIN( 295)										data322->iPos = (data322->iPos + (int)1);
HXDLIN( 295)										 ::openfl::_internal::renderer::DrawCommandReader data323 = data;
HXDLIN( 295)										data323->fPos = (data323->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE( 295)										 ::openfl::_internal::renderer::DrawCommandReader data324 = data;
HXDLIN( 295)										data324->oPos = (data324->oPos + (int)4);
HXDLIN( 295)										 ::openfl::_internal::renderer::DrawCommandReader data325 = data;
HXDLIN( 295)										data325->iiPos = (data325->iiPos + (int)2);
HXDLIN( 295)										 ::openfl::_internal::renderer::DrawCommandReader data326 = data;
HXDLIN( 295)										data326->ffPos = (data326->ffPos + (int)1);
HXDLIN( 295)										 ::openfl::_internal::renderer::DrawCommandReader data327 = data;
HXDLIN( 295)										data327->fPos = (data327->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE( 295)										 ::openfl::_internal::renderer::DrawCommandReader data328 = data;
HXDLIN( 295)										data328->fPos = (data328->fPos + (int)6);
            									}
            									break;
            									case (int)4: {
HXLINE( 295)										 ::openfl::_internal::renderer::DrawCommandReader data329 = data;
HXDLIN( 295)										data329->fPos = (data329->fPos + (int)4);
            									}
            									break;
            									case (int)5: {
HXLINE( 295)										 ::openfl::_internal::renderer::DrawCommandReader data330 = data;
HXDLIN( 295)										data330->fPos = (data330->fPos + (int)3);
            									}
            									break;
            									case (int)6: {
HXLINE( 295)										 ::openfl::_internal::renderer::DrawCommandReader data331 = data;
HXDLIN( 295)										data331->fPos = (data331->fPos + (int)4);
            									}
            									break;
            									case (int)7: {
HXLINE( 295)										 ::openfl::_internal::renderer::DrawCommandReader data332 = data;
HXDLIN( 295)										data332->fPos = (data332->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE( 295)										 ::openfl::_internal::renderer::DrawCommandReader data333 = data;
HXDLIN( 295)										data333->fPos = (data333->fPos + (int)5);
HXDLIN( 295)										 ::openfl::_internal::renderer::DrawCommandReader data334 = data;
HXDLIN( 295)										data334->oPos = (data334->oPos + (int)1);
            									}
            									break;
            									case (int)10: {
HXLINE( 295)										 ::openfl::_internal::renderer::DrawCommandReader data335 = data;
HXDLIN( 295)										data335->oPos = (data335->oPos + (int)4);
            									}
            									break;
            									case (int)11: {
            									}
            									break;
            									case (int)12: {
HXLINE( 295)										 ::openfl::_internal::renderer::DrawCommandReader data336 = data;
HXDLIN( 295)										data336->oPos = (data336->oPos + (int)2);
HXDLIN( 295)										 ::openfl::_internal::renderer::DrawCommandReader data337 = data;
HXDLIN( 295)										data337->bPos = (data337->bPos + (int)2);
            									}
            									break;
            									case (int)13: {
HXLINE( 295)										 ::openfl::_internal::renderer::DrawCommandReader data338 = data;
HXDLIN( 295)										data338->oPos = (data338->oPos + (int)4);
HXDLIN( 295)										 ::openfl::_internal::renderer::DrawCommandReader data339 = data;
HXDLIN( 295)										data339->iiPos = (data339->iiPos + (int)2);
HXDLIN( 295)										 ::openfl::_internal::renderer::DrawCommandReader data340 = data;
HXDLIN( 295)										data340->ffPos = (data340->ffPos + (int)1);
HXDLIN( 295)										 ::openfl::_internal::renderer::DrawCommandReader data341 = data;
HXDLIN( 295)										data341->fPos = (data341->fPos + (int)1);
            									}
            									break;
            									case (int)14: {
HXLINE( 295)										 ::openfl::_internal::renderer::DrawCommandReader data342 = data;
HXDLIN( 295)										data342->oPos = (data342->oPos + (int)4);
HXDLIN( 295)										 ::openfl::_internal::renderer::DrawCommandReader data343 = data;
HXDLIN( 295)										data343->iPos = (data343->iPos + (int)1);
HXDLIN( 295)										 ::openfl::_internal::renderer::DrawCommandReader data344 = data;
HXDLIN( 295)										data344->fPos = (data344->fPos + (int)2);
HXDLIN( 295)										 ::openfl::_internal::renderer::DrawCommandReader data345 = data;
HXDLIN( 295)										data345->bPos = (data345->bPos + (int)1);
            									}
            									break;
            									case (int)15: {
HXLINE( 295)										 ::openfl::_internal::renderer::DrawCommandReader data346 = data;
HXDLIN( 295)										data346->fPos = (data346->fPos + (int)2);
            									}
            									break;
            									case (int)16: {
HXLINE( 295)										 ::openfl::_internal::renderer::DrawCommandReader data347 = data;
HXDLIN( 295)										data347->fPos = (data347->fPos + (int)2);
            									}
            									break;
            									case (int)17: {
HXLINE( 295)										 ::openfl::_internal::renderer::DrawCommandReader data348 = data;
HXDLIN( 295)										data348->oPos = (data348->oPos + (int)1);
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE( 295)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::LINE_GRADIENT_STYLE_dyn();
HXDLIN( 295)							 ::openfl::_internal::renderer::DrawCommandReader this12 = data;
HXDLIN( 295)							 ::openfl::_internal::renderer::DrawCommandReader c110 = this12;
HXLINE( 296)							::Array< ::Dynamic> c111 = c110->buffer->ii;
HXDLIN( 296)							::cpp::VirtualArray c112 = c110->buffer->o;
HXDLIN( 296)							::cpp::VirtualArray c113 = c110->buffer->o;
HXDLIN( 296)							::cpp::VirtualArray c114 = c110->buffer->o;
HXDLIN( 296)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands->lineGradientStyle(c110->buffer->o->__get(c110->oPos),c110->buffer->ii->__get(c110->iiPos).StaticCast< ::Array< int > >(),c110->buffer->ff->__get(c110->ffPos).StaticCast< ::Array< Float > >(),c111->__get((c110->iiPos + (int)1)).StaticCast< ::Array< int > >(),( ( ::openfl::geom::Matrix)(c112->__get((c110->oPos + (int)1))) ),c113->__get((c110->oPos + (int)2)),c114->__get((c110->oPos + (int)3)),c110->buffer->f->__get(c110->fPos));
            						}
            						break;
            						case (int)14: {
HXLINE( 290)							{
HXLINE( 290)								 ::openfl::_internal::renderer::DrawCommandType _g14 = data->prev;
HXDLIN( 290)								switch((int)(_hx_getEnumValueIndex(_g14))){
            									case (int)0: {
HXLINE( 290)										 ::openfl::_internal::renderer::DrawCommandReader data349 = data;
HXDLIN( 290)										data349->oPos = (data349->oPos + (int)2);
HXDLIN( 290)										 ::openfl::_internal::renderer::DrawCommandReader data350 = data;
HXDLIN( 290)										data350->bPos = (data350->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE( 290)										 ::openfl::_internal::renderer::DrawCommandReader data351 = data;
HXDLIN( 290)										data351->iPos = (data351->iPos + (int)1);
HXDLIN( 290)										 ::openfl::_internal::renderer::DrawCommandReader data352 = data;
HXDLIN( 290)										data352->fPos = (data352->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE( 290)										 ::openfl::_internal::renderer::DrawCommandReader data353 = data;
HXDLIN( 290)										data353->oPos = (data353->oPos + (int)4);
HXDLIN( 290)										 ::openfl::_internal::renderer::DrawCommandReader data354 = data;
HXDLIN( 290)										data354->iiPos = (data354->iiPos + (int)2);
HXDLIN( 290)										 ::openfl::_internal::renderer::DrawCommandReader data355 = data;
HXDLIN( 290)										data355->ffPos = (data355->ffPos + (int)1);
HXDLIN( 290)										 ::openfl::_internal::renderer::DrawCommandReader data356 = data;
HXDLIN( 290)										data356->fPos = (data356->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE( 290)										 ::openfl::_internal::renderer::DrawCommandReader data357 = data;
HXDLIN( 290)										data357->fPos = (data357->fPos + (int)6);
            									}
            									break;
            									case (int)4: {
HXLINE( 290)										 ::openfl::_internal::renderer::DrawCommandReader data358 = data;
HXDLIN( 290)										data358->fPos = (data358->fPos + (int)4);
            									}
            									break;
            									case (int)5: {
HXLINE( 290)										 ::openfl::_internal::renderer::DrawCommandReader data359 = data;
HXDLIN( 290)										data359->fPos = (data359->fPos + (int)3);
            									}
            									break;
            									case (int)6: {
HXLINE( 290)										 ::openfl::_internal::renderer::DrawCommandReader data360 = data;
HXDLIN( 290)										data360->fPos = (data360->fPos + (int)4);
            									}
            									break;
            									case (int)7: {
HXLINE( 290)										 ::openfl::_internal::renderer::DrawCommandReader data361 = data;
HXDLIN( 290)										data361->fPos = (data361->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE( 290)										 ::openfl::_internal::renderer::DrawCommandReader data362 = data;
HXDLIN( 290)										data362->fPos = (data362->fPos + (int)5);
HXDLIN( 290)										 ::openfl::_internal::renderer::DrawCommandReader data363 = data;
HXDLIN( 290)										data363->oPos = (data363->oPos + (int)1);
            									}
            									break;
            									case (int)10: {
HXLINE( 290)										 ::openfl::_internal::renderer::DrawCommandReader data364 = data;
HXDLIN( 290)										data364->oPos = (data364->oPos + (int)4);
            									}
            									break;
            									case (int)11: {
            									}
            									break;
            									case (int)12: {
HXLINE( 290)										 ::openfl::_internal::renderer::DrawCommandReader data365 = data;
HXDLIN( 290)										data365->oPos = (data365->oPos + (int)2);
HXDLIN( 290)										 ::openfl::_internal::renderer::DrawCommandReader data366 = data;
HXDLIN( 290)										data366->bPos = (data366->bPos + (int)2);
            									}
            									break;
            									case (int)13: {
HXLINE( 290)										 ::openfl::_internal::renderer::DrawCommandReader data367 = data;
HXDLIN( 290)										data367->oPos = (data367->oPos + (int)4);
HXDLIN( 290)										 ::openfl::_internal::renderer::DrawCommandReader data368 = data;
HXDLIN( 290)										data368->iiPos = (data368->iiPos + (int)2);
HXDLIN( 290)										 ::openfl::_internal::renderer::DrawCommandReader data369 = data;
HXDLIN( 290)										data369->ffPos = (data369->ffPos + (int)1);
HXDLIN( 290)										 ::openfl::_internal::renderer::DrawCommandReader data370 = data;
HXDLIN( 290)										data370->fPos = (data370->fPos + (int)1);
            									}
            									break;
            									case (int)14: {
HXLINE( 290)										 ::openfl::_internal::renderer::DrawCommandReader data371 = data;
HXDLIN( 290)										data371->oPos = (data371->oPos + (int)4);
HXDLIN( 290)										 ::openfl::_internal::renderer::DrawCommandReader data372 = data;
HXDLIN( 290)										data372->iPos = (data372->iPos + (int)1);
HXDLIN( 290)										 ::openfl::_internal::renderer::DrawCommandReader data373 = data;
HXDLIN( 290)										data373->fPos = (data373->fPos + (int)2);
HXDLIN( 290)										 ::openfl::_internal::renderer::DrawCommandReader data374 = data;
HXDLIN( 290)										data374->bPos = (data374->bPos + (int)1);
            									}
            									break;
            									case (int)15: {
HXLINE( 290)										 ::openfl::_internal::renderer::DrawCommandReader data375 = data;
HXDLIN( 290)										data375->fPos = (data375->fPos + (int)2);
            									}
            									break;
            									case (int)16: {
HXLINE( 290)										 ::openfl::_internal::renderer::DrawCommandReader data376 = data;
HXDLIN( 290)										data376->fPos = (data376->fPos + (int)2);
            									}
            									break;
            									case (int)17: {
HXLINE( 290)										 ::openfl::_internal::renderer::DrawCommandReader data377 = data;
HXDLIN( 290)										data377->oPos = (data377->oPos + (int)1);
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE( 290)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::LINE_STYLE_dyn();
HXDLIN( 290)							 ::openfl::_internal::renderer::DrawCommandReader this13 = data;
HXDLIN( 290)							 ::openfl::_internal::renderer::DrawCommandReader c115 = this13;
HXLINE( 291)							::cpp::VirtualArray c116 = c115->buffer->o;
HXDLIN( 291)							::cpp::VirtualArray c117 = c115->buffer->o;
HXDLIN( 291)							::cpp::VirtualArray c118 = c115->buffer->o;
HXDLIN( 291)							::Array< Float > c119 = c115->buffer->f;
HXDLIN( 291)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands->lineStyle(c115->buffer->o->__get(c115->oPos),c115->buffer->i->__get(c115->iPos),(int)1,c115->buffer->b->__get(c115->bPos),c116->__get((c115->oPos + (int)1)),c117->__get((c115->oPos + (int)2)),c118->__get((c115->oPos + (int)3)),c119->__get((c115->fPos + (int)1)));
            						}
            						break;
            						case (int)15: {
HXLINE( 278)							{
HXLINE( 278)								 ::openfl::_internal::renderer::DrawCommandType _g15 = data->prev;
HXDLIN( 278)								switch((int)(_hx_getEnumValueIndex(_g15))){
            									case (int)0: {
HXLINE( 278)										 ::openfl::_internal::renderer::DrawCommandReader data378 = data;
HXDLIN( 278)										data378->oPos = (data378->oPos + (int)2);
HXDLIN( 278)										 ::openfl::_internal::renderer::DrawCommandReader data379 = data;
HXDLIN( 278)										data379->bPos = (data379->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE( 278)										 ::openfl::_internal::renderer::DrawCommandReader data380 = data;
HXDLIN( 278)										data380->iPos = (data380->iPos + (int)1);
HXDLIN( 278)										 ::openfl::_internal::renderer::DrawCommandReader data381 = data;
HXDLIN( 278)										data381->fPos = (data381->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE( 278)										 ::openfl::_internal::renderer::DrawCommandReader data382 = data;
HXDLIN( 278)										data382->oPos = (data382->oPos + (int)4);
HXDLIN( 278)										 ::openfl::_internal::renderer::DrawCommandReader data383 = data;
HXDLIN( 278)										data383->iiPos = (data383->iiPos + (int)2);
HXDLIN( 278)										 ::openfl::_internal::renderer::DrawCommandReader data384 = data;
HXDLIN( 278)										data384->ffPos = (data384->ffPos + (int)1);
HXDLIN( 278)										 ::openfl::_internal::renderer::DrawCommandReader data385 = data;
HXDLIN( 278)										data385->fPos = (data385->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE( 278)										 ::openfl::_internal::renderer::DrawCommandReader data386 = data;
HXDLIN( 278)										data386->fPos = (data386->fPos + (int)6);
            									}
            									break;
            									case (int)4: {
HXLINE( 278)										 ::openfl::_internal::renderer::DrawCommandReader data387 = data;
HXDLIN( 278)										data387->fPos = (data387->fPos + (int)4);
            									}
            									break;
            									case (int)5: {
HXLINE( 278)										 ::openfl::_internal::renderer::DrawCommandReader data388 = data;
HXDLIN( 278)										data388->fPos = (data388->fPos + (int)3);
            									}
            									break;
            									case (int)6: {
HXLINE( 278)										 ::openfl::_internal::renderer::DrawCommandReader data389 = data;
HXDLIN( 278)										data389->fPos = (data389->fPos + (int)4);
            									}
            									break;
            									case (int)7: {
HXLINE( 278)										 ::openfl::_internal::renderer::DrawCommandReader data390 = data;
HXDLIN( 278)										data390->fPos = (data390->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE( 278)										 ::openfl::_internal::renderer::DrawCommandReader data391 = data;
HXDLIN( 278)										data391->fPos = (data391->fPos + (int)5);
HXDLIN( 278)										 ::openfl::_internal::renderer::DrawCommandReader data392 = data;
HXDLIN( 278)										data392->oPos = (data392->oPos + (int)1);
            									}
            									break;
            									case (int)10: {
HXLINE( 278)										 ::openfl::_internal::renderer::DrawCommandReader data393 = data;
HXDLIN( 278)										data393->oPos = (data393->oPos + (int)4);
            									}
            									break;
            									case (int)11: {
            									}
            									break;
            									case (int)12: {
HXLINE( 278)										 ::openfl::_internal::renderer::DrawCommandReader data394 = data;
HXDLIN( 278)										data394->oPos = (data394->oPos + (int)2);
HXDLIN( 278)										 ::openfl::_internal::renderer::DrawCommandReader data395 = data;
HXDLIN( 278)										data395->bPos = (data395->bPos + (int)2);
            									}
            									break;
            									case (int)13: {
HXLINE( 278)										 ::openfl::_internal::renderer::DrawCommandReader data396 = data;
HXDLIN( 278)										data396->oPos = (data396->oPos + (int)4);
HXDLIN( 278)										 ::openfl::_internal::renderer::DrawCommandReader data397 = data;
HXDLIN( 278)										data397->iiPos = (data397->iiPos + (int)2);
HXDLIN( 278)										 ::openfl::_internal::renderer::DrawCommandReader data398 = data;
HXDLIN( 278)										data398->ffPos = (data398->ffPos + (int)1);
HXDLIN( 278)										 ::openfl::_internal::renderer::DrawCommandReader data399 = data;
HXDLIN( 278)										data399->fPos = (data399->fPos + (int)1);
            									}
            									break;
            									case (int)14: {
HXLINE( 278)										 ::openfl::_internal::renderer::DrawCommandReader data400 = data;
HXDLIN( 278)										data400->oPos = (data400->oPos + (int)4);
HXDLIN( 278)										 ::openfl::_internal::renderer::DrawCommandReader data401 = data;
HXDLIN( 278)										data401->iPos = (data401->iPos + (int)1);
HXDLIN( 278)										 ::openfl::_internal::renderer::DrawCommandReader data402 = data;
HXDLIN( 278)										data402->fPos = (data402->fPos + (int)2);
HXDLIN( 278)										 ::openfl::_internal::renderer::DrawCommandReader data403 = data;
HXDLIN( 278)										data403->bPos = (data403->bPos + (int)1);
            									}
            									break;
            									case (int)15: {
HXLINE( 278)										 ::openfl::_internal::renderer::DrawCommandReader data404 = data;
HXDLIN( 278)										data404->fPos = (data404->fPos + (int)2);
            									}
            									break;
            									case (int)16: {
HXLINE( 278)										 ::openfl::_internal::renderer::DrawCommandReader data405 = data;
HXDLIN( 278)										data405->fPos = (data405->fPos + (int)2);
            									}
            									break;
            									case (int)17: {
HXLINE( 278)										 ::openfl::_internal::renderer::DrawCommandReader data406 = data;
HXDLIN( 278)										data406->oPos = (data406->oPos + (int)1);
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE( 278)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::LINE_TO_dyn();
HXDLIN( 278)							 ::openfl::_internal::renderer::DrawCommandReader this14 = data;
HXDLIN( 278)							 ::openfl::_internal::renderer::DrawCommandReader c120 = this14;
HXLINE( 279)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp24 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands;
HXDLIN( 279)							Float c121 = c120->buffer->f->__get(c120->fPos);
HXDLIN( 279)							::Array< Float > c122 = c120->buffer->f;
HXDLIN( 279)							_hx_tmp24->lineTo(c121,c122->__get((c120->fPos + (int)1)));
HXLINE( 280)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp25 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands;
HXDLIN( 280)							Float c123 = c120->buffer->f->__get(c120->fPos);
HXDLIN( 280)							::Array< Float > c124 = c120->buffer->f;
HXDLIN( 280)							_hx_tmp25->lineTo(c123,c124->__get((c120->fPos + (int)1)));
            						}
            						break;
            						case (int)16: {
HXLINE( 284)							{
HXLINE( 284)								 ::openfl::_internal::renderer::DrawCommandType _g16 = data->prev;
HXDLIN( 284)								switch((int)(_hx_getEnumValueIndex(_g16))){
            									case (int)0: {
HXLINE( 284)										 ::openfl::_internal::renderer::DrawCommandReader data407 = data;
HXDLIN( 284)										data407->oPos = (data407->oPos + (int)2);
HXDLIN( 284)										 ::openfl::_internal::renderer::DrawCommandReader data408 = data;
HXDLIN( 284)										data408->bPos = (data408->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE( 284)										 ::openfl::_internal::renderer::DrawCommandReader data409 = data;
HXDLIN( 284)										data409->iPos = (data409->iPos + (int)1);
HXDLIN( 284)										 ::openfl::_internal::renderer::DrawCommandReader data410 = data;
HXDLIN( 284)										data410->fPos = (data410->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE( 284)										 ::openfl::_internal::renderer::DrawCommandReader data411 = data;
HXDLIN( 284)										data411->oPos = (data411->oPos + (int)4);
HXDLIN( 284)										 ::openfl::_internal::renderer::DrawCommandReader data412 = data;
HXDLIN( 284)										data412->iiPos = (data412->iiPos + (int)2);
HXDLIN( 284)										 ::openfl::_internal::renderer::DrawCommandReader data413 = data;
HXDLIN( 284)										data413->ffPos = (data413->ffPos + (int)1);
HXDLIN( 284)										 ::openfl::_internal::renderer::DrawCommandReader data414 = data;
HXDLIN( 284)										data414->fPos = (data414->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE( 284)										 ::openfl::_internal::renderer::DrawCommandReader data415 = data;
HXDLIN( 284)										data415->fPos = (data415->fPos + (int)6);
            									}
            									break;
            									case (int)4: {
HXLINE( 284)										 ::openfl::_internal::renderer::DrawCommandReader data416 = data;
HXDLIN( 284)										data416->fPos = (data416->fPos + (int)4);
            									}
            									break;
            									case (int)5: {
HXLINE( 284)										 ::openfl::_internal::renderer::DrawCommandReader data417 = data;
HXDLIN( 284)										data417->fPos = (data417->fPos + (int)3);
            									}
            									break;
            									case (int)6: {
HXLINE( 284)										 ::openfl::_internal::renderer::DrawCommandReader data418 = data;
HXDLIN( 284)										data418->fPos = (data418->fPos + (int)4);
            									}
            									break;
            									case (int)7: {
HXLINE( 284)										 ::openfl::_internal::renderer::DrawCommandReader data419 = data;
HXDLIN( 284)										data419->fPos = (data419->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE( 284)										 ::openfl::_internal::renderer::DrawCommandReader data420 = data;
HXDLIN( 284)										data420->fPos = (data420->fPos + (int)5);
HXDLIN( 284)										 ::openfl::_internal::renderer::DrawCommandReader data421 = data;
HXDLIN( 284)										data421->oPos = (data421->oPos + (int)1);
            									}
            									break;
            									case (int)10: {
HXLINE( 284)										 ::openfl::_internal::renderer::DrawCommandReader data422 = data;
HXDLIN( 284)										data422->oPos = (data422->oPos + (int)4);
            									}
            									break;
            									case (int)11: {
            									}
            									break;
            									case (int)12: {
HXLINE( 284)										 ::openfl::_internal::renderer::DrawCommandReader data423 = data;
HXDLIN( 284)										data423->oPos = (data423->oPos + (int)2);
HXDLIN( 284)										 ::openfl::_internal::renderer::DrawCommandReader data424 = data;
HXDLIN( 284)										data424->bPos = (data424->bPos + (int)2);
            									}
            									break;
            									case (int)13: {
HXLINE( 284)										 ::openfl::_internal::renderer::DrawCommandReader data425 = data;
HXDLIN( 284)										data425->oPos = (data425->oPos + (int)4);
HXDLIN( 284)										 ::openfl::_internal::renderer::DrawCommandReader data426 = data;
HXDLIN( 284)										data426->iiPos = (data426->iiPos + (int)2);
HXDLIN( 284)										 ::openfl::_internal::renderer::DrawCommandReader data427 = data;
HXDLIN( 284)										data427->ffPos = (data427->ffPos + (int)1);
HXDLIN( 284)										 ::openfl::_internal::renderer::DrawCommandReader data428 = data;
HXDLIN( 284)										data428->fPos = (data428->fPos + (int)1);
            									}
            									break;
            									case (int)14: {
HXLINE( 284)										 ::openfl::_internal::renderer::DrawCommandReader data429 = data;
HXDLIN( 284)										data429->oPos = (data429->oPos + (int)4);
HXDLIN( 284)										 ::openfl::_internal::renderer::DrawCommandReader data430 = data;
HXDLIN( 284)										data430->iPos = (data430->iPos + (int)1);
HXDLIN( 284)										 ::openfl::_internal::renderer::DrawCommandReader data431 = data;
HXDLIN( 284)										data431->fPos = (data431->fPos + (int)2);
HXDLIN( 284)										 ::openfl::_internal::renderer::DrawCommandReader data432 = data;
HXDLIN( 284)										data432->bPos = (data432->bPos + (int)1);
            									}
            									break;
            									case (int)15: {
HXLINE( 284)										 ::openfl::_internal::renderer::DrawCommandReader data433 = data;
HXDLIN( 284)										data433->fPos = (data433->fPos + (int)2);
            									}
            									break;
            									case (int)16: {
HXLINE( 284)										 ::openfl::_internal::renderer::DrawCommandReader data434 = data;
HXDLIN( 284)										data434->fPos = (data434->fPos + (int)2);
            									}
            									break;
            									case (int)17: {
HXLINE( 284)										 ::openfl::_internal::renderer::DrawCommandReader data435 = data;
HXDLIN( 284)										data435->oPos = (data435->oPos + (int)1);
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE( 284)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::MOVE_TO_dyn();
HXDLIN( 284)							 ::openfl::_internal::renderer::DrawCommandReader this15 = data;
HXDLIN( 284)							 ::openfl::_internal::renderer::DrawCommandReader c125 = this15;
HXLINE( 285)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp26 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands;
HXDLIN( 285)							Float c126 = c125->buffer->f->__get(c125->fPos);
HXDLIN( 285)							::Array< Float > c127 = c125->buffer->f;
HXDLIN( 285)							_hx_tmp26->moveTo(c126,c127->__get((c125->fPos + (int)1)));
HXLINE( 286)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp27 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands;
HXDLIN( 286)							Float c128 = c125->buffer->f->__get(c125->fPos);
HXDLIN( 286)							::Array< Float > c129 = c125->buffer->f;
HXDLIN( 286)							_hx_tmp27->moveTo(c128,c129->__get((c125->fPos + (int)1)));
            						}
            						break;
            						default:{
HXLINE( 391)							{
HXLINE( 391)								 ::openfl::_internal::renderer::DrawCommandType _g17 = data->prev;
HXDLIN( 391)								switch((int)(_hx_getEnumValueIndex(_g17))){
            									case (int)0: {
HXLINE( 391)										 ::openfl::_internal::renderer::DrawCommandReader data436 = data;
HXDLIN( 391)										data436->oPos = (data436->oPos + (int)2);
HXDLIN( 391)										 ::openfl::_internal::renderer::DrawCommandReader data437 = data;
HXDLIN( 391)										data437->bPos = (data437->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE( 391)										 ::openfl::_internal::renderer::DrawCommandReader data438 = data;
HXDLIN( 391)										data438->iPos = (data438->iPos + (int)1);
HXDLIN( 391)										 ::openfl::_internal::renderer::DrawCommandReader data439 = data;
HXDLIN( 391)										data439->fPos = (data439->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE( 391)										 ::openfl::_internal::renderer::DrawCommandReader data440 = data;
HXDLIN( 391)										data440->oPos = (data440->oPos + (int)4);
HXDLIN( 391)										 ::openfl::_internal::renderer::DrawCommandReader data441 = data;
HXDLIN( 391)										data441->iiPos = (data441->iiPos + (int)2);
HXDLIN( 391)										 ::openfl::_internal::renderer::DrawCommandReader data442 = data;
HXDLIN( 391)										data442->ffPos = (data442->ffPos + (int)1);
HXDLIN( 391)										 ::openfl::_internal::renderer::DrawCommandReader data443 = data;
HXDLIN( 391)										data443->fPos = (data443->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE( 391)										 ::openfl::_internal::renderer::DrawCommandReader data444 = data;
HXDLIN( 391)										data444->fPos = (data444->fPos + (int)6);
            									}
            									break;
            									case (int)4: {
HXLINE( 391)										 ::openfl::_internal::renderer::DrawCommandReader data445 = data;
HXDLIN( 391)										data445->fPos = (data445->fPos + (int)4);
            									}
            									break;
            									case (int)5: {
HXLINE( 391)										 ::openfl::_internal::renderer::DrawCommandReader data446 = data;
HXDLIN( 391)										data446->fPos = (data446->fPos + (int)3);
            									}
            									break;
            									case (int)6: {
HXLINE( 391)										 ::openfl::_internal::renderer::DrawCommandReader data447 = data;
HXDLIN( 391)										data447->fPos = (data447->fPos + (int)4);
            									}
            									break;
            									case (int)7: {
HXLINE( 391)										 ::openfl::_internal::renderer::DrawCommandReader data448 = data;
HXDLIN( 391)										data448->fPos = (data448->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE( 391)										 ::openfl::_internal::renderer::DrawCommandReader data449 = data;
HXDLIN( 391)										data449->fPos = (data449->fPos + (int)5);
HXDLIN( 391)										 ::openfl::_internal::renderer::DrawCommandReader data450 = data;
HXDLIN( 391)										data450->oPos = (data450->oPos + (int)1);
            									}
            									break;
            									case (int)10: {
HXLINE( 391)										 ::openfl::_internal::renderer::DrawCommandReader data451 = data;
HXDLIN( 391)										data451->oPos = (data451->oPos + (int)4);
            									}
            									break;
            									case (int)11: {
            									}
            									break;
            									case (int)12: {
HXLINE( 391)										 ::openfl::_internal::renderer::DrawCommandReader data452 = data;
HXDLIN( 391)										data452->oPos = (data452->oPos + (int)2);
HXDLIN( 391)										 ::openfl::_internal::renderer::DrawCommandReader data453 = data;
HXDLIN( 391)										data453->bPos = (data453->bPos + (int)2);
            									}
            									break;
            									case (int)13: {
HXLINE( 391)										 ::openfl::_internal::renderer::DrawCommandReader data454 = data;
HXDLIN( 391)										data454->oPos = (data454->oPos + (int)4);
HXDLIN( 391)										 ::openfl::_internal::renderer::DrawCommandReader data455 = data;
HXDLIN( 391)										data455->iiPos = (data455->iiPos + (int)2);
HXDLIN( 391)										 ::openfl::_internal::renderer::DrawCommandReader data456 = data;
HXDLIN( 391)										data456->ffPos = (data456->ffPos + (int)1);
HXDLIN( 391)										 ::openfl::_internal::renderer::DrawCommandReader data457 = data;
HXDLIN( 391)										data457->fPos = (data457->fPos + (int)1);
            									}
            									break;
            									case (int)14: {
HXLINE( 391)										 ::openfl::_internal::renderer::DrawCommandReader data458 = data;
HXDLIN( 391)										data458->oPos = (data458->oPos + (int)4);
HXDLIN( 391)										 ::openfl::_internal::renderer::DrawCommandReader data459 = data;
HXDLIN( 391)										data459->iPos = (data459->iPos + (int)1);
HXDLIN( 391)										 ::openfl::_internal::renderer::DrawCommandReader data460 = data;
HXDLIN( 391)										data460->fPos = (data460->fPos + (int)2);
HXDLIN( 391)										 ::openfl::_internal::renderer::DrawCommandReader data461 = data;
HXDLIN( 391)										data461->bPos = (data461->bPos + (int)1);
            									}
            									break;
            									case (int)15: {
HXLINE( 391)										 ::openfl::_internal::renderer::DrawCommandReader data462 = data;
HXDLIN( 391)										data462->fPos = (data462->fPos + (int)2);
            									}
            									break;
            									case (int)16: {
HXLINE( 391)										 ::openfl::_internal::renderer::DrawCommandReader data463 = data;
HXDLIN( 391)										data463->fPos = (data463->fPos + (int)2);
            									}
            									break;
            									case (int)17: {
HXLINE( 391)										 ::openfl::_internal::renderer::DrawCommandReader data464 = data;
HXDLIN( 391)										data464->oPos = (data464->oPos + (int)1);
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE( 391)							data->prev = type;
            						}
            					}
            				}
            			}
HXLINE( 397)			if ((::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands->get_length() > (int)0)) {
HXLINE( 399)				::openfl::_internal::renderer::cairo::CairoGraphics_obj::endFill();
            			}
HXLINE( 403)			if ((::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands->get_length() > (int)0)) {
HXLINE( 405)				::openfl::_internal::renderer::cairo::CairoGraphics_obj::endStroke();
            			}
HXLINE( 409)			data->destroy();
HXLINE( 411)			bool _hx_tmp28;
HXDLIN( 411)			if (::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasFill) {
HXLINE( 411)				_hx_tmp28 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->inFill(x,y);
            			}
            			else {
HXLINE( 411)				_hx_tmp28 = false;
            			}
HXDLIN( 411)			if (_hx_tmp28) {
HXLINE( 413)				return true;
            			}
HXLINE( 417)			bool _hx_tmp29;
HXDLIN( 417)			if (::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasStroke) {
HXLINE( 417)				_hx_tmp29 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->inStroke(x,y);
            			}
            			else {
HXLINE( 417)				_hx_tmp29 = false;
            			}
HXDLIN( 417)			if (_hx_tmp29) {
HXLINE( 419)				return true;
            			}
            		}
HXLINE( 426)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(CairoGraphics_obj,hitTest,return )

bool CairoGraphics_obj::isCCW(Float x1,Float y1,Float x2,Float y2,Float x3,Float y3){
            	HX_STACKFRAME(&_hx_pos_7c423d109b848e15_433_isCCW)
HXLINE( 433)		return ((((x2 - x1) * (y3 - y1)) - ((y2 - y1) * (x3 - x1))) < (int)0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC6(CairoGraphics_obj,isCCW,return )

 ::Dynamic CairoGraphics_obj::normalizeUVT( ::openfl::_Vector::FloatVector uvt,hx::Null< bool >  __o_skipT){
bool skipT = __o_skipT.Default(false);
            	HX_GC_STACKFRAME(&_hx_pos_7c423d109b848e15_438_normalizeUVT)
HXLINE( 440)		Float max = ::Math_obj::NEGATIVE_INFINITY;
HXLINE( 441)		Float tmp = ::Math_obj::NEGATIVE_INFINITY;
HXLINE( 442)		int len = uvt->get_length();
HXLINE( 444)		{
HXLINE( 444)			int _g1 = (int)1;
HXDLIN( 444)			int _g = (len + (int)1);
HXDLIN( 444)			while((_g1 < _g)){
HXLINE( 444)				_g1 = (_g1 + (int)1);
HXDLIN( 444)				int t = (_g1 - (int)1);
HXLINE( 446)				bool _hx_tmp;
HXDLIN( 446)				if (skipT) {
HXLINE( 446)					_hx_tmp = (hx::Mod(t,(int)3) == (int)0);
            				}
            				else {
HXLINE( 446)					_hx_tmp = false;
            				}
HXDLIN( 446)				if (_hx_tmp) {
HXLINE( 448)					continue;
            				}
HXLINE( 452)				tmp = uvt->get((t - (int)1));
HXLINE( 454)				if ((max < tmp)) {
HXLINE( 456)					max = tmp;
            				}
            			}
            		}
HXLINE( 462)		if (!(skipT)) {
HXLINE( 464)			return  ::Dynamic(hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("max",a4,0a,53,00),max)
            				->setFixed(1,HX_("uvt",f3,2e,59,00),uvt));
            		}
HXLINE( 468)		int length = null();
HXDLIN( 468)		bool fixed = null();
HXDLIN( 468)		 ::openfl::_Vector::FloatVector result =  ::openfl::_Vector::FloatVector_obj::__alloc( HX_CTX ,length,fixed,null());
HXLINE( 470)		{
HXLINE( 470)			int _g11 = (int)1;
HXDLIN( 470)			int _g2 = (len + (int)1);
HXDLIN( 470)			while((_g11 < _g2)){
HXLINE( 470)				_g11 = (_g11 + (int)1);
HXDLIN( 470)				int t1 = (_g11 - (int)1);
HXLINE( 472)				bool _hx_tmp1;
HXDLIN( 472)				if (skipT) {
HXLINE( 472)					_hx_tmp1 = (hx::Mod(t1,(int)3) == (int)0);
            				}
            				else {
HXLINE( 472)					_hx_tmp1 = false;
            				}
HXDLIN( 472)				if (_hx_tmp1) {
HXLINE( 474)					continue;
            				}
HXLINE( 478)				result->push(uvt->get((t1 - (int)1)));
            			}
            		}
HXLINE( 482)		return  ::Dynamic(hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("max",a4,0a,53,00),max)
            			->setFixed(1,HX_("uvt",f3,2e,59,00),result));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(CairoGraphics_obj,normalizeUVT,return )

void CairoGraphics_obj::playCommands( ::openfl::_internal::renderer::DrawCommandBuffer commands,hx::Null< bool >  __o_stroke){
bool stroke = __o_stroke.Default(false);
            	HX_GC_STACKFRAME(&_hx_pos_7c423d109b848e15_487_playCommands)
HXLINE( 489)		if ((commands->get_length() == (int)0)) {
HXLINE( 489)			return;
            		}
HXLINE( 491)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::bounds = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::graphics->_hx___bounds;
HXLINE( 493)		Float offsetX = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::bounds->x;
HXLINE( 494)		Float offsetY = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::bounds->y;
HXLINE( 496)		Float positionX = ((Float)0.0);
HXLINE( 497)		Float positionY = ((Float)0.0);
HXLINE( 499)		bool closeGap = false;
HXLINE( 500)		Float startX = ((Float)0.0);
HXLINE( 501)		Float startY = ((Float)0.0);
HXLINE( 503)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->set_fillRule((int)1);
HXLINE( 504)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->set_antialias((int)3);
HXLINE( 506)		bool hasPath = false;
HXLINE( 508)		 ::openfl::_internal::renderer::DrawCommandReader data =  ::openfl::_internal::renderer::DrawCommandReader_obj::__alloc( HX_CTX ,commands);
HXLINE( 510)		{
HXLINE( 510)			int _g = (int)0;
HXDLIN( 510)			::Array< ::Dynamic> _g1 = commands->types;
HXDLIN( 510)			while((_g < _g1->length)){
HXLINE( 510)				 ::openfl::_internal::renderer::DrawCommandType type = _g1->__get(_g).StaticCast<  ::openfl::_internal::renderer::DrawCommandType >();
HXDLIN( 510)				_g = (_g + (int)1);
HXLINE( 512)				switch((int)(_hx_getEnumValueIndex(type))){
            					case (int)0: {
HXLINE( 694)						{
HXLINE( 694)							 ::openfl::_internal::renderer::DrawCommandType _g2 = data->prev;
HXDLIN( 694)							switch((int)(_hx_getEnumValueIndex(_g2))){
            								case (int)0: {
HXLINE( 694)									 ::openfl::_internal::renderer::DrawCommandReader data1 = data;
HXDLIN( 694)									data1->oPos = (data1->oPos + (int)2);
HXDLIN( 694)									 ::openfl::_internal::renderer::DrawCommandReader data2 = data;
HXDLIN( 694)									data2->bPos = (data2->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE( 694)									 ::openfl::_internal::renderer::DrawCommandReader data3 = data;
HXDLIN( 694)									data3->iPos = (data3->iPos + (int)1);
HXDLIN( 694)									 ::openfl::_internal::renderer::DrawCommandReader data4 = data;
HXDLIN( 694)									data4->fPos = (data4->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE( 694)									 ::openfl::_internal::renderer::DrawCommandReader data5 = data;
HXDLIN( 694)									data5->oPos = (data5->oPos + (int)4);
HXDLIN( 694)									 ::openfl::_internal::renderer::DrawCommandReader data6 = data;
HXDLIN( 694)									data6->iiPos = (data6->iiPos + (int)2);
HXDLIN( 694)									 ::openfl::_internal::renderer::DrawCommandReader data7 = data;
HXDLIN( 694)									data7->ffPos = (data7->ffPos + (int)1);
HXDLIN( 694)									 ::openfl::_internal::renderer::DrawCommandReader data8 = data;
HXDLIN( 694)									data8->fPos = (data8->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE( 694)									 ::openfl::_internal::renderer::DrawCommandReader data9 = data;
HXDLIN( 694)									data9->fPos = (data9->fPos + (int)6);
            								}
            								break;
            								case (int)4: {
HXLINE( 694)									 ::openfl::_internal::renderer::DrawCommandReader data10 = data;
HXDLIN( 694)									data10->fPos = (data10->fPos + (int)4);
            								}
            								break;
            								case (int)5: {
HXLINE( 694)									 ::openfl::_internal::renderer::DrawCommandReader data11 = data;
HXDLIN( 694)									data11->fPos = (data11->fPos + (int)3);
            								}
            								break;
            								case (int)6: {
HXLINE( 694)									 ::openfl::_internal::renderer::DrawCommandReader data12 = data;
HXDLIN( 694)									data12->fPos = (data12->fPos + (int)4);
            								}
            								break;
            								case (int)7: {
HXLINE( 694)									 ::openfl::_internal::renderer::DrawCommandReader data13 = data;
HXDLIN( 694)									data13->fPos = (data13->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE( 694)									 ::openfl::_internal::renderer::DrawCommandReader data14 = data;
HXDLIN( 694)									data14->fPos = (data14->fPos + (int)5);
HXDLIN( 694)									 ::openfl::_internal::renderer::DrawCommandReader data15 = data;
HXDLIN( 694)									data15->oPos = (data15->oPos + (int)1);
            								}
            								break;
            								case (int)10: {
HXLINE( 694)									 ::openfl::_internal::renderer::DrawCommandReader data16 = data;
HXDLIN( 694)									data16->oPos = (data16->oPos + (int)4);
            								}
            								break;
            								case (int)11: {
            								}
            								break;
            								case (int)12: {
HXLINE( 694)									 ::openfl::_internal::renderer::DrawCommandReader data17 = data;
HXDLIN( 694)									data17->oPos = (data17->oPos + (int)2);
HXDLIN( 694)									 ::openfl::_internal::renderer::DrawCommandReader data18 = data;
HXDLIN( 694)									data18->bPos = (data18->bPos + (int)2);
            								}
            								break;
            								case (int)13: {
HXLINE( 694)									 ::openfl::_internal::renderer::DrawCommandReader data19 = data;
HXDLIN( 694)									data19->oPos = (data19->oPos + (int)4);
HXDLIN( 694)									 ::openfl::_internal::renderer::DrawCommandReader data20 = data;
HXDLIN( 694)									data20->iiPos = (data20->iiPos + (int)2);
HXDLIN( 694)									 ::openfl::_internal::renderer::DrawCommandReader data21 = data;
HXDLIN( 694)									data21->ffPos = (data21->ffPos + (int)1);
HXDLIN( 694)									 ::openfl::_internal::renderer::DrawCommandReader data22 = data;
HXDLIN( 694)									data22->fPos = (data22->fPos + (int)1);
            								}
            								break;
            								case (int)14: {
HXLINE( 694)									 ::openfl::_internal::renderer::DrawCommandReader data23 = data;
HXDLIN( 694)									data23->oPos = (data23->oPos + (int)4);
HXDLIN( 694)									 ::openfl::_internal::renderer::DrawCommandReader data24 = data;
HXDLIN( 694)									data24->iPos = (data24->iPos + (int)1);
HXDLIN( 694)									 ::openfl::_internal::renderer::DrawCommandReader data25 = data;
HXDLIN( 694)									data25->fPos = (data25->fPos + (int)2);
HXDLIN( 694)									 ::openfl::_internal::renderer::DrawCommandReader data26 = data;
HXDLIN( 694)									data26->bPos = (data26->bPos + (int)1);
            								}
            								break;
            								case (int)15: {
HXLINE( 694)									 ::openfl::_internal::renderer::DrawCommandReader data27 = data;
HXDLIN( 694)									data27->fPos = (data27->fPos + (int)2);
            								}
            								break;
            								case (int)16: {
HXLINE( 694)									 ::openfl::_internal::renderer::DrawCommandReader data28 = data;
HXDLIN( 694)									data28->fPos = (data28->fPos + (int)2);
            								}
            								break;
            								case (int)17: {
HXLINE( 694)									 ::openfl::_internal::renderer::DrawCommandReader data29 = data;
HXDLIN( 694)									data29->oPos = (data29->oPos + (int)1);
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE( 694)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::BEGIN_BITMAP_FILL_dyn();
HXDLIN( 694)						 ::openfl::_internal::renderer::DrawCommandReader this1 = data;
HXDLIN( 694)						 ::openfl::_internal::renderer::DrawCommandReader c = this1;
HXLINE( 695)						 ::openfl::display::BitmapData c1 = ( ( ::openfl::display::BitmapData)(c->buffer->o->__get(c->oPos)) );
HXDLIN( 695)						::cpp::VirtualArray c2 = c->buffer->o;
HXDLIN( 695)						 ::openfl::geom::Matrix c3 = ( ( ::openfl::geom::Matrix)(c2->__get((c->oPos + (int)1))) );
HXDLIN( 695)						bool c4 = c->buffer->b->__get(c->bPos);
HXDLIN( 695)						::Array< bool > c5 = c->buffer->b;
HXDLIN( 695)						::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillPattern = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::createImagePattern(c1,c3,c4,c5->__get((c->bPos + (int)1)));
HXLINE( 697)						::openfl::_internal::renderer::cairo::CairoGraphics_obj::bitmapFill = ( ( ::openfl::display::BitmapData)(c->buffer->o->__get(c->oPos)) );
HXLINE( 698)						::openfl::_internal::renderer::cairo::CairoGraphics_obj::bitmapRepeat = c->buffer->b->__get(c->bPos);
HXLINE( 700)						::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasFill = true;
            					}
            					break;
            					case (int)1: {
HXLINE( 704)						{
HXLINE( 704)							 ::openfl::_internal::renderer::DrawCommandType _g3 = data->prev;
HXDLIN( 704)							switch((int)(_hx_getEnumValueIndex(_g3))){
            								case (int)0: {
HXLINE( 704)									 ::openfl::_internal::renderer::DrawCommandReader data30 = data;
HXDLIN( 704)									data30->oPos = (data30->oPos + (int)2);
HXDLIN( 704)									 ::openfl::_internal::renderer::DrawCommandReader data31 = data;
HXDLIN( 704)									data31->bPos = (data31->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE( 704)									 ::openfl::_internal::renderer::DrawCommandReader data32 = data;
HXDLIN( 704)									data32->iPos = (data32->iPos + (int)1);
HXDLIN( 704)									 ::openfl::_internal::renderer::DrawCommandReader data33 = data;
HXDLIN( 704)									data33->fPos = (data33->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE( 704)									 ::openfl::_internal::renderer::DrawCommandReader data34 = data;
HXDLIN( 704)									data34->oPos = (data34->oPos + (int)4);
HXDLIN( 704)									 ::openfl::_internal::renderer::DrawCommandReader data35 = data;
HXDLIN( 704)									data35->iiPos = (data35->iiPos + (int)2);
HXDLIN( 704)									 ::openfl::_internal::renderer::DrawCommandReader data36 = data;
HXDLIN( 704)									data36->ffPos = (data36->ffPos + (int)1);
HXDLIN( 704)									 ::openfl::_internal::renderer::DrawCommandReader data37 = data;
HXDLIN( 704)									data37->fPos = (data37->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE( 704)									 ::openfl::_internal::renderer::DrawCommandReader data38 = data;
HXDLIN( 704)									data38->fPos = (data38->fPos + (int)6);
            								}
            								break;
            								case (int)4: {
HXLINE( 704)									 ::openfl::_internal::renderer::DrawCommandReader data39 = data;
HXDLIN( 704)									data39->fPos = (data39->fPos + (int)4);
            								}
            								break;
            								case (int)5: {
HXLINE( 704)									 ::openfl::_internal::renderer::DrawCommandReader data40 = data;
HXDLIN( 704)									data40->fPos = (data40->fPos + (int)3);
            								}
            								break;
            								case (int)6: {
HXLINE( 704)									 ::openfl::_internal::renderer::DrawCommandReader data41 = data;
HXDLIN( 704)									data41->fPos = (data41->fPos + (int)4);
            								}
            								break;
            								case (int)7: {
HXLINE( 704)									 ::openfl::_internal::renderer::DrawCommandReader data42 = data;
HXDLIN( 704)									data42->fPos = (data42->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE( 704)									 ::openfl::_internal::renderer::DrawCommandReader data43 = data;
HXDLIN( 704)									data43->fPos = (data43->fPos + (int)5);
HXDLIN( 704)									 ::openfl::_internal::renderer::DrawCommandReader data44 = data;
HXDLIN( 704)									data44->oPos = (data44->oPos + (int)1);
            								}
            								break;
            								case (int)10: {
HXLINE( 704)									 ::openfl::_internal::renderer::DrawCommandReader data45 = data;
HXDLIN( 704)									data45->oPos = (data45->oPos + (int)4);
            								}
            								break;
            								case (int)11: {
            								}
            								break;
            								case (int)12: {
HXLINE( 704)									 ::openfl::_internal::renderer::DrawCommandReader data46 = data;
HXDLIN( 704)									data46->oPos = (data46->oPos + (int)2);
HXDLIN( 704)									 ::openfl::_internal::renderer::DrawCommandReader data47 = data;
HXDLIN( 704)									data47->bPos = (data47->bPos + (int)2);
            								}
            								break;
            								case (int)13: {
HXLINE( 704)									 ::openfl::_internal::renderer::DrawCommandReader data48 = data;
HXDLIN( 704)									data48->oPos = (data48->oPos + (int)4);
HXDLIN( 704)									 ::openfl::_internal::renderer::DrawCommandReader data49 = data;
HXDLIN( 704)									data49->iiPos = (data49->iiPos + (int)2);
HXDLIN( 704)									 ::openfl::_internal::renderer::DrawCommandReader data50 = data;
HXDLIN( 704)									data50->ffPos = (data50->ffPos + (int)1);
HXDLIN( 704)									 ::openfl::_internal::renderer::DrawCommandReader data51 = data;
HXDLIN( 704)									data51->fPos = (data51->fPos + (int)1);
            								}
            								break;
            								case (int)14: {
HXLINE( 704)									 ::openfl::_internal::renderer::DrawCommandReader data52 = data;
HXDLIN( 704)									data52->oPos = (data52->oPos + (int)4);
HXDLIN( 704)									 ::openfl::_internal::renderer::DrawCommandReader data53 = data;
HXDLIN( 704)									data53->iPos = (data53->iPos + (int)1);
HXDLIN( 704)									 ::openfl::_internal::renderer::DrawCommandReader data54 = data;
HXDLIN( 704)									data54->fPos = (data54->fPos + (int)2);
HXDLIN( 704)									 ::openfl::_internal::renderer::DrawCommandReader data55 = data;
HXDLIN( 704)									data55->bPos = (data55->bPos + (int)1);
            								}
            								break;
            								case (int)15: {
HXLINE( 704)									 ::openfl::_internal::renderer::DrawCommandReader data56 = data;
HXDLIN( 704)									data56->fPos = (data56->fPos + (int)2);
            								}
            								break;
            								case (int)16: {
HXLINE( 704)									 ::openfl::_internal::renderer::DrawCommandReader data57 = data;
HXDLIN( 704)									data57->fPos = (data57->fPos + (int)2);
            								}
            								break;
            								case (int)17: {
HXLINE( 704)									 ::openfl::_internal::renderer::DrawCommandReader data58 = data;
HXDLIN( 704)									data58->oPos = (data58->oPos + (int)1);
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE( 704)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::BEGIN_FILL_dyn();
HXDLIN( 704)						 ::openfl::_internal::renderer::DrawCommandReader this2 = data;
HXDLIN( 704)						 ::openfl::_internal::renderer::DrawCommandReader c6 = this2;
HXLINE( 705)						if ((c6->buffer->f->__get(c6->fPos) < ((Float)0.005))) {
HXLINE( 707)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasFill = false;
            						}
            						else {
HXLINE( 711)							if (hx::IsNotNull( ::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillPattern )) {
HXLINE( 713)								::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillPatternMatrix = null();
            							}
HXLINE( 717)							Float _hx_tmp = ((Float)hx::UShr(((int)c6->buffer->i->__get(c6->iPos) & (int)(int)16711680),(int)16) / (Float)(int)255);
HXDLIN( 717)							Float _hx_tmp1 = ((Float)hx::UShr(((int)c6->buffer->i->__get(c6->iPos) & (int)(int)65280),(int)8) / (Float)(int)255);
HXDLIN( 717)							Float _hx_tmp2 = ((Float)((int)c6->buffer->i->__get(c6->iPos) & (int)(int)255) / (Float)(int)255);
HXDLIN( 717)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillPattern = ::lime::graphics::cairo::_CairoPattern::CairoPattern_Impl__obj::createRGBA(_hx_tmp,_hx_tmp1,_hx_tmp2,c6->buffer->f->__get(c6->fPos));
HXLINE( 718)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasFill = true;
            						}
HXLINE( 722)						::openfl::_internal::renderer::cairo::CairoGraphics_obj::bitmapFill = null();
            					}
            					break;
            					case (int)2: {
HXLINE( 726)						{
HXLINE( 726)							 ::openfl::_internal::renderer::DrawCommandType _g4 = data->prev;
HXDLIN( 726)							switch((int)(_hx_getEnumValueIndex(_g4))){
            								case (int)0: {
HXLINE( 726)									 ::openfl::_internal::renderer::DrawCommandReader data59 = data;
HXDLIN( 726)									data59->oPos = (data59->oPos + (int)2);
HXDLIN( 726)									 ::openfl::_internal::renderer::DrawCommandReader data60 = data;
HXDLIN( 726)									data60->bPos = (data60->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE( 726)									 ::openfl::_internal::renderer::DrawCommandReader data61 = data;
HXDLIN( 726)									data61->iPos = (data61->iPos + (int)1);
HXDLIN( 726)									 ::openfl::_internal::renderer::DrawCommandReader data62 = data;
HXDLIN( 726)									data62->fPos = (data62->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE( 726)									 ::openfl::_internal::renderer::DrawCommandReader data63 = data;
HXDLIN( 726)									data63->oPos = (data63->oPos + (int)4);
HXDLIN( 726)									 ::openfl::_internal::renderer::DrawCommandReader data64 = data;
HXDLIN( 726)									data64->iiPos = (data64->iiPos + (int)2);
HXDLIN( 726)									 ::openfl::_internal::renderer::DrawCommandReader data65 = data;
HXDLIN( 726)									data65->ffPos = (data65->ffPos + (int)1);
HXDLIN( 726)									 ::openfl::_internal::renderer::DrawCommandReader data66 = data;
HXDLIN( 726)									data66->fPos = (data66->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE( 726)									 ::openfl::_internal::renderer::DrawCommandReader data67 = data;
HXDLIN( 726)									data67->fPos = (data67->fPos + (int)6);
            								}
            								break;
            								case (int)4: {
HXLINE( 726)									 ::openfl::_internal::renderer::DrawCommandReader data68 = data;
HXDLIN( 726)									data68->fPos = (data68->fPos + (int)4);
            								}
            								break;
            								case (int)5: {
HXLINE( 726)									 ::openfl::_internal::renderer::DrawCommandReader data69 = data;
HXDLIN( 726)									data69->fPos = (data69->fPos + (int)3);
            								}
            								break;
            								case (int)6: {
HXLINE( 726)									 ::openfl::_internal::renderer::DrawCommandReader data70 = data;
HXDLIN( 726)									data70->fPos = (data70->fPos + (int)4);
            								}
            								break;
            								case (int)7: {
HXLINE( 726)									 ::openfl::_internal::renderer::DrawCommandReader data71 = data;
HXDLIN( 726)									data71->fPos = (data71->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE( 726)									 ::openfl::_internal::renderer::DrawCommandReader data72 = data;
HXDLIN( 726)									data72->fPos = (data72->fPos + (int)5);
HXDLIN( 726)									 ::openfl::_internal::renderer::DrawCommandReader data73 = data;
HXDLIN( 726)									data73->oPos = (data73->oPos + (int)1);
            								}
            								break;
            								case (int)10: {
HXLINE( 726)									 ::openfl::_internal::renderer::DrawCommandReader data74 = data;
HXDLIN( 726)									data74->oPos = (data74->oPos + (int)4);
            								}
            								break;
            								case (int)11: {
            								}
            								break;
            								case (int)12: {
HXLINE( 726)									 ::openfl::_internal::renderer::DrawCommandReader data75 = data;
HXDLIN( 726)									data75->oPos = (data75->oPos + (int)2);
HXDLIN( 726)									 ::openfl::_internal::renderer::DrawCommandReader data76 = data;
HXDLIN( 726)									data76->bPos = (data76->bPos + (int)2);
            								}
            								break;
            								case (int)13: {
HXLINE( 726)									 ::openfl::_internal::renderer::DrawCommandReader data77 = data;
HXDLIN( 726)									data77->oPos = (data77->oPos + (int)4);
HXDLIN( 726)									 ::openfl::_internal::renderer::DrawCommandReader data78 = data;
HXDLIN( 726)									data78->iiPos = (data78->iiPos + (int)2);
HXDLIN( 726)									 ::openfl::_internal::renderer::DrawCommandReader data79 = data;
HXDLIN( 726)									data79->ffPos = (data79->ffPos + (int)1);
HXDLIN( 726)									 ::openfl::_internal::renderer::DrawCommandReader data80 = data;
HXDLIN( 726)									data80->fPos = (data80->fPos + (int)1);
            								}
            								break;
            								case (int)14: {
HXLINE( 726)									 ::openfl::_internal::renderer::DrawCommandReader data81 = data;
HXDLIN( 726)									data81->oPos = (data81->oPos + (int)4);
HXDLIN( 726)									 ::openfl::_internal::renderer::DrawCommandReader data82 = data;
HXDLIN( 726)									data82->iPos = (data82->iPos + (int)1);
HXDLIN( 726)									 ::openfl::_internal::renderer::DrawCommandReader data83 = data;
HXDLIN( 726)									data83->fPos = (data83->fPos + (int)2);
HXDLIN( 726)									 ::openfl::_internal::renderer::DrawCommandReader data84 = data;
HXDLIN( 726)									data84->bPos = (data84->bPos + (int)1);
            								}
            								break;
            								case (int)15: {
HXLINE( 726)									 ::openfl::_internal::renderer::DrawCommandReader data85 = data;
HXDLIN( 726)									data85->fPos = (data85->fPos + (int)2);
            								}
            								break;
            								case (int)16: {
HXLINE( 726)									 ::openfl::_internal::renderer::DrawCommandReader data86 = data;
HXDLIN( 726)									data86->fPos = (data86->fPos + (int)2);
            								}
            								break;
            								case (int)17: {
HXLINE( 726)									 ::openfl::_internal::renderer::DrawCommandReader data87 = data;
HXDLIN( 726)									data87->oPos = (data87->oPos + (int)1);
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE( 726)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::BEGIN_GRADIENT_FILL_dyn();
HXDLIN( 726)						 ::openfl::_internal::renderer::DrawCommandReader this3 = data;
HXDLIN( 726)						 ::openfl::_internal::renderer::DrawCommandReader c7 = this3;
HXLINE( 727)						if (hx::IsNotNull( ::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillPattern )) {
HXLINE( 729)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillPatternMatrix = null();
            						}
HXLINE( 733)						::Array< ::Dynamic> c8 = c7->buffer->ii;
HXDLIN( 733)						::cpp::VirtualArray c9 = c7->buffer->o;
HXDLIN( 733)						::cpp::VirtualArray c10 = c7->buffer->o;
HXDLIN( 733)						::cpp::VirtualArray c11 = c7->buffer->o;
HXDLIN( 733)						::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillPattern = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::createGradientPattern(c7->buffer->o->__get(c7->oPos),c7->buffer->ii->__get(c7->iiPos).StaticCast< ::Array< int > >(),c7->buffer->ff->__get(c7->ffPos).StaticCast< ::Array< Float > >(),c8->__get((c7->iiPos + (int)1)).StaticCast< ::Array< int > >(),( ( ::openfl::geom::Matrix)(c9->__get((c7->oPos + (int)1))) ),c10->__get((c7->oPos + (int)2)),c11->__get((c7->oPos + (int)3)),c7->buffer->f->__get(c7->fPos));
HXLINE( 735)						::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasFill = true;
HXLINE( 736)						::openfl::_internal::renderer::cairo::CairoGraphics_obj::bitmapFill = null();
            					}
            					break;
            					case (int)3: {
HXLINE( 516)						{
HXLINE( 516)							 ::openfl::_internal::renderer::DrawCommandType _g5 = data->prev;
HXDLIN( 516)							switch((int)(_hx_getEnumValueIndex(_g5))){
            								case (int)0: {
HXLINE( 516)									 ::openfl::_internal::renderer::DrawCommandReader data88 = data;
HXDLIN( 516)									data88->oPos = (data88->oPos + (int)2);
HXDLIN( 516)									 ::openfl::_internal::renderer::DrawCommandReader data89 = data;
HXDLIN( 516)									data89->bPos = (data89->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE( 516)									 ::openfl::_internal::renderer::DrawCommandReader data90 = data;
HXDLIN( 516)									data90->iPos = (data90->iPos + (int)1);
HXDLIN( 516)									 ::openfl::_internal::renderer::DrawCommandReader data91 = data;
HXDLIN( 516)									data91->fPos = (data91->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE( 516)									 ::openfl::_internal::renderer::DrawCommandReader data92 = data;
HXDLIN( 516)									data92->oPos = (data92->oPos + (int)4);
HXDLIN( 516)									 ::openfl::_internal::renderer::DrawCommandReader data93 = data;
HXDLIN( 516)									data93->iiPos = (data93->iiPos + (int)2);
HXDLIN( 516)									 ::openfl::_internal::renderer::DrawCommandReader data94 = data;
HXDLIN( 516)									data94->ffPos = (data94->ffPos + (int)1);
HXDLIN( 516)									 ::openfl::_internal::renderer::DrawCommandReader data95 = data;
HXDLIN( 516)									data95->fPos = (data95->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE( 516)									 ::openfl::_internal::renderer::DrawCommandReader data96 = data;
HXDLIN( 516)									data96->fPos = (data96->fPos + (int)6);
            								}
            								break;
            								case (int)4: {
HXLINE( 516)									 ::openfl::_internal::renderer::DrawCommandReader data97 = data;
HXDLIN( 516)									data97->fPos = (data97->fPos + (int)4);
            								}
            								break;
            								case (int)5: {
HXLINE( 516)									 ::openfl::_internal::renderer::DrawCommandReader data98 = data;
HXDLIN( 516)									data98->fPos = (data98->fPos + (int)3);
            								}
            								break;
            								case (int)6: {
HXLINE( 516)									 ::openfl::_internal::renderer::DrawCommandReader data99 = data;
HXDLIN( 516)									data99->fPos = (data99->fPos + (int)4);
            								}
            								break;
            								case (int)7: {
HXLINE( 516)									 ::openfl::_internal::renderer::DrawCommandReader data100 = data;
HXDLIN( 516)									data100->fPos = (data100->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE( 516)									 ::openfl::_internal::renderer::DrawCommandReader data101 = data;
HXDLIN( 516)									data101->fPos = (data101->fPos + (int)5);
HXDLIN( 516)									 ::openfl::_internal::renderer::DrawCommandReader data102 = data;
HXDLIN( 516)									data102->oPos = (data102->oPos + (int)1);
            								}
            								break;
            								case (int)10: {
HXLINE( 516)									 ::openfl::_internal::renderer::DrawCommandReader data103 = data;
HXDLIN( 516)									data103->oPos = (data103->oPos + (int)4);
            								}
            								break;
            								case (int)11: {
            								}
            								break;
            								case (int)12: {
HXLINE( 516)									 ::openfl::_internal::renderer::DrawCommandReader data104 = data;
HXDLIN( 516)									data104->oPos = (data104->oPos + (int)2);
HXDLIN( 516)									 ::openfl::_internal::renderer::DrawCommandReader data105 = data;
HXDLIN( 516)									data105->bPos = (data105->bPos + (int)2);
            								}
            								break;
            								case (int)13: {
HXLINE( 516)									 ::openfl::_internal::renderer::DrawCommandReader data106 = data;
HXDLIN( 516)									data106->oPos = (data106->oPos + (int)4);
HXDLIN( 516)									 ::openfl::_internal::renderer::DrawCommandReader data107 = data;
HXDLIN( 516)									data107->iiPos = (data107->iiPos + (int)2);
HXDLIN( 516)									 ::openfl::_internal::renderer::DrawCommandReader data108 = data;
HXDLIN( 516)									data108->ffPos = (data108->ffPos + (int)1);
HXDLIN( 516)									 ::openfl::_internal::renderer::DrawCommandReader data109 = data;
HXDLIN( 516)									data109->fPos = (data109->fPos + (int)1);
            								}
            								break;
            								case (int)14: {
HXLINE( 516)									 ::openfl::_internal::renderer::DrawCommandReader data110 = data;
HXDLIN( 516)									data110->oPos = (data110->oPos + (int)4);
HXDLIN( 516)									 ::openfl::_internal::renderer::DrawCommandReader data111 = data;
HXDLIN( 516)									data111->iPos = (data111->iPos + (int)1);
HXDLIN( 516)									 ::openfl::_internal::renderer::DrawCommandReader data112 = data;
HXDLIN( 516)									data112->fPos = (data112->fPos + (int)2);
HXDLIN( 516)									 ::openfl::_internal::renderer::DrawCommandReader data113 = data;
HXDLIN( 516)									data113->bPos = (data113->bPos + (int)1);
            								}
            								break;
            								case (int)15: {
HXLINE( 516)									 ::openfl::_internal::renderer::DrawCommandReader data114 = data;
HXDLIN( 516)									data114->fPos = (data114->fPos + (int)2);
            								}
            								break;
            								case (int)16: {
HXLINE( 516)									 ::openfl::_internal::renderer::DrawCommandReader data115 = data;
HXDLIN( 516)									data115->fPos = (data115->fPos + (int)2);
            								}
            								break;
            								case (int)17: {
HXLINE( 516)									 ::openfl::_internal::renderer::DrawCommandReader data116 = data;
HXDLIN( 516)									data116->oPos = (data116->oPos + (int)1);
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE( 516)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::CUBIC_CURVE_TO_dyn();
HXDLIN( 516)						 ::openfl::_internal::renderer::DrawCommandReader this4 = data;
HXDLIN( 516)						 ::openfl::_internal::renderer::DrawCommandReader c12 = this4;
HXLINE( 517)						hasPath = true;
HXLINE( 518)						 ::lime::graphics::cairo::Cairo _hx_tmp3 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN( 518)						Float _hx_tmp4 = (c12->buffer->f->__get(c12->fPos) - offsetX);
HXDLIN( 518)						::Array< Float > c13 = c12->buffer->f;
HXDLIN( 518)						Float _hx_tmp5 = (c13->__get((c12->fPos + (int)1)) - offsetY);
HXDLIN( 518)						::Array< Float > c14 = c12->buffer->f;
HXDLIN( 518)						Float _hx_tmp6 = (c14->__get((c12->fPos + (int)2)) - offsetX);
HXDLIN( 518)						::Array< Float > c15 = c12->buffer->f;
HXDLIN( 518)						Float _hx_tmp7 = (c15->__get((c12->fPos + (int)3)) - offsetY);
HXDLIN( 518)						::Array< Float > c16 = c12->buffer->f;
HXDLIN( 518)						Float _hx_tmp8 = (c16->__get((c12->fPos + (int)4)) - offsetX);
HXDLIN( 518)						::Array< Float > c17 = c12->buffer->f;
HXDLIN( 518)						_hx_tmp3->curveTo(_hx_tmp4,_hx_tmp5,_hx_tmp6,_hx_tmp7,_hx_tmp8,(c17->__get((c12->fPos + (int)5)) - offsetY));
            					}
            					break;
            					case (int)4: {
HXLINE( 522)						{
HXLINE( 522)							 ::openfl::_internal::renderer::DrawCommandType _g6 = data->prev;
HXDLIN( 522)							switch((int)(_hx_getEnumValueIndex(_g6))){
            								case (int)0: {
HXLINE( 522)									 ::openfl::_internal::renderer::DrawCommandReader data117 = data;
HXDLIN( 522)									data117->oPos = (data117->oPos + (int)2);
HXDLIN( 522)									 ::openfl::_internal::renderer::DrawCommandReader data118 = data;
HXDLIN( 522)									data118->bPos = (data118->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE( 522)									 ::openfl::_internal::renderer::DrawCommandReader data119 = data;
HXDLIN( 522)									data119->iPos = (data119->iPos + (int)1);
HXDLIN( 522)									 ::openfl::_internal::renderer::DrawCommandReader data120 = data;
HXDLIN( 522)									data120->fPos = (data120->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE( 522)									 ::openfl::_internal::renderer::DrawCommandReader data121 = data;
HXDLIN( 522)									data121->oPos = (data121->oPos + (int)4);
HXDLIN( 522)									 ::openfl::_internal::renderer::DrawCommandReader data122 = data;
HXDLIN( 522)									data122->iiPos = (data122->iiPos + (int)2);
HXDLIN( 522)									 ::openfl::_internal::renderer::DrawCommandReader data123 = data;
HXDLIN( 522)									data123->ffPos = (data123->ffPos + (int)1);
HXDLIN( 522)									 ::openfl::_internal::renderer::DrawCommandReader data124 = data;
HXDLIN( 522)									data124->fPos = (data124->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE( 522)									 ::openfl::_internal::renderer::DrawCommandReader data125 = data;
HXDLIN( 522)									data125->fPos = (data125->fPos + (int)6);
            								}
            								break;
            								case (int)4: {
HXLINE( 522)									 ::openfl::_internal::renderer::DrawCommandReader data126 = data;
HXDLIN( 522)									data126->fPos = (data126->fPos + (int)4);
            								}
            								break;
            								case (int)5: {
HXLINE( 522)									 ::openfl::_internal::renderer::DrawCommandReader data127 = data;
HXDLIN( 522)									data127->fPos = (data127->fPos + (int)3);
            								}
            								break;
            								case (int)6: {
HXLINE( 522)									 ::openfl::_internal::renderer::DrawCommandReader data128 = data;
HXDLIN( 522)									data128->fPos = (data128->fPos + (int)4);
            								}
            								break;
            								case (int)7: {
HXLINE( 522)									 ::openfl::_internal::renderer::DrawCommandReader data129 = data;
HXDLIN( 522)									data129->fPos = (data129->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE( 522)									 ::openfl::_internal::renderer::DrawCommandReader data130 = data;
HXDLIN( 522)									data130->fPos = (data130->fPos + (int)5);
HXDLIN( 522)									 ::openfl::_internal::renderer::DrawCommandReader data131 = data;
HXDLIN( 522)									data131->oPos = (data131->oPos + (int)1);
            								}
            								break;
            								case (int)10: {
HXLINE( 522)									 ::openfl::_internal::renderer::DrawCommandReader data132 = data;
HXDLIN( 522)									data132->oPos = (data132->oPos + (int)4);
            								}
            								break;
            								case (int)11: {
            								}
            								break;
            								case (int)12: {
HXLINE( 522)									 ::openfl::_internal::renderer::DrawCommandReader data133 = data;
HXDLIN( 522)									data133->oPos = (data133->oPos + (int)2);
HXDLIN( 522)									 ::openfl::_internal::renderer::DrawCommandReader data134 = data;
HXDLIN( 522)									data134->bPos = (data134->bPos + (int)2);
            								}
            								break;
            								case (int)13: {
HXLINE( 522)									 ::openfl::_internal::renderer::DrawCommandReader data135 = data;
HXDLIN( 522)									data135->oPos = (data135->oPos + (int)4);
HXDLIN( 522)									 ::openfl::_internal::renderer::DrawCommandReader data136 = data;
HXDLIN( 522)									data136->iiPos = (data136->iiPos + (int)2);
HXDLIN( 522)									 ::openfl::_internal::renderer::DrawCommandReader data137 = data;
HXDLIN( 522)									data137->ffPos = (data137->ffPos + (int)1);
HXDLIN( 522)									 ::openfl::_internal::renderer::DrawCommandReader data138 = data;
HXDLIN( 522)									data138->fPos = (data138->fPos + (int)1);
            								}
            								break;
            								case (int)14: {
HXLINE( 522)									 ::openfl::_internal::renderer::DrawCommandReader data139 = data;
HXDLIN( 522)									data139->oPos = (data139->oPos + (int)4);
HXDLIN( 522)									 ::openfl::_internal::renderer::DrawCommandReader data140 = data;
HXDLIN( 522)									data140->iPos = (data140->iPos + (int)1);
HXDLIN( 522)									 ::openfl::_internal::renderer::DrawCommandReader data141 = data;
HXDLIN( 522)									data141->fPos = (data141->fPos + (int)2);
HXDLIN( 522)									 ::openfl::_internal::renderer::DrawCommandReader data142 = data;
HXDLIN( 522)									data142->bPos = (data142->bPos + (int)1);
            								}
            								break;
            								case (int)15: {
HXLINE( 522)									 ::openfl::_internal::renderer::DrawCommandReader data143 = data;
HXDLIN( 522)									data143->fPos = (data143->fPos + (int)2);
            								}
            								break;
            								case (int)16: {
HXLINE( 522)									 ::openfl::_internal::renderer::DrawCommandReader data144 = data;
HXDLIN( 522)									data144->fPos = (data144->fPos + (int)2);
            								}
            								break;
            								case (int)17: {
HXLINE( 522)									 ::openfl::_internal::renderer::DrawCommandReader data145 = data;
HXDLIN( 522)									data145->oPos = (data145->oPos + (int)1);
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE( 522)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::CURVE_TO_dyn();
HXDLIN( 522)						 ::openfl::_internal::renderer::DrawCommandReader this5 = data;
HXDLIN( 522)						 ::openfl::_internal::renderer::DrawCommandReader c18 = this5;
HXLINE( 523)						hasPath = true;
HXLINE( 524)						Float _hx_tmp9 = (c18->buffer->f->__get(c18->fPos) - offsetX);
HXDLIN( 524)						::Array< Float > c19 = c18->buffer->f;
HXDLIN( 524)						Float _hx_tmp10 = (c19->__get((c18->fPos + (int)1)) - offsetY);
HXDLIN( 524)						::Array< Float > c20 = c18->buffer->f;
HXDLIN( 524)						Float _hx_tmp11 = (c20->__get((c18->fPos + (int)2)) - offsetX);
HXDLIN( 524)						::Array< Float > c21 = c18->buffer->f;
HXDLIN( 524)						::openfl::_internal::renderer::cairo::CairoGraphics_obj::quadraticCurveTo(_hx_tmp9,_hx_tmp10,_hx_tmp11,(c21->__get((c18->fPos + (int)3)) - offsetY));
            					}
            					break;
            					case (int)5: {
HXLINE( 528)						{
HXLINE( 528)							 ::openfl::_internal::renderer::DrawCommandType _g7 = data->prev;
HXDLIN( 528)							switch((int)(_hx_getEnumValueIndex(_g7))){
            								case (int)0: {
HXLINE( 528)									 ::openfl::_internal::renderer::DrawCommandReader data146 = data;
HXDLIN( 528)									data146->oPos = (data146->oPos + (int)2);
HXDLIN( 528)									 ::openfl::_internal::renderer::DrawCommandReader data147 = data;
HXDLIN( 528)									data147->bPos = (data147->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE( 528)									 ::openfl::_internal::renderer::DrawCommandReader data148 = data;
HXDLIN( 528)									data148->iPos = (data148->iPos + (int)1);
HXDLIN( 528)									 ::openfl::_internal::renderer::DrawCommandReader data149 = data;
HXDLIN( 528)									data149->fPos = (data149->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE( 528)									 ::openfl::_internal::renderer::DrawCommandReader data150 = data;
HXDLIN( 528)									data150->oPos = (data150->oPos + (int)4);
HXDLIN( 528)									 ::openfl::_internal::renderer::DrawCommandReader data151 = data;
HXDLIN( 528)									data151->iiPos = (data151->iiPos + (int)2);
HXDLIN( 528)									 ::openfl::_internal::renderer::DrawCommandReader data152 = data;
HXDLIN( 528)									data152->ffPos = (data152->ffPos + (int)1);
HXDLIN( 528)									 ::openfl::_internal::renderer::DrawCommandReader data153 = data;
HXDLIN( 528)									data153->fPos = (data153->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE( 528)									 ::openfl::_internal::renderer::DrawCommandReader data154 = data;
HXDLIN( 528)									data154->fPos = (data154->fPos + (int)6);
            								}
            								break;
            								case (int)4: {
HXLINE( 528)									 ::openfl::_internal::renderer::DrawCommandReader data155 = data;
HXDLIN( 528)									data155->fPos = (data155->fPos + (int)4);
            								}
            								break;
            								case (int)5: {
HXLINE( 528)									 ::openfl::_internal::renderer::DrawCommandReader data156 = data;
HXDLIN( 528)									data156->fPos = (data156->fPos + (int)3);
            								}
            								break;
            								case (int)6: {
HXLINE( 528)									 ::openfl::_internal::renderer::DrawCommandReader data157 = data;
HXDLIN( 528)									data157->fPos = (data157->fPos + (int)4);
            								}
            								break;
            								case (int)7: {
HXLINE( 528)									 ::openfl::_internal::renderer::DrawCommandReader data158 = data;
HXDLIN( 528)									data158->fPos = (data158->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE( 528)									 ::openfl::_internal::renderer::DrawCommandReader data159 = data;
HXDLIN( 528)									data159->fPos = (data159->fPos + (int)5);
HXDLIN( 528)									 ::openfl::_internal::renderer::DrawCommandReader data160 = data;
HXDLIN( 528)									data160->oPos = (data160->oPos + (int)1);
            								}
            								break;
            								case (int)10: {
HXLINE( 528)									 ::openfl::_internal::renderer::DrawCommandReader data161 = data;
HXDLIN( 528)									data161->oPos = (data161->oPos + (int)4);
            								}
            								break;
            								case (int)11: {
            								}
            								break;
            								case (int)12: {
HXLINE( 528)									 ::openfl::_internal::renderer::DrawCommandReader data162 = data;
HXDLIN( 528)									data162->oPos = (data162->oPos + (int)2);
HXDLIN( 528)									 ::openfl::_internal::renderer::DrawCommandReader data163 = data;
HXDLIN( 528)									data163->bPos = (data163->bPos + (int)2);
            								}
            								break;
            								case (int)13: {
HXLINE( 528)									 ::openfl::_internal::renderer::DrawCommandReader data164 = data;
HXDLIN( 528)									data164->oPos = (data164->oPos + (int)4);
HXDLIN( 528)									 ::openfl::_internal::renderer::DrawCommandReader data165 = data;
HXDLIN( 528)									data165->iiPos = (data165->iiPos + (int)2);
HXDLIN( 528)									 ::openfl::_internal::renderer::DrawCommandReader data166 = data;
HXDLIN( 528)									data166->ffPos = (data166->ffPos + (int)1);
HXDLIN( 528)									 ::openfl::_internal::renderer::DrawCommandReader data167 = data;
HXDLIN( 528)									data167->fPos = (data167->fPos + (int)1);
            								}
            								break;
            								case (int)14: {
HXLINE( 528)									 ::openfl::_internal::renderer::DrawCommandReader data168 = data;
HXDLIN( 528)									data168->oPos = (data168->oPos + (int)4);
HXDLIN( 528)									 ::openfl::_internal::renderer::DrawCommandReader data169 = data;
HXDLIN( 528)									data169->iPos = (data169->iPos + (int)1);
HXDLIN( 528)									 ::openfl::_internal::renderer::DrawCommandReader data170 = data;
HXDLIN( 528)									data170->fPos = (data170->fPos + (int)2);
HXDLIN( 528)									 ::openfl::_internal::renderer::DrawCommandReader data171 = data;
HXDLIN( 528)									data171->bPos = (data171->bPos + (int)1);
            								}
            								break;
            								case (int)15: {
HXLINE( 528)									 ::openfl::_internal::renderer::DrawCommandReader data172 = data;
HXDLIN( 528)									data172->fPos = (data172->fPos + (int)2);
            								}
            								break;
            								case (int)16: {
HXLINE( 528)									 ::openfl::_internal::renderer::DrawCommandReader data173 = data;
HXDLIN( 528)									data173->fPos = (data173->fPos + (int)2);
            								}
            								break;
            								case (int)17: {
HXLINE( 528)									 ::openfl::_internal::renderer::DrawCommandReader data174 = data;
HXDLIN( 528)									data174->oPos = (data174->oPos + (int)1);
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE( 528)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::DRAW_CIRCLE_dyn();
HXDLIN( 528)						 ::openfl::_internal::renderer::DrawCommandReader this6 = data;
HXDLIN( 528)						 ::openfl::_internal::renderer::DrawCommandReader c22 = this6;
HXLINE( 529)						hasPath = true;
HXLINE( 530)						 ::lime::graphics::cairo::Cairo _hx_tmp12 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN( 530)						Float _hx_tmp13 = (c22->buffer->f->__get(c22->fPos) - offsetX);
HXDLIN( 530)						::Array< Float > c23 = c22->buffer->f;
HXDLIN( 530)						Float _hx_tmp14 = (_hx_tmp13 + c23->__get((c22->fPos + (int)2)));
HXDLIN( 530)						::Array< Float > c24 = c22->buffer->f;
HXDLIN( 530)						_hx_tmp12->moveTo(_hx_tmp14,(c24->__get((c22->fPos + (int)1)) - offsetY));
HXLINE( 531)						 ::lime::graphics::cairo::Cairo _hx_tmp15 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN( 531)						Float _hx_tmp16 = (c22->buffer->f->__get(c22->fPos) - offsetX);
HXDLIN( 531)						::Array< Float > c25 = c22->buffer->f;
HXDLIN( 531)						Float _hx_tmp17 = (c25->__get((c22->fPos + (int)1)) - offsetY);
HXDLIN( 531)						::Array< Float > c26 = c22->buffer->f;
HXDLIN( 531)						Float c27 = c26->__get((c22->fPos + (int)2));
HXDLIN( 531)						_hx_tmp15->arc(_hx_tmp16,_hx_tmp17,c27,(int)0,(::Math_obj::PI * (int)2));
            					}
            					break;
            					case (int)6: {
HXLINE( 541)						{
HXLINE( 541)							 ::openfl::_internal::renderer::DrawCommandType _g8 = data->prev;
HXDLIN( 541)							switch((int)(_hx_getEnumValueIndex(_g8))){
            								case (int)0: {
HXLINE( 541)									 ::openfl::_internal::renderer::DrawCommandReader data175 = data;
HXDLIN( 541)									data175->oPos = (data175->oPos + (int)2);
HXDLIN( 541)									 ::openfl::_internal::renderer::DrawCommandReader data176 = data;
HXDLIN( 541)									data176->bPos = (data176->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE( 541)									 ::openfl::_internal::renderer::DrawCommandReader data177 = data;
HXDLIN( 541)									data177->iPos = (data177->iPos + (int)1);
HXDLIN( 541)									 ::openfl::_internal::renderer::DrawCommandReader data178 = data;
HXDLIN( 541)									data178->fPos = (data178->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE( 541)									 ::openfl::_internal::renderer::DrawCommandReader data179 = data;
HXDLIN( 541)									data179->oPos = (data179->oPos + (int)4);
HXDLIN( 541)									 ::openfl::_internal::renderer::DrawCommandReader data180 = data;
HXDLIN( 541)									data180->iiPos = (data180->iiPos + (int)2);
HXDLIN( 541)									 ::openfl::_internal::renderer::DrawCommandReader data181 = data;
HXDLIN( 541)									data181->ffPos = (data181->ffPos + (int)1);
HXDLIN( 541)									 ::openfl::_internal::renderer::DrawCommandReader data182 = data;
HXDLIN( 541)									data182->fPos = (data182->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE( 541)									 ::openfl::_internal::renderer::DrawCommandReader data183 = data;
HXDLIN( 541)									data183->fPos = (data183->fPos + (int)6);
            								}
            								break;
            								case (int)4: {
HXLINE( 541)									 ::openfl::_internal::renderer::DrawCommandReader data184 = data;
HXDLIN( 541)									data184->fPos = (data184->fPos + (int)4);
            								}
            								break;
            								case (int)5: {
HXLINE( 541)									 ::openfl::_internal::renderer::DrawCommandReader data185 = data;
HXDLIN( 541)									data185->fPos = (data185->fPos + (int)3);
            								}
            								break;
            								case (int)6: {
HXLINE( 541)									 ::openfl::_internal::renderer::DrawCommandReader data186 = data;
HXDLIN( 541)									data186->fPos = (data186->fPos + (int)4);
            								}
            								break;
            								case (int)7: {
HXLINE( 541)									 ::openfl::_internal::renderer::DrawCommandReader data187 = data;
HXDLIN( 541)									data187->fPos = (data187->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE( 541)									 ::openfl::_internal::renderer::DrawCommandReader data188 = data;
HXDLIN( 541)									data188->fPos = (data188->fPos + (int)5);
HXDLIN( 541)									 ::openfl::_internal::renderer::DrawCommandReader data189 = data;
HXDLIN( 541)									data189->oPos = (data189->oPos + (int)1);
            								}
            								break;
            								case (int)10: {
HXLINE( 541)									 ::openfl::_internal::renderer::DrawCommandReader data190 = data;
HXDLIN( 541)									data190->oPos = (data190->oPos + (int)4);
            								}
            								break;
            								case (int)11: {
            								}
            								break;
            								case (int)12: {
HXLINE( 541)									 ::openfl::_internal::renderer::DrawCommandReader data191 = data;
HXDLIN( 541)									data191->oPos = (data191->oPos + (int)2);
HXDLIN( 541)									 ::openfl::_internal::renderer::DrawCommandReader data192 = data;
HXDLIN( 541)									data192->bPos = (data192->bPos + (int)2);
            								}
            								break;
            								case (int)13: {
HXLINE( 541)									 ::openfl::_internal::renderer::DrawCommandReader data193 = data;
HXDLIN( 541)									data193->oPos = (data193->oPos + (int)4);
HXDLIN( 541)									 ::openfl::_internal::renderer::DrawCommandReader data194 = data;
HXDLIN( 541)									data194->iiPos = (data194->iiPos + (int)2);
HXDLIN( 541)									 ::openfl::_internal::renderer::DrawCommandReader data195 = data;
HXDLIN( 541)									data195->ffPos = (data195->ffPos + (int)1);
HXDLIN( 541)									 ::openfl::_internal::renderer::DrawCommandReader data196 = data;
HXDLIN( 541)									data196->fPos = (data196->fPos + (int)1);
            								}
            								break;
            								case (int)14: {
HXLINE( 541)									 ::openfl::_internal::renderer::DrawCommandReader data197 = data;
HXDLIN( 541)									data197->oPos = (data197->oPos + (int)4);
HXDLIN( 541)									 ::openfl::_internal::renderer::DrawCommandReader data198 = data;
HXDLIN( 541)									data198->iPos = (data198->iPos + (int)1);
HXDLIN( 541)									 ::openfl::_internal::renderer::DrawCommandReader data199 = data;
HXDLIN( 541)									data199->fPos = (data199->fPos + (int)2);
HXDLIN( 541)									 ::openfl::_internal::renderer::DrawCommandReader data200 = data;
HXDLIN( 541)									data200->bPos = (data200->bPos + (int)1);
            								}
            								break;
            								case (int)15: {
HXLINE( 541)									 ::openfl::_internal::renderer::DrawCommandReader data201 = data;
HXDLIN( 541)									data201->fPos = (data201->fPos + (int)2);
            								}
            								break;
            								case (int)16: {
HXLINE( 541)									 ::openfl::_internal::renderer::DrawCommandReader data202 = data;
HXDLIN( 541)									data202->fPos = (data202->fPos + (int)2);
            								}
            								break;
            								case (int)17: {
HXLINE( 541)									 ::openfl::_internal::renderer::DrawCommandReader data203 = data;
HXDLIN( 541)									data203->oPos = (data203->oPos + (int)1);
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE( 541)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::DRAW_ELLIPSE_dyn();
HXDLIN( 541)						 ::openfl::_internal::renderer::DrawCommandReader this7 = data;
HXDLIN( 541)						 ::openfl::_internal::renderer::DrawCommandReader c28 = this7;
HXLINE( 542)						hasPath = true;
HXLINE( 544)						Float x = c28->buffer->f->__get(c28->fPos);
HXLINE( 545)						::Array< Float > c29 = c28->buffer->f;
HXDLIN( 545)						Float y = c29->__get((c28->fPos + (int)1));
HXLINE( 546)						::Array< Float > c30 = c28->buffer->f;
HXDLIN( 546)						Float width = c30->__get((c28->fPos + (int)2));
HXLINE( 547)						::Array< Float > c31 = c28->buffer->f;
HXDLIN( 547)						Float height = c31->__get((c28->fPos + (int)3));
HXLINE( 549)						x = (x - offsetX);
HXLINE( 550)						y = (y - offsetY);
HXLINE( 552)						Float kappa = ((Float).5522848);
HXDLIN( 552)						Float ox = (((Float)width / (Float)(int)2) * kappa);
HXDLIN( 552)						Float oy = (((Float)height / (Float)(int)2) * kappa);
HXDLIN( 552)						Float xe = (x + width);
HXDLIN( 552)						Float ye = (y + height);
HXDLIN( 552)						Float xm = (x + ((Float)width / (Float)(int)2));
HXDLIN( 552)						Float ym = (y + ((Float)height / (Float)(int)2));
HXLINE( 560)						::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->moveTo(x,ym);
HXLINE( 561)						 ::lime::graphics::cairo::Cairo _hx_tmp18 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN( 561)						_hx_tmp18->curveTo(x,(ym - oy),(xm - ox),y,xm,y);
HXLINE( 562)						 ::lime::graphics::cairo::Cairo _hx_tmp19 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN( 562)						_hx_tmp19->curveTo((xm + ox),y,xe,(ym - oy),xe,ym);
HXLINE( 563)						 ::lime::graphics::cairo::Cairo _hx_tmp20 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN( 563)						_hx_tmp20->curveTo(xe,(ym + oy),(xm + ox),ye,xm,ye);
HXLINE( 564)						 ::lime::graphics::cairo::Cairo _hx_tmp21 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN( 564)						_hx_tmp21->curveTo((xm - ox),ye,x,(ym + oy),x,ym);
            					}
            					break;
            					case (int)7: {
HXLINE( 535)						{
HXLINE( 535)							 ::openfl::_internal::renderer::DrawCommandType _g9 = data->prev;
HXDLIN( 535)							switch((int)(_hx_getEnumValueIndex(_g9))){
            								case (int)0: {
HXLINE( 535)									 ::openfl::_internal::renderer::DrawCommandReader data204 = data;
HXDLIN( 535)									data204->oPos = (data204->oPos + (int)2);
HXDLIN( 535)									 ::openfl::_internal::renderer::DrawCommandReader data205 = data;
HXDLIN( 535)									data205->bPos = (data205->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE( 535)									 ::openfl::_internal::renderer::DrawCommandReader data206 = data;
HXDLIN( 535)									data206->iPos = (data206->iPos + (int)1);
HXDLIN( 535)									 ::openfl::_internal::renderer::DrawCommandReader data207 = data;
HXDLIN( 535)									data207->fPos = (data207->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE( 535)									 ::openfl::_internal::renderer::DrawCommandReader data208 = data;
HXDLIN( 535)									data208->oPos = (data208->oPos + (int)4);
HXDLIN( 535)									 ::openfl::_internal::renderer::DrawCommandReader data209 = data;
HXDLIN( 535)									data209->iiPos = (data209->iiPos + (int)2);
HXDLIN( 535)									 ::openfl::_internal::renderer::DrawCommandReader data210 = data;
HXDLIN( 535)									data210->ffPos = (data210->ffPos + (int)1);
HXDLIN( 535)									 ::openfl::_internal::renderer::DrawCommandReader data211 = data;
HXDLIN( 535)									data211->fPos = (data211->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE( 535)									 ::openfl::_internal::renderer::DrawCommandReader data212 = data;
HXDLIN( 535)									data212->fPos = (data212->fPos + (int)6);
            								}
            								break;
            								case (int)4: {
HXLINE( 535)									 ::openfl::_internal::renderer::DrawCommandReader data213 = data;
HXDLIN( 535)									data213->fPos = (data213->fPos + (int)4);
            								}
            								break;
            								case (int)5: {
HXLINE( 535)									 ::openfl::_internal::renderer::DrawCommandReader data214 = data;
HXDLIN( 535)									data214->fPos = (data214->fPos + (int)3);
            								}
            								break;
            								case (int)6: {
HXLINE( 535)									 ::openfl::_internal::renderer::DrawCommandReader data215 = data;
HXDLIN( 535)									data215->fPos = (data215->fPos + (int)4);
            								}
            								break;
            								case (int)7: {
HXLINE( 535)									 ::openfl::_internal::renderer::DrawCommandReader data216 = data;
HXDLIN( 535)									data216->fPos = (data216->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE( 535)									 ::openfl::_internal::renderer::DrawCommandReader data217 = data;
HXDLIN( 535)									data217->fPos = (data217->fPos + (int)5);
HXDLIN( 535)									 ::openfl::_internal::renderer::DrawCommandReader data218 = data;
HXDLIN( 535)									data218->oPos = (data218->oPos + (int)1);
            								}
            								break;
            								case (int)10: {
HXLINE( 535)									 ::openfl::_internal::renderer::DrawCommandReader data219 = data;
HXDLIN( 535)									data219->oPos = (data219->oPos + (int)4);
            								}
            								break;
            								case (int)11: {
            								}
            								break;
            								case (int)12: {
HXLINE( 535)									 ::openfl::_internal::renderer::DrawCommandReader data220 = data;
HXDLIN( 535)									data220->oPos = (data220->oPos + (int)2);
HXDLIN( 535)									 ::openfl::_internal::renderer::DrawCommandReader data221 = data;
HXDLIN( 535)									data221->bPos = (data221->bPos + (int)2);
            								}
            								break;
            								case (int)13: {
HXLINE( 535)									 ::openfl::_internal::renderer::DrawCommandReader data222 = data;
HXDLIN( 535)									data222->oPos = (data222->oPos + (int)4);
HXDLIN( 535)									 ::openfl::_internal::renderer::DrawCommandReader data223 = data;
HXDLIN( 535)									data223->iiPos = (data223->iiPos + (int)2);
HXDLIN( 535)									 ::openfl::_internal::renderer::DrawCommandReader data224 = data;
HXDLIN( 535)									data224->ffPos = (data224->ffPos + (int)1);
HXDLIN( 535)									 ::openfl::_internal::renderer::DrawCommandReader data225 = data;
HXDLIN( 535)									data225->fPos = (data225->fPos + (int)1);
            								}
            								break;
            								case (int)14: {
HXLINE( 535)									 ::openfl::_internal::renderer::DrawCommandReader data226 = data;
HXDLIN( 535)									data226->oPos = (data226->oPos + (int)4);
HXDLIN( 535)									 ::openfl::_internal::renderer::DrawCommandReader data227 = data;
HXDLIN( 535)									data227->iPos = (data227->iPos + (int)1);
HXDLIN( 535)									 ::openfl::_internal::renderer::DrawCommandReader data228 = data;
HXDLIN( 535)									data228->fPos = (data228->fPos + (int)2);
HXDLIN( 535)									 ::openfl::_internal::renderer::DrawCommandReader data229 = data;
HXDLIN( 535)									data229->bPos = (data229->bPos + (int)1);
            								}
            								break;
            								case (int)15: {
HXLINE( 535)									 ::openfl::_internal::renderer::DrawCommandReader data230 = data;
HXDLIN( 535)									data230->fPos = (data230->fPos + (int)2);
            								}
            								break;
            								case (int)16: {
HXLINE( 535)									 ::openfl::_internal::renderer::DrawCommandReader data231 = data;
HXDLIN( 535)									data231->fPos = (data231->fPos + (int)2);
            								}
            								break;
            								case (int)17: {
HXLINE( 535)									 ::openfl::_internal::renderer::DrawCommandReader data232 = data;
HXDLIN( 535)									data232->oPos = (data232->oPos + (int)1);
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE( 535)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::DRAW_RECT_dyn();
HXDLIN( 535)						 ::openfl::_internal::renderer::DrawCommandReader this8 = data;
HXDLIN( 535)						 ::openfl::_internal::renderer::DrawCommandReader c32 = this8;
HXLINE( 536)						hasPath = true;
HXLINE( 537)						 ::lime::graphics::cairo::Cairo _hx_tmp22 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN( 537)						Float _hx_tmp23 = (c32->buffer->f->__get(c32->fPos) - offsetX);
HXDLIN( 537)						::Array< Float > c33 = c32->buffer->f;
HXDLIN( 537)						Float _hx_tmp24 = (c33->__get((c32->fPos + (int)1)) - offsetY);
HXDLIN( 537)						::Array< Float > c34 = c32->buffer->f;
HXDLIN( 537)						Float c35 = c34->__get((c32->fPos + (int)2));
HXDLIN( 537)						::Array< Float > c36 = c32->buffer->f;
HXDLIN( 537)						_hx_tmp22->rectangle(_hx_tmp23,_hx_tmp24,c35,c36->__get((c32->fPos + (int)3)));
            					}
            					break;
            					case (int)8: {
HXLINE( 568)						{
HXLINE( 568)							 ::openfl::_internal::renderer::DrawCommandType _g10 = data->prev;
HXDLIN( 568)							switch((int)(_hx_getEnumValueIndex(_g10))){
            								case (int)0: {
HXLINE( 568)									 ::openfl::_internal::renderer::DrawCommandReader data233 = data;
HXDLIN( 568)									data233->oPos = (data233->oPos + (int)2);
HXDLIN( 568)									 ::openfl::_internal::renderer::DrawCommandReader data234 = data;
HXDLIN( 568)									data234->bPos = (data234->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE( 568)									 ::openfl::_internal::renderer::DrawCommandReader data235 = data;
HXDLIN( 568)									data235->iPos = (data235->iPos + (int)1);
HXDLIN( 568)									 ::openfl::_internal::renderer::DrawCommandReader data236 = data;
HXDLIN( 568)									data236->fPos = (data236->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE( 568)									 ::openfl::_internal::renderer::DrawCommandReader data237 = data;
HXDLIN( 568)									data237->oPos = (data237->oPos + (int)4);
HXDLIN( 568)									 ::openfl::_internal::renderer::DrawCommandReader data238 = data;
HXDLIN( 568)									data238->iiPos = (data238->iiPos + (int)2);
HXDLIN( 568)									 ::openfl::_internal::renderer::DrawCommandReader data239 = data;
HXDLIN( 568)									data239->ffPos = (data239->ffPos + (int)1);
HXDLIN( 568)									 ::openfl::_internal::renderer::DrawCommandReader data240 = data;
HXDLIN( 568)									data240->fPos = (data240->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE( 568)									 ::openfl::_internal::renderer::DrawCommandReader data241 = data;
HXDLIN( 568)									data241->fPos = (data241->fPos + (int)6);
            								}
            								break;
            								case (int)4: {
HXLINE( 568)									 ::openfl::_internal::renderer::DrawCommandReader data242 = data;
HXDLIN( 568)									data242->fPos = (data242->fPos + (int)4);
            								}
            								break;
            								case (int)5: {
HXLINE( 568)									 ::openfl::_internal::renderer::DrawCommandReader data243 = data;
HXDLIN( 568)									data243->fPos = (data243->fPos + (int)3);
            								}
            								break;
            								case (int)6: {
HXLINE( 568)									 ::openfl::_internal::renderer::DrawCommandReader data244 = data;
HXDLIN( 568)									data244->fPos = (data244->fPos + (int)4);
            								}
            								break;
            								case (int)7: {
HXLINE( 568)									 ::openfl::_internal::renderer::DrawCommandReader data245 = data;
HXDLIN( 568)									data245->fPos = (data245->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE( 568)									 ::openfl::_internal::renderer::DrawCommandReader data246 = data;
HXDLIN( 568)									data246->fPos = (data246->fPos + (int)5);
HXDLIN( 568)									 ::openfl::_internal::renderer::DrawCommandReader data247 = data;
HXDLIN( 568)									data247->oPos = (data247->oPos + (int)1);
            								}
            								break;
            								case (int)10: {
HXLINE( 568)									 ::openfl::_internal::renderer::DrawCommandReader data248 = data;
HXDLIN( 568)									data248->oPos = (data248->oPos + (int)4);
            								}
            								break;
            								case (int)11: {
            								}
            								break;
            								case (int)12: {
HXLINE( 568)									 ::openfl::_internal::renderer::DrawCommandReader data249 = data;
HXDLIN( 568)									data249->oPos = (data249->oPos + (int)2);
HXDLIN( 568)									 ::openfl::_internal::renderer::DrawCommandReader data250 = data;
HXDLIN( 568)									data250->bPos = (data250->bPos + (int)2);
            								}
            								break;
            								case (int)13: {
HXLINE( 568)									 ::openfl::_internal::renderer::DrawCommandReader data251 = data;
HXDLIN( 568)									data251->oPos = (data251->oPos + (int)4);
HXDLIN( 568)									 ::openfl::_internal::renderer::DrawCommandReader data252 = data;
HXDLIN( 568)									data252->iiPos = (data252->iiPos + (int)2);
HXDLIN( 568)									 ::openfl::_internal::renderer::DrawCommandReader data253 = data;
HXDLIN( 568)									data253->ffPos = (data253->ffPos + (int)1);
HXDLIN( 568)									 ::openfl::_internal::renderer::DrawCommandReader data254 = data;
HXDLIN( 568)									data254->fPos = (data254->fPos + (int)1);
            								}
            								break;
            								case (int)14: {
HXLINE( 568)									 ::openfl::_internal::renderer::DrawCommandReader data255 = data;
HXDLIN( 568)									data255->oPos = (data255->oPos + (int)4);
HXDLIN( 568)									 ::openfl::_internal::renderer::DrawCommandReader data256 = data;
HXDLIN( 568)									data256->iPos = (data256->iPos + (int)1);
HXDLIN( 568)									 ::openfl::_internal::renderer::DrawCommandReader data257 = data;
HXDLIN( 568)									data257->fPos = (data257->fPos + (int)2);
HXDLIN( 568)									 ::openfl::_internal::renderer::DrawCommandReader data258 = data;
HXDLIN( 568)									data258->bPos = (data258->bPos + (int)1);
            								}
            								break;
            								case (int)15: {
HXLINE( 568)									 ::openfl::_internal::renderer::DrawCommandReader data259 = data;
HXDLIN( 568)									data259->fPos = (data259->fPos + (int)2);
            								}
            								break;
            								case (int)16: {
HXLINE( 568)									 ::openfl::_internal::renderer::DrawCommandReader data260 = data;
HXDLIN( 568)									data260->fPos = (data260->fPos + (int)2);
            								}
            								break;
            								case (int)17: {
HXLINE( 568)									 ::openfl::_internal::renderer::DrawCommandReader data261 = data;
HXDLIN( 568)									data261->oPos = (data261->oPos + (int)1);
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE( 568)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::DRAW_ROUND_RECT_dyn();
HXDLIN( 568)						 ::openfl::_internal::renderer::DrawCommandReader this9 = data;
HXDLIN( 568)						 ::openfl::_internal::renderer::DrawCommandReader c37 = this9;
HXLINE( 569)						hasPath = true;
HXLINE( 570)						Float _hx_tmp25 = (c37->buffer->f->__get(c37->fPos) - offsetX);
HXDLIN( 570)						::Array< Float > c38 = c37->buffer->f;
HXDLIN( 570)						Float _hx_tmp26 = (c38->__get((c37->fPos + (int)1)) - offsetY);
HXDLIN( 570)						::Array< Float > c39 = c37->buffer->f;
HXDLIN( 570)						Float c40 = c39->__get((c37->fPos + (int)2));
HXDLIN( 570)						::Array< Float > c41 = c37->buffer->f;
HXDLIN( 570)						Float c42 = c41->__get((c37->fPos + (int)3));
HXDLIN( 570)						::Array< Float > c43 = c37->buffer->f;
HXDLIN( 570)						::openfl::_internal::renderer::cairo::CairoGraphics_obj::drawRoundRect(_hx_tmp25,_hx_tmp26,c40,c42,c43->__get((c37->fPos + (int)4)),c37->buffer->o->__get(c37->oPos));
            					}
            					break;
            					case (int)10: {
HXLINE( 740)						{
HXLINE( 740)							 ::openfl::_internal::renderer::DrawCommandType _g11 = data->prev;
HXDLIN( 740)							switch((int)(_hx_getEnumValueIndex(_g11))){
            								case (int)0: {
HXLINE( 740)									 ::openfl::_internal::renderer::DrawCommandReader data262 = data;
HXDLIN( 740)									data262->oPos = (data262->oPos + (int)2);
HXDLIN( 740)									 ::openfl::_internal::renderer::DrawCommandReader data263 = data;
HXDLIN( 740)									data263->bPos = (data263->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE( 740)									 ::openfl::_internal::renderer::DrawCommandReader data264 = data;
HXDLIN( 740)									data264->iPos = (data264->iPos + (int)1);
HXDLIN( 740)									 ::openfl::_internal::renderer::DrawCommandReader data265 = data;
HXDLIN( 740)									data265->fPos = (data265->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE( 740)									 ::openfl::_internal::renderer::DrawCommandReader data266 = data;
HXDLIN( 740)									data266->oPos = (data266->oPos + (int)4);
HXDLIN( 740)									 ::openfl::_internal::renderer::DrawCommandReader data267 = data;
HXDLIN( 740)									data267->iiPos = (data267->iiPos + (int)2);
HXDLIN( 740)									 ::openfl::_internal::renderer::DrawCommandReader data268 = data;
HXDLIN( 740)									data268->ffPos = (data268->ffPos + (int)1);
HXDLIN( 740)									 ::openfl::_internal::renderer::DrawCommandReader data269 = data;
HXDLIN( 740)									data269->fPos = (data269->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE( 740)									 ::openfl::_internal::renderer::DrawCommandReader data270 = data;
HXDLIN( 740)									data270->fPos = (data270->fPos + (int)6);
            								}
            								break;
            								case (int)4: {
HXLINE( 740)									 ::openfl::_internal::renderer::DrawCommandReader data271 = data;
HXDLIN( 740)									data271->fPos = (data271->fPos + (int)4);
            								}
            								break;
            								case (int)5: {
HXLINE( 740)									 ::openfl::_internal::renderer::DrawCommandReader data272 = data;
HXDLIN( 740)									data272->fPos = (data272->fPos + (int)3);
            								}
            								break;
            								case (int)6: {
HXLINE( 740)									 ::openfl::_internal::renderer::DrawCommandReader data273 = data;
HXDLIN( 740)									data273->fPos = (data273->fPos + (int)4);
            								}
            								break;
            								case (int)7: {
HXLINE( 740)									 ::openfl::_internal::renderer::DrawCommandReader data274 = data;
HXDLIN( 740)									data274->fPos = (data274->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE( 740)									 ::openfl::_internal::renderer::DrawCommandReader data275 = data;
HXDLIN( 740)									data275->fPos = (data275->fPos + (int)5);
HXDLIN( 740)									 ::openfl::_internal::renderer::DrawCommandReader data276 = data;
HXDLIN( 740)									data276->oPos = (data276->oPos + (int)1);
            								}
            								break;
            								case (int)10: {
HXLINE( 740)									 ::openfl::_internal::renderer::DrawCommandReader data277 = data;
HXDLIN( 740)									data277->oPos = (data277->oPos + (int)4);
            								}
            								break;
            								case (int)11: {
            								}
            								break;
            								case (int)12: {
HXLINE( 740)									 ::openfl::_internal::renderer::DrawCommandReader data278 = data;
HXDLIN( 740)									data278->oPos = (data278->oPos + (int)2);
HXDLIN( 740)									 ::openfl::_internal::renderer::DrawCommandReader data279 = data;
HXDLIN( 740)									data279->bPos = (data279->bPos + (int)2);
            								}
            								break;
            								case (int)13: {
HXLINE( 740)									 ::openfl::_internal::renderer::DrawCommandReader data280 = data;
HXDLIN( 740)									data280->oPos = (data280->oPos + (int)4);
HXDLIN( 740)									 ::openfl::_internal::renderer::DrawCommandReader data281 = data;
HXDLIN( 740)									data281->iiPos = (data281->iiPos + (int)2);
HXDLIN( 740)									 ::openfl::_internal::renderer::DrawCommandReader data282 = data;
HXDLIN( 740)									data282->ffPos = (data282->ffPos + (int)1);
HXDLIN( 740)									 ::openfl::_internal::renderer::DrawCommandReader data283 = data;
HXDLIN( 740)									data283->fPos = (data283->fPos + (int)1);
            								}
            								break;
            								case (int)14: {
HXLINE( 740)									 ::openfl::_internal::renderer::DrawCommandReader data284 = data;
HXDLIN( 740)									data284->oPos = (data284->oPos + (int)4);
HXDLIN( 740)									 ::openfl::_internal::renderer::DrawCommandReader data285 = data;
HXDLIN( 740)									data285->iPos = (data285->iPos + (int)1);
HXDLIN( 740)									 ::openfl::_internal::renderer::DrawCommandReader data286 = data;
HXDLIN( 740)									data286->fPos = (data286->fPos + (int)2);
HXDLIN( 740)									 ::openfl::_internal::renderer::DrawCommandReader data287 = data;
HXDLIN( 740)									data287->bPos = (data287->bPos + (int)1);
            								}
            								break;
            								case (int)15: {
HXLINE( 740)									 ::openfl::_internal::renderer::DrawCommandReader data288 = data;
HXDLIN( 740)									data288->fPos = (data288->fPos + (int)2);
            								}
            								break;
            								case (int)16: {
HXLINE( 740)									 ::openfl::_internal::renderer::DrawCommandReader data289 = data;
HXDLIN( 740)									data289->fPos = (data289->fPos + (int)2);
            								}
            								break;
            								case (int)17: {
HXLINE( 740)									 ::openfl::_internal::renderer::DrawCommandReader data290 = data;
HXDLIN( 740)									data290->oPos = (data290->oPos + (int)1);
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE( 740)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::DRAW_TRIANGLES_dyn();
HXDLIN( 740)						 ::openfl::_internal::renderer::DrawCommandReader this10 = data;
HXDLIN( 740)						 ::openfl::_internal::renderer::DrawCommandReader c44 = this10;
HXLINE( 741)						 ::openfl::_Vector::FloatVector v = ( ( ::openfl::_Vector::FloatVector)(c44->buffer->o->__get(c44->oPos)) );
HXLINE( 742)						::cpp::VirtualArray c45 = c44->buffer->o;
HXDLIN( 742)						 ::openfl::_Vector::IntVector ind = ( ( ::openfl::_Vector::IntVector)(c45->__get((c44->oPos + (int)1))) );
HXLINE( 743)						::cpp::VirtualArray c46 = c44->buffer->o;
HXDLIN( 743)						 ::openfl::_Vector::FloatVector uvt = ( ( ::openfl::_Vector::FloatVector)(c46->__get((c44->oPos + (int)2))) );
HXLINE( 744)						bool colorFill = hx::IsNull( ::openfl::_internal::renderer::cairo::CairoGraphics_obj::bitmapFill );
HXLINE( 746)						bool _hx_tmp27;
HXDLIN( 746)						if (colorFill) {
HXLINE( 746)							_hx_tmp27 = hx::IsNotNull( uvt );
            						}
            						else {
HXLINE( 746)							_hx_tmp27 = false;
            						}
HXDLIN( 746)						if (_hx_tmp27) {
HXLINE( 748)							goto _hx_goto_14;
            						}
HXLINE( 752)						int width1 = (int)0;
HXLINE( 753)						int height1 = (int)0;
HXLINE( 754)						 ::lime::math::Matrix3 currentMatrix = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::graphics->_hx___renderTransform->_hx___toMatrix3();
HXLINE( 756)						if (!(colorFill)) {
HXLINE( 760)							if (hx::IsNull( uvt )) {
HXLINE( 762)								int length = null();
HXDLIN( 762)								bool fixed = null();
HXDLIN( 762)								uvt =  ::openfl::_Vector::FloatVector_obj::__alloc( HX_CTX ,length,fixed,null());
HXLINE( 764)								{
HXLINE( 764)									int _g31 = (int)0;
HXDLIN( 764)									int _g21 = ::Std_obj::_hx_int(((Float)v->get_length() / (Float)(int)2));
HXDLIN( 764)									while((_g31 < _g21)){
HXLINE( 764)										_g31 = (_g31 + (int)1);
HXDLIN( 764)										int i = (_g31 - (int)1);
HXLINE( 766)										uvt->push(((Float)v->get((i * (int)2)) / (Float)::openfl::_internal::renderer::cairo::CairoGraphics_obj::bitmapFill->width));
HXLINE( 767)										uvt->push(((Float)v->get(((i * (int)2) + (int)1)) / (Float)::openfl::_internal::renderer::cairo::CairoGraphics_obj::bitmapFill->height));
            									}
            								}
            							}
HXLINE( 773)							::cpp::VirtualArray c47 = c44->buffer->o;
HXDLIN( 773)							int skipT = ( (int)(( ( ::openfl::_Vector::FloatVector)(c47->__get((c44->oPos + (int)2))) )->__Field(HX_("get_length",af,04,8f,8f),hx::paccDynamic)()) );
HXDLIN( 773)							bool skipT1 = (skipT != v->get_length());
HXLINE( 774)							 ::Dynamic normalizedUVT = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::normalizeUVT(uvt,skipT1);
HXLINE( 775)							Float maxUVT = ( (Float)(normalizedUVT->__Field(HX_("max",a4,0a,53,00),hx::paccDynamic)) );
HXLINE( 776)							uvt = ( ( ::openfl::_Vector::FloatVector)(normalizedUVT->__Field(HX_("uvt",f3,2e,59,00),hx::paccDynamic)) );
HXLINE( 778)							if ((maxUVT > (int)1)) {
HXLINE( 779)								width1 = ::Std_obj::_hx_int(::openfl::_internal::renderer::cairo::CairoGraphics_obj::bounds->width);
HXLINE( 780)								height1 = ::Std_obj::_hx_int(::openfl::_internal::renderer::cairo::CairoGraphics_obj::bounds->height);
            							}
            							else {
HXLINE( 785)								width1 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::bitmapFill->width;
HXLINE( 786)								height1 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::bitmapFill->height;
            							}
            						}
HXLINE( 792)						int i1 = (int)0;
HXLINE( 793)						int l = ind->get_length();
HXLINE( 795)						int a_;
HXDLIN( 795)						int b_;
HXDLIN( 795)						int c_;
HXLINE( 796)						int iax;
HXDLIN( 796)						int iay;
HXDLIN( 796)						int ibx;
HXDLIN( 796)						int iby;
HXDLIN( 796)						int icx;
HXDLIN( 796)						int icy;
HXLINE( 797)						Float x1;
HXDLIN( 797)						Float y1;
HXDLIN( 797)						Float x2;
HXDLIN( 797)						Float y2;
HXDLIN( 797)						Float x3;
HXDLIN( 797)						Float y3;
HXLINE( 798)						Float uvx1;
HXDLIN( 798)						Float uvy1;
HXDLIN( 798)						Float uvx2;
HXDLIN( 798)						Float uvy2;
HXDLIN( 798)						Float uvx3;
HXDLIN( 798)						Float uvy3;
HXLINE( 799)						Float denom;
HXLINE( 800)						Float t1;
HXDLIN( 800)						Float t2;
HXDLIN( 800)						Float t3;
HXDLIN( 800)						Float t4;
HXLINE( 801)						Float dx;
HXDLIN( 801)						Float dy;
HXLINE( 803)						::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->set_antialias((int)1);
HXLINE( 805)						while((i1 < l)){
HXLINE( 807)							a_ = i1;
HXLINE( 808)							b_ = (i1 + (int)1);
HXLINE( 809)							c_ = (i1 + (int)2);
HXLINE( 811)							iax = (ind->get(a_) * (int)2);
HXLINE( 812)							iay = ((ind->get(a_) * (int)2) + (int)1);
HXLINE( 813)							ibx = (ind->get(b_) * (int)2);
HXLINE( 814)							iby = ((ind->get(b_) * (int)2) + (int)1);
HXLINE( 815)							icx = (ind->get(c_) * (int)2);
HXLINE( 816)							icy = ((ind->get(c_) * (int)2) + (int)1);
HXLINE( 818)							x1 = v->get(iax);
HXLINE( 819)							y1 = v->get(iay);
HXLINE( 820)							x2 = v->get(ibx);
HXLINE( 821)							y2 = v->get(iby);
HXLINE( 822)							x3 = v->get(icx);
HXLINE( 823)							y3 = v->get(icy);
HXLINE( 825)							{
HXLINE( 825)								::cpp::VirtualArray c48 = c44->buffer->o;
HXDLIN( 825)								 ::Dynamic _g22 = c48->__get((c44->oPos + (int)3));
HXDLIN( 825)								 ::Dynamic _hx_switch_0 = _g22;
            								if (  (_hx_switch_0==(int)0) ){
HXLINE( 838)									if (((((x2 - x1) * (y3 - y1)) - ((y2 - y1) * (x3 - x1))) < (int)0)) {
HXLINE( 840)										i1 = (i1 + (int)3);
HXLINE( 841)										continue;
            									}
HXLINE( 838)									goto _hx_goto_17;
            								}
            								if (  (_hx_switch_0==(int)2) ){
HXLINE( 829)									if (!(((((x2 - x1) * (y3 - y1)) - ((y2 - y1) * (x3 - x1))) < (int)0))) {
HXLINE( 831)										i1 = (i1 + (int)3);
HXLINE( 832)										continue;
            									}
HXLINE( 829)									goto _hx_goto_17;
            								}
            								/* default */{
            								}
            								_hx_goto_17:;
            							}
HXLINE( 849)							if (colorFill) {
HXLINE( 851)								::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->newPath();
HXLINE( 852)								::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->moveTo(x1,y1);
HXLINE( 853)								::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->lineTo(x2,y2);
HXLINE( 854)								::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->lineTo(x3,y3);
HXLINE( 855)								::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->closePath();
HXLINE( 856)								if (!(::openfl::_internal::renderer::cairo::CairoGraphics_obj::hitTesting)) {
HXLINE( 856)									::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->fillPreserve();
            								}
HXLINE( 857)								i1 = (i1 + (int)3);
HXLINE( 858)								continue;
            							}
HXLINE( 862)							 ::lime::graphics::cairo::Cairo _hx_tmp28 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN( 862)							_hx_tmp28->set_matrix(::openfl::_internal::renderer::cairo::CairoGraphics_obj::graphics->_hx___renderTransform->_hx___toMatrix3());
HXLINE( 866)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->newPath();
HXLINE( 867)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->moveTo(x1,y1);
HXLINE( 868)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->lineTo(x2,y2);
HXLINE( 869)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->lineTo(x3,y3);
HXLINE( 870)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->closePath();
HXLINE( 873)							uvx1 = (uvt->get(iax) * width1);
HXLINE( 874)							uvx2 = (uvt->get(ibx) * width1);
HXLINE( 875)							uvx3 = (uvt->get(icx) * width1);
HXLINE( 876)							uvy1 = (uvt->get(iay) * height1);
HXLINE( 877)							uvy2 = (uvt->get(iby) * height1);
HXLINE( 878)							uvy3 = (uvt->get(icy) * height1);
HXLINE( 880)							denom = ((((uvx1 * (uvy3 - uvy2)) - (uvx2 * uvy3)) + (uvx3 * uvy2)) + ((uvx2 - uvx3) * uvy1));
HXLINE( 882)							if ((denom == (int)0)) {
HXLINE( 884)								i1 = (i1 + (int)3);
HXLINE( 885)								continue;
            							}
HXLINE( 889)							x1 = (x1 * currentMatrix->a);
HXLINE( 890)							x2 = (x2 * currentMatrix->a);
HXLINE( 891)							x3 = (x3 * currentMatrix->a);
HXLINE( 892)							y1 = (y1 * currentMatrix->d);
HXLINE( 893)							y2 = (y2 * currentMatrix->d);
HXLINE( 894)							y3 = (y3 * currentMatrix->d);
HXLINE( 896)							t1 = ((Float)-(((((uvy1 * (x3 - x2)) - (uvy2 * x3)) + (uvy3 * x2)) + ((uvy2 - uvy3) * x1))) / (Float)denom);
HXLINE( 897)							t2 = ((Float)((((uvy2 * y3) + (uvy1 * (y2 - y3))) - (uvy3 * y2)) + ((uvy3 - uvy2) * y1)) / (Float)denom);
HXLINE( 898)							t3 = ((Float)((((uvx1 * (x3 - x2)) - (uvx2 * x3)) + (uvx3 * x2)) + ((uvx2 - uvx3) * x1)) / (Float)denom);
HXLINE( 899)							t4 = ((Float)-(((((uvx2 * y3) + (uvx1 * (y2 - y3))) - (uvx3 * y2)) + ((uvx3 - uvx2) * y1))) / (Float)denom);
HXLINE( 900)							dx = ((Float)(((uvx1 * ((uvy3 * x2) - (uvy2 * x3))) + (uvy1 * ((uvx2 * x3) - (uvx3 * x2)))) + (((uvx3 * uvy2) - (uvx2 * uvy3)) * x1)) / (Float)denom);
HXLINE( 901)							dy = ((Float)(((uvx1 * ((uvy3 * y2) - (uvy2 * y3))) + (uvy1 * ((uvx2 * y3) - (uvx3 * y2)))) + (((uvx3 * uvy2) - (uvx2 * uvy3)) * y1)) / (Float)denom);
HXLINE( 903)							 ::lime::math::Matrix3 matrix =  ::lime::math::Matrix3_obj::__alloc( HX_CTX ,t1,t2,t3,t4,dx,dy);
HXLINE( 904)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->set_matrix(matrix);
HXLINE( 905)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->set_source(::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillPattern);
HXLINE( 906)							if (!(::openfl::_internal::renderer::cairo::CairoGraphics_obj::hitTesting)) {
HXLINE( 906)								::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->fill();
            							}
HXLINE( 908)							i1 = (i1 + (int)3);
            						}
            					}
            					break;
            					case (int)12: {
HXLINE( 680)						{
HXLINE( 680)							 ::openfl::_internal::renderer::DrawCommandType _g12 = data->prev;
HXDLIN( 680)							switch((int)(_hx_getEnumValueIndex(_g12))){
            								case (int)0: {
HXLINE( 680)									 ::openfl::_internal::renderer::DrawCommandReader data291 = data;
HXDLIN( 680)									data291->oPos = (data291->oPos + (int)2);
HXDLIN( 680)									 ::openfl::_internal::renderer::DrawCommandReader data292 = data;
HXDLIN( 680)									data292->bPos = (data292->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE( 680)									 ::openfl::_internal::renderer::DrawCommandReader data293 = data;
HXDLIN( 680)									data293->iPos = (data293->iPos + (int)1);
HXDLIN( 680)									 ::openfl::_internal::renderer::DrawCommandReader data294 = data;
HXDLIN( 680)									data294->fPos = (data294->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE( 680)									 ::openfl::_internal::renderer::DrawCommandReader data295 = data;
HXDLIN( 680)									data295->oPos = (data295->oPos + (int)4);
HXDLIN( 680)									 ::openfl::_internal::renderer::DrawCommandReader data296 = data;
HXDLIN( 680)									data296->iiPos = (data296->iiPos + (int)2);
HXDLIN( 680)									 ::openfl::_internal::renderer::DrawCommandReader data297 = data;
HXDLIN( 680)									data297->ffPos = (data297->ffPos + (int)1);
HXDLIN( 680)									 ::openfl::_internal::renderer::DrawCommandReader data298 = data;
HXDLIN( 680)									data298->fPos = (data298->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE( 680)									 ::openfl::_internal::renderer::DrawCommandReader data299 = data;
HXDLIN( 680)									data299->fPos = (data299->fPos + (int)6);
            								}
            								break;
            								case (int)4: {
HXLINE( 680)									 ::openfl::_internal::renderer::DrawCommandReader data300 = data;
HXDLIN( 680)									data300->fPos = (data300->fPos + (int)4);
            								}
            								break;
            								case (int)5: {
HXLINE( 680)									 ::openfl::_internal::renderer::DrawCommandReader data301 = data;
HXDLIN( 680)									data301->fPos = (data301->fPos + (int)3);
            								}
            								break;
            								case (int)6: {
HXLINE( 680)									 ::openfl::_internal::renderer::DrawCommandReader data302 = data;
HXDLIN( 680)									data302->fPos = (data302->fPos + (int)4);
            								}
            								break;
            								case (int)7: {
HXLINE( 680)									 ::openfl::_internal::renderer::DrawCommandReader data303 = data;
HXDLIN( 680)									data303->fPos = (data303->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE( 680)									 ::openfl::_internal::renderer::DrawCommandReader data304 = data;
HXDLIN( 680)									data304->fPos = (data304->fPos + (int)5);
HXDLIN( 680)									 ::openfl::_internal::renderer::DrawCommandReader data305 = data;
HXDLIN( 680)									data305->oPos = (data305->oPos + (int)1);
            								}
            								break;
            								case (int)10: {
HXLINE( 680)									 ::openfl::_internal::renderer::DrawCommandReader data306 = data;
HXDLIN( 680)									data306->oPos = (data306->oPos + (int)4);
            								}
            								break;
            								case (int)11: {
            								}
            								break;
            								case (int)12: {
HXLINE( 680)									 ::openfl::_internal::renderer::DrawCommandReader data307 = data;
HXDLIN( 680)									data307->oPos = (data307->oPos + (int)2);
HXDLIN( 680)									 ::openfl::_internal::renderer::DrawCommandReader data308 = data;
HXDLIN( 680)									data308->bPos = (data308->bPos + (int)2);
            								}
            								break;
            								case (int)13: {
HXLINE( 680)									 ::openfl::_internal::renderer::DrawCommandReader data309 = data;
HXDLIN( 680)									data309->oPos = (data309->oPos + (int)4);
HXDLIN( 680)									 ::openfl::_internal::renderer::DrawCommandReader data310 = data;
HXDLIN( 680)									data310->iiPos = (data310->iiPos + (int)2);
HXDLIN( 680)									 ::openfl::_internal::renderer::DrawCommandReader data311 = data;
HXDLIN( 680)									data311->ffPos = (data311->ffPos + (int)1);
HXDLIN( 680)									 ::openfl::_internal::renderer::DrawCommandReader data312 = data;
HXDLIN( 680)									data312->fPos = (data312->fPos + (int)1);
            								}
            								break;
            								case (int)14: {
HXLINE( 680)									 ::openfl::_internal::renderer::DrawCommandReader data313 = data;
HXDLIN( 680)									data313->oPos = (data313->oPos + (int)4);
HXDLIN( 680)									 ::openfl::_internal::renderer::DrawCommandReader data314 = data;
HXDLIN( 680)									data314->iPos = (data314->iPos + (int)1);
HXDLIN( 680)									 ::openfl::_internal::renderer::DrawCommandReader data315 = data;
HXDLIN( 680)									data315->fPos = (data315->fPos + (int)2);
HXDLIN( 680)									 ::openfl::_internal::renderer::DrawCommandReader data316 = data;
HXDLIN( 680)									data316->bPos = (data316->bPos + (int)1);
            								}
            								break;
            								case (int)15: {
HXLINE( 680)									 ::openfl::_internal::renderer::DrawCommandReader data317 = data;
HXDLIN( 680)									data317->fPos = (data317->fPos + (int)2);
            								}
            								break;
            								case (int)16: {
HXLINE( 680)									 ::openfl::_internal::renderer::DrawCommandReader data318 = data;
HXDLIN( 680)									data318->fPos = (data318->fPos + (int)2);
            								}
            								break;
            								case (int)17: {
HXLINE( 680)									 ::openfl::_internal::renderer::DrawCommandReader data319 = data;
HXDLIN( 680)									data319->oPos = (data319->oPos + (int)1);
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE( 680)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::LINE_BITMAP_STYLE_dyn();
HXDLIN( 680)						 ::openfl::_internal::renderer::DrawCommandReader this11 = data;
HXDLIN( 680)						 ::openfl::_internal::renderer::DrawCommandReader c49 = this11;
HXLINE( 681)						bool _hx_tmp29;
HXDLIN( 681)						if (stroke) {
HXLINE( 681)							_hx_tmp29 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasStroke;
            						}
            						else {
HXLINE( 681)							_hx_tmp29 = false;
            						}
HXDLIN( 681)						if (_hx_tmp29) {
HXLINE( 683)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::closePath(null());
            						}
HXLINE( 687)						 ::lime::graphics::cairo::Cairo _hx_tmp30 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN( 687)						_hx_tmp30->moveTo((positionX - offsetX),(positionY - offsetY));
HXLINE( 688)						::cpp::VirtualArray c50 = c49->buffer->o;
HXDLIN( 688)						::Array< bool > c51 = c49->buffer->b;
HXDLIN( 688)						::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokePattern = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::createImagePattern(( ( ::openfl::display::BitmapData)(c49->buffer->o->__get(c49->oPos)) ),( ( ::openfl::geom::Matrix)(c50->__get((c49->oPos + (int)1))) ),c49->buffer->b->__get(c49->bPos),c51->__get((c49->bPos + (int)1)));
HXLINE( 690)						::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasStroke = true;
            					}
            					break;
            					case (int)13: {
HXLINE( 666)						{
HXLINE( 666)							 ::openfl::_internal::renderer::DrawCommandType _g13 = data->prev;
HXDLIN( 666)							switch((int)(_hx_getEnumValueIndex(_g13))){
            								case (int)0: {
HXLINE( 666)									 ::openfl::_internal::renderer::DrawCommandReader data320 = data;
HXDLIN( 666)									data320->oPos = (data320->oPos + (int)2);
HXDLIN( 666)									 ::openfl::_internal::renderer::DrawCommandReader data321 = data;
HXDLIN( 666)									data321->bPos = (data321->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE( 666)									 ::openfl::_internal::renderer::DrawCommandReader data322 = data;
HXDLIN( 666)									data322->iPos = (data322->iPos + (int)1);
HXDLIN( 666)									 ::openfl::_internal::renderer::DrawCommandReader data323 = data;
HXDLIN( 666)									data323->fPos = (data323->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE( 666)									 ::openfl::_internal::renderer::DrawCommandReader data324 = data;
HXDLIN( 666)									data324->oPos = (data324->oPos + (int)4);
HXDLIN( 666)									 ::openfl::_internal::renderer::DrawCommandReader data325 = data;
HXDLIN( 666)									data325->iiPos = (data325->iiPos + (int)2);
HXDLIN( 666)									 ::openfl::_internal::renderer::DrawCommandReader data326 = data;
HXDLIN( 666)									data326->ffPos = (data326->ffPos + (int)1);
HXDLIN( 666)									 ::openfl::_internal::renderer::DrawCommandReader data327 = data;
HXDLIN( 666)									data327->fPos = (data327->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE( 666)									 ::openfl::_internal::renderer::DrawCommandReader data328 = data;
HXDLIN( 666)									data328->fPos = (data328->fPos + (int)6);
            								}
            								break;
            								case (int)4: {
HXLINE( 666)									 ::openfl::_internal::renderer::DrawCommandReader data329 = data;
HXDLIN( 666)									data329->fPos = (data329->fPos + (int)4);
            								}
            								break;
            								case (int)5: {
HXLINE( 666)									 ::openfl::_internal::renderer::DrawCommandReader data330 = data;
HXDLIN( 666)									data330->fPos = (data330->fPos + (int)3);
            								}
            								break;
            								case (int)6: {
HXLINE( 666)									 ::openfl::_internal::renderer::DrawCommandReader data331 = data;
HXDLIN( 666)									data331->fPos = (data331->fPos + (int)4);
            								}
            								break;
            								case (int)7: {
HXLINE( 666)									 ::openfl::_internal::renderer::DrawCommandReader data332 = data;
HXDLIN( 666)									data332->fPos = (data332->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE( 666)									 ::openfl::_internal::renderer::DrawCommandReader data333 = data;
HXDLIN( 666)									data333->fPos = (data333->fPos + (int)5);
HXDLIN( 666)									 ::openfl::_internal::renderer::DrawCommandReader data334 = data;
HXDLIN( 666)									data334->oPos = (data334->oPos + (int)1);
            								}
            								break;
            								case (int)10: {
HXLINE( 666)									 ::openfl::_internal::renderer::DrawCommandReader data335 = data;
HXDLIN( 666)									data335->oPos = (data335->oPos + (int)4);
            								}
            								break;
            								case (int)11: {
            								}
            								break;
            								case (int)12: {
HXLINE( 666)									 ::openfl::_internal::renderer::DrawCommandReader data336 = data;
HXDLIN( 666)									data336->oPos = (data336->oPos + (int)2);
HXDLIN( 666)									 ::openfl::_internal::renderer::DrawCommandReader data337 = data;
HXDLIN( 666)									data337->bPos = (data337->bPos + (int)2);
            								}
            								break;
            								case (int)13: {
HXLINE( 666)									 ::openfl::_internal::renderer::DrawCommandReader data338 = data;
HXDLIN( 666)									data338->oPos = (data338->oPos + (int)4);
HXDLIN( 666)									 ::openfl::_internal::renderer::DrawCommandReader data339 = data;
HXDLIN( 666)									data339->iiPos = (data339->iiPos + (int)2);
HXDLIN( 666)									 ::openfl::_internal::renderer::DrawCommandReader data340 = data;
HXDLIN( 666)									data340->ffPos = (data340->ffPos + (int)1);
HXDLIN( 666)									 ::openfl::_internal::renderer::DrawCommandReader data341 = data;
HXDLIN( 666)									data341->fPos = (data341->fPos + (int)1);
            								}
            								break;
            								case (int)14: {
HXLINE( 666)									 ::openfl::_internal::renderer::DrawCommandReader data342 = data;
HXDLIN( 666)									data342->oPos = (data342->oPos + (int)4);
HXDLIN( 666)									 ::openfl::_internal::renderer::DrawCommandReader data343 = data;
HXDLIN( 666)									data343->iPos = (data343->iPos + (int)1);
HXDLIN( 666)									 ::openfl::_internal::renderer::DrawCommandReader data344 = data;
HXDLIN( 666)									data344->fPos = (data344->fPos + (int)2);
HXDLIN( 666)									 ::openfl::_internal::renderer::DrawCommandReader data345 = data;
HXDLIN( 666)									data345->bPos = (data345->bPos + (int)1);
            								}
            								break;
            								case (int)15: {
HXLINE( 666)									 ::openfl::_internal::renderer::DrawCommandReader data346 = data;
HXDLIN( 666)									data346->fPos = (data346->fPos + (int)2);
            								}
            								break;
            								case (int)16: {
HXLINE( 666)									 ::openfl::_internal::renderer::DrawCommandReader data347 = data;
HXDLIN( 666)									data347->fPos = (data347->fPos + (int)2);
            								}
            								break;
            								case (int)17: {
HXLINE( 666)									 ::openfl::_internal::renderer::DrawCommandReader data348 = data;
HXDLIN( 666)									data348->oPos = (data348->oPos + (int)1);
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE( 666)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::LINE_GRADIENT_STYLE_dyn();
HXDLIN( 666)						 ::openfl::_internal::renderer::DrawCommandReader this12 = data;
HXDLIN( 666)						 ::openfl::_internal::renderer::DrawCommandReader c52 = this12;
HXLINE( 667)						bool _hx_tmp31;
HXDLIN( 667)						if (stroke) {
HXLINE( 667)							_hx_tmp31 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasStroke;
            						}
            						else {
HXLINE( 667)							_hx_tmp31 = false;
            						}
HXDLIN( 667)						if (_hx_tmp31) {
HXLINE( 669)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::closePath(null());
            						}
HXLINE( 673)						 ::lime::graphics::cairo::Cairo _hx_tmp32 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN( 673)						_hx_tmp32->moveTo((positionX - offsetX),(positionY - offsetY));
HXLINE( 674)						::Array< ::Dynamic> c53 = c52->buffer->ii;
HXDLIN( 674)						::cpp::VirtualArray c54 = c52->buffer->o;
HXDLIN( 674)						::cpp::VirtualArray c55 = c52->buffer->o;
HXDLIN( 674)						::cpp::VirtualArray c56 = c52->buffer->o;
HXDLIN( 674)						::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokePattern = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::createGradientPattern(c52->buffer->o->__get(c52->oPos),c52->buffer->ii->__get(c52->iiPos).StaticCast< ::Array< int > >(),c52->buffer->ff->__get(c52->ffPos).StaticCast< ::Array< Float > >(),c53->__get((c52->iiPos + (int)1)).StaticCast< ::Array< int > >(),( ( ::openfl::geom::Matrix)(c54->__get((c52->oPos + (int)1))) ),c55->__get((c52->oPos + (int)2)),c56->__get((c52->oPos + (int)3)),c52->buffer->f->__get(c52->fPos));
HXLINE( 676)						::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasStroke = true;
            					}
            					break;
            					case (int)14: {
HXLINE( 595)						{
HXLINE( 595)							 ::openfl::_internal::renderer::DrawCommandType _g14 = data->prev;
HXDLIN( 595)							switch((int)(_hx_getEnumValueIndex(_g14))){
            								case (int)0: {
HXLINE( 595)									 ::openfl::_internal::renderer::DrawCommandReader data349 = data;
HXDLIN( 595)									data349->oPos = (data349->oPos + (int)2);
HXDLIN( 595)									 ::openfl::_internal::renderer::DrawCommandReader data350 = data;
HXDLIN( 595)									data350->bPos = (data350->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE( 595)									 ::openfl::_internal::renderer::DrawCommandReader data351 = data;
HXDLIN( 595)									data351->iPos = (data351->iPos + (int)1);
HXDLIN( 595)									 ::openfl::_internal::renderer::DrawCommandReader data352 = data;
HXDLIN( 595)									data352->fPos = (data352->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE( 595)									 ::openfl::_internal::renderer::DrawCommandReader data353 = data;
HXDLIN( 595)									data353->oPos = (data353->oPos + (int)4);
HXDLIN( 595)									 ::openfl::_internal::renderer::DrawCommandReader data354 = data;
HXDLIN( 595)									data354->iiPos = (data354->iiPos + (int)2);
HXDLIN( 595)									 ::openfl::_internal::renderer::DrawCommandReader data355 = data;
HXDLIN( 595)									data355->ffPos = (data355->ffPos + (int)1);
HXDLIN( 595)									 ::openfl::_internal::renderer::DrawCommandReader data356 = data;
HXDLIN( 595)									data356->fPos = (data356->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE( 595)									 ::openfl::_internal::renderer::DrawCommandReader data357 = data;
HXDLIN( 595)									data357->fPos = (data357->fPos + (int)6);
            								}
            								break;
            								case (int)4: {
HXLINE( 595)									 ::openfl::_internal::renderer::DrawCommandReader data358 = data;
HXDLIN( 595)									data358->fPos = (data358->fPos + (int)4);
            								}
            								break;
            								case (int)5: {
HXLINE( 595)									 ::openfl::_internal::renderer::DrawCommandReader data359 = data;
HXDLIN( 595)									data359->fPos = (data359->fPos + (int)3);
            								}
            								break;
            								case (int)6: {
HXLINE( 595)									 ::openfl::_internal::renderer::DrawCommandReader data360 = data;
HXDLIN( 595)									data360->fPos = (data360->fPos + (int)4);
            								}
            								break;
            								case (int)7: {
HXLINE( 595)									 ::openfl::_internal::renderer::DrawCommandReader data361 = data;
HXDLIN( 595)									data361->fPos = (data361->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE( 595)									 ::openfl::_internal::renderer::DrawCommandReader data362 = data;
HXDLIN( 595)									data362->fPos = (data362->fPos + (int)5);
HXDLIN( 595)									 ::openfl::_internal::renderer::DrawCommandReader data363 = data;
HXDLIN( 595)									data363->oPos = (data363->oPos + (int)1);
            								}
            								break;
            								case (int)10: {
HXLINE( 595)									 ::openfl::_internal::renderer::DrawCommandReader data364 = data;
HXDLIN( 595)									data364->oPos = (data364->oPos + (int)4);
            								}
            								break;
            								case (int)11: {
            								}
            								break;
            								case (int)12: {
HXLINE( 595)									 ::openfl::_internal::renderer::DrawCommandReader data365 = data;
HXDLIN( 595)									data365->oPos = (data365->oPos + (int)2);
HXDLIN( 595)									 ::openfl::_internal::renderer::DrawCommandReader data366 = data;
HXDLIN( 595)									data366->bPos = (data366->bPos + (int)2);
            								}
            								break;
            								case (int)13: {
HXLINE( 595)									 ::openfl::_internal::renderer::DrawCommandReader data367 = data;
HXDLIN( 595)									data367->oPos = (data367->oPos + (int)4);
HXDLIN( 595)									 ::openfl::_internal::renderer::DrawCommandReader data368 = data;
HXDLIN( 595)									data368->iiPos = (data368->iiPos + (int)2);
HXDLIN( 595)									 ::openfl::_internal::renderer::DrawCommandReader data369 = data;
HXDLIN( 595)									data369->ffPos = (data369->ffPos + (int)1);
HXDLIN( 595)									 ::openfl::_internal::renderer::DrawCommandReader data370 = data;
HXDLIN( 595)									data370->fPos = (data370->fPos + (int)1);
            								}
            								break;
            								case (int)14: {
HXLINE( 595)									 ::openfl::_internal::renderer::DrawCommandReader data371 = data;
HXDLIN( 595)									data371->oPos = (data371->oPos + (int)4);
HXDLIN( 595)									 ::openfl::_internal::renderer::DrawCommandReader data372 = data;
HXDLIN( 595)									data372->iPos = (data372->iPos + (int)1);
HXDLIN( 595)									 ::openfl::_internal::renderer::DrawCommandReader data373 = data;
HXDLIN( 595)									data373->fPos = (data373->fPos + (int)2);
HXDLIN( 595)									 ::openfl::_internal::renderer::DrawCommandReader data374 = data;
HXDLIN( 595)									data374->bPos = (data374->bPos + (int)1);
            								}
            								break;
            								case (int)15: {
HXLINE( 595)									 ::openfl::_internal::renderer::DrawCommandReader data375 = data;
HXDLIN( 595)									data375->fPos = (data375->fPos + (int)2);
            								}
            								break;
            								case (int)16: {
HXLINE( 595)									 ::openfl::_internal::renderer::DrawCommandReader data376 = data;
HXDLIN( 595)									data376->fPos = (data376->fPos + (int)2);
            								}
            								break;
            								case (int)17: {
HXLINE( 595)									 ::openfl::_internal::renderer::DrawCommandReader data377 = data;
HXDLIN( 595)									data377->oPos = (data377->oPos + (int)1);
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE( 595)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::LINE_STYLE_dyn();
HXDLIN( 595)						 ::openfl::_internal::renderer::DrawCommandReader this13 = data;
HXDLIN( 595)						 ::openfl::_internal::renderer::DrawCommandReader c57 = this13;
HXLINE( 596)						bool _hx_tmp33;
HXDLIN( 596)						if (stroke) {
HXLINE( 596)							_hx_tmp33 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasStroke;
            						}
            						else {
HXLINE( 596)							_hx_tmp33 = false;
            						}
HXDLIN( 596)						if (_hx_tmp33) {
HXLINE( 598)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::closePath(true);
            						}
HXLINE( 602)						 ::lime::graphics::cairo::Cairo _hx_tmp34 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN( 602)						_hx_tmp34->moveTo((positionX - offsetX),(positionY - offsetY));
HXLINE( 604)						if (hx::IsNull( c57->buffer->o->__get(c57->oPos) )) {
HXLINE( 606)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasStroke = false;
            						}
            						else {
HXLINE( 610)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasStroke = true;
HXLINE( 612)							Float _hx_tmp35;
HXDLIN( 612)							if (hx::IsGreater( c57->buffer->o->__get(c57->oPos),(int)0 )) {
HXLINE( 612)								_hx_tmp35 = ( (Float)(c57->buffer->o->__get(c57->oPos)) );
            							}
            							else {
HXLINE( 612)								_hx_tmp35 = (int)1;
            							}
HXDLIN( 612)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->set_lineWidth(_hx_tmp35);
HXLINE( 614)							::cpp::VirtualArray c58 = c57->buffer->o;
HXDLIN( 614)							if (hx::IsNull( c58->__get((c57->oPos + (int)3)) )) {
HXLINE( 616)								::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->set_lineJoin((int)1);
            							}
            							else {
HXLINE( 620)								::cpp::VirtualArray c59 = c57->buffer->o;
HXDLIN( 620)								 ::Dynamic _g23 = c59->__get((c57->oPos + (int)3));
HXDLIN( 620)								int _hx_tmp36;
HXDLIN( 620)								 ::Dynamic _hx_switch_1 = _g23;
            								if (  (_hx_switch_1==(int)0) ){
HXLINE( 620)									_hx_tmp36 = (int)2;
HXDLIN( 620)									goto _hx_goto_18;
            								}
            								if (  (_hx_switch_1==(int)1) ){
HXLINE( 620)									_hx_tmp36 = (int)0;
HXDLIN( 620)									goto _hx_goto_18;
            								}
            								/* default */{
HXLINE( 620)									_hx_tmp36 = (int)1;
            								}
            								_hx_goto_18:;
HXDLIN( 620)								::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->set_lineJoin(_hx_tmp36);
            							}
HXLINE( 630)							::cpp::VirtualArray c60 = c57->buffer->o;
HXDLIN( 630)							if (hx::IsNull( c60->__get((c57->oPos + (int)2)) )) {
HXLINE( 632)								::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->set_lineCap((int)1);
            							}
            							else {
HXLINE( 636)								::cpp::VirtualArray c61 = c57->buffer->o;
HXDLIN( 636)								 ::Dynamic _g24 = c61->__get((c57->oPos + (int)2));
HXDLIN( 636)								int _hx_tmp37;
HXDLIN( 636)								 ::Dynamic _hx_switch_2 = _g24;
            								if (  (_hx_switch_2==(int)0) ){
HXLINE( 636)									_hx_tmp37 = (int)0;
HXDLIN( 636)									goto _hx_goto_19;
            								}
            								if (  (_hx_switch_2==(int)2) ){
HXLINE( 636)									_hx_tmp37 = (int)2;
HXDLIN( 636)									goto _hx_goto_19;
            								}
            								/* default */{
HXLINE( 636)									_hx_tmp37 = (int)1;
            								}
            								_hx_goto_19:;
HXDLIN( 636)								::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->set_lineCap(_hx_tmp37);
            							}
HXLINE( 646)							::Array< Float > c62 = c57->buffer->f;
HXDLIN( 646)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->set_miterLimit(c62->__get((c57->fPos + (int)1)));
HXLINE( 648)							Float r = ((Float)hx::UShr(((int)c57->buffer->i->__get(c57->iPos) & (int)(int)16711680),(int)16) / (Float)(int)255);
HXLINE( 649)							Float g = ((Float)hx::UShr(((int)c57->buffer->i->__get(c57->iPos) & (int)(int)65280),(int)8) / (Float)(int)255);
HXLINE( 650)							Float b = ((Float)((int)c57->buffer->i->__get(c57->iPos) & (int)(int)255) / (Float)(int)255);
HXLINE( 652)							if ((c57->buffer->f->__get(c57->fPos) == (int)1)) {
HXLINE( 654)								::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokePattern = ::lime::graphics::cairo::_CairoPattern::CairoPattern_Impl__obj::createRGB(r,g,b);
            							}
            							else {
HXLINE( 658)								::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokePattern = ::lime::graphics::cairo::_CairoPattern::CairoPattern_Impl__obj::createRGBA(r,g,b,c57->buffer->f->__get(c57->fPos));
            							}
            						}
            					}
            					break;
            					case (int)15: {
HXLINE( 574)						{
HXLINE( 574)							 ::openfl::_internal::renderer::DrawCommandType _g15 = data->prev;
HXDLIN( 574)							switch((int)(_hx_getEnumValueIndex(_g15))){
            								case (int)0: {
HXLINE( 574)									 ::openfl::_internal::renderer::DrawCommandReader data378 = data;
HXDLIN( 574)									data378->oPos = (data378->oPos + (int)2);
HXDLIN( 574)									 ::openfl::_internal::renderer::DrawCommandReader data379 = data;
HXDLIN( 574)									data379->bPos = (data379->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE( 574)									 ::openfl::_internal::renderer::DrawCommandReader data380 = data;
HXDLIN( 574)									data380->iPos = (data380->iPos + (int)1);
HXDLIN( 574)									 ::openfl::_internal::renderer::DrawCommandReader data381 = data;
HXDLIN( 574)									data381->fPos = (data381->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE( 574)									 ::openfl::_internal::renderer::DrawCommandReader data382 = data;
HXDLIN( 574)									data382->oPos = (data382->oPos + (int)4);
HXDLIN( 574)									 ::openfl::_internal::renderer::DrawCommandReader data383 = data;
HXDLIN( 574)									data383->iiPos = (data383->iiPos + (int)2);
HXDLIN( 574)									 ::openfl::_internal::renderer::DrawCommandReader data384 = data;
HXDLIN( 574)									data384->ffPos = (data384->ffPos + (int)1);
HXDLIN( 574)									 ::openfl::_internal::renderer::DrawCommandReader data385 = data;
HXDLIN( 574)									data385->fPos = (data385->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE( 574)									 ::openfl::_internal::renderer::DrawCommandReader data386 = data;
HXDLIN( 574)									data386->fPos = (data386->fPos + (int)6);
            								}
            								break;
            								case (int)4: {
HXLINE( 574)									 ::openfl::_internal::renderer::DrawCommandReader data387 = data;
HXDLIN( 574)									data387->fPos = (data387->fPos + (int)4);
            								}
            								break;
            								case (int)5: {
HXLINE( 574)									 ::openfl::_internal::renderer::DrawCommandReader data388 = data;
HXDLIN( 574)									data388->fPos = (data388->fPos + (int)3);
            								}
            								break;
            								case (int)6: {
HXLINE( 574)									 ::openfl::_internal::renderer::DrawCommandReader data389 = data;
HXDLIN( 574)									data389->fPos = (data389->fPos + (int)4);
            								}
            								break;
            								case (int)7: {
HXLINE( 574)									 ::openfl::_internal::renderer::DrawCommandReader data390 = data;
HXDLIN( 574)									data390->fPos = (data390->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE( 574)									 ::openfl::_internal::renderer::DrawCommandReader data391 = data;
HXDLIN( 574)									data391->fPos = (data391->fPos + (int)5);
HXDLIN( 574)									 ::openfl::_internal::renderer::DrawCommandReader data392 = data;
HXDLIN( 574)									data392->oPos = (data392->oPos + (int)1);
            								}
            								break;
            								case (int)10: {
HXLINE( 574)									 ::openfl::_internal::renderer::DrawCommandReader data393 = data;
HXDLIN( 574)									data393->oPos = (data393->oPos + (int)4);
            								}
            								break;
            								case (int)11: {
            								}
            								break;
            								case (int)12: {
HXLINE( 574)									 ::openfl::_internal::renderer::DrawCommandReader data394 = data;
HXDLIN( 574)									data394->oPos = (data394->oPos + (int)2);
HXDLIN( 574)									 ::openfl::_internal::renderer::DrawCommandReader data395 = data;
HXDLIN( 574)									data395->bPos = (data395->bPos + (int)2);
            								}
            								break;
            								case (int)13: {
HXLINE( 574)									 ::openfl::_internal::renderer::DrawCommandReader data396 = data;
HXDLIN( 574)									data396->oPos = (data396->oPos + (int)4);
HXDLIN( 574)									 ::openfl::_internal::renderer::DrawCommandReader data397 = data;
HXDLIN( 574)									data397->iiPos = (data397->iiPos + (int)2);
HXDLIN( 574)									 ::openfl::_internal::renderer::DrawCommandReader data398 = data;
HXDLIN( 574)									data398->ffPos = (data398->ffPos + (int)1);
HXDLIN( 574)									 ::openfl::_internal::renderer::DrawCommandReader data399 = data;
HXDLIN( 574)									data399->fPos = (data399->fPos + (int)1);
            								}
            								break;
            								case (int)14: {
HXLINE( 574)									 ::openfl::_internal::renderer::DrawCommandReader data400 = data;
HXDLIN( 574)									data400->oPos = (data400->oPos + (int)4);
HXDLIN( 574)									 ::openfl::_internal::renderer::DrawCommandReader data401 = data;
HXDLIN( 574)									data401->iPos = (data401->iPos + (int)1);
HXDLIN( 574)									 ::openfl::_internal::renderer::DrawCommandReader data402 = data;
HXDLIN( 574)									data402->fPos = (data402->fPos + (int)2);
HXDLIN( 574)									 ::openfl::_internal::renderer::DrawCommandReader data403 = data;
HXDLIN( 574)									data403->bPos = (data403->bPos + (int)1);
            								}
            								break;
            								case (int)15: {
HXLINE( 574)									 ::openfl::_internal::renderer::DrawCommandReader data404 = data;
HXDLIN( 574)									data404->fPos = (data404->fPos + (int)2);
            								}
            								break;
            								case (int)16: {
HXLINE( 574)									 ::openfl::_internal::renderer::DrawCommandReader data405 = data;
HXDLIN( 574)									data405->fPos = (data405->fPos + (int)2);
            								}
            								break;
            								case (int)17: {
HXLINE( 574)									 ::openfl::_internal::renderer::DrawCommandReader data406 = data;
HXDLIN( 574)									data406->oPos = (data406->oPos + (int)1);
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE( 574)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::LINE_TO_dyn();
HXDLIN( 574)						 ::openfl::_internal::renderer::DrawCommandReader this14 = data;
HXDLIN( 574)						 ::openfl::_internal::renderer::DrawCommandReader c63 = this14;
HXLINE( 575)						hasPath = true;
HXLINE( 576)						 ::lime::graphics::cairo::Cairo _hx_tmp38 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN( 576)						Float _hx_tmp39 = (c63->buffer->f->__get(c63->fPos) - offsetX);
HXDLIN( 576)						::Array< Float > c64 = c63->buffer->f;
HXDLIN( 576)						_hx_tmp38->lineTo(_hx_tmp39,(c64->__get((c63->fPos + (int)1)) - offsetY));
HXLINE( 578)						positionX = c63->buffer->f->__get(c63->fPos);
HXLINE( 579)						::Array< Float > c65 = c63->buffer->f;
HXDLIN( 579)						positionY = c65->__get((c63->fPos + (int)1));
            					}
            					break;
            					case (int)16: {
HXLINE( 583)						{
HXLINE( 583)							 ::openfl::_internal::renderer::DrawCommandType _g16 = data->prev;
HXDLIN( 583)							switch((int)(_hx_getEnumValueIndex(_g16))){
            								case (int)0: {
HXLINE( 583)									 ::openfl::_internal::renderer::DrawCommandReader data407 = data;
HXDLIN( 583)									data407->oPos = (data407->oPos + (int)2);
HXDLIN( 583)									 ::openfl::_internal::renderer::DrawCommandReader data408 = data;
HXDLIN( 583)									data408->bPos = (data408->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE( 583)									 ::openfl::_internal::renderer::DrawCommandReader data409 = data;
HXDLIN( 583)									data409->iPos = (data409->iPos + (int)1);
HXDLIN( 583)									 ::openfl::_internal::renderer::DrawCommandReader data410 = data;
HXDLIN( 583)									data410->fPos = (data410->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE( 583)									 ::openfl::_internal::renderer::DrawCommandReader data411 = data;
HXDLIN( 583)									data411->oPos = (data411->oPos + (int)4);
HXDLIN( 583)									 ::openfl::_internal::renderer::DrawCommandReader data412 = data;
HXDLIN( 583)									data412->iiPos = (data412->iiPos + (int)2);
HXDLIN( 583)									 ::openfl::_internal::renderer::DrawCommandReader data413 = data;
HXDLIN( 583)									data413->ffPos = (data413->ffPos + (int)1);
HXDLIN( 583)									 ::openfl::_internal::renderer::DrawCommandReader data414 = data;
HXDLIN( 583)									data414->fPos = (data414->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE( 583)									 ::openfl::_internal::renderer::DrawCommandReader data415 = data;
HXDLIN( 583)									data415->fPos = (data415->fPos + (int)6);
            								}
            								break;
            								case (int)4: {
HXLINE( 583)									 ::openfl::_internal::renderer::DrawCommandReader data416 = data;
HXDLIN( 583)									data416->fPos = (data416->fPos + (int)4);
            								}
            								break;
            								case (int)5: {
HXLINE( 583)									 ::openfl::_internal::renderer::DrawCommandReader data417 = data;
HXDLIN( 583)									data417->fPos = (data417->fPos + (int)3);
            								}
            								break;
            								case (int)6: {
HXLINE( 583)									 ::openfl::_internal::renderer::DrawCommandReader data418 = data;
HXDLIN( 583)									data418->fPos = (data418->fPos + (int)4);
            								}
            								break;
            								case (int)7: {
HXLINE( 583)									 ::openfl::_internal::renderer::DrawCommandReader data419 = data;
HXDLIN( 583)									data419->fPos = (data419->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE( 583)									 ::openfl::_internal::renderer::DrawCommandReader data420 = data;
HXDLIN( 583)									data420->fPos = (data420->fPos + (int)5);
HXDLIN( 583)									 ::openfl::_internal::renderer::DrawCommandReader data421 = data;
HXDLIN( 583)									data421->oPos = (data421->oPos + (int)1);
            								}
            								break;
            								case (int)10: {
HXLINE( 583)									 ::openfl::_internal::renderer::DrawCommandReader data422 = data;
HXDLIN( 583)									data422->oPos = (data422->oPos + (int)4);
            								}
            								break;
            								case (int)11: {
            								}
            								break;
            								case (int)12: {
HXLINE( 583)									 ::openfl::_internal::renderer::DrawCommandReader data423 = data;
HXDLIN( 583)									data423->oPos = (data423->oPos + (int)2);
HXDLIN( 583)									 ::openfl::_internal::renderer::DrawCommandReader data424 = data;
HXDLIN( 583)									data424->bPos = (data424->bPos + (int)2);
            								}
            								break;
            								case (int)13: {
HXLINE( 583)									 ::openfl::_internal::renderer::DrawCommandReader data425 = data;
HXDLIN( 583)									data425->oPos = (data425->oPos + (int)4);
HXDLIN( 583)									 ::openfl::_internal::renderer::DrawCommandReader data426 = data;
HXDLIN( 583)									data426->iiPos = (data426->iiPos + (int)2);
HXDLIN( 583)									 ::openfl::_internal::renderer::DrawCommandReader data427 = data;
HXDLIN( 583)									data427->ffPos = (data427->ffPos + (int)1);
HXDLIN( 583)									 ::openfl::_internal::renderer::DrawCommandReader data428 = data;
HXDLIN( 583)									data428->fPos = (data428->fPos + (int)1);
            								}
            								break;
            								case (int)14: {
HXLINE( 583)									 ::openfl::_internal::renderer::DrawCommandReader data429 = data;
HXDLIN( 583)									data429->oPos = (data429->oPos + (int)4);
HXDLIN( 583)									 ::openfl::_internal::renderer::DrawCommandReader data430 = data;
HXDLIN( 583)									data430->iPos = (data430->iPos + (int)1);
HXDLIN( 583)									 ::openfl::_internal::renderer::DrawCommandReader data431 = data;
HXDLIN( 583)									data431->fPos = (data431->fPos + (int)2);
HXDLIN( 583)									 ::openfl::_internal::renderer::DrawCommandReader data432 = data;
HXDLIN( 583)									data432->bPos = (data432->bPos + (int)1);
            								}
            								break;
            								case (int)15: {
HXLINE( 583)									 ::openfl::_internal::renderer::DrawCommandReader data433 = data;
HXDLIN( 583)									data433->fPos = (data433->fPos + (int)2);
            								}
            								break;
            								case (int)16: {
HXLINE( 583)									 ::openfl::_internal::renderer::DrawCommandReader data434 = data;
HXDLIN( 583)									data434->fPos = (data434->fPos + (int)2);
            								}
            								break;
            								case (int)17: {
HXLINE( 583)									 ::openfl::_internal::renderer::DrawCommandReader data435 = data;
HXDLIN( 583)									data435->oPos = (data435->oPos + (int)1);
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE( 583)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::MOVE_TO_dyn();
HXDLIN( 583)						 ::openfl::_internal::renderer::DrawCommandReader this15 = data;
HXDLIN( 583)						 ::openfl::_internal::renderer::DrawCommandReader c66 = this15;
HXLINE( 584)						 ::lime::graphics::cairo::Cairo _hx_tmp40 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN( 584)						Float _hx_tmp41 = (c66->buffer->f->__get(c66->fPos) - offsetX);
HXDLIN( 584)						::Array< Float > c67 = c66->buffer->f;
HXDLIN( 584)						_hx_tmp40->moveTo(_hx_tmp41,(c67->__get((c66->fPos + (int)1)) - offsetY));
HXLINE( 586)						positionX = c66->buffer->f->__get(c66->fPos);
HXLINE( 587)						::Array< Float > c68 = c66->buffer->f;
HXDLIN( 587)						positionY = c68->__get((c66->fPos + (int)1));
HXLINE( 589)						closeGap = true;
HXLINE( 590)						startX = c66->buffer->f->__get(c66->fPos);
HXLINE( 591)						::Array< Float > c69 = c66->buffer->f;
HXDLIN( 591)						startY = c69->__get((c66->fPos + (int)1));
            					}
            					break;
            					default:{
HXLINE( 914)						{
HXLINE( 914)							 ::openfl::_internal::renderer::DrawCommandType _g17 = data->prev;
HXDLIN( 914)							switch((int)(_hx_getEnumValueIndex(_g17))){
            								case (int)0: {
HXLINE( 914)									 ::openfl::_internal::renderer::DrawCommandReader data436 = data;
HXDLIN( 914)									data436->oPos = (data436->oPos + (int)2);
HXDLIN( 914)									 ::openfl::_internal::renderer::DrawCommandReader data437 = data;
HXDLIN( 914)									data437->bPos = (data437->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE( 914)									 ::openfl::_internal::renderer::DrawCommandReader data438 = data;
HXDLIN( 914)									data438->iPos = (data438->iPos + (int)1);
HXDLIN( 914)									 ::openfl::_internal::renderer::DrawCommandReader data439 = data;
HXDLIN( 914)									data439->fPos = (data439->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE( 914)									 ::openfl::_internal::renderer::DrawCommandReader data440 = data;
HXDLIN( 914)									data440->oPos = (data440->oPos + (int)4);
HXDLIN( 914)									 ::openfl::_internal::renderer::DrawCommandReader data441 = data;
HXDLIN( 914)									data441->iiPos = (data441->iiPos + (int)2);
HXDLIN( 914)									 ::openfl::_internal::renderer::DrawCommandReader data442 = data;
HXDLIN( 914)									data442->ffPos = (data442->ffPos + (int)1);
HXDLIN( 914)									 ::openfl::_internal::renderer::DrawCommandReader data443 = data;
HXDLIN( 914)									data443->fPos = (data443->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE( 914)									 ::openfl::_internal::renderer::DrawCommandReader data444 = data;
HXDLIN( 914)									data444->fPos = (data444->fPos + (int)6);
            								}
            								break;
            								case (int)4: {
HXLINE( 914)									 ::openfl::_internal::renderer::DrawCommandReader data445 = data;
HXDLIN( 914)									data445->fPos = (data445->fPos + (int)4);
            								}
            								break;
            								case (int)5: {
HXLINE( 914)									 ::openfl::_internal::renderer::DrawCommandReader data446 = data;
HXDLIN( 914)									data446->fPos = (data446->fPos + (int)3);
            								}
            								break;
            								case (int)6: {
HXLINE( 914)									 ::openfl::_internal::renderer::DrawCommandReader data447 = data;
HXDLIN( 914)									data447->fPos = (data447->fPos + (int)4);
            								}
            								break;
            								case (int)7: {
HXLINE( 914)									 ::openfl::_internal::renderer::DrawCommandReader data448 = data;
HXDLIN( 914)									data448->fPos = (data448->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE( 914)									 ::openfl::_internal::renderer::DrawCommandReader data449 = data;
HXDLIN( 914)									data449->fPos = (data449->fPos + (int)5);
HXDLIN( 914)									 ::openfl::_internal::renderer::DrawCommandReader data450 = data;
HXDLIN( 914)									data450->oPos = (data450->oPos + (int)1);
            								}
            								break;
            								case (int)10: {
HXLINE( 914)									 ::openfl::_internal::renderer::DrawCommandReader data451 = data;
HXDLIN( 914)									data451->oPos = (data451->oPos + (int)4);
            								}
            								break;
            								case (int)11: {
            								}
            								break;
            								case (int)12: {
HXLINE( 914)									 ::openfl::_internal::renderer::DrawCommandReader data452 = data;
HXDLIN( 914)									data452->oPos = (data452->oPos + (int)2);
HXDLIN( 914)									 ::openfl::_internal::renderer::DrawCommandReader data453 = data;
HXDLIN( 914)									data453->bPos = (data453->bPos + (int)2);
            								}
            								break;
            								case (int)13: {
HXLINE( 914)									 ::openfl::_internal::renderer::DrawCommandReader data454 = data;
HXDLIN( 914)									data454->oPos = (data454->oPos + (int)4);
HXDLIN( 914)									 ::openfl::_internal::renderer::DrawCommandReader data455 = data;
HXDLIN( 914)									data455->iiPos = (data455->iiPos + (int)2);
HXDLIN( 914)									 ::openfl::_internal::renderer::DrawCommandReader data456 = data;
HXDLIN( 914)									data456->ffPos = (data456->ffPos + (int)1);
HXDLIN( 914)									 ::openfl::_internal::renderer::DrawCommandReader data457 = data;
HXDLIN( 914)									data457->fPos = (data457->fPos + (int)1);
            								}
            								break;
            								case (int)14: {
HXLINE( 914)									 ::openfl::_internal::renderer::DrawCommandReader data458 = data;
HXDLIN( 914)									data458->oPos = (data458->oPos + (int)4);
HXDLIN( 914)									 ::openfl::_internal::renderer::DrawCommandReader data459 = data;
HXDLIN( 914)									data459->iPos = (data459->iPos + (int)1);
HXDLIN( 914)									 ::openfl::_internal::renderer::DrawCommandReader data460 = data;
HXDLIN( 914)									data460->fPos = (data460->fPos + (int)2);
HXDLIN( 914)									 ::openfl::_internal::renderer::DrawCommandReader data461 = data;
HXDLIN( 914)									data461->bPos = (data461->bPos + (int)1);
            								}
            								break;
            								case (int)15: {
HXLINE( 914)									 ::openfl::_internal::renderer::DrawCommandReader data462 = data;
HXDLIN( 914)									data462->fPos = (data462->fPos + (int)2);
            								}
            								break;
            								case (int)16: {
HXLINE( 914)									 ::openfl::_internal::renderer::DrawCommandReader data463 = data;
HXDLIN( 914)									data463->fPos = (data463->fPos + (int)2);
            								}
            								break;
            								case (int)17: {
HXLINE( 914)									 ::openfl::_internal::renderer::DrawCommandReader data464 = data;
HXDLIN( 914)									data464->oPos = (data464->oPos + (int)1);
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE( 914)						data->prev = type;
            					}
            				}
            			}
            			_hx_goto_14:;
            		}
HXLINE( 920)		data->destroy();
HXLINE( 922)		if (hasPath) {
HXLINE( 924)			bool _hx_tmp42;
HXDLIN( 924)			if (stroke) {
HXLINE( 924)				_hx_tmp42 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasStroke;
            			}
            			else {
HXLINE( 924)				_hx_tmp42 = false;
            			}
HXDLIN( 924)			if (_hx_tmp42) {
HXLINE( 926)				bool _hx_tmp43;
HXDLIN( 926)				if (::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasFill) {
HXLINE( 926)					_hx_tmp43 = closeGap;
            				}
            				else {
HXLINE( 926)					_hx_tmp43 = false;
            				}
HXDLIN( 926)				if (_hx_tmp43) {
HXLINE( 928)					 ::lime::graphics::cairo::Cairo _hx_tmp44 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN( 928)					_hx_tmp44->lineTo((startX - offsetX),(startY - offsetY));
            				}
            				else {
HXLINE( 930)					bool _hx_tmp45;
HXDLIN( 930)					bool _hx_tmp46;
HXDLIN( 930)					if (closeGap) {
HXLINE( 930)						_hx_tmp46 = (positionX == startX);
            					}
            					else {
HXLINE( 930)						_hx_tmp46 = false;
            					}
HXDLIN( 930)					if (_hx_tmp46) {
HXLINE( 930)						_hx_tmp45 = (positionY == startY);
            					}
            					else {
HXLINE( 930)						_hx_tmp45 = false;
            					}
HXDLIN( 930)					if (_hx_tmp45) {
HXLINE( 932)						::openfl::_internal::renderer::cairo::CairoGraphics_obj::closePath(true);
            					}
            				}
HXLINE( 936)				::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->set_source(::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokePattern);
HXLINE( 937)				if (!(::openfl::_internal::renderer::cairo::CairoGraphics_obj::hitTesting)) {
HXLINE( 937)					::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->strokePreserve();
            				}
            			}
HXLINE( 941)			bool _hx_tmp47;
HXDLIN( 941)			if (!(stroke)) {
HXLINE( 941)				_hx_tmp47 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasFill;
            			}
            			else {
HXLINE( 941)				_hx_tmp47 = false;
            			}
HXDLIN( 941)			if (_hx_tmp47) {
HXLINE( 943)				::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->translate(-(::openfl::_internal::renderer::cairo::CairoGraphics_obj::bounds->x),-(::openfl::_internal::renderer::cairo::CairoGraphics_obj::bounds->y));
HXLINE( 945)				if (hx::IsNotNull( ::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillPatternMatrix )) {
HXLINE( 947)					 ::openfl::geom::Matrix matrix1 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillPatternMatrix->clone();
HXLINE( 948)					matrix1->invert();
HXLINE( 950)					if (hx::IsNotNull( ::openfl::_internal::renderer::cairo::CairoGraphics_obj::pendingMatrix )) {
HXLINE( 952)						matrix1->concat(::openfl::_internal::renderer::cairo::CairoGraphics_obj::pendingMatrix);
            					}
HXLINE( 956)					 ::Dynamic _hx_tmp48 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillPattern;
HXDLIN( 956)					::lime::graphics::cairo::_CairoPattern::CairoPattern_Impl__obj::set_matrix(_hx_tmp48,matrix1->_hx___toMatrix3());
            				}
HXLINE( 960)				::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->set_source(::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillPattern);
HXLINE( 962)				if (hx::IsNotNull( ::openfl::_internal::renderer::cairo::CairoGraphics_obj::pendingMatrix )) {
HXLINE( 964)					 ::lime::graphics::cairo::Cairo _hx_tmp49 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN( 964)					_hx_tmp49->transform(::openfl::_internal::renderer::cairo::CairoGraphics_obj::pendingMatrix->_hx___toMatrix3());
HXLINE( 965)					if (!(::openfl::_internal::renderer::cairo::CairoGraphics_obj::hitTesting)) {
HXLINE( 965)						::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->fillPreserve();
            					}
HXLINE( 966)					 ::lime::graphics::cairo::Cairo _hx_tmp50 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN( 966)					_hx_tmp50->transform(::openfl::_internal::renderer::cairo::CairoGraphics_obj::inversePendingMatrix->_hx___toMatrix3());
            				}
            				else {
HXLINE( 970)					if (!(::openfl::_internal::renderer::cairo::CairoGraphics_obj::hitTesting)) {
HXLINE( 970)						::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->fillPreserve();
            					}
            				}
HXLINE( 974)				::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->translate(::openfl::_internal::renderer::cairo::CairoGraphics_obj::bounds->x,::openfl::_internal::renderer::cairo::CairoGraphics_obj::bounds->y);
HXLINE( 975)				::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->closePath();
            			}
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(CairoGraphics_obj,playCommands,(void))

void CairoGraphics_obj::quadraticCurveTo(Float cx,Float cy,Float x,Float y){
            	HX_GC_STACKFRAME(&_hx_pos_7c423d109b848e15_983_quadraticCurveTo)
HXLINE( 985)		 ::lime::math::Vector2 current = null();
HXLINE( 987)		if (!(::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->get_hasCurrentPoint())) {
HXLINE( 989)			::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->moveTo(cx,cy);
HXLINE( 990)			current =  ::lime::math::Vector2_obj::__alloc( HX_CTX ,cx,cy);
            		}
            		else {
HXLINE( 994)			current = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->get_currentPoint();
            		}
HXLINE( 998)		Float current1 = current->x;
HXDLIN( 998)		Float cx1 = (current1 + (((Float)0.66666666666666663) * (cx - current->x)));
HXLINE( 999)		Float current2 = current->y;
HXDLIN( 999)		Float cy1 = (current2 + (((Float)0.66666666666666663) * (cy - current->y)));
HXLINE(1000)		Float cx2 = (x + (((Float)0.66666666666666663) * (cx - x)));
HXLINE(1001)		Float cy2 = (y + (((Float)0.66666666666666663) * (cy - y)));
HXLINE(1003)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->curveTo(cx1,cy1,cx2,cy2,x,y);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(CairoGraphics_obj,quadraticCurveTo,(void))

void CairoGraphics_obj::render( ::openfl::display::Graphics graphics, ::openfl::_internal::renderer::RenderSession renderSession, ::openfl::geom::Matrix parentTransform){
            	HX_GC_STACKFRAME(&_hx_pos_7c423d109b848e15_1008_render)
HXLINE(1012)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::graphics = graphics;
HXLINE(1013)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::allowSmoothing = renderSession->allowSmoothing;
HXLINE(1014)		graphics->_hx___update();
HXLINE(1016)		bool _hx_tmp;
HXDLIN(1016)		if (!(!(graphics->_hx___dirty))) {
HXLINE(1016)			_hx_tmp = graphics->_hx___managed;
            		}
            		else {
HXLINE(1016)			_hx_tmp = true;
            		}
HXDLIN(1016)		if (_hx_tmp) {
HXLINE(1016)			return;
            		}
HXLINE(1018)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::bounds = graphics->_hx___bounds;
HXLINE(1020)		int width = graphics->_hx___width;
HXLINE(1021)		int height = graphics->_hx___height;
HXLINE(1023)		bool _hx_tmp1;
HXDLIN(1023)		bool _hx_tmp2;
HXDLIN(1023)		bool _hx_tmp3;
HXDLIN(1023)		bool _hx_tmp4;
HXDLIN(1023)		if (!(!(graphics->_hx___visible))) {
HXLINE(1023)			_hx_tmp4 = (graphics->_hx___commands->get_length() == (int)0);
            		}
            		else {
HXLINE(1023)			_hx_tmp4 = true;
            		}
HXDLIN(1023)		if (!(_hx_tmp4)) {
HXLINE(1023)			_hx_tmp3 = hx::IsNull( ::openfl::_internal::renderer::cairo::CairoGraphics_obj::bounds );
            		}
            		else {
HXLINE(1023)			_hx_tmp3 = true;
            		}
HXDLIN(1023)		if (!(_hx_tmp3)) {
HXLINE(1023)			_hx_tmp2 = (width < (int)1);
            		}
            		else {
HXLINE(1023)			_hx_tmp2 = true;
            		}
HXDLIN(1023)		if (!(_hx_tmp2)) {
HXLINE(1023)			_hx_tmp1 = (height < (int)1);
            		}
            		else {
HXLINE(1023)			_hx_tmp1 = true;
            		}
HXDLIN(1023)		if (_hx_tmp1) {
HXLINE(1025)			graphics->_hx___cairo = null();
HXLINE(1026)			graphics->_hx___bitmap = null();
            		}
            		else {
HXLINE(1030)			::openfl::_internal::renderer::cairo::CairoGraphics_obj::hitTesting = false;
HXLINE(1032)			if (hx::IsNotNull( graphics->_hx___cairo )) {
HXLINE(1034)				 ::Dynamic surface = graphics->_hx___cairo->get_target();
HXLINE(1036)				bool _hx_tmp5;
HXDLIN(1036)				if ((width == ::lime::graphics::cairo::_CairoImageSurface::CairoImageSurface_Impl__obj::get_width(surface))) {
HXLINE(1036)					_hx_tmp5 = (height != ::lime::graphics::cairo::_CairoImageSurface::CairoImageSurface_Impl__obj::get_height(surface));
            				}
            				else {
HXLINE(1036)					_hx_tmp5 = true;
            				}
HXDLIN(1036)				if (_hx_tmp5) {
HXLINE(1038)					graphics->_hx___cairo = null();
            				}
            			}
HXLINE(1044)			bool _hx_tmp6;
HXDLIN(1044)			if (hx::IsNotNull( graphics->_hx___cairo )) {
HXLINE(1044)				_hx_tmp6 = hx::IsNull( graphics->_hx___bitmap );
            			}
            			else {
HXLINE(1044)				_hx_tmp6 = true;
            			}
HXDLIN(1044)			if (_hx_tmp6) {
HXLINE(1046)				 ::openfl::display::BitmapData bitmap =  ::openfl::display::BitmapData_obj::__alloc( HX_CTX ,width,height,true,(int)0);
HXLINE(1047)				 ::Dynamic surface1 = bitmap->getSurface();
HXLINE(1048)				graphics->_hx___cairo =  ::lime::graphics::cairo::Cairo_obj::__alloc( HX_CTX ,surface1);
HXLINE(1049)				graphics->_hx___bitmap = bitmap;
            			}
HXLINE(1053)			::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo = graphics->_hx___cairo;
HXLINE(1054)			 ::lime::graphics::cairo::Cairo _hx_tmp7 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN(1054)			_hx_tmp7->set_matrix(graphics->_hx___renderTransform->_hx___toMatrix3());
HXLINE(1056)			::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->set_operator((int)0);
HXLINE(1057)			::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->paint();
HXLINE(1058)			::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->set_operator((int)2);
HXLINE(1060)			::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands->clear();
HXLINE(1061)			::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands->clear();
HXLINE(1063)			::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasFill = false;
HXLINE(1064)			::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasStroke = false;
HXLINE(1066)			::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillPattern = null();
HXLINE(1067)			::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokePattern = null();
HXLINE(1069)			 ::openfl::_internal::renderer::DrawCommandReader data =  ::openfl::_internal::renderer::DrawCommandReader_obj::__alloc( HX_CTX ,graphics->_hx___commands);
HXLINE(1071)			{
HXLINE(1071)				int _g = (int)0;
HXDLIN(1071)				::Array< ::Dynamic> _g1 = graphics->_hx___commands->types;
HXDLIN(1071)				while((_g < _g1->length)){
HXLINE(1071)					 ::openfl::_internal::renderer::DrawCommandType type = _g1->__get(_g).StaticCast<  ::openfl::_internal::renderer::DrawCommandType >();
HXDLIN(1071)					_g = (_g + (int)1);
HXLINE(1073)					switch((int)(_hx_getEnumValueIndex(type))){
            						case (int)0: case (int)1: case (int)2: {
HXLINE(1124)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::endFill();
HXLINE(1125)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::endStroke();
HXLINE(1127)							if (hx::IsEq( type,::openfl::_internal::renderer::DrawCommandType_obj::BEGIN_BITMAP_FILL_dyn() )) {
HXLINE(1129)								{
HXLINE(1129)									 ::openfl::_internal::renderer::DrawCommandType _g2 = data->prev;
HXDLIN(1129)									switch((int)(_hx_getEnumValueIndex(_g2))){
            										case (int)0: {
HXLINE(1129)											 ::openfl::_internal::renderer::DrawCommandReader data1 = data;
HXDLIN(1129)											data1->oPos = (data1->oPos + (int)2);
HXDLIN(1129)											 ::openfl::_internal::renderer::DrawCommandReader data2 = data;
HXDLIN(1129)											data2->bPos = (data2->bPos + (int)2);
            										}
            										break;
            										case (int)1: {
HXLINE(1129)											 ::openfl::_internal::renderer::DrawCommandReader data3 = data;
HXDLIN(1129)											data3->iPos = (data3->iPos + (int)1);
HXDLIN(1129)											 ::openfl::_internal::renderer::DrawCommandReader data4 = data;
HXDLIN(1129)											data4->fPos = (data4->fPos + (int)1);
            										}
            										break;
            										case (int)2: {
HXLINE(1129)											 ::openfl::_internal::renderer::DrawCommandReader data5 = data;
HXDLIN(1129)											data5->oPos = (data5->oPos + (int)4);
HXDLIN(1129)											 ::openfl::_internal::renderer::DrawCommandReader data6 = data;
HXDLIN(1129)											data6->iiPos = (data6->iiPos + (int)2);
HXDLIN(1129)											 ::openfl::_internal::renderer::DrawCommandReader data7 = data;
HXDLIN(1129)											data7->ffPos = (data7->ffPos + (int)1);
HXDLIN(1129)											 ::openfl::_internal::renderer::DrawCommandReader data8 = data;
HXDLIN(1129)											data8->fPos = (data8->fPos + (int)1);
            										}
            										break;
            										case (int)3: {
HXLINE(1129)											 ::openfl::_internal::renderer::DrawCommandReader data9 = data;
HXDLIN(1129)											data9->fPos = (data9->fPos + (int)6);
            										}
            										break;
            										case (int)4: {
HXLINE(1129)											 ::openfl::_internal::renderer::DrawCommandReader data10 = data;
HXDLIN(1129)											data10->fPos = (data10->fPos + (int)4);
            										}
            										break;
            										case (int)5: {
HXLINE(1129)											 ::openfl::_internal::renderer::DrawCommandReader data11 = data;
HXDLIN(1129)											data11->fPos = (data11->fPos + (int)3);
            										}
            										break;
            										case (int)6: {
HXLINE(1129)											 ::openfl::_internal::renderer::DrawCommandReader data12 = data;
HXDLIN(1129)											data12->fPos = (data12->fPos + (int)4);
            										}
            										break;
            										case (int)7: {
HXLINE(1129)											 ::openfl::_internal::renderer::DrawCommandReader data13 = data;
HXDLIN(1129)											data13->fPos = (data13->fPos + (int)4);
            										}
            										break;
            										case (int)8: {
HXLINE(1129)											 ::openfl::_internal::renderer::DrawCommandReader data14 = data;
HXDLIN(1129)											data14->fPos = (data14->fPos + (int)5);
HXDLIN(1129)											 ::openfl::_internal::renderer::DrawCommandReader data15 = data;
HXDLIN(1129)											data15->oPos = (data15->oPos + (int)1);
            										}
            										break;
            										case (int)10: {
HXLINE(1129)											 ::openfl::_internal::renderer::DrawCommandReader data16 = data;
HXDLIN(1129)											data16->oPos = (data16->oPos + (int)4);
            										}
            										break;
            										case (int)11: {
            										}
            										break;
            										case (int)12: {
HXLINE(1129)											 ::openfl::_internal::renderer::DrawCommandReader data17 = data;
HXDLIN(1129)											data17->oPos = (data17->oPos + (int)2);
HXDLIN(1129)											 ::openfl::_internal::renderer::DrawCommandReader data18 = data;
HXDLIN(1129)											data18->bPos = (data18->bPos + (int)2);
            										}
            										break;
            										case (int)13: {
HXLINE(1129)											 ::openfl::_internal::renderer::DrawCommandReader data19 = data;
HXDLIN(1129)											data19->oPos = (data19->oPos + (int)4);
HXDLIN(1129)											 ::openfl::_internal::renderer::DrawCommandReader data20 = data;
HXDLIN(1129)											data20->iiPos = (data20->iiPos + (int)2);
HXDLIN(1129)											 ::openfl::_internal::renderer::DrawCommandReader data21 = data;
HXDLIN(1129)											data21->ffPos = (data21->ffPos + (int)1);
HXDLIN(1129)											 ::openfl::_internal::renderer::DrawCommandReader data22 = data;
HXDLIN(1129)											data22->fPos = (data22->fPos + (int)1);
            										}
            										break;
            										case (int)14: {
HXLINE(1129)											 ::openfl::_internal::renderer::DrawCommandReader data23 = data;
HXDLIN(1129)											data23->oPos = (data23->oPos + (int)4);
HXDLIN(1129)											 ::openfl::_internal::renderer::DrawCommandReader data24 = data;
HXDLIN(1129)											data24->iPos = (data24->iPos + (int)1);
HXDLIN(1129)											 ::openfl::_internal::renderer::DrawCommandReader data25 = data;
HXDLIN(1129)											data25->fPos = (data25->fPos + (int)2);
HXDLIN(1129)											 ::openfl::_internal::renderer::DrawCommandReader data26 = data;
HXDLIN(1129)											data26->bPos = (data26->bPos + (int)1);
            										}
            										break;
            										case (int)15: {
HXLINE(1129)											 ::openfl::_internal::renderer::DrawCommandReader data27 = data;
HXDLIN(1129)											data27->fPos = (data27->fPos + (int)2);
            										}
            										break;
            										case (int)16: {
HXLINE(1129)											 ::openfl::_internal::renderer::DrawCommandReader data28 = data;
HXDLIN(1129)											data28->fPos = (data28->fPos + (int)2);
            										}
            										break;
            										case (int)17: {
HXLINE(1129)											 ::openfl::_internal::renderer::DrawCommandReader data29 = data;
HXDLIN(1129)											data29->oPos = (data29->oPos + (int)1);
            										}
            										break;
            										default:{
            										}
            									}
            								}
HXLINE(1129)								data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::BEGIN_BITMAP_FILL_dyn();
HXDLIN(1129)								 ::openfl::_internal::renderer::DrawCommandReader this1 = data;
HXDLIN(1129)								 ::openfl::_internal::renderer::DrawCommandReader c = this1;
HXLINE(1130)								 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp8 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands;
HXDLIN(1130)								 ::openfl::display::BitmapData c1 = ( ( ::openfl::display::BitmapData)(c->buffer->o->__get(c->oPos)) );
HXDLIN(1130)								::cpp::VirtualArray c2 = c->buffer->o;
HXDLIN(1130)								 ::openfl::geom::Matrix c3 = ( ( ::openfl::geom::Matrix)(c2->__get((c->oPos + (int)1))) );
HXDLIN(1130)								bool c4 = c->buffer->b->__get(c->bPos);
HXDLIN(1130)								::Array< bool > c5 = c->buffer->b;
HXDLIN(1130)								_hx_tmp8->beginBitmapFill(c1,c3,c4,c5->__get((c->bPos + (int)1)));
HXLINE(1131)								 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp9 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands;
HXDLIN(1131)								 ::openfl::display::BitmapData c6 = ( ( ::openfl::display::BitmapData)(c->buffer->o->__get(c->oPos)) );
HXDLIN(1131)								::cpp::VirtualArray c7 = c->buffer->o;
HXDLIN(1131)								 ::openfl::geom::Matrix c8 = ( ( ::openfl::geom::Matrix)(c7->__get((c->oPos + (int)1))) );
HXDLIN(1131)								bool c9 = c->buffer->b->__get(c->bPos);
HXDLIN(1131)								::Array< bool > c10 = c->buffer->b;
HXDLIN(1131)								_hx_tmp9->beginBitmapFill(c6,c8,c9,c10->__get((c->bPos + (int)1)));
            							}
            							else {
HXLINE(1133)								if (hx::IsEq( type,::openfl::_internal::renderer::DrawCommandType_obj::BEGIN_GRADIENT_FILL_dyn() )) {
HXLINE(1135)									{
HXLINE(1135)										 ::openfl::_internal::renderer::DrawCommandType _g3 = data->prev;
HXDLIN(1135)										switch((int)(_hx_getEnumValueIndex(_g3))){
            											case (int)0: {
HXLINE(1135)												 ::openfl::_internal::renderer::DrawCommandReader data30 = data;
HXDLIN(1135)												data30->oPos = (data30->oPos + (int)2);
HXDLIN(1135)												 ::openfl::_internal::renderer::DrawCommandReader data31 = data;
HXDLIN(1135)												data31->bPos = (data31->bPos + (int)2);
            											}
            											break;
            											case (int)1: {
HXLINE(1135)												 ::openfl::_internal::renderer::DrawCommandReader data32 = data;
HXDLIN(1135)												data32->iPos = (data32->iPos + (int)1);
HXDLIN(1135)												 ::openfl::_internal::renderer::DrawCommandReader data33 = data;
HXDLIN(1135)												data33->fPos = (data33->fPos + (int)1);
            											}
            											break;
            											case (int)2: {
HXLINE(1135)												 ::openfl::_internal::renderer::DrawCommandReader data34 = data;
HXDLIN(1135)												data34->oPos = (data34->oPos + (int)4);
HXDLIN(1135)												 ::openfl::_internal::renderer::DrawCommandReader data35 = data;
HXDLIN(1135)												data35->iiPos = (data35->iiPos + (int)2);
HXDLIN(1135)												 ::openfl::_internal::renderer::DrawCommandReader data36 = data;
HXDLIN(1135)												data36->ffPos = (data36->ffPos + (int)1);
HXDLIN(1135)												 ::openfl::_internal::renderer::DrawCommandReader data37 = data;
HXDLIN(1135)												data37->fPos = (data37->fPos + (int)1);
            											}
            											break;
            											case (int)3: {
HXLINE(1135)												 ::openfl::_internal::renderer::DrawCommandReader data38 = data;
HXDLIN(1135)												data38->fPos = (data38->fPos + (int)6);
            											}
            											break;
            											case (int)4: {
HXLINE(1135)												 ::openfl::_internal::renderer::DrawCommandReader data39 = data;
HXDLIN(1135)												data39->fPos = (data39->fPos + (int)4);
            											}
            											break;
            											case (int)5: {
HXLINE(1135)												 ::openfl::_internal::renderer::DrawCommandReader data40 = data;
HXDLIN(1135)												data40->fPos = (data40->fPos + (int)3);
            											}
            											break;
            											case (int)6: {
HXLINE(1135)												 ::openfl::_internal::renderer::DrawCommandReader data41 = data;
HXDLIN(1135)												data41->fPos = (data41->fPos + (int)4);
            											}
            											break;
            											case (int)7: {
HXLINE(1135)												 ::openfl::_internal::renderer::DrawCommandReader data42 = data;
HXDLIN(1135)												data42->fPos = (data42->fPos + (int)4);
            											}
            											break;
            											case (int)8: {
HXLINE(1135)												 ::openfl::_internal::renderer::DrawCommandReader data43 = data;
HXDLIN(1135)												data43->fPos = (data43->fPos + (int)5);
HXDLIN(1135)												 ::openfl::_internal::renderer::DrawCommandReader data44 = data;
HXDLIN(1135)												data44->oPos = (data44->oPos + (int)1);
            											}
            											break;
            											case (int)10: {
HXLINE(1135)												 ::openfl::_internal::renderer::DrawCommandReader data45 = data;
HXDLIN(1135)												data45->oPos = (data45->oPos + (int)4);
            											}
            											break;
            											case (int)11: {
            											}
            											break;
            											case (int)12: {
HXLINE(1135)												 ::openfl::_internal::renderer::DrawCommandReader data46 = data;
HXDLIN(1135)												data46->oPos = (data46->oPos + (int)2);
HXDLIN(1135)												 ::openfl::_internal::renderer::DrawCommandReader data47 = data;
HXDLIN(1135)												data47->bPos = (data47->bPos + (int)2);
            											}
            											break;
            											case (int)13: {
HXLINE(1135)												 ::openfl::_internal::renderer::DrawCommandReader data48 = data;
HXDLIN(1135)												data48->oPos = (data48->oPos + (int)4);
HXDLIN(1135)												 ::openfl::_internal::renderer::DrawCommandReader data49 = data;
HXDLIN(1135)												data49->iiPos = (data49->iiPos + (int)2);
HXDLIN(1135)												 ::openfl::_internal::renderer::DrawCommandReader data50 = data;
HXDLIN(1135)												data50->ffPos = (data50->ffPos + (int)1);
HXDLIN(1135)												 ::openfl::_internal::renderer::DrawCommandReader data51 = data;
HXDLIN(1135)												data51->fPos = (data51->fPos + (int)1);
            											}
            											break;
            											case (int)14: {
HXLINE(1135)												 ::openfl::_internal::renderer::DrawCommandReader data52 = data;
HXDLIN(1135)												data52->oPos = (data52->oPos + (int)4);
HXDLIN(1135)												 ::openfl::_internal::renderer::DrawCommandReader data53 = data;
HXDLIN(1135)												data53->iPos = (data53->iPos + (int)1);
HXDLIN(1135)												 ::openfl::_internal::renderer::DrawCommandReader data54 = data;
HXDLIN(1135)												data54->fPos = (data54->fPos + (int)2);
HXDLIN(1135)												 ::openfl::_internal::renderer::DrawCommandReader data55 = data;
HXDLIN(1135)												data55->bPos = (data55->bPos + (int)1);
            											}
            											break;
            											case (int)15: {
HXLINE(1135)												 ::openfl::_internal::renderer::DrawCommandReader data56 = data;
HXDLIN(1135)												data56->fPos = (data56->fPos + (int)2);
            											}
            											break;
            											case (int)16: {
HXLINE(1135)												 ::openfl::_internal::renderer::DrawCommandReader data57 = data;
HXDLIN(1135)												data57->fPos = (data57->fPos + (int)2);
            											}
            											break;
            											case (int)17: {
HXLINE(1135)												 ::openfl::_internal::renderer::DrawCommandReader data58 = data;
HXDLIN(1135)												data58->oPos = (data58->oPos + (int)1);
            											}
            											break;
            											default:{
            											}
            										}
            									}
HXLINE(1135)									data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::BEGIN_GRADIENT_FILL_dyn();
HXDLIN(1135)									 ::openfl::_internal::renderer::DrawCommandReader this2 = data;
HXDLIN(1135)									 ::openfl::_internal::renderer::DrawCommandReader c11 = this2;
HXLINE(1136)									::Array< ::Dynamic> c12 = c11->buffer->ii;
HXDLIN(1136)									::cpp::VirtualArray c13 = c11->buffer->o;
HXDLIN(1136)									::cpp::VirtualArray c14 = c11->buffer->o;
HXDLIN(1136)									::cpp::VirtualArray c15 = c11->buffer->o;
HXDLIN(1136)									::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands->beginGradientFill(c11->buffer->o->__get(c11->oPos),c11->buffer->ii->__get(c11->iiPos).StaticCast< ::Array< int > >(),c11->buffer->ff->__get(c11->ffPos).StaticCast< ::Array< Float > >(),c12->__get((c11->iiPos + (int)1)).StaticCast< ::Array< int > >(),( ( ::openfl::geom::Matrix)(c13->__get((c11->oPos + (int)1))) ),c14->__get((c11->oPos + (int)2)),c15->__get((c11->oPos + (int)3)),c11->buffer->f->__get(c11->fPos));
HXLINE(1137)									::Array< ::Dynamic> c16 = c11->buffer->ii;
HXDLIN(1137)									::cpp::VirtualArray c17 = c11->buffer->o;
HXDLIN(1137)									::cpp::VirtualArray c18 = c11->buffer->o;
HXDLIN(1137)									::cpp::VirtualArray c19 = c11->buffer->o;
HXDLIN(1137)									::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands->beginGradientFill(c11->buffer->o->__get(c11->oPos),c11->buffer->ii->__get(c11->iiPos).StaticCast< ::Array< int > >(),c11->buffer->ff->__get(c11->ffPos).StaticCast< ::Array< Float > >(),c16->__get((c11->iiPos + (int)1)).StaticCast< ::Array< int > >(),( ( ::openfl::geom::Matrix)(c17->__get((c11->oPos + (int)1))) ),c18->__get((c11->oPos + (int)2)),c19->__get((c11->oPos + (int)3)),c11->buffer->f->__get(c11->fPos));
            								}
            								else {
HXLINE(1141)									{
HXLINE(1141)										 ::openfl::_internal::renderer::DrawCommandType _g4 = data->prev;
HXDLIN(1141)										switch((int)(_hx_getEnumValueIndex(_g4))){
            											case (int)0: {
HXLINE(1141)												 ::openfl::_internal::renderer::DrawCommandReader data59 = data;
HXDLIN(1141)												data59->oPos = (data59->oPos + (int)2);
HXDLIN(1141)												 ::openfl::_internal::renderer::DrawCommandReader data60 = data;
HXDLIN(1141)												data60->bPos = (data60->bPos + (int)2);
            											}
            											break;
            											case (int)1: {
HXLINE(1141)												 ::openfl::_internal::renderer::DrawCommandReader data61 = data;
HXDLIN(1141)												data61->iPos = (data61->iPos + (int)1);
HXDLIN(1141)												 ::openfl::_internal::renderer::DrawCommandReader data62 = data;
HXDLIN(1141)												data62->fPos = (data62->fPos + (int)1);
            											}
            											break;
            											case (int)2: {
HXLINE(1141)												 ::openfl::_internal::renderer::DrawCommandReader data63 = data;
HXDLIN(1141)												data63->oPos = (data63->oPos + (int)4);
HXDLIN(1141)												 ::openfl::_internal::renderer::DrawCommandReader data64 = data;
HXDLIN(1141)												data64->iiPos = (data64->iiPos + (int)2);
HXDLIN(1141)												 ::openfl::_internal::renderer::DrawCommandReader data65 = data;
HXDLIN(1141)												data65->ffPos = (data65->ffPos + (int)1);
HXDLIN(1141)												 ::openfl::_internal::renderer::DrawCommandReader data66 = data;
HXDLIN(1141)												data66->fPos = (data66->fPos + (int)1);
            											}
            											break;
            											case (int)3: {
HXLINE(1141)												 ::openfl::_internal::renderer::DrawCommandReader data67 = data;
HXDLIN(1141)												data67->fPos = (data67->fPos + (int)6);
            											}
            											break;
            											case (int)4: {
HXLINE(1141)												 ::openfl::_internal::renderer::DrawCommandReader data68 = data;
HXDLIN(1141)												data68->fPos = (data68->fPos + (int)4);
            											}
            											break;
            											case (int)5: {
HXLINE(1141)												 ::openfl::_internal::renderer::DrawCommandReader data69 = data;
HXDLIN(1141)												data69->fPos = (data69->fPos + (int)3);
            											}
            											break;
            											case (int)6: {
HXLINE(1141)												 ::openfl::_internal::renderer::DrawCommandReader data70 = data;
HXDLIN(1141)												data70->fPos = (data70->fPos + (int)4);
            											}
            											break;
            											case (int)7: {
HXLINE(1141)												 ::openfl::_internal::renderer::DrawCommandReader data71 = data;
HXDLIN(1141)												data71->fPos = (data71->fPos + (int)4);
            											}
            											break;
            											case (int)8: {
HXLINE(1141)												 ::openfl::_internal::renderer::DrawCommandReader data72 = data;
HXDLIN(1141)												data72->fPos = (data72->fPos + (int)5);
HXDLIN(1141)												 ::openfl::_internal::renderer::DrawCommandReader data73 = data;
HXDLIN(1141)												data73->oPos = (data73->oPos + (int)1);
            											}
            											break;
            											case (int)10: {
HXLINE(1141)												 ::openfl::_internal::renderer::DrawCommandReader data74 = data;
HXDLIN(1141)												data74->oPos = (data74->oPos + (int)4);
            											}
            											break;
            											case (int)11: {
            											}
            											break;
            											case (int)12: {
HXLINE(1141)												 ::openfl::_internal::renderer::DrawCommandReader data75 = data;
HXDLIN(1141)												data75->oPos = (data75->oPos + (int)2);
HXDLIN(1141)												 ::openfl::_internal::renderer::DrawCommandReader data76 = data;
HXDLIN(1141)												data76->bPos = (data76->bPos + (int)2);
            											}
            											break;
            											case (int)13: {
HXLINE(1141)												 ::openfl::_internal::renderer::DrawCommandReader data77 = data;
HXDLIN(1141)												data77->oPos = (data77->oPos + (int)4);
HXDLIN(1141)												 ::openfl::_internal::renderer::DrawCommandReader data78 = data;
HXDLIN(1141)												data78->iiPos = (data78->iiPos + (int)2);
HXDLIN(1141)												 ::openfl::_internal::renderer::DrawCommandReader data79 = data;
HXDLIN(1141)												data79->ffPos = (data79->ffPos + (int)1);
HXDLIN(1141)												 ::openfl::_internal::renderer::DrawCommandReader data80 = data;
HXDLIN(1141)												data80->fPos = (data80->fPos + (int)1);
            											}
            											break;
            											case (int)14: {
HXLINE(1141)												 ::openfl::_internal::renderer::DrawCommandReader data81 = data;
HXDLIN(1141)												data81->oPos = (data81->oPos + (int)4);
HXDLIN(1141)												 ::openfl::_internal::renderer::DrawCommandReader data82 = data;
HXDLIN(1141)												data82->iPos = (data82->iPos + (int)1);
HXDLIN(1141)												 ::openfl::_internal::renderer::DrawCommandReader data83 = data;
HXDLIN(1141)												data83->fPos = (data83->fPos + (int)2);
HXDLIN(1141)												 ::openfl::_internal::renderer::DrawCommandReader data84 = data;
HXDLIN(1141)												data84->bPos = (data84->bPos + (int)1);
            											}
            											break;
            											case (int)15: {
HXLINE(1141)												 ::openfl::_internal::renderer::DrawCommandReader data85 = data;
HXDLIN(1141)												data85->fPos = (data85->fPos + (int)2);
            											}
            											break;
            											case (int)16: {
HXLINE(1141)												 ::openfl::_internal::renderer::DrawCommandReader data86 = data;
HXDLIN(1141)												data86->fPos = (data86->fPos + (int)2);
            											}
            											break;
            											case (int)17: {
HXLINE(1141)												 ::openfl::_internal::renderer::DrawCommandReader data87 = data;
HXDLIN(1141)												data87->oPos = (data87->oPos + (int)1);
            											}
            											break;
            											default:{
            											}
            										}
            									}
HXLINE(1141)									data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::BEGIN_FILL_dyn();
HXDLIN(1141)									 ::openfl::_internal::renderer::DrawCommandReader this3 = data;
HXDLIN(1141)									 ::openfl::_internal::renderer::DrawCommandReader c20 = this3;
HXLINE(1142)									 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp10 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands;
HXDLIN(1142)									int c21 = c20->buffer->i->__get(c20->iPos);
HXDLIN(1142)									_hx_tmp10->beginFill(c21,c20->buffer->f->__get(c20->fPos));
HXLINE(1143)									 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp11 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands;
HXDLIN(1143)									int c22 = c20->buffer->i->__get(c20->iPos);
HXDLIN(1143)									_hx_tmp11->beginFill(c22,c20->buffer->f->__get(c20->fPos));
            								}
            							}
            						}
            						break;
            						case (int)3: {
HXLINE(1077)							{
HXLINE(1077)								 ::openfl::_internal::renderer::DrawCommandType _g5 = data->prev;
HXDLIN(1077)								switch((int)(_hx_getEnumValueIndex(_g5))){
            									case (int)0: {
HXLINE(1077)										 ::openfl::_internal::renderer::DrawCommandReader data88 = data;
HXDLIN(1077)										data88->oPos = (data88->oPos + (int)2);
HXDLIN(1077)										 ::openfl::_internal::renderer::DrawCommandReader data89 = data;
HXDLIN(1077)										data89->bPos = (data89->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE(1077)										 ::openfl::_internal::renderer::DrawCommandReader data90 = data;
HXDLIN(1077)										data90->iPos = (data90->iPos + (int)1);
HXDLIN(1077)										 ::openfl::_internal::renderer::DrawCommandReader data91 = data;
HXDLIN(1077)										data91->fPos = (data91->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE(1077)										 ::openfl::_internal::renderer::DrawCommandReader data92 = data;
HXDLIN(1077)										data92->oPos = (data92->oPos + (int)4);
HXDLIN(1077)										 ::openfl::_internal::renderer::DrawCommandReader data93 = data;
HXDLIN(1077)										data93->iiPos = (data93->iiPos + (int)2);
HXDLIN(1077)										 ::openfl::_internal::renderer::DrawCommandReader data94 = data;
HXDLIN(1077)										data94->ffPos = (data94->ffPos + (int)1);
HXDLIN(1077)										 ::openfl::_internal::renderer::DrawCommandReader data95 = data;
HXDLIN(1077)										data95->fPos = (data95->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE(1077)										 ::openfl::_internal::renderer::DrawCommandReader data96 = data;
HXDLIN(1077)										data96->fPos = (data96->fPos + (int)6);
            									}
            									break;
            									case (int)4: {
HXLINE(1077)										 ::openfl::_internal::renderer::DrawCommandReader data97 = data;
HXDLIN(1077)										data97->fPos = (data97->fPos + (int)4);
            									}
            									break;
            									case (int)5: {
HXLINE(1077)										 ::openfl::_internal::renderer::DrawCommandReader data98 = data;
HXDLIN(1077)										data98->fPos = (data98->fPos + (int)3);
            									}
            									break;
            									case (int)6: {
HXLINE(1077)										 ::openfl::_internal::renderer::DrawCommandReader data99 = data;
HXDLIN(1077)										data99->fPos = (data99->fPos + (int)4);
            									}
            									break;
            									case (int)7: {
HXLINE(1077)										 ::openfl::_internal::renderer::DrawCommandReader data100 = data;
HXDLIN(1077)										data100->fPos = (data100->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE(1077)										 ::openfl::_internal::renderer::DrawCommandReader data101 = data;
HXDLIN(1077)										data101->fPos = (data101->fPos + (int)5);
HXDLIN(1077)										 ::openfl::_internal::renderer::DrawCommandReader data102 = data;
HXDLIN(1077)										data102->oPos = (data102->oPos + (int)1);
            									}
            									break;
            									case (int)10: {
HXLINE(1077)										 ::openfl::_internal::renderer::DrawCommandReader data103 = data;
HXDLIN(1077)										data103->oPos = (data103->oPos + (int)4);
            									}
            									break;
            									case (int)11: {
            									}
            									break;
            									case (int)12: {
HXLINE(1077)										 ::openfl::_internal::renderer::DrawCommandReader data104 = data;
HXDLIN(1077)										data104->oPos = (data104->oPos + (int)2);
HXDLIN(1077)										 ::openfl::_internal::renderer::DrawCommandReader data105 = data;
HXDLIN(1077)										data105->bPos = (data105->bPos + (int)2);
            									}
            									break;
            									case (int)13: {
HXLINE(1077)										 ::openfl::_internal::renderer::DrawCommandReader data106 = data;
HXDLIN(1077)										data106->oPos = (data106->oPos + (int)4);
HXDLIN(1077)										 ::openfl::_internal::renderer::DrawCommandReader data107 = data;
HXDLIN(1077)										data107->iiPos = (data107->iiPos + (int)2);
HXDLIN(1077)										 ::openfl::_internal::renderer::DrawCommandReader data108 = data;
HXDLIN(1077)										data108->ffPos = (data108->ffPos + (int)1);
HXDLIN(1077)										 ::openfl::_internal::renderer::DrawCommandReader data109 = data;
HXDLIN(1077)										data109->fPos = (data109->fPos + (int)1);
            									}
            									break;
            									case (int)14: {
HXLINE(1077)										 ::openfl::_internal::renderer::DrawCommandReader data110 = data;
HXDLIN(1077)										data110->oPos = (data110->oPos + (int)4);
HXDLIN(1077)										 ::openfl::_internal::renderer::DrawCommandReader data111 = data;
HXDLIN(1077)										data111->iPos = (data111->iPos + (int)1);
HXDLIN(1077)										 ::openfl::_internal::renderer::DrawCommandReader data112 = data;
HXDLIN(1077)										data112->fPos = (data112->fPos + (int)2);
HXDLIN(1077)										 ::openfl::_internal::renderer::DrawCommandReader data113 = data;
HXDLIN(1077)										data113->bPos = (data113->bPos + (int)1);
            									}
            									break;
            									case (int)15: {
HXLINE(1077)										 ::openfl::_internal::renderer::DrawCommandReader data114 = data;
HXDLIN(1077)										data114->fPos = (data114->fPos + (int)2);
            									}
            									break;
            									case (int)16: {
HXLINE(1077)										 ::openfl::_internal::renderer::DrawCommandReader data115 = data;
HXDLIN(1077)										data115->fPos = (data115->fPos + (int)2);
            									}
            									break;
            									case (int)17: {
HXLINE(1077)										 ::openfl::_internal::renderer::DrawCommandReader data116 = data;
HXDLIN(1077)										data116->oPos = (data116->oPos + (int)1);
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE(1077)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::CUBIC_CURVE_TO_dyn();
HXDLIN(1077)							 ::openfl::_internal::renderer::DrawCommandReader this4 = data;
HXDLIN(1077)							 ::openfl::_internal::renderer::DrawCommandReader c23 = this4;
HXLINE(1078)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp12 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands;
HXDLIN(1078)							Float c24 = c23->buffer->f->__get(c23->fPos);
HXDLIN(1078)							::Array< Float > c25 = c23->buffer->f;
HXDLIN(1078)							Float c26 = c25->__get((c23->fPos + (int)1));
HXDLIN(1078)							::Array< Float > c27 = c23->buffer->f;
HXDLIN(1078)							Float c28 = c27->__get((c23->fPos + (int)2));
HXDLIN(1078)							::Array< Float > c29 = c23->buffer->f;
HXDLIN(1078)							Float c30 = c29->__get((c23->fPos + (int)3));
HXDLIN(1078)							::Array< Float > c31 = c23->buffer->f;
HXDLIN(1078)							Float c32 = c31->__get((c23->fPos + (int)4));
HXDLIN(1078)							::Array< Float > c33 = c23->buffer->f;
HXDLIN(1078)							_hx_tmp12->cubicCurveTo(c24,c26,c28,c30,c32,c33->__get((c23->fPos + (int)5)));
HXLINE(1079)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp13 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands;
HXDLIN(1079)							Float c34 = c23->buffer->f->__get(c23->fPos);
HXDLIN(1079)							::Array< Float > c35 = c23->buffer->f;
HXDLIN(1079)							Float c36 = c35->__get((c23->fPos + (int)1));
HXDLIN(1079)							::Array< Float > c37 = c23->buffer->f;
HXDLIN(1079)							Float c38 = c37->__get((c23->fPos + (int)2));
HXDLIN(1079)							::Array< Float > c39 = c23->buffer->f;
HXDLIN(1079)							Float c40 = c39->__get((c23->fPos + (int)3));
HXDLIN(1079)							::Array< Float > c41 = c23->buffer->f;
HXDLIN(1079)							Float c42 = c41->__get((c23->fPos + (int)4));
HXDLIN(1079)							::Array< Float > c43 = c23->buffer->f;
HXDLIN(1079)							_hx_tmp13->cubicCurveTo(c34,c36,c38,c40,c42,c43->__get((c23->fPos + (int)5)));
            						}
            						break;
            						case (int)4: {
HXLINE(1083)							{
HXLINE(1083)								 ::openfl::_internal::renderer::DrawCommandType _g6 = data->prev;
HXDLIN(1083)								switch((int)(_hx_getEnumValueIndex(_g6))){
            									case (int)0: {
HXLINE(1083)										 ::openfl::_internal::renderer::DrawCommandReader data117 = data;
HXDLIN(1083)										data117->oPos = (data117->oPos + (int)2);
HXDLIN(1083)										 ::openfl::_internal::renderer::DrawCommandReader data118 = data;
HXDLIN(1083)										data118->bPos = (data118->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE(1083)										 ::openfl::_internal::renderer::DrawCommandReader data119 = data;
HXDLIN(1083)										data119->iPos = (data119->iPos + (int)1);
HXDLIN(1083)										 ::openfl::_internal::renderer::DrawCommandReader data120 = data;
HXDLIN(1083)										data120->fPos = (data120->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE(1083)										 ::openfl::_internal::renderer::DrawCommandReader data121 = data;
HXDLIN(1083)										data121->oPos = (data121->oPos + (int)4);
HXDLIN(1083)										 ::openfl::_internal::renderer::DrawCommandReader data122 = data;
HXDLIN(1083)										data122->iiPos = (data122->iiPos + (int)2);
HXDLIN(1083)										 ::openfl::_internal::renderer::DrawCommandReader data123 = data;
HXDLIN(1083)										data123->ffPos = (data123->ffPos + (int)1);
HXDLIN(1083)										 ::openfl::_internal::renderer::DrawCommandReader data124 = data;
HXDLIN(1083)										data124->fPos = (data124->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE(1083)										 ::openfl::_internal::renderer::DrawCommandReader data125 = data;
HXDLIN(1083)										data125->fPos = (data125->fPos + (int)6);
            									}
            									break;
            									case (int)4: {
HXLINE(1083)										 ::openfl::_internal::renderer::DrawCommandReader data126 = data;
HXDLIN(1083)										data126->fPos = (data126->fPos + (int)4);
            									}
            									break;
            									case (int)5: {
HXLINE(1083)										 ::openfl::_internal::renderer::DrawCommandReader data127 = data;
HXDLIN(1083)										data127->fPos = (data127->fPos + (int)3);
            									}
            									break;
            									case (int)6: {
HXLINE(1083)										 ::openfl::_internal::renderer::DrawCommandReader data128 = data;
HXDLIN(1083)										data128->fPos = (data128->fPos + (int)4);
            									}
            									break;
            									case (int)7: {
HXLINE(1083)										 ::openfl::_internal::renderer::DrawCommandReader data129 = data;
HXDLIN(1083)										data129->fPos = (data129->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE(1083)										 ::openfl::_internal::renderer::DrawCommandReader data130 = data;
HXDLIN(1083)										data130->fPos = (data130->fPos + (int)5);
HXDLIN(1083)										 ::openfl::_internal::renderer::DrawCommandReader data131 = data;
HXDLIN(1083)										data131->oPos = (data131->oPos + (int)1);
            									}
            									break;
            									case (int)10: {
HXLINE(1083)										 ::openfl::_internal::renderer::DrawCommandReader data132 = data;
HXDLIN(1083)										data132->oPos = (data132->oPos + (int)4);
            									}
            									break;
            									case (int)11: {
            									}
            									break;
            									case (int)12: {
HXLINE(1083)										 ::openfl::_internal::renderer::DrawCommandReader data133 = data;
HXDLIN(1083)										data133->oPos = (data133->oPos + (int)2);
HXDLIN(1083)										 ::openfl::_internal::renderer::DrawCommandReader data134 = data;
HXDLIN(1083)										data134->bPos = (data134->bPos + (int)2);
            									}
            									break;
            									case (int)13: {
HXLINE(1083)										 ::openfl::_internal::renderer::DrawCommandReader data135 = data;
HXDLIN(1083)										data135->oPos = (data135->oPos + (int)4);
HXDLIN(1083)										 ::openfl::_internal::renderer::DrawCommandReader data136 = data;
HXDLIN(1083)										data136->iiPos = (data136->iiPos + (int)2);
HXDLIN(1083)										 ::openfl::_internal::renderer::DrawCommandReader data137 = data;
HXDLIN(1083)										data137->ffPos = (data137->ffPos + (int)1);
HXDLIN(1083)										 ::openfl::_internal::renderer::DrawCommandReader data138 = data;
HXDLIN(1083)										data138->fPos = (data138->fPos + (int)1);
            									}
            									break;
            									case (int)14: {
HXLINE(1083)										 ::openfl::_internal::renderer::DrawCommandReader data139 = data;
HXDLIN(1083)										data139->oPos = (data139->oPos + (int)4);
HXDLIN(1083)										 ::openfl::_internal::renderer::DrawCommandReader data140 = data;
HXDLIN(1083)										data140->iPos = (data140->iPos + (int)1);
HXDLIN(1083)										 ::openfl::_internal::renderer::DrawCommandReader data141 = data;
HXDLIN(1083)										data141->fPos = (data141->fPos + (int)2);
HXDLIN(1083)										 ::openfl::_internal::renderer::DrawCommandReader data142 = data;
HXDLIN(1083)										data142->bPos = (data142->bPos + (int)1);
            									}
            									break;
            									case (int)15: {
HXLINE(1083)										 ::openfl::_internal::renderer::DrawCommandReader data143 = data;
HXDLIN(1083)										data143->fPos = (data143->fPos + (int)2);
            									}
            									break;
            									case (int)16: {
HXLINE(1083)										 ::openfl::_internal::renderer::DrawCommandReader data144 = data;
HXDLIN(1083)										data144->fPos = (data144->fPos + (int)2);
            									}
            									break;
            									case (int)17: {
HXLINE(1083)										 ::openfl::_internal::renderer::DrawCommandReader data145 = data;
HXDLIN(1083)										data145->oPos = (data145->oPos + (int)1);
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE(1083)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::CURVE_TO_dyn();
HXDLIN(1083)							 ::openfl::_internal::renderer::DrawCommandReader this5 = data;
HXDLIN(1083)							 ::openfl::_internal::renderer::DrawCommandReader c44 = this5;
HXLINE(1084)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp14 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands;
HXDLIN(1084)							Float c45 = c44->buffer->f->__get(c44->fPos);
HXDLIN(1084)							::Array< Float > c46 = c44->buffer->f;
HXDLIN(1084)							Float c47 = c46->__get((c44->fPos + (int)1));
HXDLIN(1084)							::Array< Float > c48 = c44->buffer->f;
HXDLIN(1084)							Float c49 = c48->__get((c44->fPos + (int)2));
HXDLIN(1084)							::Array< Float > c50 = c44->buffer->f;
HXDLIN(1084)							_hx_tmp14->curveTo(c45,c47,c49,c50->__get((c44->fPos + (int)3)));
HXLINE(1085)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp15 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands;
HXDLIN(1085)							Float c51 = c44->buffer->f->__get(c44->fPos);
HXDLIN(1085)							::Array< Float > c52 = c44->buffer->f;
HXDLIN(1085)							Float c53 = c52->__get((c44->fPos + (int)1));
HXDLIN(1085)							::Array< Float > c54 = c44->buffer->f;
HXDLIN(1085)							Float c55 = c54->__get((c44->fPos + (int)2));
HXDLIN(1085)							::Array< Float > c56 = c44->buffer->f;
HXDLIN(1085)							_hx_tmp15->curveTo(c51,c53,c55,c56->__get((c44->fPos + (int)3)));
            						}
            						break;
            						case (int)5: {
HXLINE(1149)							{
HXLINE(1149)								 ::openfl::_internal::renderer::DrawCommandType _g7 = data->prev;
HXDLIN(1149)								switch((int)(_hx_getEnumValueIndex(_g7))){
            									case (int)0: {
HXLINE(1149)										 ::openfl::_internal::renderer::DrawCommandReader data146 = data;
HXDLIN(1149)										data146->oPos = (data146->oPos + (int)2);
HXDLIN(1149)										 ::openfl::_internal::renderer::DrawCommandReader data147 = data;
HXDLIN(1149)										data147->bPos = (data147->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE(1149)										 ::openfl::_internal::renderer::DrawCommandReader data148 = data;
HXDLIN(1149)										data148->iPos = (data148->iPos + (int)1);
HXDLIN(1149)										 ::openfl::_internal::renderer::DrawCommandReader data149 = data;
HXDLIN(1149)										data149->fPos = (data149->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE(1149)										 ::openfl::_internal::renderer::DrawCommandReader data150 = data;
HXDLIN(1149)										data150->oPos = (data150->oPos + (int)4);
HXDLIN(1149)										 ::openfl::_internal::renderer::DrawCommandReader data151 = data;
HXDLIN(1149)										data151->iiPos = (data151->iiPos + (int)2);
HXDLIN(1149)										 ::openfl::_internal::renderer::DrawCommandReader data152 = data;
HXDLIN(1149)										data152->ffPos = (data152->ffPos + (int)1);
HXDLIN(1149)										 ::openfl::_internal::renderer::DrawCommandReader data153 = data;
HXDLIN(1149)										data153->fPos = (data153->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE(1149)										 ::openfl::_internal::renderer::DrawCommandReader data154 = data;
HXDLIN(1149)										data154->fPos = (data154->fPos + (int)6);
            									}
            									break;
            									case (int)4: {
HXLINE(1149)										 ::openfl::_internal::renderer::DrawCommandReader data155 = data;
HXDLIN(1149)										data155->fPos = (data155->fPos + (int)4);
            									}
            									break;
            									case (int)5: {
HXLINE(1149)										 ::openfl::_internal::renderer::DrawCommandReader data156 = data;
HXDLIN(1149)										data156->fPos = (data156->fPos + (int)3);
            									}
            									break;
            									case (int)6: {
HXLINE(1149)										 ::openfl::_internal::renderer::DrawCommandReader data157 = data;
HXDLIN(1149)										data157->fPos = (data157->fPos + (int)4);
            									}
            									break;
            									case (int)7: {
HXLINE(1149)										 ::openfl::_internal::renderer::DrawCommandReader data158 = data;
HXDLIN(1149)										data158->fPos = (data158->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE(1149)										 ::openfl::_internal::renderer::DrawCommandReader data159 = data;
HXDLIN(1149)										data159->fPos = (data159->fPos + (int)5);
HXDLIN(1149)										 ::openfl::_internal::renderer::DrawCommandReader data160 = data;
HXDLIN(1149)										data160->oPos = (data160->oPos + (int)1);
            									}
            									break;
            									case (int)10: {
HXLINE(1149)										 ::openfl::_internal::renderer::DrawCommandReader data161 = data;
HXDLIN(1149)										data161->oPos = (data161->oPos + (int)4);
            									}
            									break;
            									case (int)11: {
            									}
            									break;
            									case (int)12: {
HXLINE(1149)										 ::openfl::_internal::renderer::DrawCommandReader data162 = data;
HXDLIN(1149)										data162->oPos = (data162->oPos + (int)2);
HXDLIN(1149)										 ::openfl::_internal::renderer::DrawCommandReader data163 = data;
HXDLIN(1149)										data163->bPos = (data163->bPos + (int)2);
            									}
            									break;
            									case (int)13: {
HXLINE(1149)										 ::openfl::_internal::renderer::DrawCommandReader data164 = data;
HXDLIN(1149)										data164->oPos = (data164->oPos + (int)4);
HXDLIN(1149)										 ::openfl::_internal::renderer::DrawCommandReader data165 = data;
HXDLIN(1149)										data165->iiPos = (data165->iiPos + (int)2);
HXDLIN(1149)										 ::openfl::_internal::renderer::DrawCommandReader data166 = data;
HXDLIN(1149)										data166->ffPos = (data166->ffPos + (int)1);
HXDLIN(1149)										 ::openfl::_internal::renderer::DrawCommandReader data167 = data;
HXDLIN(1149)										data167->fPos = (data167->fPos + (int)1);
            									}
            									break;
            									case (int)14: {
HXLINE(1149)										 ::openfl::_internal::renderer::DrawCommandReader data168 = data;
HXDLIN(1149)										data168->oPos = (data168->oPos + (int)4);
HXDLIN(1149)										 ::openfl::_internal::renderer::DrawCommandReader data169 = data;
HXDLIN(1149)										data169->iPos = (data169->iPos + (int)1);
HXDLIN(1149)										 ::openfl::_internal::renderer::DrawCommandReader data170 = data;
HXDLIN(1149)										data170->fPos = (data170->fPos + (int)2);
HXDLIN(1149)										 ::openfl::_internal::renderer::DrawCommandReader data171 = data;
HXDLIN(1149)										data171->bPos = (data171->bPos + (int)1);
            									}
            									break;
            									case (int)15: {
HXLINE(1149)										 ::openfl::_internal::renderer::DrawCommandReader data172 = data;
HXDLIN(1149)										data172->fPos = (data172->fPos + (int)2);
            									}
            									break;
            									case (int)16: {
HXLINE(1149)										 ::openfl::_internal::renderer::DrawCommandReader data173 = data;
HXDLIN(1149)										data173->fPos = (data173->fPos + (int)2);
            									}
            									break;
            									case (int)17: {
HXLINE(1149)										 ::openfl::_internal::renderer::DrawCommandReader data174 = data;
HXDLIN(1149)										data174->oPos = (data174->oPos + (int)1);
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE(1149)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::DRAW_CIRCLE_dyn();
HXDLIN(1149)							 ::openfl::_internal::renderer::DrawCommandReader this6 = data;
HXDLIN(1149)							 ::openfl::_internal::renderer::DrawCommandReader c57 = this6;
HXLINE(1150)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp16 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands;
HXDLIN(1150)							Float c58 = c57->buffer->f->__get(c57->fPos);
HXDLIN(1150)							::Array< Float > c59 = c57->buffer->f;
HXDLIN(1150)							Float c60 = c59->__get((c57->fPos + (int)1));
HXDLIN(1150)							::Array< Float > c61 = c57->buffer->f;
HXDLIN(1150)							_hx_tmp16->drawCircle(c58,c60,c61->__get((c57->fPos + (int)2)));
HXLINE(1151)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp17 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands;
HXDLIN(1151)							Float c62 = c57->buffer->f->__get(c57->fPos);
HXDLIN(1151)							::Array< Float > c63 = c57->buffer->f;
HXDLIN(1151)							Float c64 = c63->__get((c57->fPos + (int)1));
HXDLIN(1151)							::Array< Float > c65 = c57->buffer->f;
HXDLIN(1151)							_hx_tmp17->drawCircle(c62,c64,c65->__get((c57->fPos + (int)2)));
            						}
            						break;
            						case (int)6: {
HXLINE(1155)							{
HXLINE(1155)								 ::openfl::_internal::renderer::DrawCommandType _g8 = data->prev;
HXDLIN(1155)								switch((int)(_hx_getEnumValueIndex(_g8))){
            									case (int)0: {
HXLINE(1155)										 ::openfl::_internal::renderer::DrawCommandReader data175 = data;
HXDLIN(1155)										data175->oPos = (data175->oPos + (int)2);
HXDLIN(1155)										 ::openfl::_internal::renderer::DrawCommandReader data176 = data;
HXDLIN(1155)										data176->bPos = (data176->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE(1155)										 ::openfl::_internal::renderer::DrawCommandReader data177 = data;
HXDLIN(1155)										data177->iPos = (data177->iPos + (int)1);
HXDLIN(1155)										 ::openfl::_internal::renderer::DrawCommandReader data178 = data;
HXDLIN(1155)										data178->fPos = (data178->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE(1155)										 ::openfl::_internal::renderer::DrawCommandReader data179 = data;
HXDLIN(1155)										data179->oPos = (data179->oPos + (int)4);
HXDLIN(1155)										 ::openfl::_internal::renderer::DrawCommandReader data180 = data;
HXDLIN(1155)										data180->iiPos = (data180->iiPos + (int)2);
HXDLIN(1155)										 ::openfl::_internal::renderer::DrawCommandReader data181 = data;
HXDLIN(1155)										data181->ffPos = (data181->ffPos + (int)1);
HXDLIN(1155)										 ::openfl::_internal::renderer::DrawCommandReader data182 = data;
HXDLIN(1155)										data182->fPos = (data182->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE(1155)										 ::openfl::_internal::renderer::DrawCommandReader data183 = data;
HXDLIN(1155)										data183->fPos = (data183->fPos + (int)6);
            									}
            									break;
            									case (int)4: {
HXLINE(1155)										 ::openfl::_internal::renderer::DrawCommandReader data184 = data;
HXDLIN(1155)										data184->fPos = (data184->fPos + (int)4);
            									}
            									break;
            									case (int)5: {
HXLINE(1155)										 ::openfl::_internal::renderer::DrawCommandReader data185 = data;
HXDLIN(1155)										data185->fPos = (data185->fPos + (int)3);
            									}
            									break;
            									case (int)6: {
HXLINE(1155)										 ::openfl::_internal::renderer::DrawCommandReader data186 = data;
HXDLIN(1155)										data186->fPos = (data186->fPos + (int)4);
            									}
            									break;
            									case (int)7: {
HXLINE(1155)										 ::openfl::_internal::renderer::DrawCommandReader data187 = data;
HXDLIN(1155)										data187->fPos = (data187->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE(1155)										 ::openfl::_internal::renderer::DrawCommandReader data188 = data;
HXDLIN(1155)										data188->fPos = (data188->fPos + (int)5);
HXDLIN(1155)										 ::openfl::_internal::renderer::DrawCommandReader data189 = data;
HXDLIN(1155)										data189->oPos = (data189->oPos + (int)1);
            									}
            									break;
            									case (int)10: {
HXLINE(1155)										 ::openfl::_internal::renderer::DrawCommandReader data190 = data;
HXDLIN(1155)										data190->oPos = (data190->oPos + (int)4);
            									}
            									break;
            									case (int)11: {
            									}
            									break;
            									case (int)12: {
HXLINE(1155)										 ::openfl::_internal::renderer::DrawCommandReader data191 = data;
HXDLIN(1155)										data191->oPos = (data191->oPos + (int)2);
HXDLIN(1155)										 ::openfl::_internal::renderer::DrawCommandReader data192 = data;
HXDLIN(1155)										data192->bPos = (data192->bPos + (int)2);
            									}
            									break;
            									case (int)13: {
HXLINE(1155)										 ::openfl::_internal::renderer::DrawCommandReader data193 = data;
HXDLIN(1155)										data193->oPos = (data193->oPos + (int)4);
HXDLIN(1155)										 ::openfl::_internal::renderer::DrawCommandReader data194 = data;
HXDLIN(1155)										data194->iiPos = (data194->iiPos + (int)2);
HXDLIN(1155)										 ::openfl::_internal::renderer::DrawCommandReader data195 = data;
HXDLIN(1155)										data195->ffPos = (data195->ffPos + (int)1);
HXDLIN(1155)										 ::openfl::_internal::renderer::DrawCommandReader data196 = data;
HXDLIN(1155)										data196->fPos = (data196->fPos + (int)1);
            									}
            									break;
            									case (int)14: {
HXLINE(1155)										 ::openfl::_internal::renderer::DrawCommandReader data197 = data;
HXDLIN(1155)										data197->oPos = (data197->oPos + (int)4);
HXDLIN(1155)										 ::openfl::_internal::renderer::DrawCommandReader data198 = data;
HXDLIN(1155)										data198->iPos = (data198->iPos + (int)1);
HXDLIN(1155)										 ::openfl::_internal::renderer::DrawCommandReader data199 = data;
HXDLIN(1155)										data199->fPos = (data199->fPos + (int)2);
HXDLIN(1155)										 ::openfl::_internal::renderer::DrawCommandReader data200 = data;
HXDLIN(1155)										data200->bPos = (data200->bPos + (int)1);
            									}
            									break;
            									case (int)15: {
HXLINE(1155)										 ::openfl::_internal::renderer::DrawCommandReader data201 = data;
HXDLIN(1155)										data201->fPos = (data201->fPos + (int)2);
            									}
            									break;
            									case (int)16: {
HXLINE(1155)										 ::openfl::_internal::renderer::DrawCommandReader data202 = data;
HXDLIN(1155)										data202->fPos = (data202->fPos + (int)2);
            									}
            									break;
            									case (int)17: {
HXLINE(1155)										 ::openfl::_internal::renderer::DrawCommandReader data203 = data;
HXDLIN(1155)										data203->oPos = (data203->oPos + (int)1);
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE(1155)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::DRAW_ELLIPSE_dyn();
HXDLIN(1155)							 ::openfl::_internal::renderer::DrawCommandReader this7 = data;
HXDLIN(1155)							 ::openfl::_internal::renderer::DrawCommandReader c66 = this7;
HXLINE(1156)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp18 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands;
HXDLIN(1156)							Float c67 = c66->buffer->f->__get(c66->fPos);
HXDLIN(1156)							::Array< Float > c68 = c66->buffer->f;
HXDLIN(1156)							Float c69 = c68->__get((c66->fPos + (int)1));
HXDLIN(1156)							::Array< Float > c70 = c66->buffer->f;
HXDLIN(1156)							Float c71 = c70->__get((c66->fPos + (int)2));
HXDLIN(1156)							::Array< Float > c72 = c66->buffer->f;
HXDLIN(1156)							_hx_tmp18->drawEllipse(c67,c69,c71,c72->__get((c66->fPos + (int)3)));
HXLINE(1157)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp19 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands;
HXDLIN(1157)							Float c73 = c66->buffer->f->__get(c66->fPos);
HXDLIN(1157)							::Array< Float > c74 = c66->buffer->f;
HXDLIN(1157)							Float c75 = c74->__get((c66->fPos + (int)1));
HXDLIN(1157)							::Array< Float > c76 = c66->buffer->f;
HXDLIN(1157)							Float c77 = c76->__get((c66->fPos + (int)2));
HXDLIN(1157)							::Array< Float > c78 = c66->buffer->f;
HXDLIN(1157)							_hx_tmp19->drawEllipse(c73,c75,c77,c78->__get((c66->fPos + (int)3)));
            						}
            						break;
            						case (int)7: {
HXLINE(1161)							{
HXLINE(1161)								 ::openfl::_internal::renderer::DrawCommandType _g9 = data->prev;
HXDLIN(1161)								switch((int)(_hx_getEnumValueIndex(_g9))){
            									case (int)0: {
HXLINE(1161)										 ::openfl::_internal::renderer::DrawCommandReader data204 = data;
HXDLIN(1161)										data204->oPos = (data204->oPos + (int)2);
HXDLIN(1161)										 ::openfl::_internal::renderer::DrawCommandReader data205 = data;
HXDLIN(1161)										data205->bPos = (data205->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE(1161)										 ::openfl::_internal::renderer::DrawCommandReader data206 = data;
HXDLIN(1161)										data206->iPos = (data206->iPos + (int)1);
HXDLIN(1161)										 ::openfl::_internal::renderer::DrawCommandReader data207 = data;
HXDLIN(1161)										data207->fPos = (data207->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE(1161)										 ::openfl::_internal::renderer::DrawCommandReader data208 = data;
HXDLIN(1161)										data208->oPos = (data208->oPos + (int)4);
HXDLIN(1161)										 ::openfl::_internal::renderer::DrawCommandReader data209 = data;
HXDLIN(1161)										data209->iiPos = (data209->iiPos + (int)2);
HXDLIN(1161)										 ::openfl::_internal::renderer::DrawCommandReader data210 = data;
HXDLIN(1161)										data210->ffPos = (data210->ffPos + (int)1);
HXDLIN(1161)										 ::openfl::_internal::renderer::DrawCommandReader data211 = data;
HXDLIN(1161)										data211->fPos = (data211->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE(1161)										 ::openfl::_internal::renderer::DrawCommandReader data212 = data;
HXDLIN(1161)										data212->fPos = (data212->fPos + (int)6);
            									}
            									break;
            									case (int)4: {
HXLINE(1161)										 ::openfl::_internal::renderer::DrawCommandReader data213 = data;
HXDLIN(1161)										data213->fPos = (data213->fPos + (int)4);
            									}
            									break;
            									case (int)5: {
HXLINE(1161)										 ::openfl::_internal::renderer::DrawCommandReader data214 = data;
HXDLIN(1161)										data214->fPos = (data214->fPos + (int)3);
            									}
            									break;
            									case (int)6: {
HXLINE(1161)										 ::openfl::_internal::renderer::DrawCommandReader data215 = data;
HXDLIN(1161)										data215->fPos = (data215->fPos + (int)4);
            									}
            									break;
            									case (int)7: {
HXLINE(1161)										 ::openfl::_internal::renderer::DrawCommandReader data216 = data;
HXDLIN(1161)										data216->fPos = (data216->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE(1161)										 ::openfl::_internal::renderer::DrawCommandReader data217 = data;
HXDLIN(1161)										data217->fPos = (data217->fPos + (int)5);
HXDLIN(1161)										 ::openfl::_internal::renderer::DrawCommandReader data218 = data;
HXDLIN(1161)										data218->oPos = (data218->oPos + (int)1);
            									}
            									break;
            									case (int)10: {
HXLINE(1161)										 ::openfl::_internal::renderer::DrawCommandReader data219 = data;
HXDLIN(1161)										data219->oPos = (data219->oPos + (int)4);
            									}
            									break;
            									case (int)11: {
            									}
            									break;
            									case (int)12: {
HXLINE(1161)										 ::openfl::_internal::renderer::DrawCommandReader data220 = data;
HXDLIN(1161)										data220->oPos = (data220->oPos + (int)2);
HXDLIN(1161)										 ::openfl::_internal::renderer::DrawCommandReader data221 = data;
HXDLIN(1161)										data221->bPos = (data221->bPos + (int)2);
            									}
            									break;
            									case (int)13: {
HXLINE(1161)										 ::openfl::_internal::renderer::DrawCommandReader data222 = data;
HXDLIN(1161)										data222->oPos = (data222->oPos + (int)4);
HXDLIN(1161)										 ::openfl::_internal::renderer::DrawCommandReader data223 = data;
HXDLIN(1161)										data223->iiPos = (data223->iiPos + (int)2);
HXDLIN(1161)										 ::openfl::_internal::renderer::DrawCommandReader data224 = data;
HXDLIN(1161)										data224->ffPos = (data224->ffPos + (int)1);
HXDLIN(1161)										 ::openfl::_internal::renderer::DrawCommandReader data225 = data;
HXDLIN(1161)										data225->fPos = (data225->fPos + (int)1);
            									}
            									break;
            									case (int)14: {
HXLINE(1161)										 ::openfl::_internal::renderer::DrawCommandReader data226 = data;
HXDLIN(1161)										data226->oPos = (data226->oPos + (int)4);
HXDLIN(1161)										 ::openfl::_internal::renderer::DrawCommandReader data227 = data;
HXDLIN(1161)										data227->iPos = (data227->iPos + (int)1);
HXDLIN(1161)										 ::openfl::_internal::renderer::DrawCommandReader data228 = data;
HXDLIN(1161)										data228->fPos = (data228->fPos + (int)2);
HXDLIN(1161)										 ::openfl::_internal::renderer::DrawCommandReader data229 = data;
HXDLIN(1161)										data229->bPos = (data229->bPos + (int)1);
            									}
            									break;
            									case (int)15: {
HXLINE(1161)										 ::openfl::_internal::renderer::DrawCommandReader data230 = data;
HXDLIN(1161)										data230->fPos = (data230->fPos + (int)2);
            									}
            									break;
            									case (int)16: {
HXLINE(1161)										 ::openfl::_internal::renderer::DrawCommandReader data231 = data;
HXDLIN(1161)										data231->fPos = (data231->fPos + (int)2);
            									}
            									break;
            									case (int)17: {
HXLINE(1161)										 ::openfl::_internal::renderer::DrawCommandReader data232 = data;
HXDLIN(1161)										data232->oPos = (data232->oPos + (int)1);
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE(1161)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::DRAW_RECT_dyn();
HXDLIN(1161)							 ::openfl::_internal::renderer::DrawCommandReader this8 = data;
HXDLIN(1161)							 ::openfl::_internal::renderer::DrawCommandReader c79 = this8;
HXLINE(1162)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp20 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands;
HXDLIN(1162)							Float c80 = c79->buffer->f->__get(c79->fPos);
HXDLIN(1162)							::Array< Float > c81 = c79->buffer->f;
HXDLIN(1162)							Float c82 = c81->__get((c79->fPos + (int)1));
HXDLIN(1162)							::Array< Float > c83 = c79->buffer->f;
HXDLIN(1162)							Float c84 = c83->__get((c79->fPos + (int)2));
HXDLIN(1162)							::Array< Float > c85 = c79->buffer->f;
HXDLIN(1162)							_hx_tmp20->drawRect(c80,c82,c84,c85->__get((c79->fPos + (int)3)));
HXLINE(1163)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp21 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands;
HXDLIN(1163)							Float c86 = c79->buffer->f->__get(c79->fPos);
HXDLIN(1163)							::Array< Float > c87 = c79->buffer->f;
HXDLIN(1163)							Float c88 = c87->__get((c79->fPos + (int)1));
HXDLIN(1163)							::Array< Float > c89 = c79->buffer->f;
HXDLIN(1163)							Float c90 = c89->__get((c79->fPos + (int)2));
HXDLIN(1163)							::Array< Float > c91 = c79->buffer->f;
HXDLIN(1163)							_hx_tmp21->drawRect(c86,c88,c90,c91->__get((c79->fPos + (int)3)));
            						}
            						break;
            						case (int)8: {
HXLINE(1167)							{
HXLINE(1167)								 ::openfl::_internal::renderer::DrawCommandType _g10 = data->prev;
HXDLIN(1167)								switch((int)(_hx_getEnumValueIndex(_g10))){
            									case (int)0: {
HXLINE(1167)										 ::openfl::_internal::renderer::DrawCommandReader data233 = data;
HXDLIN(1167)										data233->oPos = (data233->oPos + (int)2);
HXDLIN(1167)										 ::openfl::_internal::renderer::DrawCommandReader data234 = data;
HXDLIN(1167)										data234->bPos = (data234->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE(1167)										 ::openfl::_internal::renderer::DrawCommandReader data235 = data;
HXDLIN(1167)										data235->iPos = (data235->iPos + (int)1);
HXDLIN(1167)										 ::openfl::_internal::renderer::DrawCommandReader data236 = data;
HXDLIN(1167)										data236->fPos = (data236->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE(1167)										 ::openfl::_internal::renderer::DrawCommandReader data237 = data;
HXDLIN(1167)										data237->oPos = (data237->oPos + (int)4);
HXDLIN(1167)										 ::openfl::_internal::renderer::DrawCommandReader data238 = data;
HXDLIN(1167)										data238->iiPos = (data238->iiPos + (int)2);
HXDLIN(1167)										 ::openfl::_internal::renderer::DrawCommandReader data239 = data;
HXDLIN(1167)										data239->ffPos = (data239->ffPos + (int)1);
HXDLIN(1167)										 ::openfl::_internal::renderer::DrawCommandReader data240 = data;
HXDLIN(1167)										data240->fPos = (data240->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE(1167)										 ::openfl::_internal::renderer::DrawCommandReader data241 = data;
HXDLIN(1167)										data241->fPos = (data241->fPos + (int)6);
            									}
            									break;
            									case (int)4: {
HXLINE(1167)										 ::openfl::_internal::renderer::DrawCommandReader data242 = data;
HXDLIN(1167)										data242->fPos = (data242->fPos + (int)4);
            									}
            									break;
            									case (int)5: {
HXLINE(1167)										 ::openfl::_internal::renderer::DrawCommandReader data243 = data;
HXDLIN(1167)										data243->fPos = (data243->fPos + (int)3);
            									}
            									break;
            									case (int)6: {
HXLINE(1167)										 ::openfl::_internal::renderer::DrawCommandReader data244 = data;
HXDLIN(1167)										data244->fPos = (data244->fPos + (int)4);
            									}
            									break;
            									case (int)7: {
HXLINE(1167)										 ::openfl::_internal::renderer::DrawCommandReader data245 = data;
HXDLIN(1167)										data245->fPos = (data245->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE(1167)										 ::openfl::_internal::renderer::DrawCommandReader data246 = data;
HXDLIN(1167)										data246->fPos = (data246->fPos + (int)5);
HXDLIN(1167)										 ::openfl::_internal::renderer::DrawCommandReader data247 = data;
HXDLIN(1167)										data247->oPos = (data247->oPos + (int)1);
            									}
            									break;
            									case (int)10: {
HXLINE(1167)										 ::openfl::_internal::renderer::DrawCommandReader data248 = data;
HXDLIN(1167)										data248->oPos = (data248->oPos + (int)4);
            									}
            									break;
            									case (int)11: {
            									}
            									break;
            									case (int)12: {
HXLINE(1167)										 ::openfl::_internal::renderer::DrawCommandReader data249 = data;
HXDLIN(1167)										data249->oPos = (data249->oPos + (int)2);
HXDLIN(1167)										 ::openfl::_internal::renderer::DrawCommandReader data250 = data;
HXDLIN(1167)										data250->bPos = (data250->bPos + (int)2);
            									}
            									break;
            									case (int)13: {
HXLINE(1167)										 ::openfl::_internal::renderer::DrawCommandReader data251 = data;
HXDLIN(1167)										data251->oPos = (data251->oPos + (int)4);
HXDLIN(1167)										 ::openfl::_internal::renderer::DrawCommandReader data252 = data;
HXDLIN(1167)										data252->iiPos = (data252->iiPos + (int)2);
HXDLIN(1167)										 ::openfl::_internal::renderer::DrawCommandReader data253 = data;
HXDLIN(1167)										data253->ffPos = (data253->ffPos + (int)1);
HXDLIN(1167)										 ::openfl::_internal::renderer::DrawCommandReader data254 = data;
HXDLIN(1167)										data254->fPos = (data254->fPos + (int)1);
            									}
            									break;
            									case (int)14: {
HXLINE(1167)										 ::openfl::_internal::renderer::DrawCommandReader data255 = data;
HXDLIN(1167)										data255->oPos = (data255->oPos + (int)4);
HXDLIN(1167)										 ::openfl::_internal::renderer::DrawCommandReader data256 = data;
HXDLIN(1167)										data256->iPos = (data256->iPos + (int)1);
HXDLIN(1167)										 ::openfl::_internal::renderer::DrawCommandReader data257 = data;
HXDLIN(1167)										data257->fPos = (data257->fPos + (int)2);
HXDLIN(1167)										 ::openfl::_internal::renderer::DrawCommandReader data258 = data;
HXDLIN(1167)										data258->bPos = (data258->bPos + (int)1);
            									}
            									break;
            									case (int)15: {
HXLINE(1167)										 ::openfl::_internal::renderer::DrawCommandReader data259 = data;
HXDLIN(1167)										data259->fPos = (data259->fPos + (int)2);
            									}
            									break;
            									case (int)16: {
HXLINE(1167)										 ::openfl::_internal::renderer::DrawCommandReader data260 = data;
HXDLIN(1167)										data260->fPos = (data260->fPos + (int)2);
            									}
            									break;
            									case (int)17: {
HXLINE(1167)										 ::openfl::_internal::renderer::DrawCommandReader data261 = data;
HXDLIN(1167)										data261->oPos = (data261->oPos + (int)1);
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE(1167)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::DRAW_ROUND_RECT_dyn();
HXDLIN(1167)							 ::openfl::_internal::renderer::DrawCommandReader this9 = data;
HXDLIN(1167)							 ::openfl::_internal::renderer::DrawCommandReader c92 = this9;
HXLINE(1168)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp22 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands;
HXDLIN(1168)							Float c93 = c92->buffer->f->__get(c92->fPos);
HXDLIN(1168)							::Array< Float > c94 = c92->buffer->f;
HXDLIN(1168)							Float c95 = c94->__get((c92->fPos + (int)1));
HXDLIN(1168)							::Array< Float > c96 = c92->buffer->f;
HXDLIN(1168)							Float c97 = c96->__get((c92->fPos + (int)2));
HXDLIN(1168)							::Array< Float > c98 = c92->buffer->f;
HXDLIN(1168)							Float c99 = c98->__get((c92->fPos + (int)3));
HXDLIN(1168)							::Array< Float > c100 = c92->buffer->f;
HXDLIN(1168)							_hx_tmp22->drawRoundRect(c93,c95,c97,c99,c100->__get((c92->fPos + (int)4)),c92->buffer->o->__get(c92->oPos));
HXLINE(1169)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp23 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands;
HXDLIN(1169)							Float c101 = c92->buffer->f->__get(c92->fPos);
HXDLIN(1169)							::Array< Float > c102 = c92->buffer->f;
HXDLIN(1169)							Float c103 = c102->__get((c92->fPos + (int)1));
HXDLIN(1169)							::Array< Float > c104 = c92->buffer->f;
HXDLIN(1169)							Float c105 = c104->__get((c92->fPos + (int)2));
HXDLIN(1169)							::Array< Float > c106 = c92->buffer->f;
HXDLIN(1169)							Float c107 = c106->__get((c92->fPos + (int)3));
HXDLIN(1169)							::Array< Float > c108 = c92->buffer->f;
HXDLIN(1169)							_hx_tmp23->drawRoundRect(c101,c103,c105,c107,c108->__get((c92->fPos + (int)4)),c92->buffer->o->__get(c92->oPos));
            						}
            						break;
            						case (int)10: {
HXLINE(1173)							{
HXLINE(1173)								 ::openfl::_internal::renderer::DrawCommandType _g11 = data->prev;
HXDLIN(1173)								switch((int)(_hx_getEnumValueIndex(_g11))){
            									case (int)0: {
HXLINE(1173)										 ::openfl::_internal::renderer::DrawCommandReader data262 = data;
HXDLIN(1173)										data262->oPos = (data262->oPos + (int)2);
HXDLIN(1173)										 ::openfl::_internal::renderer::DrawCommandReader data263 = data;
HXDLIN(1173)										data263->bPos = (data263->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE(1173)										 ::openfl::_internal::renderer::DrawCommandReader data264 = data;
HXDLIN(1173)										data264->iPos = (data264->iPos + (int)1);
HXDLIN(1173)										 ::openfl::_internal::renderer::DrawCommandReader data265 = data;
HXDLIN(1173)										data265->fPos = (data265->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE(1173)										 ::openfl::_internal::renderer::DrawCommandReader data266 = data;
HXDLIN(1173)										data266->oPos = (data266->oPos + (int)4);
HXDLIN(1173)										 ::openfl::_internal::renderer::DrawCommandReader data267 = data;
HXDLIN(1173)										data267->iiPos = (data267->iiPos + (int)2);
HXDLIN(1173)										 ::openfl::_internal::renderer::DrawCommandReader data268 = data;
HXDLIN(1173)										data268->ffPos = (data268->ffPos + (int)1);
HXDLIN(1173)										 ::openfl::_internal::renderer::DrawCommandReader data269 = data;
HXDLIN(1173)										data269->fPos = (data269->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE(1173)										 ::openfl::_internal::renderer::DrawCommandReader data270 = data;
HXDLIN(1173)										data270->fPos = (data270->fPos + (int)6);
            									}
            									break;
            									case (int)4: {
HXLINE(1173)										 ::openfl::_internal::renderer::DrawCommandReader data271 = data;
HXDLIN(1173)										data271->fPos = (data271->fPos + (int)4);
            									}
            									break;
            									case (int)5: {
HXLINE(1173)										 ::openfl::_internal::renderer::DrawCommandReader data272 = data;
HXDLIN(1173)										data272->fPos = (data272->fPos + (int)3);
            									}
            									break;
            									case (int)6: {
HXLINE(1173)										 ::openfl::_internal::renderer::DrawCommandReader data273 = data;
HXDLIN(1173)										data273->fPos = (data273->fPos + (int)4);
            									}
            									break;
            									case (int)7: {
HXLINE(1173)										 ::openfl::_internal::renderer::DrawCommandReader data274 = data;
HXDLIN(1173)										data274->fPos = (data274->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE(1173)										 ::openfl::_internal::renderer::DrawCommandReader data275 = data;
HXDLIN(1173)										data275->fPos = (data275->fPos + (int)5);
HXDLIN(1173)										 ::openfl::_internal::renderer::DrawCommandReader data276 = data;
HXDLIN(1173)										data276->oPos = (data276->oPos + (int)1);
            									}
            									break;
            									case (int)10: {
HXLINE(1173)										 ::openfl::_internal::renderer::DrawCommandReader data277 = data;
HXDLIN(1173)										data277->oPos = (data277->oPos + (int)4);
            									}
            									break;
            									case (int)11: {
            									}
            									break;
            									case (int)12: {
HXLINE(1173)										 ::openfl::_internal::renderer::DrawCommandReader data278 = data;
HXDLIN(1173)										data278->oPos = (data278->oPos + (int)2);
HXDLIN(1173)										 ::openfl::_internal::renderer::DrawCommandReader data279 = data;
HXDLIN(1173)										data279->bPos = (data279->bPos + (int)2);
            									}
            									break;
            									case (int)13: {
HXLINE(1173)										 ::openfl::_internal::renderer::DrawCommandReader data280 = data;
HXDLIN(1173)										data280->oPos = (data280->oPos + (int)4);
HXDLIN(1173)										 ::openfl::_internal::renderer::DrawCommandReader data281 = data;
HXDLIN(1173)										data281->iiPos = (data281->iiPos + (int)2);
HXDLIN(1173)										 ::openfl::_internal::renderer::DrawCommandReader data282 = data;
HXDLIN(1173)										data282->ffPos = (data282->ffPos + (int)1);
HXDLIN(1173)										 ::openfl::_internal::renderer::DrawCommandReader data283 = data;
HXDLIN(1173)										data283->fPos = (data283->fPos + (int)1);
            									}
            									break;
            									case (int)14: {
HXLINE(1173)										 ::openfl::_internal::renderer::DrawCommandReader data284 = data;
HXDLIN(1173)										data284->oPos = (data284->oPos + (int)4);
HXDLIN(1173)										 ::openfl::_internal::renderer::DrawCommandReader data285 = data;
HXDLIN(1173)										data285->iPos = (data285->iPos + (int)1);
HXDLIN(1173)										 ::openfl::_internal::renderer::DrawCommandReader data286 = data;
HXDLIN(1173)										data286->fPos = (data286->fPos + (int)2);
HXDLIN(1173)										 ::openfl::_internal::renderer::DrawCommandReader data287 = data;
HXDLIN(1173)										data287->bPos = (data287->bPos + (int)1);
            									}
            									break;
            									case (int)15: {
HXLINE(1173)										 ::openfl::_internal::renderer::DrawCommandReader data288 = data;
HXDLIN(1173)										data288->fPos = (data288->fPos + (int)2);
            									}
            									break;
            									case (int)16: {
HXLINE(1173)										 ::openfl::_internal::renderer::DrawCommandReader data289 = data;
HXDLIN(1173)										data289->fPos = (data289->fPos + (int)2);
            									}
            									break;
            									case (int)17: {
HXLINE(1173)										 ::openfl::_internal::renderer::DrawCommandReader data290 = data;
HXDLIN(1173)										data290->oPos = (data290->oPos + (int)1);
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE(1173)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::DRAW_TRIANGLES_dyn();
HXDLIN(1173)							 ::openfl::_internal::renderer::DrawCommandReader this10 = data;
HXDLIN(1173)							 ::openfl::_internal::renderer::DrawCommandReader c109 = this10;
HXLINE(1174)							::cpp::VirtualArray c110 = c109->buffer->o;
HXDLIN(1174)							::cpp::VirtualArray c111 = c109->buffer->o;
HXDLIN(1174)							::cpp::VirtualArray c112 = c109->buffer->o;
HXDLIN(1174)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands->drawTriangles(( ( ::openfl::_Vector::FloatVector)(c109->buffer->o->__get(c109->oPos)) ),( ( ::openfl::_Vector::IntVector)(c110->__get((c109->oPos + (int)1))) ),( ( ::openfl::_Vector::FloatVector)(c111->__get((c109->oPos + (int)2))) ),c112->__get((c109->oPos + (int)3)));
            						}
            						break;
            						case (int)11: {
HXLINE(1101)							{
HXLINE(1101)								{
HXLINE(1101)									 ::openfl::_internal::renderer::DrawCommandType _g12 = data->prev;
HXDLIN(1101)									switch((int)(_hx_getEnumValueIndex(_g12))){
            										case (int)0: {
HXLINE(1101)											 ::openfl::_internal::renderer::DrawCommandReader data291 = data;
HXDLIN(1101)											data291->oPos = (data291->oPos + (int)2);
HXDLIN(1101)											 ::openfl::_internal::renderer::DrawCommandReader data292 = data;
HXDLIN(1101)											data292->bPos = (data292->bPos + (int)2);
            										}
            										break;
            										case (int)1: {
HXLINE(1101)											 ::openfl::_internal::renderer::DrawCommandReader data293 = data;
HXDLIN(1101)											data293->iPos = (data293->iPos + (int)1);
HXDLIN(1101)											 ::openfl::_internal::renderer::DrawCommandReader data294 = data;
HXDLIN(1101)											data294->fPos = (data294->fPos + (int)1);
            										}
            										break;
            										case (int)2: {
HXLINE(1101)											 ::openfl::_internal::renderer::DrawCommandReader data295 = data;
HXDLIN(1101)											data295->oPos = (data295->oPos + (int)4);
HXDLIN(1101)											 ::openfl::_internal::renderer::DrawCommandReader data296 = data;
HXDLIN(1101)											data296->iiPos = (data296->iiPos + (int)2);
HXDLIN(1101)											 ::openfl::_internal::renderer::DrawCommandReader data297 = data;
HXDLIN(1101)											data297->ffPos = (data297->ffPos + (int)1);
HXDLIN(1101)											 ::openfl::_internal::renderer::DrawCommandReader data298 = data;
HXDLIN(1101)											data298->fPos = (data298->fPos + (int)1);
            										}
            										break;
            										case (int)3: {
HXLINE(1101)											 ::openfl::_internal::renderer::DrawCommandReader data299 = data;
HXDLIN(1101)											data299->fPos = (data299->fPos + (int)6);
            										}
            										break;
            										case (int)4: {
HXLINE(1101)											 ::openfl::_internal::renderer::DrawCommandReader data300 = data;
HXDLIN(1101)											data300->fPos = (data300->fPos + (int)4);
            										}
            										break;
            										case (int)5: {
HXLINE(1101)											 ::openfl::_internal::renderer::DrawCommandReader data301 = data;
HXDLIN(1101)											data301->fPos = (data301->fPos + (int)3);
            										}
            										break;
            										case (int)6: {
HXLINE(1101)											 ::openfl::_internal::renderer::DrawCommandReader data302 = data;
HXDLIN(1101)											data302->fPos = (data302->fPos + (int)4);
            										}
            										break;
            										case (int)7: {
HXLINE(1101)											 ::openfl::_internal::renderer::DrawCommandReader data303 = data;
HXDLIN(1101)											data303->fPos = (data303->fPos + (int)4);
            										}
            										break;
            										case (int)8: {
HXLINE(1101)											 ::openfl::_internal::renderer::DrawCommandReader data304 = data;
HXDLIN(1101)											data304->fPos = (data304->fPos + (int)5);
HXDLIN(1101)											 ::openfl::_internal::renderer::DrawCommandReader data305 = data;
HXDLIN(1101)											data305->oPos = (data305->oPos + (int)1);
            										}
            										break;
            										case (int)10: {
HXLINE(1101)											 ::openfl::_internal::renderer::DrawCommandReader data306 = data;
HXDLIN(1101)											data306->oPos = (data306->oPos + (int)4);
            										}
            										break;
            										case (int)11: {
            										}
            										break;
            										case (int)12: {
HXLINE(1101)											 ::openfl::_internal::renderer::DrawCommandReader data307 = data;
HXDLIN(1101)											data307->oPos = (data307->oPos + (int)2);
HXDLIN(1101)											 ::openfl::_internal::renderer::DrawCommandReader data308 = data;
HXDLIN(1101)											data308->bPos = (data308->bPos + (int)2);
            										}
            										break;
            										case (int)13: {
HXLINE(1101)											 ::openfl::_internal::renderer::DrawCommandReader data309 = data;
HXDLIN(1101)											data309->oPos = (data309->oPos + (int)4);
HXDLIN(1101)											 ::openfl::_internal::renderer::DrawCommandReader data310 = data;
HXDLIN(1101)											data310->iiPos = (data310->iiPos + (int)2);
HXDLIN(1101)											 ::openfl::_internal::renderer::DrawCommandReader data311 = data;
HXDLIN(1101)											data311->ffPos = (data311->ffPos + (int)1);
HXDLIN(1101)											 ::openfl::_internal::renderer::DrawCommandReader data312 = data;
HXDLIN(1101)											data312->fPos = (data312->fPos + (int)1);
            										}
            										break;
            										case (int)14: {
HXLINE(1101)											 ::openfl::_internal::renderer::DrawCommandReader data313 = data;
HXDLIN(1101)											data313->oPos = (data313->oPos + (int)4);
HXDLIN(1101)											 ::openfl::_internal::renderer::DrawCommandReader data314 = data;
HXDLIN(1101)											data314->iPos = (data314->iPos + (int)1);
HXDLIN(1101)											 ::openfl::_internal::renderer::DrawCommandReader data315 = data;
HXDLIN(1101)											data315->fPos = (data315->fPos + (int)2);
HXDLIN(1101)											 ::openfl::_internal::renderer::DrawCommandReader data316 = data;
HXDLIN(1101)											data316->bPos = (data316->bPos + (int)1);
            										}
            										break;
            										case (int)15: {
HXLINE(1101)											 ::openfl::_internal::renderer::DrawCommandReader data317 = data;
HXDLIN(1101)											data317->fPos = (data317->fPos + (int)2);
            										}
            										break;
            										case (int)16: {
HXLINE(1101)											 ::openfl::_internal::renderer::DrawCommandReader data318 = data;
HXDLIN(1101)											data318->fPos = (data318->fPos + (int)2);
            										}
            										break;
            										case (int)17: {
HXLINE(1101)											 ::openfl::_internal::renderer::DrawCommandReader data319 = data;
HXDLIN(1101)											data319->oPos = (data319->oPos + (int)1);
            										}
            										break;
            										default:{
            										}
            									}
            								}
HXLINE(1101)								data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::END_FILL_dyn();
HXDLIN(1101)								 ::openfl::_internal::renderer::DrawCommandReader this11 = data;
            							}
HXLINE(1102)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::endFill();
HXLINE(1103)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::endStroke();
HXLINE(1104)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasFill = false;
HXLINE(1105)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::bitmapFill = null();
            						}
            						break;
            						case (int)12: {
HXLINE(1114)							{
HXLINE(1114)								 ::openfl::_internal::renderer::DrawCommandType _g13 = data->prev;
HXDLIN(1114)								switch((int)(_hx_getEnumValueIndex(_g13))){
            									case (int)0: {
HXLINE(1114)										 ::openfl::_internal::renderer::DrawCommandReader data320 = data;
HXDLIN(1114)										data320->oPos = (data320->oPos + (int)2);
HXDLIN(1114)										 ::openfl::_internal::renderer::DrawCommandReader data321 = data;
HXDLIN(1114)										data321->bPos = (data321->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE(1114)										 ::openfl::_internal::renderer::DrawCommandReader data322 = data;
HXDLIN(1114)										data322->iPos = (data322->iPos + (int)1);
HXDLIN(1114)										 ::openfl::_internal::renderer::DrawCommandReader data323 = data;
HXDLIN(1114)										data323->fPos = (data323->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE(1114)										 ::openfl::_internal::renderer::DrawCommandReader data324 = data;
HXDLIN(1114)										data324->oPos = (data324->oPos + (int)4);
HXDLIN(1114)										 ::openfl::_internal::renderer::DrawCommandReader data325 = data;
HXDLIN(1114)										data325->iiPos = (data325->iiPos + (int)2);
HXDLIN(1114)										 ::openfl::_internal::renderer::DrawCommandReader data326 = data;
HXDLIN(1114)										data326->ffPos = (data326->ffPos + (int)1);
HXDLIN(1114)										 ::openfl::_internal::renderer::DrawCommandReader data327 = data;
HXDLIN(1114)										data327->fPos = (data327->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE(1114)										 ::openfl::_internal::renderer::DrawCommandReader data328 = data;
HXDLIN(1114)										data328->fPos = (data328->fPos + (int)6);
            									}
            									break;
            									case (int)4: {
HXLINE(1114)										 ::openfl::_internal::renderer::DrawCommandReader data329 = data;
HXDLIN(1114)										data329->fPos = (data329->fPos + (int)4);
            									}
            									break;
            									case (int)5: {
HXLINE(1114)										 ::openfl::_internal::renderer::DrawCommandReader data330 = data;
HXDLIN(1114)										data330->fPos = (data330->fPos + (int)3);
            									}
            									break;
            									case (int)6: {
HXLINE(1114)										 ::openfl::_internal::renderer::DrawCommandReader data331 = data;
HXDLIN(1114)										data331->fPos = (data331->fPos + (int)4);
            									}
            									break;
            									case (int)7: {
HXLINE(1114)										 ::openfl::_internal::renderer::DrawCommandReader data332 = data;
HXDLIN(1114)										data332->fPos = (data332->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE(1114)										 ::openfl::_internal::renderer::DrawCommandReader data333 = data;
HXDLIN(1114)										data333->fPos = (data333->fPos + (int)5);
HXDLIN(1114)										 ::openfl::_internal::renderer::DrawCommandReader data334 = data;
HXDLIN(1114)										data334->oPos = (data334->oPos + (int)1);
            									}
            									break;
            									case (int)10: {
HXLINE(1114)										 ::openfl::_internal::renderer::DrawCommandReader data335 = data;
HXDLIN(1114)										data335->oPos = (data335->oPos + (int)4);
            									}
            									break;
            									case (int)11: {
            									}
            									break;
            									case (int)12: {
HXLINE(1114)										 ::openfl::_internal::renderer::DrawCommandReader data336 = data;
HXDLIN(1114)										data336->oPos = (data336->oPos + (int)2);
HXDLIN(1114)										 ::openfl::_internal::renderer::DrawCommandReader data337 = data;
HXDLIN(1114)										data337->bPos = (data337->bPos + (int)2);
            									}
            									break;
            									case (int)13: {
HXLINE(1114)										 ::openfl::_internal::renderer::DrawCommandReader data338 = data;
HXDLIN(1114)										data338->oPos = (data338->oPos + (int)4);
HXDLIN(1114)										 ::openfl::_internal::renderer::DrawCommandReader data339 = data;
HXDLIN(1114)										data339->iiPos = (data339->iiPos + (int)2);
HXDLIN(1114)										 ::openfl::_internal::renderer::DrawCommandReader data340 = data;
HXDLIN(1114)										data340->ffPos = (data340->ffPos + (int)1);
HXDLIN(1114)										 ::openfl::_internal::renderer::DrawCommandReader data341 = data;
HXDLIN(1114)										data341->fPos = (data341->fPos + (int)1);
            									}
            									break;
            									case (int)14: {
HXLINE(1114)										 ::openfl::_internal::renderer::DrawCommandReader data342 = data;
HXDLIN(1114)										data342->oPos = (data342->oPos + (int)4);
HXDLIN(1114)										 ::openfl::_internal::renderer::DrawCommandReader data343 = data;
HXDLIN(1114)										data343->iPos = (data343->iPos + (int)1);
HXDLIN(1114)										 ::openfl::_internal::renderer::DrawCommandReader data344 = data;
HXDLIN(1114)										data344->fPos = (data344->fPos + (int)2);
HXDLIN(1114)										 ::openfl::_internal::renderer::DrawCommandReader data345 = data;
HXDLIN(1114)										data345->bPos = (data345->bPos + (int)1);
            									}
            									break;
            									case (int)15: {
HXLINE(1114)										 ::openfl::_internal::renderer::DrawCommandReader data346 = data;
HXDLIN(1114)										data346->fPos = (data346->fPos + (int)2);
            									}
            									break;
            									case (int)16: {
HXLINE(1114)										 ::openfl::_internal::renderer::DrawCommandReader data347 = data;
HXDLIN(1114)										data347->fPos = (data347->fPos + (int)2);
            									}
            									break;
            									case (int)17: {
HXLINE(1114)										 ::openfl::_internal::renderer::DrawCommandReader data348 = data;
HXDLIN(1114)										data348->oPos = (data348->oPos + (int)1);
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE(1114)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::LINE_BITMAP_STYLE_dyn();
HXDLIN(1114)							 ::openfl::_internal::renderer::DrawCommandReader this12 = data;
HXDLIN(1114)							 ::openfl::_internal::renderer::DrawCommandReader c113 = this12;
HXLINE(1115)							::cpp::VirtualArray c114 = c113->buffer->o;
HXDLIN(1115)							::Array< bool > c115 = c113->buffer->b;
HXDLIN(1115)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands->lineBitmapStyle(( ( ::openfl::display::BitmapData)(c113->buffer->o->__get(c113->oPos)) ),( ( ::openfl::geom::Matrix)(c114->__get((c113->oPos + (int)1))) ),c113->buffer->b->__get(c113->bPos),c115->__get((c113->bPos + (int)1)));
            						}
            						break;
            						case (int)13: {
HXLINE(1109)							{
HXLINE(1109)								 ::openfl::_internal::renderer::DrawCommandType _g14 = data->prev;
HXDLIN(1109)								switch((int)(_hx_getEnumValueIndex(_g14))){
            									case (int)0: {
HXLINE(1109)										 ::openfl::_internal::renderer::DrawCommandReader data349 = data;
HXDLIN(1109)										data349->oPos = (data349->oPos + (int)2);
HXDLIN(1109)										 ::openfl::_internal::renderer::DrawCommandReader data350 = data;
HXDLIN(1109)										data350->bPos = (data350->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE(1109)										 ::openfl::_internal::renderer::DrawCommandReader data351 = data;
HXDLIN(1109)										data351->iPos = (data351->iPos + (int)1);
HXDLIN(1109)										 ::openfl::_internal::renderer::DrawCommandReader data352 = data;
HXDLIN(1109)										data352->fPos = (data352->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE(1109)										 ::openfl::_internal::renderer::DrawCommandReader data353 = data;
HXDLIN(1109)										data353->oPos = (data353->oPos + (int)4);
HXDLIN(1109)										 ::openfl::_internal::renderer::DrawCommandReader data354 = data;
HXDLIN(1109)										data354->iiPos = (data354->iiPos + (int)2);
HXDLIN(1109)										 ::openfl::_internal::renderer::DrawCommandReader data355 = data;
HXDLIN(1109)										data355->ffPos = (data355->ffPos + (int)1);
HXDLIN(1109)										 ::openfl::_internal::renderer::DrawCommandReader data356 = data;
HXDLIN(1109)										data356->fPos = (data356->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE(1109)										 ::openfl::_internal::renderer::DrawCommandReader data357 = data;
HXDLIN(1109)										data357->fPos = (data357->fPos + (int)6);
            									}
            									break;
            									case (int)4: {
HXLINE(1109)										 ::openfl::_internal::renderer::DrawCommandReader data358 = data;
HXDLIN(1109)										data358->fPos = (data358->fPos + (int)4);
            									}
            									break;
            									case (int)5: {
HXLINE(1109)										 ::openfl::_internal::renderer::DrawCommandReader data359 = data;
HXDLIN(1109)										data359->fPos = (data359->fPos + (int)3);
            									}
            									break;
            									case (int)6: {
HXLINE(1109)										 ::openfl::_internal::renderer::DrawCommandReader data360 = data;
HXDLIN(1109)										data360->fPos = (data360->fPos + (int)4);
            									}
            									break;
            									case (int)7: {
HXLINE(1109)										 ::openfl::_internal::renderer::DrawCommandReader data361 = data;
HXDLIN(1109)										data361->fPos = (data361->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE(1109)										 ::openfl::_internal::renderer::DrawCommandReader data362 = data;
HXDLIN(1109)										data362->fPos = (data362->fPos + (int)5);
HXDLIN(1109)										 ::openfl::_internal::renderer::DrawCommandReader data363 = data;
HXDLIN(1109)										data363->oPos = (data363->oPos + (int)1);
            									}
            									break;
            									case (int)10: {
HXLINE(1109)										 ::openfl::_internal::renderer::DrawCommandReader data364 = data;
HXDLIN(1109)										data364->oPos = (data364->oPos + (int)4);
            									}
            									break;
            									case (int)11: {
            									}
            									break;
            									case (int)12: {
HXLINE(1109)										 ::openfl::_internal::renderer::DrawCommandReader data365 = data;
HXDLIN(1109)										data365->oPos = (data365->oPos + (int)2);
HXDLIN(1109)										 ::openfl::_internal::renderer::DrawCommandReader data366 = data;
HXDLIN(1109)										data366->bPos = (data366->bPos + (int)2);
            									}
            									break;
            									case (int)13: {
HXLINE(1109)										 ::openfl::_internal::renderer::DrawCommandReader data367 = data;
HXDLIN(1109)										data367->oPos = (data367->oPos + (int)4);
HXDLIN(1109)										 ::openfl::_internal::renderer::DrawCommandReader data368 = data;
HXDLIN(1109)										data368->iiPos = (data368->iiPos + (int)2);
HXDLIN(1109)										 ::openfl::_internal::renderer::DrawCommandReader data369 = data;
HXDLIN(1109)										data369->ffPos = (data369->ffPos + (int)1);
HXDLIN(1109)										 ::openfl::_internal::renderer::DrawCommandReader data370 = data;
HXDLIN(1109)										data370->fPos = (data370->fPos + (int)1);
            									}
            									break;
            									case (int)14: {
HXLINE(1109)										 ::openfl::_internal::renderer::DrawCommandReader data371 = data;
HXDLIN(1109)										data371->oPos = (data371->oPos + (int)4);
HXDLIN(1109)										 ::openfl::_internal::renderer::DrawCommandReader data372 = data;
HXDLIN(1109)										data372->iPos = (data372->iPos + (int)1);
HXDLIN(1109)										 ::openfl::_internal::renderer::DrawCommandReader data373 = data;
HXDLIN(1109)										data373->fPos = (data373->fPos + (int)2);
HXDLIN(1109)										 ::openfl::_internal::renderer::DrawCommandReader data374 = data;
HXDLIN(1109)										data374->bPos = (data374->bPos + (int)1);
            									}
            									break;
            									case (int)15: {
HXLINE(1109)										 ::openfl::_internal::renderer::DrawCommandReader data375 = data;
HXDLIN(1109)										data375->fPos = (data375->fPos + (int)2);
            									}
            									break;
            									case (int)16: {
HXLINE(1109)										 ::openfl::_internal::renderer::DrawCommandReader data376 = data;
HXDLIN(1109)										data376->fPos = (data376->fPos + (int)2);
            									}
            									break;
            									case (int)17: {
HXLINE(1109)										 ::openfl::_internal::renderer::DrawCommandReader data377 = data;
HXDLIN(1109)										data377->oPos = (data377->oPos + (int)1);
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE(1109)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::LINE_GRADIENT_STYLE_dyn();
HXDLIN(1109)							 ::openfl::_internal::renderer::DrawCommandReader this13 = data;
HXDLIN(1109)							 ::openfl::_internal::renderer::DrawCommandReader c116 = this13;
HXLINE(1110)							::Array< ::Dynamic> c117 = c116->buffer->ii;
HXDLIN(1110)							::cpp::VirtualArray c118 = c116->buffer->o;
HXDLIN(1110)							::cpp::VirtualArray c119 = c116->buffer->o;
HXDLIN(1110)							::cpp::VirtualArray c120 = c116->buffer->o;
HXDLIN(1110)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands->lineGradientStyle(c116->buffer->o->__get(c116->oPos),c116->buffer->ii->__get(c116->iiPos).StaticCast< ::Array< int > >(),c116->buffer->ff->__get(c116->ffPos).StaticCast< ::Array< Float > >(),c117->__get((c116->iiPos + (int)1)).StaticCast< ::Array< int > >(),( ( ::openfl::geom::Matrix)(c118->__get((c116->oPos + (int)1))) ),c119->__get((c116->oPos + (int)2)),c120->__get((c116->oPos + (int)3)),c116->buffer->f->__get(c116->fPos));
            						}
            						break;
            						case (int)14: {
HXLINE(1119)							{
HXLINE(1119)								 ::openfl::_internal::renderer::DrawCommandType _g15 = data->prev;
HXDLIN(1119)								switch((int)(_hx_getEnumValueIndex(_g15))){
            									case (int)0: {
HXLINE(1119)										 ::openfl::_internal::renderer::DrawCommandReader data378 = data;
HXDLIN(1119)										data378->oPos = (data378->oPos + (int)2);
HXDLIN(1119)										 ::openfl::_internal::renderer::DrawCommandReader data379 = data;
HXDLIN(1119)										data379->bPos = (data379->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE(1119)										 ::openfl::_internal::renderer::DrawCommandReader data380 = data;
HXDLIN(1119)										data380->iPos = (data380->iPos + (int)1);
HXDLIN(1119)										 ::openfl::_internal::renderer::DrawCommandReader data381 = data;
HXDLIN(1119)										data381->fPos = (data381->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE(1119)										 ::openfl::_internal::renderer::DrawCommandReader data382 = data;
HXDLIN(1119)										data382->oPos = (data382->oPos + (int)4);
HXDLIN(1119)										 ::openfl::_internal::renderer::DrawCommandReader data383 = data;
HXDLIN(1119)										data383->iiPos = (data383->iiPos + (int)2);
HXDLIN(1119)										 ::openfl::_internal::renderer::DrawCommandReader data384 = data;
HXDLIN(1119)										data384->ffPos = (data384->ffPos + (int)1);
HXDLIN(1119)										 ::openfl::_internal::renderer::DrawCommandReader data385 = data;
HXDLIN(1119)										data385->fPos = (data385->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE(1119)										 ::openfl::_internal::renderer::DrawCommandReader data386 = data;
HXDLIN(1119)										data386->fPos = (data386->fPos + (int)6);
            									}
            									break;
            									case (int)4: {
HXLINE(1119)										 ::openfl::_internal::renderer::DrawCommandReader data387 = data;
HXDLIN(1119)										data387->fPos = (data387->fPos + (int)4);
            									}
            									break;
            									case (int)5: {
HXLINE(1119)										 ::openfl::_internal::renderer::DrawCommandReader data388 = data;
HXDLIN(1119)										data388->fPos = (data388->fPos + (int)3);
            									}
            									break;
            									case (int)6: {
HXLINE(1119)										 ::openfl::_internal::renderer::DrawCommandReader data389 = data;
HXDLIN(1119)										data389->fPos = (data389->fPos + (int)4);
            									}
            									break;
            									case (int)7: {
HXLINE(1119)										 ::openfl::_internal::renderer::DrawCommandReader data390 = data;
HXDLIN(1119)										data390->fPos = (data390->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE(1119)										 ::openfl::_internal::renderer::DrawCommandReader data391 = data;
HXDLIN(1119)										data391->fPos = (data391->fPos + (int)5);
HXDLIN(1119)										 ::openfl::_internal::renderer::DrawCommandReader data392 = data;
HXDLIN(1119)										data392->oPos = (data392->oPos + (int)1);
            									}
            									break;
            									case (int)10: {
HXLINE(1119)										 ::openfl::_internal::renderer::DrawCommandReader data393 = data;
HXDLIN(1119)										data393->oPos = (data393->oPos + (int)4);
            									}
            									break;
            									case (int)11: {
            									}
            									break;
            									case (int)12: {
HXLINE(1119)										 ::openfl::_internal::renderer::DrawCommandReader data394 = data;
HXDLIN(1119)										data394->oPos = (data394->oPos + (int)2);
HXDLIN(1119)										 ::openfl::_internal::renderer::DrawCommandReader data395 = data;
HXDLIN(1119)										data395->bPos = (data395->bPos + (int)2);
            									}
            									break;
            									case (int)13: {
HXLINE(1119)										 ::openfl::_internal::renderer::DrawCommandReader data396 = data;
HXDLIN(1119)										data396->oPos = (data396->oPos + (int)4);
HXDLIN(1119)										 ::openfl::_internal::renderer::DrawCommandReader data397 = data;
HXDLIN(1119)										data397->iiPos = (data397->iiPos + (int)2);
HXDLIN(1119)										 ::openfl::_internal::renderer::DrawCommandReader data398 = data;
HXDLIN(1119)										data398->ffPos = (data398->ffPos + (int)1);
HXDLIN(1119)										 ::openfl::_internal::renderer::DrawCommandReader data399 = data;
HXDLIN(1119)										data399->fPos = (data399->fPos + (int)1);
            									}
            									break;
            									case (int)14: {
HXLINE(1119)										 ::openfl::_internal::renderer::DrawCommandReader data400 = data;
HXDLIN(1119)										data400->oPos = (data400->oPos + (int)4);
HXDLIN(1119)										 ::openfl::_internal::renderer::DrawCommandReader data401 = data;
HXDLIN(1119)										data401->iPos = (data401->iPos + (int)1);
HXDLIN(1119)										 ::openfl::_internal::renderer::DrawCommandReader data402 = data;
HXDLIN(1119)										data402->fPos = (data402->fPos + (int)2);
HXDLIN(1119)										 ::openfl::_internal::renderer::DrawCommandReader data403 = data;
HXDLIN(1119)										data403->bPos = (data403->bPos + (int)1);
            									}
            									break;
            									case (int)15: {
HXLINE(1119)										 ::openfl::_internal::renderer::DrawCommandReader data404 = data;
HXDLIN(1119)										data404->fPos = (data404->fPos + (int)2);
            									}
            									break;
            									case (int)16: {
HXLINE(1119)										 ::openfl::_internal::renderer::DrawCommandReader data405 = data;
HXDLIN(1119)										data405->fPos = (data405->fPos + (int)2);
            									}
            									break;
            									case (int)17: {
HXLINE(1119)										 ::openfl::_internal::renderer::DrawCommandReader data406 = data;
HXDLIN(1119)										data406->oPos = (data406->oPos + (int)1);
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE(1119)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::LINE_STYLE_dyn();
HXDLIN(1119)							 ::openfl::_internal::renderer::DrawCommandReader this14 = data;
HXDLIN(1119)							 ::openfl::_internal::renderer::DrawCommandReader c121 = this14;
HXLINE(1120)							::cpp::VirtualArray c122 = c121->buffer->o;
HXDLIN(1120)							::cpp::VirtualArray c123 = c121->buffer->o;
HXDLIN(1120)							::cpp::VirtualArray c124 = c121->buffer->o;
HXDLIN(1120)							::Array< Float > c125 = c121->buffer->f;
HXDLIN(1120)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands->lineStyle(c121->buffer->o->__get(c121->oPos),c121->buffer->i->__get(c121->iPos),c121->buffer->f->__get(c121->fPos),c121->buffer->b->__get(c121->bPos),c122->__get((c121->oPos + (int)1)),c123->__get((c121->oPos + (int)2)),c124->__get((c121->oPos + (int)3)),c125->__get((c121->fPos + (int)1)));
            						}
            						break;
            						case (int)15: {
HXLINE(1089)							{
HXLINE(1089)								 ::openfl::_internal::renderer::DrawCommandType _g16 = data->prev;
HXDLIN(1089)								switch((int)(_hx_getEnumValueIndex(_g16))){
            									case (int)0: {
HXLINE(1089)										 ::openfl::_internal::renderer::DrawCommandReader data407 = data;
HXDLIN(1089)										data407->oPos = (data407->oPos + (int)2);
HXDLIN(1089)										 ::openfl::_internal::renderer::DrawCommandReader data408 = data;
HXDLIN(1089)										data408->bPos = (data408->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE(1089)										 ::openfl::_internal::renderer::DrawCommandReader data409 = data;
HXDLIN(1089)										data409->iPos = (data409->iPos + (int)1);
HXDLIN(1089)										 ::openfl::_internal::renderer::DrawCommandReader data410 = data;
HXDLIN(1089)										data410->fPos = (data410->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE(1089)										 ::openfl::_internal::renderer::DrawCommandReader data411 = data;
HXDLIN(1089)										data411->oPos = (data411->oPos + (int)4);
HXDLIN(1089)										 ::openfl::_internal::renderer::DrawCommandReader data412 = data;
HXDLIN(1089)										data412->iiPos = (data412->iiPos + (int)2);
HXDLIN(1089)										 ::openfl::_internal::renderer::DrawCommandReader data413 = data;
HXDLIN(1089)										data413->ffPos = (data413->ffPos + (int)1);
HXDLIN(1089)										 ::openfl::_internal::renderer::DrawCommandReader data414 = data;
HXDLIN(1089)										data414->fPos = (data414->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE(1089)										 ::openfl::_internal::renderer::DrawCommandReader data415 = data;
HXDLIN(1089)										data415->fPos = (data415->fPos + (int)6);
            									}
            									break;
            									case (int)4: {
HXLINE(1089)										 ::openfl::_internal::renderer::DrawCommandReader data416 = data;
HXDLIN(1089)										data416->fPos = (data416->fPos + (int)4);
            									}
            									break;
            									case (int)5: {
HXLINE(1089)										 ::openfl::_internal::renderer::DrawCommandReader data417 = data;
HXDLIN(1089)										data417->fPos = (data417->fPos + (int)3);
            									}
            									break;
            									case (int)6: {
HXLINE(1089)										 ::openfl::_internal::renderer::DrawCommandReader data418 = data;
HXDLIN(1089)										data418->fPos = (data418->fPos + (int)4);
            									}
            									break;
            									case (int)7: {
HXLINE(1089)										 ::openfl::_internal::renderer::DrawCommandReader data419 = data;
HXDLIN(1089)										data419->fPos = (data419->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE(1089)										 ::openfl::_internal::renderer::DrawCommandReader data420 = data;
HXDLIN(1089)										data420->fPos = (data420->fPos + (int)5);
HXDLIN(1089)										 ::openfl::_internal::renderer::DrawCommandReader data421 = data;
HXDLIN(1089)										data421->oPos = (data421->oPos + (int)1);
            									}
            									break;
            									case (int)10: {
HXLINE(1089)										 ::openfl::_internal::renderer::DrawCommandReader data422 = data;
HXDLIN(1089)										data422->oPos = (data422->oPos + (int)4);
            									}
            									break;
            									case (int)11: {
            									}
            									break;
            									case (int)12: {
HXLINE(1089)										 ::openfl::_internal::renderer::DrawCommandReader data423 = data;
HXDLIN(1089)										data423->oPos = (data423->oPos + (int)2);
HXDLIN(1089)										 ::openfl::_internal::renderer::DrawCommandReader data424 = data;
HXDLIN(1089)										data424->bPos = (data424->bPos + (int)2);
            									}
            									break;
            									case (int)13: {
HXLINE(1089)										 ::openfl::_internal::renderer::DrawCommandReader data425 = data;
HXDLIN(1089)										data425->oPos = (data425->oPos + (int)4);
HXDLIN(1089)										 ::openfl::_internal::renderer::DrawCommandReader data426 = data;
HXDLIN(1089)										data426->iiPos = (data426->iiPos + (int)2);
HXDLIN(1089)										 ::openfl::_internal::renderer::DrawCommandReader data427 = data;
HXDLIN(1089)										data427->ffPos = (data427->ffPos + (int)1);
HXDLIN(1089)										 ::openfl::_internal::renderer::DrawCommandReader data428 = data;
HXDLIN(1089)										data428->fPos = (data428->fPos + (int)1);
            									}
            									break;
            									case (int)14: {
HXLINE(1089)										 ::openfl::_internal::renderer::DrawCommandReader data429 = data;
HXDLIN(1089)										data429->oPos = (data429->oPos + (int)4);
HXDLIN(1089)										 ::openfl::_internal::renderer::DrawCommandReader data430 = data;
HXDLIN(1089)										data430->iPos = (data430->iPos + (int)1);
HXDLIN(1089)										 ::openfl::_internal::renderer::DrawCommandReader data431 = data;
HXDLIN(1089)										data431->fPos = (data431->fPos + (int)2);
HXDLIN(1089)										 ::openfl::_internal::renderer::DrawCommandReader data432 = data;
HXDLIN(1089)										data432->bPos = (data432->bPos + (int)1);
            									}
            									break;
            									case (int)15: {
HXLINE(1089)										 ::openfl::_internal::renderer::DrawCommandReader data433 = data;
HXDLIN(1089)										data433->fPos = (data433->fPos + (int)2);
            									}
            									break;
            									case (int)16: {
HXLINE(1089)										 ::openfl::_internal::renderer::DrawCommandReader data434 = data;
HXDLIN(1089)										data434->fPos = (data434->fPos + (int)2);
            									}
            									break;
            									case (int)17: {
HXLINE(1089)										 ::openfl::_internal::renderer::DrawCommandReader data435 = data;
HXDLIN(1089)										data435->oPos = (data435->oPos + (int)1);
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE(1089)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::LINE_TO_dyn();
HXDLIN(1089)							 ::openfl::_internal::renderer::DrawCommandReader this15 = data;
HXDLIN(1089)							 ::openfl::_internal::renderer::DrawCommandReader c126 = this15;
HXLINE(1090)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp24 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands;
HXDLIN(1090)							Float c127 = c126->buffer->f->__get(c126->fPos);
HXDLIN(1090)							::Array< Float > c128 = c126->buffer->f;
HXDLIN(1090)							_hx_tmp24->lineTo(c127,c128->__get((c126->fPos + (int)1)));
HXLINE(1091)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp25 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands;
HXDLIN(1091)							Float c129 = c126->buffer->f->__get(c126->fPos);
HXDLIN(1091)							::Array< Float > c130 = c126->buffer->f;
HXDLIN(1091)							_hx_tmp25->lineTo(c129,c130->__get((c126->fPos + (int)1)));
            						}
            						break;
            						case (int)16: {
HXLINE(1095)							{
HXLINE(1095)								 ::openfl::_internal::renderer::DrawCommandType _g17 = data->prev;
HXDLIN(1095)								switch((int)(_hx_getEnumValueIndex(_g17))){
            									case (int)0: {
HXLINE(1095)										 ::openfl::_internal::renderer::DrawCommandReader data436 = data;
HXDLIN(1095)										data436->oPos = (data436->oPos + (int)2);
HXDLIN(1095)										 ::openfl::_internal::renderer::DrawCommandReader data437 = data;
HXDLIN(1095)										data437->bPos = (data437->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE(1095)										 ::openfl::_internal::renderer::DrawCommandReader data438 = data;
HXDLIN(1095)										data438->iPos = (data438->iPos + (int)1);
HXDLIN(1095)										 ::openfl::_internal::renderer::DrawCommandReader data439 = data;
HXDLIN(1095)										data439->fPos = (data439->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE(1095)										 ::openfl::_internal::renderer::DrawCommandReader data440 = data;
HXDLIN(1095)										data440->oPos = (data440->oPos + (int)4);
HXDLIN(1095)										 ::openfl::_internal::renderer::DrawCommandReader data441 = data;
HXDLIN(1095)										data441->iiPos = (data441->iiPos + (int)2);
HXDLIN(1095)										 ::openfl::_internal::renderer::DrawCommandReader data442 = data;
HXDLIN(1095)										data442->ffPos = (data442->ffPos + (int)1);
HXDLIN(1095)										 ::openfl::_internal::renderer::DrawCommandReader data443 = data;
HXDLIN(1095)										data443->fPos = (data443->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE(1095)										 ::openfl::_internal::renderer::DrawCommandReader data444 = data;
HXDLIN(1095)										data444->fPos = (data444->fPos + (int)6);
            									}
            									break;
            									case (int)4: {
HXLINE(1095)										 ::openfl::_internal::renderer::DrawCommandReader data445 = data;
HXDLIN(1095)										data445->fPos = (data445->fPos + (int)4);
            									}
            									break;
            									case (int)5: {
HXLINE(1095)										 ::openfl::_internal::renderer::DrawCommandReader data446 = data;
HXDLIN(1095)										data446->fPos = (data446->fPos + (int)3);
            									}
            									break;
            									case (int)6: {
HXLINE(1095)										 ::openfl::_internal::renderer::DrawCommandReader data447 = data;
HXDLIN(1095)										data447->fPos = (data447->fPos + (int)4);
            									}
            									break;
            									case (int)7: {
HXLINE(1095)										 ::openfl::_internal::renderer::DrawCommandReader data448 = data;
HXDLIN(1095)										data448->fPos = (data448->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE(1095)										 ::openfl::_internal::renderer::DrawCommandReader data449 = data;
HXDLIN(1095)										data449->fPos = (data449->fPos + (int)5);
HXDLIN(1095)										 ::openfl::_internal::renderer::DrawCommandReader data450 = data;
HXDLIN(1095)										data450->oPos = (data450->oPos + (int)1);
            									}
            									break;
            									case (int)10: {
HXLINE(1095)										 ::openfl::_internal::renderer::DrawCommandReader data451 = data;
HXDLIN(1095)										data451->oPos = (data451->oPos + (int)4);
            									}
            									break;
            									case (int)11: {
            									}
            									break;
            									case (int)12: {
HXLINE(1095)										 ::openfl::_internal::renderer::DrawCommandReader data452 = data;
HXDLIN(1095)										data452->oPos = (data452->oPos + (int)2);
HXDLIN(1095)										 ::openfl::_internal::renderer::DrawCommandReader data453 = data;
HXDLIN(1095)										data453->bPos = (data453->bPos + (int)2);
            									}
            									break;
            									case (int)13: {
HXLINE(1095)										 ::openfl::_internal::renderer::DrawCommandReader data454 = data;
HXDLIN(1095)										data454->oPos = (data454->oPos + (int)4);
HXDLIN(1095)										 ::openfl::_internal::renderer::DrawCommandReader data455 = data;
HXDLIN(1095)										data455->iiPos = (data455->iiPos + (int)2);
HXDLIN(1095)										 ::openfl::_internal::renderer::DrawCommandReader data456 = data;
HXDLIN(1095)										data456->ffPos = (data456->ffPos + (int)1);
HXDLIN(1095)										 ::openfl::_internal::renderer::DrawCommandReader data457 = data;
HXDLIN(1095)										data457->fPos = (data457->fPos + (int)1);
            									}
            									break;
            									case (int)14: {
HXLINE(1095)										 ::openfl::_internal::renderer::DrawCommandReader data458 = data;
HXDLIN(1095)										data458->oPos = (data458->oPos + (int)4);
HXDLIN(1095)										 ::openfl::_internal::renderer::DrawCommandReader data459 = data;
HXDLIN(1095)										data459->iPos = (data459->iPos + (int)1);
HXDLIN(1095)										 ::openfl::_internal::renderer::DrawCommandReader data460 = data;
HXDLIN(1095)										data460->fPos = (data460->fPos + (int)2);
HXDLIN(1095)										 ::openfl::_internal::renderer::DrawCommandReader data461 = data;
HXDLIN(1095)										data461->bPos = (data461->bPos + (int)1);
            									}
            									break;
            									case (int)15: {
HXLINE(1095)										 ::openfl::_internal::renderer::DrawCommandReader data462 = data;
HXDLIN(1095)										data462->fPos = (data462->fPos + (int)2);
            									}
            									break;
            									case (int)16: {
HXLINE(1095)										 ::openfl::_internal::renderer::DrawCommandReader data463 = data;
HXDLIN(1095)										data463->fPos = (data463->fPos + (int)2);
            									}
            									break;
            									case (int)17: {
HXLINE(1095)										 ::openfl::_internal::renderer::DrawCommandReader data464 = data;
HXDLIN(1095)										data464->oPos = (data464->oPos + (int)1);
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE(1095)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::MOVE_TO_dyn();
HXDLIN(1095)							 ::openfl::_internal::renderer::DrawCommandReader this16 = data;
HXDLIN(1095)							 ::openfl::_internal::renderer::DrawCommandReader c131 = this16;
HXLINE(1096)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp26 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands;
HXDLIN(1096)							Float c132 = c131->buffer->f->__get(c131->fPos);
HXDLIN(1096)							::Array< Float > c133 = c131->buffer->f;
HXDLIN(1096)							_hx_tmp26->moveTo(c132,c133->__get((c131->fPos + (int)1)));
HXLINE(1097)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp27 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands;
HXDLIN(1097)							Float c134 = c131->buffer->f->__get(c131->fPos);
HXDLIN(1097)							::Array< Float > c135 = c131->buffer->f;
HXDLIN(1097)							_hx_tmp27->moveTo(c134,c135->__get((c131->fPos + (int)1)));
            						}
            						break;
            						default:{
HXLINE(1178)							{
HXLINE(1178)								 ::openfl::_internal::renderer::DrawCommandType _g18 = data->prev;
HXDLIN(1178)								switch((int)(_hx_getEnumValueIndex(_g18))){
            									case (int)0: {
HXLINE(1178)										 ::openfl::_internal::renderer::DrawCommandReader data465 = data;
HXDLIN(1178)										data465->oPos = (data465->oPos + (int)2);
HXDLIN(1178)										 ::openfl::_internal::renderer::DrawCommandReader data466 = data;
HXDLIN(1178)										data466->bPos = (data466->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE(1178)										 ::openfl::_internal::renderer::DrawCommandReader data467 = data;
HXDLIN(1178)										data467->iPos = (data467->iPos + (int)1);
HXDLIN(1178)										 ::openfl::_internal::renderer::DrawCommandReader data468 = data;
HXDLIN(1178)										data468->fPos = (data468->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE(1178)										 ::openfl::_internal::renderer::DrawCommandReader data469 = data;
HXDLIN(1178)										data469->oPos = (data469->oPos + (int)4);
HXDLIN(1178)										 ::openfl::_internal::renderer::DrawCommandReader data470 = data;
HXDLIN(1178)										data470->iiPos = (data470->iiPos + (int)2);
HXDLIN(1178)										 ::openfl::_internal::renderer::DrawCommandReader data471 = data;
HXDLIN(1178)										data471->ffPos = (data471->ffPos + (int)1);
HXDLIN(1178)										 ::openfl::_internal::renderer::DrawCommandReader data472 = data;
HXDLIN(1178)										data472->fPos = (data472->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE(1178)										 ::openfl::_internal::renderer::DrawCommandReader data473 = data;
HXDLIN(1178)										data473->fPos = (data473->fPos + (int)6);
            									}
            									break;
            									case (int)4: {
HXLINE(1178)										 ::openfl::_internal::renderer::DrawCommandReader data474 = data;
HXDLIN(1178)										data474->fPos = (data474->fPos + (int)4);
            									}
            									break;
            									case (int)5: {
HXLINE(1178)										 ::openfl::_internal::renderer::DrawCommandReader data475 = data;
HXDLIN(1178)										data475->fPos = (data475->fPos + (int)3);
            									}
            									break;
            									case (int)6: {
HXLINE(1178)										 ::openfl::_internal::renderer::DrawCommandReader data476 = data;
HXDLIN(1178)										data476->fPos = (data476->fPos + (int)4);
            									}
            									break;
            									case (int)7: {
HXLINE(1178)										 ::openfl::_internal::renderer::DrawCommandReader data477 = data;
HXDLIN(1178)										data477->fPos = (data477->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE(1178)										 ::openfl::_internal::renderer::DrawCommandReader data478 = data;
HXDLIN(1178)										data478->fPos = (data478->fPos + (int)5);
HXDLIN(1178)										 ::openfl::_internal::renderer::DrawCommandReader data479 = data;
HXDLIN(1178)										data479->oPos = (data479->oPos + (int)1);
            									}
            									break;
            									case (int)10: {
HXLINE(1178)										 ::openfl::_internal::renderer::DrawCommandReader data480 = data;
HXDLIN(1178)										data480->oPos = (data480->oPos + (int)4);
            									}
            									break;
            									case (int)11: {
            									}
            									break;
            									case (int)12: {
HXLINE(1178)										 ::openfl::_internal::renderer::DrawCommandReader data481 = data;
HXDLIN(1178)										data481->oPos = (data481->oPos + (int)2);
HXDLIN(1178)										 ::openfl::_internal::renderer::DrawCommandReader data482 = data;
HXDLIN(1178)										data482->bPos = (data482->bPos + (int)2);
            									}
            									break;
            									case (int)13: {
HXLINE(1178)										 ::openfl::_internal::renderer::DrawCommandReader data483 = data;
HXDLIN(1178)										data483->oPos = (data483->oPos + (int)4);
HXDLIN(1178)										 ::openfl::_internal::renderer::DrawCommandReader data484 = data;
HXDLIN(1178)										data484->iiPos = (data484->iiPos + (int)2);
HXDLIN(1178)										 ::openfl::_internal::renderer::DrawCommandReader data485 = data;
HXDLIN(1178)										data485->ffPos = (data485->ffPos + (int)1);
HXDLIN(1178)										 ::openfl::_internal::renderer::DrawCommandReader data486 = data;
HXDLIN(1178)										data486->fPos = (data486->fPos + (int)1);
            									}
            									break;
            									case (int)14: {
HXLINE(1178)										 ::openfl::_internal::renderer::DrawCommandReader data487 = data;
HXDLIN(1178)										data487->oPos = (data487->oPos + (int)4);
HXDLIN(1178)										 ::openfl::_internal::renderer::DrawCommandReader data488 = data;
HXDLIN(1178)										data488->iPos = (data488->iPos + (int)1);
HXDLIN(1178)										 ::openfl::_internal::renderer::DrawCommandReader data489 = data;
HXDLIN(1178)										data489->fPos = (data489->fPos + (int)2);
HXDLIN(1178)										 ::openfl::_internal::renderer::DrawCommandReader data490 = data;
HXDLIN(1178)										data490->bPos = (data490->bPos + (int)1);
            									}
            									break;
            									case (int)15: {
HXLINE(1178)										 ::openfl::_internal::renderer::DrawCommandReader data491 = data;
HXDLIN(1178)										data491->fPos = (data491->fPos + (int)2);
            									}
            									break;
            									case (int)16: {
HXLINE(1178)										 ::openfl::_internal::renderer::DrawCommandReader data492 = data;
HXDLIN(1178)										data492->fPos = (data492->fPos + (int)2);
            									}
            									break;
            									case (int)17: {
HXLINE(1178)										 ::openfl::_internal::renderer::DrawCommandReader data493 = data;
HXDLIN(1178)										data493->oPos = (data493->oPos + (int)1);
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE(1178)							data->prev = type;
            						}
            					}
            				}
            			}
HXLINE(1184)			if ((::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands->get_length() > (int)0)) {
HXLINE(1186)				::openfl::_internal::renderer::cairo::CairoGraphics_obj::endFill();
            			}
HXLINE(1190)			if ((::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands->get_length() > (int)0)) {
HXLINE(1192)				::openfl::_internal::renderer::cairo::CairoGraphics_obj::endStroke();
            			}
HXLINE(1196)			data->destroy();
HXLINE(1198)			graphics->_hx___bitmap->image->dirty = true;
HXLINE(1199)			graphics->_hx___bitmap->image->version++;
            		}
HXLINE(1203)		graphics->set___dirty(false);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(CairoGraphics_obj,render,(void))

void CairoGraphics_obj::renderMask( ::openfl::display::Graphics graphics, ::openfl::_internal::renderer::RenderSession renderSession){
            	HX_GC_STACKFRAME(&_hx_pos_7c423d109b848e15_1212_renderMask)
HXLINE(1212)		if ((graphics->_hx___commands->get_length() != (int)0)) {
HXLINE(1214)			 ::lime::graphics::cairo::Cairo cairo = renderSession->cairo;
HXLINE(1216)			Float positionX = ((Float)0.0);
HXLINE(1217)			Float positionY = ((Float)0.0);
HXLINE(1219)			int offsetX = (int)0;
HXLINE(1220)			int offsetY = (int)0;
HXLINE(1222)			 ::openfl::_internal::renderer::DrawCommandReader data =  ::openfl::_internal::renderer::DrawCommandReader_obj::__alloc( HX_CTX ,graphics->_hx___commands);
HXLINE(1224)			{
HXLINE(1224)				int _g = (int)0;
HXDLIN(1224)				::Array< ::Dynamic> _g1 = graphics->_hx___commands->types;
HXDLIN(1224)				while((_g < _g1->length)){
HXLINE(1224)					 ::openfl::_internal::renderer::DrawCommandType type = _g1->__get(_g).StaticCast<  ::openfl::_internal::renderer::DrawCommandType >();
HXDLIN(1224)					_g = (_g + (int)1);
HXLINE(1226)					switch((int)(_hx_getEnumValueIndex(type))){
            						case (int)3: {
HXLINE(1230)							{
HXLINE(1230)								 ::openfl::_internal::renderer::DrawCommandType _g2 = data->prev;
HXDLIN(1230)								switch((int)(_hx_getEnumValueIndex(_g2))){
            									case (int)0: {
HXLINE(1230)										 ::openfl::_internal::renderer::DrawCommandReader data1 = data;
HXDLIN(1230)										data1->oPos = (data1->oPos + (int)2);
HXDLIN(1230)										 ::openfl::_internal::renderer::DrawCommandReader data2 = data;
HXDLIN(1230)										data2->bPos = (data2->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE(1230)										 ::openfl::_internal::renderer::DrawCommandReader data3 = data;
HXDLIN(1230)										data3->iPos = (data3->iPos + (int)1);
HXDLIN(1230)										 ::openfl::_internal::renderer::DrawCommandReader data4 = data;
HXDLIN(1230)										data4->fPos = (data4->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE(1230)										 ::openfl::_internal::renderer::DrawCommandReader data5 = data;
HXDLIN(1230)										data5->oPos = (data5->oPos + (int)4);
HXDLIN(1230)										 ::openfl::_internal::renderer::DrawCommandReader data6 = data;
HXDLIN(1230)										data6->iiPos = (data6->iiPos + (int)2);
HXDLIN(1230)										 ::openfl::_internal::renderer::DrawCommandReader data7 = data;
HXDLIN(1230)										data7->ffPos = (data7->ffPos + (int)1);
HXDLIN(1230)										 ::openfl::_internal::renderer::DrawCommandReader data8 = data;
HXDLIN(1230)										data8->fPos = (data8->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE(1230)										 ::openfl::_internal::renderer::DrawCommandReader data9 = data;
HXDLIN(1230)										data9->fPos = (data9->fPos + (int)6);
            									}
            									break;
            									case (int)4: {
HXLINE(1230)										 ::openfl::_internal::renderer::DrawCommandReader data10 = data;
HXDLIN(1230)										data10->fPos = (data10->fPos + (int)4);
            									}
            									break;
            									case (int)5: {
HXLINE(1230)										 ::openfl::_internal::renderer::DrawCommandReader data11 = data;
HXDLIN(1230)										data11->fPos = (data11->fPos + (int)3);
            									}
            									break;
            									case (int)6: {
HXLINE(1230)										 ::openfl::_internal::renderer::DrawCommandReader data12 = data;
HXDLIN(1230)										data12->fPos = (data12->fPos + (int)4);
            									}
            									break;
            									case (int)7: {
HXLINE(1230)										 ::openfl::_internal::renderer::DrawCommandReader data13 = data;
HXDLIN(1230)										data13->fPos = (data13->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE(1230)										 ::openfl::_internal::renderer::DrawCommandReader data14 = data;
HXDLIN(1230)										data14->fPos = (data14->fPos + (int)5);
HXDLIN(1230)										 ::openfl::_internal::renderer::DrawCommandReader data15 = data;
HXDLIN(1230)										data15->oPos = (data15->oPos + (int)1);
            									}
            									break;
            									case (int)10: {
HXLINE(1230)										 ::openfl::_internal::renderer::DrawCommandReader data16 = data;
HXDLIN(1230)										data16->oPos = (data16->oPos + (int)4);
            									}
            									break;
            									case (int)11: {
            									}
            									break;
            									case (int)12: {
HXLINE(1230)										 ::openfl::_internal::renderer::DrawCommandReader data17 = data;
HXDLIN(1230)										data17->oPos = (data17->oPos + (int)2);
HXDLIN(1230)										 ::openfl::_internal::renderer::DrawCommandReader data18 = data;
HXDLIN(1230)										data18->bPos = (data18->bPos + (int)2);
            									}
            									break;
            									case (int)13: {
HXLINE(1230)										 ::openfl::_internal::renderer::DrawCommandReader data19 = data;
HXDLIN(1230)										data19->oPos = (data19->oPos + (int)4);
HXDLIN(1230)										 ::openfl::_internal::renderer::DrawCommandReader data20 = data;
HXDLIN(1230)										data20->iiPos = (data20->iiPos + (int)2);
HXDLIN(1230)										 ::openfl::_internal::renderer::DrawCommandReader data21 = data;
HXDLIN(1230)										data21->ffPos = (data21->ffPos + (int)1);
HXDLIN(1230)										 ::openfl::_internal::renderer::DrawCommandReader data22 = data;
HXDLIN(1230)										data22->fPos = (data22->fPos + (int)1);
            									}
            									break;
            									case (int)14: {
HXLINE(1230)										 ::openfl::_internal::renderer::DrawCommandReader data23 = data;
HXDLIN(1230)										data23->oPos = (data23->oPos + (int)4);
HXDLIN(1230)										 ::openfl::_internal::renderer::DrawCommandReader data24 = data;
HXDLIN(1230)										data24->iPos = (data24->iPos + (int)1);
HXDLIN(1230)										 ::openfl::_internal::renderer::DrawCommandReader data25 = data;
HXDLIN(1230)										data25->fPos = (data25->fPos + (int)2);
HXDLIN(1230)										 ::openfl::_internal::renderer::DrawCommandReader data26 = data;
HXDLIN(1230)										data26->bPos = (data26->bPos + (int)1);
            									}
            									break;
            									case (int)15: {
HXLINE(1230)										 ::openfl::_internal::renderer::DrawCommandReader data27 = data;
HXDLIN(1230)										data27->fPos = (data27->fPos + (int)2);
            									}
            									break;
            									case (int)16: {
HXLINE(1230)										 ::openfl::_internal::renderer::DrawCommandReader data28 = data;
HXDLIN(1230)										data28->fPos = (data28->fPos + (int)2);
            									}
            									break;
            									case (int)17: {
HXLINE(1230)										 ::openfl::_internal::renderer::DrawCommandReader data29 = data;
HXDLIN(1230)										data29->oPos = (data29->oPos + (int)1);
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE(1230)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::CUBIC_CURVE_TO_dyn();
HXDLIN(1230)							 ::openfl::_internal::renderer::DrawCommandReader this1 = data;
HXDLIN(1230)							 ::openfl::_internal::renderer::DrawCommandReader c = this1;
HXLINE(1231)							Float _hx_tmp = (c->buffer->f->__get(c->fPos) - offsetX);
HXDLIN(1231)							::Array< Float > c1 = c->buffer->f;
HXDLIN(1231)							Float _hx_tmp1 = (c1->__get((c->fPos + (int)1)) - offsetY);
HXDLIN(1231)							::Array< Float > c2 = c->buffer->f;
HXDLIN(1231)							Float _hx_tmp2 = (c2->__get((c->fPos + (int)2)) - offsetX);
HXDLIN(1231)							::Array< Float > c3 = c->buffer->f;
HXDLIN(1231)							Float _hx_tmp3 = (c3->__get((c->fPos + (int)3)) - offsetY);
HXDLIN(1231)							::Array< Float > c4 = c->buffer->f;
HXDLIN(1231)							Float _hx_tmp4 = (c4->__get((c->fPos + (int)4)) - offsetX);
HXDLIN(1231)							::Array< Float > c5 = c->buffer->f;
HXDLIN(1231)							cairo->curveTo(_hx_tmp,_hx_tmp1,_hx_tmp2,_hx_tmp3,_hx_tmp4,(c5->__get((c->fPos + (int)5)) - offsetY));
HXLINE(1232)							::Array< Float > c6 = c->buffer->f;
HXDLIN(1232)							positionX = c6->__get((c->fPos + (int)4));
HXLINE(1233)							::Array< Float > c7 = c->buffer->f;
HXDLIN(1233)							positionY = c7->__get((c->fPos + (int)4));
            						}
            						break;
            						case (int)4: {
HXLINE(1237)							{
HXLINE(1237)								 ::openfl::_internal::renderer::DrawCommandType _g3 = data->prev;
HXDLIN(1237)								switch((int)(_hx_getEnumValueIndex(_g3))){
            									case (int)0: {
HXLINE(1237)										 ::openfl::_internal::renderer::DrawCommandReader data30 = data;
HXDLIN(1237)										data30->oPos = (data30->oPos + (int)2);
HXDLIN(1237)										 ::openfl::_internal::renderer::DrawCommandReader data31 = data;
HXDLIN(1237)										data31->bPos = (data31->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE(1237)										 ::openfl::_internal::renderer::DrawCommandReader data32 = data;
HXDLIN(1237)										data32->iPos = (data32->iPos + (int)1);
HXDLIN(1237)										 ::openfl::_internal::renderer::DrawCommandReader data33 = data;
HXDLIN(1237)										data33->fPos = (data33->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE(1237)										 ::openfl::_internal::renderer::DrawCommandReader data34 = data;
HXDLIN(1237)										data34->oPos = (data34->oPos + (int)4);
HXDLIN(1237)										 ::openfl::_internal::renderer::DrawCommandReader data35 = data;
HXDLIN(1237)										data35->iiPos = (data35->iiPos + (int)2);
HXDLIN(1237)										 ::openfl::_internal::renderer::DrawCommandReader data36 = data;
HXDLIN(1237)										data36->ffPos = (data36->ffPos + (int)1);
HXDLIN(1237)										 ::openfl::_internal::renderer::DrawCommandReader data37 = data;
HXDLIN(1237)										data37->fPos = (data37->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE(1237)										 ::openfl::_internal::renderer::DrawCommandReader data38 = data;
HXDLIN(1237)										data38->fPos = (data38->fPos + (int)6);
            									}
            									break;
            									case (int)4: {
HXLINE(1237)										 ::openfl::_internal::renderer::DrawCommandReader data39 = data;
HXDLIN(1237)										data39->fPos = (data39->fPos + (int)4);
            									}
            									break;
            									case (int)5: {
HXLINE(1237)										 ::openfl::_internal::renderer::DrawCommandReader data40 = data;
HXDLIN(1237)										data40->fPos = (data40->fPos + (int)3);
            									}
            									break;
            									case (int)6: {
HXLINE(1237)										 ::openfl::_internal::renderer::DrawCommandReader data41 = data;
HXDLIN(1237)										data41->fPos = (data41->fPos + (int)4);
            									}
            									break;
            									case (int)7: {
HXLINE(1237)										 ::openfl::_internal::renderer::DrawCommandReader data42 = data;
HXDLIN(1237)										data42->fPos = (data42->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE(1237)										 ::openfl::_internal::renderer::DrawCommandReader data43 = data;
HXDLIN(1237)										data43->fPos = (data43->fPos + (int)5);
HXDLIN(1237)										 ::openfl::_internal::renderer::DrawCommandReader data44 = data;
HXDLIN(1237)										data44->oPos = (data44->oPos + (int)1);
            									}
            									break;
            									case (int)10: {
HXLINE(1237)										 ::openfl::_internal::renderer::DrawCommandReader data45 = data;
HXDLIN(1237)										data45->oPos = (data45->oPos + (int)4);
            									}
            									break;
            									case (int)11: {
            									}
            									break;
            									case (int)12: {
HXLINE(1237)										 ::openfl::_internal::renderer::DrawCommandReader data46 = data;
HXDLIN(1237)										data46->oPos = (data46->oPos + (int)2);
HXDLIN(1237)										 ::openfl::_internal::renderer::DrawCommandReader data47 = data;
HXDLIN(1237)										data47->bPos = (data47->bPos + (int)2);
            									}
            									break;
            									case (int)13: {
HXLINE(1237)										 ::openfl::_internal::renderer::DrawCommandReader data48 = data;
HXDLIN(1237)										data48->oPos = (data48->oPos + (int)4);
HXDLIN(1237)										 ::openfl::_internal::renderer::DrawCommandReader data49 = data;
HXDLIN(1237)										data49->iiPos = (data49->iiPos + (int)2);
HXDLIN(1237)										 ::openfl::_internal::renderer::DrawCommandReader data50 = data;
HXDLIN(1237)										data50->ffPos = (data50->ffPos + (int)1);
HXDLIN(1237)										 ::openfl::_internal::renderer::DrawCommandReader data51 = data;
HXDLIN(1237)										data51->fPos = (data51->fPos + (int)1);
            									}
            									break;
            									case (int)14: {
HXLINE(1237)										 ::openfl::_internal::renderer::DrawCommandReader data52 = data;
HXDLIN(1237)										data52->oPos = (data52->oPos + (int)4);
HXDLIN(1237)										 ::openfl::_internal::renderer::DrawCommandReader data53 = data;
HXDLIN(1237)										data53->iPos = (data53->iPos + (int)1);
HXDLIN(1237)										 ::openfl::_internal::renderer::DrawCommandReader data54 = data;
HXDLIN(1237)										data54->fPos = (data54->fPos + (int)2);
HXDLIN(1237)										 ::openfl::_internal::renderer::DrawCommandReader data55 = data;
HXDLIN(1237)										data55->bPos = (data55->bPos + (int)1);
            									}
            									break;
            									case (int)15: {
HXLINE(1237)										 ::openfl::_internal::renderer::DrawCommandReader data56 = data;
HXDLIN(1237)										data56->fPos = (data56->fPos + (int)2);
            									}
            									break;
            									case (int)16: {
HXLINE(1237)										 ::openfl::_internal::renderer::DrawCommandReader data57 = data;
HXDLIN(1237)										data57->fPos = (data57->fPos + (int)2);
            									}
            									break;
            									case (int)17: {
HXLINE(1237)										 ::openfl::_internal::renderer::DrawCommandReader data58 = data;
HXDLIN(1237)										data58->oPos = (data58->oPos + (int)1);
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE(1237)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::CURVE_TO_dyn();
HXDLIN(1237)							 ::openfl::_internal::renderer::DrawCommandReader this2 = data;
HXDLIN(1237)							 ::openfl::_internal::renderer::DrawCommandReader c8 = this2;
HXLINE(1238)							Float _hx_tmp5 = (c8->buffer->f->__get(c8->fPos) - offsetX);
HXDLIN(1238)							::Array< Float > c9 = c8->buffer->f;
HXDLIN(1238)							Float _hx_tmp6 = (c9->__get((c8->fPos + (int)1)) - offsetY);
HXDLIN(1238)							::Array< Float > c10 = c8->buffer->f;
HXDLIN(1238)							Float _hx_tmp7 = (c10->__get((c8->fPos + (int)2)) - offsetX);
HXDLIN(1238)							::Array< Float > c11 = c8->buffer->f;
HXDLIN(1238)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::quadraticCurveTo(_hx_tmp5,_hx_tmp6,_hx_tmp7,(c11->__get((c8->fPos + (int)3)) - offsetY));
HXLINE(1239)							::Array< Float > c12 = c8->buffer->f;
HXDLIN(1239)							positionX = c12->__get((c8->fPos + (int)2));
HXLINE(1240)							::Array< Float > c13 = c8->buffer->f;
HXDLIN(1240)							positionY = c13->__get((c8->fPos + (int)3));
            						}
            						break;
            						case (int)5: {
HXLINE(1244)							{
HXLINE(1244)								 ::openfl::_internal::renderer::DrawCommandType _g4 = data->prev;
HXDLIN(1244)								switch((int)(_hx_getEnumValueIndex(_g4))){
            									case (int)0: {
HXLINE(1244)										 ::openfl::_internal::renderer::DrawCommandReader data59 = data;
HXDLIN(1244)										data59->oPos = (data59->oPos + (int)2);
HXDLIN(1244)										 ::openfl::_internal::renderer::DrawCommandReader data60 = data;
HXDLIN(1244)										data60->bPos = (data60->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE(1244)										 ::openfl::_internal::renderer::DrawCommandReader data61 = data;
HXDLIN(1244)										data61->iPos = (data61->iPos + (int)1);
HXDLIN(1244)										 ::openfl::_internal::renderer::DrawCommandReader data62 = data;
HXDLIN(1244)										data62->fPos = (data62->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE(1244)										 ::openfl::_internal::renderer::DrawCommandReader data63 = data;
HXDLIN(1244)										data63->oPos = (data63->oPos + (int)4);
HXDLIN(1244)										 ::openfl::_internal::renderer::DrawCommandReader data64 = data;
HXDLIN(1244)										data64->iiPos = (data64->iiPos + (int)2);
HXDLIN(1244)										 ::openfl::_internal::renderer::DrawCommandReader data65 = data;
HXDLIN(1244)										data65->ffPos = (data65->ffPos + (int)1);
HXDLIN(1244)										 ::openfl::_internal::renderer::DrawCommandReader data66 = data;
HXDLIN(1244)										data66->fPos = (data66->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE(1244)										 ::openfl::_internal::renderer::DrawCommandReader data67 = data;
HXDLIN(1244)										data67->fPos = (data67->fPos + (int)6);
            									}
            									break;
            									case (int)4: {
HXLINE(1244)										 ::openfl::_internal::renderer::DrawCommandReader data68 = data;
HXDLIN(1244)										data68->fPos = (data68->fPos + (int)4);
            									}
            									break;
            									case (int)5: {
HXLINE(1244)										 ::openfl::_internal::renderer::DrawCommandReader data69 = data;
HXDLIN(1244)										data69->fPos = (data69->fPos + (int)3);
            									}
            									break;
            									case (int)6: {
HXLINE(1244)										 ::openfl::_internal::renderer::DrawCommandReader data70 = data;
HXDLIN(1244)										data70->fPos = (data70->fPos + (int)4);
            									}
            									break;
            									case (int)7: {
HXLINE(1244)										 ::openfl::_internal::renderer::DrawCommandReader data71 = data;
HXDLIN(1244)										data71->fPos = (data71->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE(1244)										 ::openfl::_internal::renderer::DrawCommandReader data72 = data;
HXDLIN(1244)										data72->fPos = (data72->fPos + (int)5);
HXDLIN(1244)										 ::openfl::_internal::renderer::DrawCommandReader data73 = data;
HXDLIN(1244)										data73->oPos = (data73->oPos + (int)1);
            									}
            									break;
            									case (int)10: {
HXLINE(1244)										 ::openfl::_internal::renderer::DrawCommandReader data74 = data;
HXDLIN(1244)										data74->oPos = (data74->oPos + (int)4);
            									}
            									break;
            									case (int)11: {
            									}
            									break;
            									case (int)12: {
HXLINE(1244)										 ::openfl::_internal::renderer::DrawCommandReader data75 = data;
HXDLIN(1244)										data75->oPos = (data75->oPos + (int)2);
HXDLIN(1244)										 ::openfl::_internal::renderer::DrawCommandReader data76 = data;
HXDLIN(1244)										data76->bPos = (data76->bPos + (int)2);
            									}
            									break;
            									case (int)13: {
HXLINE(1244)										 ::openfl::_internal::renderer::DrawCommandReader data77 = data;
HXDLIN(1244)										data77->oPos = (data77->oPos + (int)4);
HXDLIN(1244)										 ::openfl::_internal::renderer::DrawCommandReader data78 = data;
HXDLIN(1244)										data78->iiPos = (data78->iiPos + (int)2);
HXDLIN(1244)										 ::openfl::_internal::renderer::DrawCommandReader data79 = data;
HXDLIN(1244)										data79->ffPos = (data79->ffPos + (int)1);
HXDLIN(1244)										 ::openfl::_internal::renderer::DrawCommandReader data80 = data;
HXDLIN(1244)										data80->fPos = (data80->fPos + (int)1);
            									}
            									break;
            									case (int)14: {
HXLINE(1244)										 ::openfl::_internal::renderer::DrawCommandReader data81 = data;
HXDLIN(1244)										data81->oPos = (data81->oPos + (int)4);
HXDLIN(1244)										 ::openfl::_internal::renderer::DrawCommandReader data82 = data;
HXDLIN(1244)										data82->iPos = (data82->iPos + (int)1);
HXDLIN(1244)										 ::openfl::_internal::renderer::DrawCommandReader data83 = data;
HXDLIN(1244)										data83->fPos = (data83->fPos + (int)2);
HXDLIN(1244)										 ::openfl::_internal::renderer::DrawCommandReader data84 = data;
HXDLIN(1244)										data84->bPos = (data84->bPos + (int)1);
            									}
            									break;
            									case (int)15: {
HXLINE(1244)										 ::openfl::_internal::renderer::DrawCommandReader data85 = data;
HXDLIN(1244)										data85->fPos = (data85->fPos + (int)2);
            									}
            									break;
            									case (int)16: {
HXLINE(1244)										 ::openfl::_internal::renderer::DrawCommandReader data86 = data;
HXDLIN(1244)										data86->fPos = (data86->fPos + (int)2);
            									}
            									break;
            									case (int)17: {
HXLINE(1244)										 ::openfl::_internal::renderer::DrawCommandReader data87 = data;
HXDLIN(1244)										data87->oPos = (data87->oPos + (int)1);
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE(1244)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::DRAW_CIRCLE_dyn();
HXDLIN(1244)							 ::openfl::_internal::renderer::DrawCommandReader this3 = data;
HXDLIN(1244)							 ::openfl::_internal::renderer::DrawCommandReader c14 = this3;
HXLINE(1245)							Float _hx_tmp8 = (c14->buffer->f->__get(c14->fPos) - offsetX);
HXDLIN(1245)							::Array< Float > c15 = c14->buffer->f;
HXDLIN(1245)							Float _hx_tmp9 = (c15->__get((c14->fPos + (int)1)) - offsetY);
HXDLIN(1245)							::Array< Float > c16 = c14->buffer->f;
HXDLIN(1245)							Float c17 = c16->__get((c14->fPos + (int)2));
HXDLIN(1245)							cairo->arc(_hx_tmp8,_hx_tmp9,c17,(int)0,(::Math_obj::PI * (int)2));
            						}
            						break;
            						case (int)6: {
HXLINE(1249)							{
HXLINE(1249)								 ::openfl::_internal::renderer::DrawCommandType _g5 = data->prev;
HXDLIN(1249)								switch((int)(_hx_getEnumValueIndex(_g5))){
            									case (int)0: {
HXLINE(1249)										 ::openfl::_internal::renderer::DrawCommandReader data88 = data;
HXDLIN(1249)										data88->oPos = (data88->oPos + (int)2);
HXDLIN(1249)										 ::openfl::_internal::renderer::DrawCommandReader data89 = data;
HXDLIN(1249)										data89->bPos = (data89->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE(1249)										 ::openfl::_internal::renderer::DrawCommandReader data90 = data;
HXDLIN(1249)										data90->iPos = (data90->iPos + (int)1);
HXDLIN(1249)										 ::openfl::_internal::renderer::DrawCommandReader data91 = data;
HXDLIN(1249)										data91->fPos = (data91->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE(1249)										 ::openfl::_internal::renderer::DrawCommandReader data92 = data;
HXDLIN(1249)										data92->oPos = (data92->oPos + (int)4);
HXDLIN(1249)										 ::openfl::_internal::renderer::DrawCommandReader data93 = data;
HXDLIN(1249)										data93->iiPos = (data93->iiPos + (int)2);
HXDLIN(1249)										 ::openfl::_internal::renderer::DrawCommandReader data94 = data;
HXDLIN(1249)										data94->ffPos = (data94->ffPos + (int)1);
HXDLIN(1249)										 ::openfl::_internal::renderer::DrawCommandReader data95 = data;
HXDLIN(1249)										data95->fPos = (data95->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE(1249)										 ::openfl::_internal::renderer::DrawCommandReader data96 = data;
HXDLIN(1249)										data96->fPos = (data96->fPos + (int)6);
            									}
            									break;
            									case (int)4: {
HXLINE(1249)										 ::openfl::_internal::renderer::DrawCommandReader data97 = data;
HXDLIN(1249)										data97->fPos = (data97->fPos + (int)4);
            									}
            									break;
            									case (int)5: {
HXLINE(1249)										 ::openfl::_internal::renderer::DrawCommandReader data98 = data;
HXDLIN(1249)										data98->fPos = (data98->fPos + (int)3);
            									}
            									break;
            									case (int)6: {
HXLINE(1249)										 ::openfl::_internal::renderer::DrawCommandReader data99 = data;
HXDLIN(1249)										data99->fPos = (data99->fPos + (int)4);
            									}
            									break;
            									case (int)7: {
HXLINE(1249)										 ::openfl::_internal::renderer::DrawCommandReader data100 = data;
HXDLIN(1249)										data100->fPos = (data100->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE(1249)										 ::openfl::_internal::renderer::DrawCommandReader data101 = data;
HXDLIN(1249)										data101->fPos = (data101->fPos + (int)5);
HXDLIN(1249)										 ::openfl::_internal::renderer::DrawCommandReader data102 = data;
HXDLIN(1249)										data102->oPos = (data102->oPos + (int)1);
            									}
            									break;
            									case (int)10: {
HXLINE(1249)										 ::openfl::_internal::renderer::DrawCommandReader data103 = data;
HXDLIN(1249)										data103->oPos = (data103->oPos + (int)4);
            									}
            									break;
            									case (int)11: {
            									}
            									break;
            									case (int)12: {
HXLINE(1249)										 ::openfl::_internal::renderer::DrawCommandReader data104 = data;
HXDLIN(1249)										data104->oPos = (data104->oPos + (int)2);
HXDLIN(1249)										 ::openfl::_internal::renderer::DrawCommandReader data105 = data;
HXDLIN(1249)										data105->bPos = (data105->bPos + (int)2);
            									}
            									break;
            									case (int)13: {
HXLINE(1249)										 ::openfl::_internal::renderer::DrawCommandReader data106 = data;
HXDLIN(1249)										data106->oPos = (data106->oPos + (int)4);
HXDLIN(1249)										 ::openfl::_internal::renderer::DrawCommandReader data107 = data;
HXDLIN(1249)										data107->iiPos = (data107->iiPos + (int)2);
HXDLIN(1249)										 ::openfl::_internal::renderer::DrawCommandReader data108 = data;
HXDLIN(1249)										data108->ffPos = (data108->ffPos + (int)1);
HXDLIN(1249)										 ::openfl::_internal::renderer::DrawCommandReader data109 = data;
HXDLIN(1249)										data109->fPos = (data109->fPos + (int)1);
            									}
            									break;
            									case (int)14: {
HXLINE(1249)										 ::openfl::_internal::renderer::DrawCommandReader data110 = data;
HXDLIN(1249)										data110->oPos = (data110->oPos + (int)4);
HXDLIN(1249)										 ::openfl::_internal::renderer::DrawCommandReader data111 = data;
HXDLIN(1249)										data111->iPos = (data111->iPos + (int)1);
HXDLIN(1249)										 ::openfl::_internal::renderer::DrawCommandReader data112 = data;
HXDLIN(1249)										data112->fPos = (data112->fPos + (int)2);
HXDLIN(1249)										 ::openfl::_internal::renderer::DrawCommandReader data113 = data;
HXDLIN(1249)										data113->bPos = (data113->bPos + (int)1);
            									}
            									break;
            									case (int)15: {
HXLINE(1249)										 ::openfl::_internal::renderer::DrawCommandReader data114 = data;
HXDLIN(1249)										data114->fPos = (data114->fPos + (int)2);
            									}
            									break;
            									case (int)16: {
HXLINE(1249)										 ::openfl::_internal::renderer::DrawCommandReader data115 = data;
HXDLIN(1249)										data115->fPos = (data115->fPos + (int)2);
            									}
            									break;
            									case (int)17: {
HXLINE(1249)										 ::openfl::_internal::renderer::DrawCommandReader data116 = data;
HXDLIN(1249)										data116->oPos = (data116->oPos + (int)1);
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE(1249)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::DRAW_ELLIPSE_dyn();
HXDLIN(1249)							 ::openfl::_internal::renderer::DrawCommandReader this4 = data;
HXDLIN(1249)							 ::openfl::_internal::renderer::DrawCommandReader c18 = this4;
HXLINE(1251)							Float x = c18->buffer->f->__get(c18->fPos);
HXLINE(1252)							::Array< Float > c19 = c18->buffer->f;
HXDLIN(1252)							Float y = c19->__get((c18->fPos + (int)1));
HXLINE(1253)							::Array< Float > c20 = c18->buffer->f;
HXDLIN(1253)							Float width = c20->__get((c18->fPos + (int)2));
HXLINE(1254)							::Array< Float > c21 = c18->buffer->f;
HXDLIN(1254)							Float height = c21->__get((c18->fPos + (int)3));
HXLINE(1256)							x = (x - offsetX);
HXLINE(1257)							y = (y - offsetY);
HXLINE(1259)							Float kappa = ((Float).5522848);
HXDLIN(1259)							Float ox = (((Float)width / (Float)(int)2) * kappa);
HXDLIN(1259)							Float oy = (((Float)height / (Float)(int)2) * kappa);
HXDLIN(1259)							Float xe = (x + width);
HXDLIN(1259)							Float ye = (y + height);
HXDLIN(1259)							Float xm = (x + ((Float)width / (Float)(int)2));
HXDLIN(1259)							Float ym = (y + ((Float)height / (Float)(int)2));
HXLINE(1269)							cairo->moveTo(x,ym);
HXLINE(1270)							cairo->curveTo(x,(ym - oy),(xm - ox),y,xm,y);
HXLINE(1271)							cairo->curveTo((xm + ox),y,xe,(ym - oy),xe,ym);
HXLINE(1272)							cairo->curveTo(xe,(ym + oy),(xm + ox),ye,xm,ye);
HXLINE(1273)							cairo->curveTo((xm - ox),ye,x,(ym + oy),x,ym);
            						}
            						break;
            						case (int)7: {
HXLINE(1278)							{
HXLINE(1278)								 ::openfl::_internal::renderer::DrawCommandType _g6 = data->prev;
HXDLIN(1278)								switch((int)(_hx_getEnumValueIndex(_g6))){
            									case (int)0: {
HXLINE(1278)										 ::openfl::_internal::renderer::DrawCommandReader data117 = data;
HXDLIN(1278)										data117->oPos = (data117->oPos + (int)2);
HXDLIN(1278)										 ::openfl::_internal::renderer::DrawCommandReader data118 = data;
HXDLIN(1278)										data118->bPos = (data118->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE(1278)										 ::openfl::_internal::renderer::DrawCommandReader data119 = data;
HXDLIN(1278)										data119->iPos = (data119->iPos + (int)1);
HXDLIN(1278)										 ::openfl::_internal::renderer::DrawCommandReader data120 = data;
HXDLIN(1278)										data120->fPos = (data120->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE(1278)										 ::openfl::_internal::renderer::DrawCommandReader data121 = data;
HXDLIN(1278)										data121->oPos = (data121->oPos + (int)4);
HXDLIN(1278)										 ::openfl::_internal::renderer::DrawCommandReader data122 = data;
HXDLIN(1278)										data122->iiPos = (data122->iiPos + (int)2);
HXDLIN(1278)										 ::openfl::_internal::renderer::DrawCommandReader data123 = data;
HXDLIN(1278)										data123->ffPos = (data123->ffPos + (int)1);
HXDLIN(1278)										 ::openfl::_internal::renderer::DrawCommandReader data124 = data;
HXDLIN(1278)										data124->fPos = (data124->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE(1278)										 ::openfl::_internal::renderer::DrawCommandReader data125 = data;
HXDLIN(1278)										data125->fPos = (data125->fPos + (int)6);
            									}
            									break;
            									case (int)4: {
HXLINE(1278)										 ::openfl::_internal::renderer::DrawCommandReader data126 = data;
HXDLIN(1278)										data126->fPos = (data126->fPos + (int)4);
            									}
            									break;
            									case (int)5: {
HXLINE(1278)										 ::openfl::_internal::renderer::DrawCommandReader data127 = data;
HXDLIN(1278)										data127->fPos = (data127->fPos + (int)3);
            									}
            									break;
            									case (int)6: {
HXLINE(1278)										 ::openfl::_internal::renderer::DrawCommandReader data128 = data;
HXDLIN(1278)										data128->fPos = (data128->fPos + (int)4);
            									}
            									break;
            									case (int)7: {
HXLINE(1278)										 ::openfl::_internal::renderer::DrawCommandReader data129 = data;
HXDLIN(1278)										data129->fPos = (data129->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE(1278)										 ::openfl::_internal::renderer::DrawCommandReader data130 = data;
HXDLIN(1278)										data130->fPos = (data130->fPos + (int)5);
HXDLIN(1278)										 ::openfl::_internal::renderer::DrawCommandReader data131 = data;
HXDLIN(1278)										data131->oPos = (data131->oPos + (int)1);
            									}
            									break;
            									case (int)10: {
HXLINE(1278)										 ::openfl::_internal::renderer::DrawCommandReader data132 = data;
HXDLIN(1278)										data132->oPos = (data132->oPos + (int)4);
            									}
            									break;
            									case (int)11: {
            									}
            									break;
            									case (int)12: {
HXLINE(1278)										 ::openfl::_internal::renderer::DrawCommandReader data133 = data;
HXDLIN(1278)										data133->oPos = (data133->oPos + (int)2);
HXDLIN(1278)										 ::openfl::_internal::renderer::DrawCommandReader data134 = data;
HXDLIN(1278)										data134->bPos = (data134->bPos + (int)2);
            									}
            									break;
            									case (int)13: {
HXLINE(1278)										 ::openfl::_internal::renderer::DrawCommandReader data135 = data;
HXDLIN(1278)										data135->oPos = (data135->oPos + (int)4);
HXDLIN(1278)										 ::openfl::_internal::renderer::DrawCommandReader data136 = data;
HXDLIN(1278)										data136->iiPos = (data136->iiPos + (int)2);
HXDLIN(1278)										 ::openfl::_internal::renderer::DrawCommandReader data137 = data;
HXDLIN(1278)										data137->ffPos = (data137->ffPos + (int)1);
HXDLIN(1278)										 ::openfl::_internal::renderer::DrawCommandReader data138 = data;
HXDLIN(1278)										data138->fPos = (data138->fPos + (int)1);
            									}
            									break;
            									case (int)14: {
HXLINE(1278)										 ::openfl::_internal::renderer::DrawCommandReader data139 = data;
HXDLIN(1278)										data139->oPos = (data139->oPos + (int)4);
HXDLIN(1278)										 ::openfl::_internal::renderer::DrawCommandReader data140 = data;
HXDLIN(1278)										data140->iPos = (data140->iPos + (int)1);
HXDLIN(1278)										 ::openfl::_internal::renderer::DrawCommandReader data141 = data;
HXDLIN(1278)										data141->fPos = (data141->fPos + (int)2);
HXDLIN(1278)										 ::openfl::_internal::renderer::DrawCommandReader data142 = data;
HXDLIN(1278)										data142->bPos = (data142->bPos + (int)1);
            									}
            									break;
            									case (int)15: {
HXLINE(1278)										 ::openfl::_internal::renderer::DrawCommandReader data143 = data;
HXDLIN(1278)										data143->fPos = (data143->fPos + (int)2);
            									}
            									break;
            									case (int)16: {
HXLINE(1278)										 ::openfl::_internal::renderer::DrawCommandReader data144 = data;
HXDLIN(1278)										data144->fPos = (data144->fPos + (int)2);
            									}
            									break;
            									case (int)17: {
HXLINE(1278)										 ::openfl::_internal::renderer::DrawCommandReader data145 = data;
HXDLIN(1278)										data145->oPos = (data145->oPos + (int)1);
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE(1278)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::DRAW_RECT_dyn();
HXDLIN(1278)							 ::openfl::_internal::renderer::DrawCommandReader this5 = data;
HXDLIN(1278)							 ::openfl::_internal::renderer::DrawCommandReader c22 = this5;
HXLINE(1279)							Float _hx_tmp10 = (c22->buffer->f->__get(c22->fPos) - offsetX);
HXDLIN(1279)							::Array< Float > c23 = c22->buffer->f;
HXDLIN(1279)							Float _hx_tmp11 = (c23->__get((c22->fPos + (int)1)) - offsetY);
HXDLIN(1279)							::Array< Float > c24 = c22->buffer->f;
HXDLIN(1279)							Float c25 = c24->__get((c22->fPos + (int)2));
HXDLIN(1279)							::Array< Float > c26 = c22->buffer->f;
HXDLIN(1279)							cairo->rectangle(_hx_tmp10,_hx_tmp11,c25,c26->__get((c22->fPos + (int)3)));
            						}
            						break;
            						case (int)8: {
HXLINE(1283)							{
HXLINE(1283)								 ::openfl::_internal::renderer::DrawCommandType _g7 = data->prev;
HXDLIN(1283)								switch((int)(_hx_getEnumValueIndex(_g7))){
            									case (int)0: {
HXLINE(1283)										 ::openfl::_internal::renderer::DrawCommandReader data146 = data;
HXDLIN(1283)										data146->oPos = (data146->oPos + (int)2);
HXDLIN(1283)										 ::openfl::_internal::renderer::DrawCommandReader data147 = data;
HXDLIN(1283)										data147->bPos = (data147->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE(1283)										 ::openfl::_internal::renderer::DrawCommandReader data148 = data;
HXDLIN(1283)										data148->iPos = (data148->iPos + (int)1);
HXDLIN(1283)										 ::openfl::_internal::renderer::DrawCommandReader data149 = data;
HXDLIN(1283)										data149->fPos = (data149->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE(1283)										 ::openfl::_internal::renderer::DrawCommandReader data150 = data;
HXDLIN(1283)										data150->oPos = (data150->oPos + (int)4);
HXDLIN(1283)										 ::openfl::_internal::renderer::DrawCommandReader data151 = data;
HXDLIN(1283)										data151->iiPos = (data151->iiPos + (int)2);
HXDLIN(1283)										 ::openfl::_internal::renderer::DrawCommandReader data152 = data;
HXDLIN(1283)										data152->ffPos = (data152->ffPos + (int)1);
HXDLIN(1283)										 ::openfl::_internal::renderer::DrawCommandReader data153 = data;
HXDLIN(1283)										data153->fPos = (data153->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE(1283)										 ::openfl::_internal::renderer::DrawCommandReader data154 = data;
HXDLIN(1283)										data154->fPos = (data154->fPos + (int)6);
            									}
            									break;
            									case (int)4: {
HXLINE(1283)										 ::openfl::_internal::renderer::DrawCommandReader data155 = data;
HXDLIN(1283)										data155->fPos = (data155->fPos + (int)4);
            									}
            									break;
            									case (int)5: {
HXLINE(1283)										 ::openfl::_internal::renderer::DrawCommandReader data156 = data;
HXDLIN(1283)										data156->fPos = (data156->fPos + (int)3);
            									}
            									break;
            									case (int)6: {
HXLINE(1283)										 ::openfl::_internal::renderer::DrawCommandReader data157 = data;
HXDLIN(1283)										data157->fPos = (data157->fPos + (int)4);
            									}
            									break;
            									case (int)7: {
HXLINE(1283)										 ::openfl::_internal::renderer::DrawCommandReader data158 = data;
HXDLIN(1283)										data158->fPos = (data158->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE(1283)										 ::openfl::_internal::renderer::DrawCommandReader data159 = data;
HXDLIN(1283)										data159->fPos = (data159->fPos + (int)5);
HXDLIN(1283)										 ::openfl::_internal::renderer::DrawCommandReader data160 = data;
HXDLIN(1283)										data160->oPos = (data160->oPos + (int)1);
            									}
            									break;
            									case (int)10: {
HXLINE(1283)										 ::openfl::_internal::renderer::DrawCommandReader data161 = data;
HXDLIN(1283)										data161->oPos = (data161->oPos + (int)4);
            									}
            									break;
            									case (int)11: {
            									}
            									break;
            									case (int)12: {
HXLINE(1283)										 ::openfl::_internal::renderer::DrawCommandReader data162 = data;
HXDLIN(1283)										data162->oPos = (data162->oPos + (int)2);
HXDLIN(1283)										 ::openfl::_internal::renderer::DrawCommandReader data163 = data;
HXDLIN(1283)										data163->bPos = (data163->bPos + (int)2);
            									}
            									break;
            									case (int)13: {
HXLINE(1283)										 ::openfl::_internal::renderer::DrawCommandReader data164 = data;
HXDLIN(1283)										data164->oPos = (data164->oPos + (int)4);
HXDLIN(1283)										 ::openfl::_internal::renderer::DrawCommandReader data165 = data;
HXDLIN(1283)										data165->iiPos = (data165->iiPos + (int)2);
HXDLIN(1283)										 ::openfl::_internal::renderer::DrawCommandReader data166 = data;
HXDLIN(1283)										data166->ffPos = (data166->ffPos + (int)1);
HXDLIN(1283)										 ::openfl::_internal::renderer::DrawCommandReader data167 = data;
HXDLIN(1283)										data167->fPos = (data167->fPos + (int)1);
            									}
            									break;
            									case (int)14: {
HXLINE(1283)										 ::openfl::_internal::renderer::DrawCommandReader data168 = data;
HXDLIN(1283)										data168->oPos = (data168->oPos + (int)4);
HXDLIN(1283)										 ::openfl::_internal::renderer::DrawCommandReader data169 = data;
HXDLIN(1283)										data169->iPos = (data169->iPos + (int)1);
HXDLIN(1283)										 ::openfl::_internal::renderer::DrawCommandReader data170 = data;
HXDLIN(1283)										data170->fPos = (data170->fPos + (int)2);
HXDLIN(1283)										 ::openfl::_internal::renderer::DrawCommandReader data171 = data;
HXDLIN(1283)										data171->bPos = (data171->bPos + (int)1);
            									}
            									break;
            									case (int)15: {
HXLINE(1283)										 ::openfl::_internal::renderer::DrawCommandReader data172 = data;
HXDLIN(1283)										data172->fPos = (data172->fPos + (int)2);
            									}
            									break;
            									case (int)16: {
HXLINE(1283)										 ::openfl::_internal::renderer::DrawCommandReader data173 = data;
HXDLIN(1283)										data173->fPos = (data173->fPos + (int)2);
            									}
            									break;
            									case (int)17: {
HXLINE(1283)										 ::openfl::_internal::renderer::DrawCommandReader data174 = data;
HXDLIN(1283)										data174->oPos = (data174->oPos + (int)1);
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE(1283)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::DRAW_ROUND_RECT_dyn();
HXDLIN(1283)							 ::openfl::_internal::renderer::DrawCommandReader this6 = data;
HXDLIN(1283)							 ::openfl::_internal::renderer::DrawCommandReader c27 = this6;
HXLINE(1284)							Float _hx_tmp12 = (c27->buffer->f->__get(c27->fPos) - offsetX);
HXDLIN(1284)							::Array< Float > c28 = c27->buffer->f;
HXDLIN(1284)							Float _hx_tmp13 = (c28->__get((c27->fPos + (int)1)) - offsetY);
HXDLIN(1284)							::Array< Float > c29 = c27->buffer->f;
HXDLIN(1284)							Float c30 = c29->__get((c27->fPos + (int)2));
HXDLIN(1284)							::Array< Float > c31 = c27->buffer->f;
HXDLIN(1284)							Float c32 = c31->__get((c27->fPos + (int)3));
HXDLIN(1284)							::Array< Float > c33 = c27->buffer->f;
HXDLIN(1284)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::drawRoundRect(_hx_tmp12,_hx_tmp13,c30,c32,c33->__get((c27->fPos + (int)4)),c27->buffer->o->__get(c27->oPos));
            						}
            						break;
            						case (int)15: {
HXLINE(1288)							{
HXLINE(1288)								 ::openfl::_internal::renderer::DrawCommandType _g8 = data->prev;
HXDLIN(1288)								switch((int)(_hx_getEnumValueIndex(_g8))){
            									case (int)0: {
HXLINE(1288)										 ::openfl::_internal::renderer::DrawCommandReader data175 = data;
HXDLIN(1288)										data175->oPos = (data175->oPos + (int)2);
HXDLIN(1288)										 ::openfl::_internal::renderer::DrawCommandReader data176 = data;
HXDLIN(1288)										data176->bPos = (data176->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE(1288)										 ::openfl::_internal::renderer::DrawCommandReader data177 = data;
HXDLIN(1288)										data177->iPos = (data177->iPos + (int)1);
HXDLIN(1288)										 ::openfl::_internal::renderer::DrawCommandReader data178 = data;
HXDLIN(1288)										data178->fPos = (data178->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE(1288)										 ::openfl::_internal::renderer::DrawCommandReader data179 = data;
HXDLIN(1288)										data179->oPos = (data179->oPos + (int)4);
HXDLIN(1288)										 ::openfl::_internal::renderer::DrawCommandReader data180 = data;
HXDLIN(1288)										data180->iiPos = (data180->iiPos + (int)2);
HXDLIN(1288)										 ::openfl::_internal::renderer::DrawCommandReader data181 = data;
HXDLIN(1288)										data181->ffPos = (data181->ffPos + (int)1);
HXDLIN(1288)										 ::openfl::_internal::renderer::DrawCommandReader data182 = data;
HXDLIN(1288)										data182->fPos = (data182->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE(1288)										 ::openfl::_internal::renderer::DrawCommandReader data183 = data;
HXDLIN(1288)										data183->fPos = (data183->fPos + (int)6);
            									}
            									break;
            									case (int)4: {
HXLINE(1288)										 ::openfl::_internal::renderer::DrawCommandReader data184 = data;
HXDLIN(1288)										data184->fPos = (data184->fPos + (int)4);
            									}
            									break;
            									case (int)5: {
HXLINE(1288)										 ::openfl::_internal::renderer::DrawCommandReader data185 = data;
HXDLIN(1288)										data185->fPos = (data185->fPos + (int)3);
            									}
            									break;
            									case (int)6: {
HXLINE(1288)										 ::openfl::_internal::renderer::DrawCommandReader data186 = data;
HXDLIN(1288)										data186->fPos = (data186->fPos + (int)4);
            									}
            									break;
            									case (int)7: {
HXLINE(1288)										 ::openfl::_internal::renderer::DrawCommandReader data187 = data;
HXDLIN(1288)										data187->fPos = (data187->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE(1288)										 ::openfl::_internal::renderer::DrawCommandReader data188 = data;
HXDLIN(1288)										data188->fPos = (data188->fPos + (int)5);
HXDLIN(1288)										 ::openfl::_internal::renderer::DrawCommandReader data189 = data;
HXDLIN(1288)										data189->oPos = (data189->oPos + (int)1);
            									}
            									break;
            									case (int)10: {
HXLINE(1288)										 ::openfl::_internal::renderer::DrawCommandReader data190 = data;
HXDLIN(1288)										data190->oPos = (data190->oPos + (int)4);
            									}
            									break;
            									case (int)11: {
            									}
            									break;
            									case (int)12: {
HXLINE(1288)										 ::openfl::_internal::renderer::DrawCommandReader data191 = data;
HXDLIN(1288)										data191->oPos = (data191->oPos + (int)2);
HXDLIN(1288)										 ::openfl::_internal::renderer::DrawCommandReader data192 = data;
HXDLIN(1288)										data192->bPos = (data192->bPos + (int)2);
            									}
            									break;
            									case (int)13: {
HXLINE(1288)										 ::openfl::_internal::renderer::DrawCommandReader data193 = data;
HXDLIN(1288)										data193->oPos = (data193->oPos + (int)4);
HXDLIN(1288)										 ::openfl::_internal::renderer::DrawCommandReader data194 = data;
HXDLIN(1288)										data194->iiPos = (data194->iiPos + (int)2);
HXDLIN(1288)										 ::openfl::_internal::renderer::DrawCommandReader data195 = data;
HXDLIN(1288)										data195->ffPos = (data195->ffPos + (int)1);
HXDLIN(1288)										 ::openfl::_internal::renderer::DrawCommandReader data196 = data;
HXDLIN(1288)										data196->fPos = (data196->fPos + (int)1);
            									}
            									break;
            									case (int)14: {
HXLINE(1288)										 ::openfl::_internal::renderer::DrawCommandReader data197 = data;
HXDLIN(1288)										data197->oPos = (data197->oPos + (int)4);
HXDLIN(1288)										 ::openfl::_internal::renderer::DrawCommandReader data198 = data;
HXDLIN(1288)										data198->iPos = (data198->iPos + (int)1);
HXDLIN(1288)										 ::openfl::_internal::renderer::DrawCommandReader data199 = data;
HXDLIN(1288)										data199->fPos = (data199->fPos + (int)2);
HXDLIN(1288)										 ::openfl::_internal::renderer::DrawCommandReader data200 = data;
HXDLIN(1288)										data200->bPos = (data200->bPos + (int)1);
            									}
            									break;
            									case (int)15: {
HXLINE(1288)										 ::openfl::_internal::renderer::DrawCommandReader data201 = data;
HXDLIN(1288)										data201->fPos = (data201->fPos + (int)2);
            									}
            									break;
            									case (int)16: {
HXLINE(1288)										 ::openfl::_internal::renderer::DrawCommandReader data202 = data;
HXDLIN(1288)										data202->fPos = (data202->fPos + (int)2);
            									}
            									break;
            									case (int)17: {
HXLINE(1288)										 ::openfl::_internal::renderer::DrawCommandReader data203 = data;
HXDLIN(1288)										data203->oPos = (data203->oPos + (int)1);
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE(1288)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::LINE_TO_dyn();
HXDLIN(1288)							 ::openfl::_internal::renderer::DrawCommandReader this7 = data;
HXDLIN(1288)							 ::openfl::_internal::renderer::DrawCommandReader c34 = this7;
HXLINE(1289)							Float _hx_tmp14 = (c34->buffer->f->__get(c34->fPos) - offsetX);
HXDLIN(1289)							::Array< Float > c35 = c34->buffer->f;
HXDLIN(1289)							cairo->lineTo(_hx_tmp14,(c35->__get((c34->fPos + (int)1)) - offsetY));
HXLINE(1290)							positionX = c34->buffer->f->__get(c34->fPos);
HXLINE(1291)							::Array< Float > c36 = c34->buffer->f;
HXDLIN(1291)							positionY = c36->__get((c34->fPos + (int)1));
            						}
            						break;
            						case (int)16: {
HXLINE(1295)							{
HXLINE(1295)								 ::openfl::_internal::renderer::DrawCommandType _g9 = data->prev;
HXDLIN(1295)								switch((int)(_hx_getEnumValueIndex(_g9))){
            									case (int)0: {
HXLINE(1295)										 ::openfl::_internal::renderer::DrawCommandReader data204 = data;
HXDLIN(1295)										data204->oPos = (data204->oPos + (int)2);
HXDLIN(1295)										 ::openfl::_internal::renderer::DrawCommandReader data205 = data;
HXDLIN(1295)										data205->bPos = (data205->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE(1295)										 ::openfl::_internal::renderer::DrawCommandReader data206 = data;
HXDLIN(1295)										data206->iPos = (data206->iPos + (int)1);
HXDLIN(1295)										 ::openfl::_internal::renderer::DrawCommandReader data207 = data;
HXDLIN(1295)										data207->fPos = (data207->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE(1295)										 ::openfl::_internal::renderer::DrawCommandReader data208 = data;
HXDLIN(1295)										data208->oPos = (data208->oPos + (int)4);
HXDLIN(1295)										 ::openfl::_internal::renderer::DrawCommandReader data209 = data;
HXDLIN(1295)										data209->iiPos = (data209->iiPos + (int)2);
HXDLIN(1295)										 ::openfl::_internal::renderer::DrawCommandReader data210 = data;
HXDLIN(1295)										data210->ffPos = (data210->ffPos + (int)1);
HXDLIN(1295)										 ::openfl::_internal::renderer::DrawCommandReader data211 = data;
HXDLIN(1295)										data211->fPos = (data211->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE(1295)										 ::openfl::_internal::renderer::DrawCommandReader data212 = data;
HXDLIN(1295)										data212->fPos = (data212->fPos + (int)6);
            									}
            									break;
            									case (int)4: {
HXLINE(1295)										 ::openfl::_internal::renderer::DrawCommandReader data213 = data;
HXDLIN(1295)										data213->fPos = (data213->fPos + (int)4);
            									}
            									break;
            									case (int)5: {
HXLINE(1295)										 ::openfl::_internal::renderer::DrawCommandReader data214 = data;
HXDLIN(1295)										data214->fPos = (data214->fPos + (int)3);
            									}
            									break;
            									case (int)6: {
HXLINE(1295)										 ::openfl::_internal::renderer::DrawCommandReader data215 = data;
HXDLIN(1295)										data215->fPos = (data215->fPos + (int)4);
            									}
            									break;
            									case (int)7: {
HXLINE(1295)										 ::openfl::_internal::renderer::DrawCommandReader data216 = data;
HXDLIN(1295)										data216->fPos = (data216->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE(1295)										 ::openfl::_internal::renderer::DrawCommandReader data217 = data;
HXDLIN(1295)										data217->fPos = (data217->fPos + (int)5);
HXDLIN(1295)										 ::openfl::_internal::renderer::DrawCommandReader data218 = data;
HXDLIN(1295)										data218->oPos = (data218->oPos + (int)1);
            									}
            									break;
            									case (int)10: {
HXLINE(1295)										 ::openfl::_internal::renderer::DrawCommandReader data219 = data;
HXDLIN(1295)										data219->oPos = (data219->oPos + (int)4);
            									}
            									break;
            									case (int)11: {
            									}
            									break;
            									case (int)12: {
HXLINE(1295)										 ::openfl::_internal::renderer::DrawCommandReader data220 = data;
HXDLIN(1295)										data220->oPos = (data220->oPos + (int)2);
HXDLIN(1295)										 ::openfl::_internal::renderer::DrawCommandReader data221 = data;
HXDLIN(1295)										data221->bPos = (data221->bPos + (int)2);
            									}
            									break;
            									case (int)13: {
HXLINE(1295)										 ::openfl::_internal::renderer::DrawCommandReader data222 = data;
HXDLIN(1295)										data222->oPos = (data222->oPos + (int)4);
HXDLIN(1295)										 ::openfl::_internal::renderer::DrawCommandReader data223 = data;
HXDLIN(1295)										data223->iiPos = (data223->iiPos + (int)2);
HXDLIN(1295)										 ::openfl::_internal::renderer::DrawCommandReader data224 = data;
HXDLIN(1295)										data224->ffPos = (data224->ffPos + (int)1);
HXDLIN(1295)										 ::openfl::_internal::renderer::DrawCommandReader data225 = data;
HXDLIN(1295)										data225->fPos = (data225->fPos + (int)1);
            									}
            									break;
            									case (int)14: {
HXLINE(1295)										 ::openfl::_internal::renderer::DrawCommandReader data226 = data;
HXDLIN(1295)										data226->oPos = (data226->oPos + (int)4);
HXDLIN(1295)										 ::openfl::_internal::renderer::DrawCommandReader data227 = data;
HXDLIN(1295)										data227->iPos = (data227->iPos + (int)1);
HXDLIN(1295)										 ::openfl::_internal::renderer::DrawCommandReader data228 = data;
HXDLIN(1295)										data228->fPos = (data228->fPos + (int)2);
HXDLIN(1295)										 ::openfl::_internal::renderer::DrawCommandReader data229 = data;
HXDLIN(1295)										data229->bPos = (data229->bPos + (int)1);
            									}
            									break;
            									case (int)15: {
HXLINE(1295)										 ::openfl::_internal::renderer::DrawCommandReader data230 = data;
HXDLIN(1295)										data230->fPos = (data230->fPos + (int)2);
            									}
            									break;
            									case (int)16: {
HXLINE(1295)										 ::openfl::_internal::renderer::DrawCommandReader data231 = data;
HXDLIN(1295)										data231->fPos = (data231->fPos + (int)2);
            									}
            									break;
            									case (int)17: {
HXLINE(1295)										 ::openfl::_internal::renderer::DrawCommandReader data232 = data;
HXDLIN(1295)										data232->oPos = (data232->oPos + (int)1);
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE(1295)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::MOVE_TO_dyn();
HXDLIN(1295)							 ::openfl::_internal::renderer::DrawCommandReader this8 = data;
HXDLIN(1295)							 ::openfl::_internal::renderer::DrawCommandReader c37 = this8;
HXLINE(1296)							Float _hx_tmp15 = (c37->buffer->f->__get(c37->fPos) - offsetX);
HXDLIN(1296)							::Array< Float > c38 = c37->buffer->f;
HXDLIN(1296)							cairo->moveTo(_hx_tmp15,(c38->__get((c37->fPos + (int)1)) - offsetY));
HXLINE(1297)							positionX = c37->buffer->f->__get(c37->fPos);
HXLINE(1298)							::Array< Float > c39 = c37->buffer->f;
HXDLIN(1298)							positionY = c39->__get((c37->fPos + (int)1));
            						}
            						break;
            						default:{
HXLINE(1302)							{
HXLINE(1302)								 ::openfl::_internal::renderer::DrawCommandType _g10 = data->prev;
HXDLIN(1302)								switch((int)(_hx_getEnumValueIndex(_g10))){
            									case (int)0: {
HXLINE(1302)										 ::openfl::_internal::renderer::DrawCommandReader data233 = data;
HXDLIN(1302)										data233->oPos = (data233->oPos + (int)2);
HXDLIN(1302)										 ::openfl::_internal::renderer::DrawCommandReader data234 = data;
HXDLIN(1302)										data234->bPos = (data234->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE(1302)										 ::openfl::_internal::renderer::DrawCommandReader data235 = data;
HXDLIN(1302)										data235->iPos = (data235->iPos + (int)1);
HXDLIN(1302)										 ::openfl::_internal::renderer::DrawCommandReader data236 = data;
HXDLIN(1302)										data236->fPos = (data236->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE(1302)										 ::openfl::_internal::renderer::DrawCommandReader data237 = data;
HXDLIN(1302)										data237->oPos = (data237->oPos + (int)4);
HXDLIN(1302)										 ::openfl::_internal::renderer::DrawCommandReader data238 = data;
HXDLIN(1302)										data238->iiPos = (data238->iiPos + (int)2);
HXDLIN(1302)										 ::openfl::_internal::renderer::DrawCommandReader data239 = data;
HXDLIN(1302)										data239->ffPos = (data239->ffPos + (int)1);
HXDLIN(1302)										 ::openfl::_internal::renderer::DrawCommandReader data240 = data;
HXDLIN(1302)										data240->fPos = (data240->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE(1302)										 ::openfl::_internal::renderer::DrawCommandReader data241 = data;
HXDLIN(1302)										data241->fPos = (data241->fPos + (int)6);
            									}
            									break;
            									case (int)4: {
HXLINE(1302)										 ::openfl::_internal::renderer::DrawCommandReader data242 = data;
HXDLIN(1302)										data242->fPos = (data242->fPos + (int)4);
            									}
            									break;
            									case (int)5: {
HXLINE(1302)										 ::openfl::_internal::renderer::DrawCommandReader data243 = data;
HXDLIN(1302)										data243->fPos = (data243->fPos + (int)3);
            									}
            									break;
            									case (int)6: {
HXLINE(1302)										 ::openfl::_internal::renderer::DrawCommandReader data244 = data;
HXDLIN(1302)										data244->fPos = (data244->fPos + (int)4);
            									}
            									break;
            									case (int)7: {
HXLINE(1302)										 ::openfl::_internal::renderer::DrawCommandReader data245 = data;
HXDLIN(1302)										data245->fPos = (data245->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE(1302)										 ::openfl::_internal::renderer::DrawCommandReader data246 = data;
HXDLIN(1302)										data246->fPos = (data246->fPos + (int)5);
HXDLIN(1302)										 ::openfl::_internal::renderer::DrawCommandReader data247 = data;
HXDLIN(1302)										data247->oPos = (data247->oPos + (int)1);
            									}
            									break;
            									case (int)10: {
HXLINE(1302)										 ::openfl::_internal::renderer::DrawCommandReader data248 = data;
HXDLIN(1302)										data248->oPos = (data248->oPos + (int)4);
            									}
            									break;
            									case (int)11: {
            									}
            									break;
            									case (int)12: {
HXLINE(1302)										 ::openfl::_internal::renderer::DrawCommandReader data249 = data;
HXDLIN(1302)										data249->oPos = (data249->oPos + (int)2);
HXDLIN(1302)										 ::openfl::_internal::renderer::DrawCommandReader data250 = data;
HXDLIN(1302)										data250->bPos = (data250->bPos + (int)2);
            									}
            									break;
            									case (int)13: {
HXLINE(1302)										 ::openfl::_internal::renderer::DrawCommandReader data251 = data;
HXDLIN(1302)										data251->oPos = (data251->oPos + (int)4);
HXDLIN(1302)										 ::openfl::_internal::renderer::DrawCommandReader data252 = data;
HXDLIN(1302)										data252->iiPos = (data252->iiPos + (int)2);
HXDLIN(1302)										 ::openfl::_internal::renderer::DrawCommandReader data253 = data;
HXDLIN(1302)										data253->ffPos = (data253->ffPos + (int)1);
HXDLIN(1302)										 ::openfl::_internal::renderer::DrawCommandReader data254 = data;
HXDLIN(1302)										data254->fPos = (data254->fPos + (int)1);
            									}
            									break;
            									case (int)14: {
HXLINE(1302)										 ::openfl::_internal::renderer::DrawCommandReader data255 = data;
HXDLIN(1302)										data255->oPos = (data255->oPos + (int)4);
HXDLIN(1302)										 ::openfl::_internal::renderer::DrawCommandReader data256 = data;
HXDLIN(1302)										data256->iPos = (data256->iPos + (int)1);
HXDLIN(1302)										 ::openfl::_internal::renderer::DrawCommandReader data257 = data;
HXDLIN(1302)										data257->fPos = (data257->fPos + (int)2);
HXDLIN(1302)										 ::openfl::_internal::renderer::DrawCommandReader data258 = data;
HXDLIN(1302)										data258->bPos = (data258->bPos + (int)1);
            									}
            									break;
            									case (int)15: {
HXLINE(1302)										 ::openfl::_internal::renderer::DrawCommandReader data259 = data;
HXDLIN(1302)										data259->fPos = (data259->fPos + (int)2);
            									}
            									break;
            									case (int)16: {
HXLINE(1302)										 ::openfl::_internal::renderer::DrawCommandReader data260 = data;
HXDLIN(1302)										data260->fPos = (data260->fPos + (int)2);
            									}
            									break;
            									case (int)17: {
HXLINE(1302)										 ::openfl::_internal::renderer::DrawCommandReader data261 = data;
HXDLIN(1302)										data261->oPos = (data261->oPos + (int)1);
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE(1302)							data->prev = type;
            						}
            					}
            				}
            			}
HXLINE(1308)			data->destroy();
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(CairoGraphics_obj,renderMask,(void))


CairoGraphics_obj::CairoGraphics_obj()
{
}

bool CairoGraphics_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"SIN45") ) { outValue = SIN45; return true; }
		if (HX_FIELD_EQ(inName,"TAN22") ) { outValue = TAN22; return true; }
		if (HX_FIELD_EQ(inName,"cairo") ) { outValue = cairo; return true; }
		if (HX_FIELD_EQ(inName,"isCCW") ) { outValue = isCCW_dyn(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"bounds") ) { outValue = bounds; return true; }
		if (HX_FIELD_EQ(inName,"render") ) { outValue = render_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"hasFill") ) { outValue = hasFill; return true; }
		if (HX_FIELD_EQ(inName,"endFill") ) { outValue = endFill_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"hitTest") ) { outValue = hitTest_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"graphics") ) { outValue = graphics; return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"hasStroke") ) { outValue = hasStroke; return true; }
		if (HX_FIELD_EQ(inName,"closePath") ) { outValue = closePath_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"endStroke") ) { outValue = endStroke_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"bitmapFill") ) { outValue = bitmapFill; return true; }
		if (HX_FIELD_EQ(inName,"hitTesting") ) { outValue = hitTesting; return true; }
		if (HX_FIELD_EQ(inName,"renderMask") ) { outValue = renderMask_dyn(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"fillPattern") ) { outValue = fillPattern; return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"bitmapRepeat") ) { outValue = bitmapRepeat; return true; }
		if (HX_FIELD_EQ(inName,"fillCommands") ) { outValue = fillCommands; return true; }
		if (HX_FIELD_EQ(inName,"normalizeUVT") ) { outValue = normalizeUVT_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"playCommands") ) { outValue = playCommands_dyn(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"pendingMatrix") ) { outValue = pendingMatrix; return true; }
		if (HX_FIELD_EQ(inName,"strokePattern") ) { outValue = strokePattern; return true; }
		if (HX_FIELD_EQ(inName,"drawRoundRect") ) { outValue = drawRoundRect_dyn(); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"allowSmoothing") ) { outValue = allowSmoothing; return true; }
		if (HX_FIELD_EQ(inName,"strokeCommands") ) { outValue = strokeCommands; return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"quadraticCurveTo") ) { outValue = quadraticCurveTo_dyn(); return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"fillPatternMatrix") ) { outValue = fillPatternMatrix; return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"createImagePattern") ) { outValue = createImagePattern_dyn(); return true; }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"inversePendingMatrix") ) { outValue = inversePendingMatrix; return true; }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"createGradientPattern") ) { outValue = createGradientPattern_dyn(); return true; }
	}
	return false;
}

bool CairoGraphics_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"SIN45") ) { SIN45=ioValue.Cast< Float >(); return true; }
		if (HX_FIELD_EQ(inName,"TAN22") ) { TAN22=ioValue.Cast< Float >(); return true; }
		if (HX_FIELD_EQ(inName,"cairo") ) { cairo=ioValue.Cast<  ::lime::graphics::cairo::Cairo >(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"bounds") ) { bounds=ioValue.Cast<  ::openfl::geom::Rectangle >(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"hasFill") ) { hasFill=ioValue.Cast< bool >(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"graphics") ) { graphics=ioValue.Cast<  ::openfl::display::Graphics >(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"hasStroke") ) { hasStroke=ioValue.Cast< bool >(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"bitmapFill") ) { bitmapFill=ioValue.Cast<  ::openfl::display::BitmapData >(); return true; }
		if (HX_FIELD_EQ(inName,"hitTesting") ) { hitTesting=ioValue.Cast< bool >(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"fillPattern") ) { fillPattern=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"bitmapRepeat") ) { bitmapRepeat=ioValue.Cast< bool >(); return true; }
		if (HX_FIELD_EQ(inName,"fillCommands") ) { fillCommands=ioValue.Cast<  ::openfl::_internal::renderer::DrawCommandBuffer >(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"pendingMatrix") ) { pendingMatrix=ioValue.Cast<  ::openfl::geom::Matrix >(); return true; }
		if (HX_FIELD_EQ(inName,"strokePattern") ) { strokePattern=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"allowSmoothing") ) { allowSmoothing=ioValue.Cast< bool >(); return true; }
		if (HX_FIELD_EQ(inName,"strokeCommands") ) { strokeCommands=ioValue.Cast<  ::openfl::_internal::renderer::DrawCommandBuffer >(); return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"fillPatternMatrix") ) { fillPatternMatrix=ioValue.Cast<  ::openfl::geom::Matrix >(); return true; }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"inversePendingMatrix") ) { inversePendingMatrix=ioValue.Cast<  ::openfl::geom::Matrix >(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *CairoGraphics_obj_sMemberStorageInfo = 0;
static hx::StaticInfo CairoGraphics_obj_sStaticStorageInfo[] = {
	{hx::fsFloat,(void *) &CairoGraphics_obj::SIN45,HX_HCSTRING("SIN45","\x79","\x16","\xbe","\xfa")},
	{hx::fsFloat,(void *) &CairoGraphics_obj::TAN22,HX_HCSTRING("TAN22","\x41","\xf4","\xda","\x88")},
	{hx::fsBool,(void *) &CairoGraphics_obj::allowSmoothing,HX_HCSTRING("allowSmoothing","\xab","\xb7","\x66","\x68")},
	{hx::fsObject /*::openfl::display::BitmapData*/ ,(void *) &CairoGraphics_obj::bitmapFill,HX_HCSTRING("bitmapFill","\x12","\x2e","\x19","\x35")},
	{hx::fsBool,(void *) &CairoGraphics_obj::bitmapRepeat,HX_HCSTRING("bitmapRepeat","\xaa","\x38","\x9c","\x11")},
	{hx::fsObject /*::openfl::geom::Rectangle*/ ,(void *) &CairoGraphics_obj::bounds,HX_HCSTRING("bounds","\x75","\x86","\x1d","\x66")},
	{hx::fsObject /*::lime::graphics::cairo::Cairo*/ ,(void *) &CairoGraphics_obj::cairo,HX_HCSTRING("cairo","\x88","\x30","\x19","\x41")},
	{hx::fsObject /*::openfl::_internal::renderer::DrawCommandBuffer*/ ,(void *) &CairoGraphics_obj::fillCommands,HX_HCSTRING("fillCommands","\x6b","\xf6","\xc9","\xc2")},
	{hx::fsObject /*Dynamic*/ ,(void *) &CairoGraphics_obj::fillPattern,HX_HCSTRING("fillPattern","\x0d","\x86","\x12","\x35")},
	{hx::fsObject /*::openfl::geom::Matrix*/ ,(void *) &CairoGraphics_obj::fillPatternMatrix,HX_HCSTRING("fillPatternMatrix","\x2e","\xb8","\xae","\x97")},
	{hx::fsObject /*::openfl::display::Graphics*/ ,(void *) &CairoGraphics_obj::graphics,HX_HCSTRING("graphics","\xcb","\xf8","\x67","\x12")},
	{hx::fsBool,(void *) &CairoGraphics_obj::hasFill,HX_HCSTRING("hasFill","\xfd","\xee","\xff","\x12")},
	{hx::fsBool,(void *) &CairoGraphics_obj::hasStroke,HX_HCSTRING("hasStroke","\xb2","\x66","\x1d","\x52")},
	{hx::fsBool,(void *) &CairoGraphics_obj::hitTesting,HX_HCSTRING("hitTesting","\xbd","\x65","\x48","\x19")},
	{hx::fsObject /*::openfl::geom::Matrix*/ ,(void *) &CairoGraphics_obj::inversePendingMatrix,HX_HCSTRING("inversePendingMatrix","\x28","\x14","\x8c","\xbb")},
	{hx::fsObject /*::openfl::geom::Matrix*/ ,(void *) &CairoGraphics_obj::pendingMatrix,HX_HCSTRING("pendingMatrix","\xf8","\x9d","\x96","\xb5")},
	{hx::fsObject /*::openfl::_internal::renderer::DrawCommandBuffer*/ ,(void *) &CairoGraphics_obj::strokeCommands,HX_HCSTRING("strokeCommands","\xa0","\x98","\x2a","\x67")},
	{hx::fsObject /*Dynamic*/ ,(void *) &CairoGraphics_obj::strokePattern,HX_HCSTRING("strokePattern","\x78","\xe1","\x21","\x7e")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static void CairoGraphics_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::SIN45,"SIN45");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::TAN22,"TAN22");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::allowSmoothing,"allowSmoothing");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::bitmapFill,"bitmapFill");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::bitmapRepeat,"bitmapRepeat");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::bounds,"bounds");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::cairo,"cairo");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::fillCommands,"fillCommands");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::fillPattern,"fillPattern");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::fillPatternMatrix,"fillPatternMatrix");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::graphics,"graphics");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::hasFill,"hasFill");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::hasStroke,"hasStroke");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::hitTesting,"hitTesting");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::inversePendingMatrix,"inversePendingMatrix");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::pendingMatrix,"pendingMatrix");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::strokeCommands,"strokeCommands");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::strokePattern,"strokePattern");
};

#ifdef HXCPP_VISIT_ALLOCS
static void CairoGraphics_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::SIN45,"SIN45");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::TAN22,"TAN22");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::allowSmoothing,"allowSmoothing");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::bitmapFill,"bitmapFill");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::bitmapRepeat,"bitmapRepeat");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::bounds,"bounds");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::cairo,"cairo");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::fillCommands,"fillCommands");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::fillPattern,"fillPattern");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::fillPatternMatrix,"fillPatternMatrix");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::graphics,"graphics");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::hasFill,"hasFill");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::hasStroke,"hasStroke");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::hitTesting,"hitTesting");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::inversePendingMatrix,"inversePendingMatrix");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::pendingMatrix,"pendingMatrix");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::strokeCommands,"strokeCommands");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::strokePattern,"strokePattern");
};

#endif

hx::Class CairoGraphics_obj::__mClass;

static ::String CairoGraphics_obj_sStaticFields[] = {
	HX_HCSTRING("SIN45","\x79","\x16","\xbe","\xfa"),
	HX_HCSTRING("TAN22","\x41","\xf4","\xda","\x88"),
	HX_HCSTRING("allowSmoothing","\xab","\xb7","\x66","\x68"),
	HX_HCSTRING("bitmapFill","\x12","\x2e","\x19","\x35"),
	HX_HCSTRING("bitmapRepeat","\xaa","\x38","\x9c","\x11"),
	HX_HCSTRING("bounds","\x75","\x86","\x1d","\x66"),
	HX_HCSTRING("cairo","\x88","\x30","\x19","\x41"),
	HX_HCSTRING("fillCommands","\x6b","\xf6","\xc9","\xc2"),
	HX_HCSTRING("fillPattern","\x0d","\x86","\x12","\x35"),
	HX_HCSTRING("fillPatternMatrix","\x2e","\xb8","\xae","\x97"),
	HX_HCSTRING("graphics","\xcb","\xf8","\x67","\x12"),
	HX_HCSTRING("hasFill","\xfd","\xee","\xff","\x12"),
	HX_HCSTRING("hasStroke","\xb2","\x66","\x1d","\x52"),
	HX_HCSTRING("hitTesting","\xbd","\x65","\x48","\x19"),
	HX_HCSTRING("inversePendingMatrix","\x28","\x14","\x8c","\xbb"),
	HX_HCSTRING("pendingMatrix","\xf8","\x9d","\x96","\xb5"),
	HX_HCSTRING("strokeCommands","\xa0","\x98","\x2a","\x67"),
	HX_HCSTRING("strokePattern","\x78","\xe1","\x21","\x7e"),
	HX_HCSTRING("closePath","\x7d","\x65","\x20","\x14"),
	HX_HCSTRING("createGradientPattern","\xa4","\xee","\x44","\xf6"),
	HX_HCSTRING("createImagePattern","\x51","\xbd","\x5d","\xfb"),
	HX_HCSTRING("drawRoundRect","\xee","\xc3","\xaa","\xe2"),
	HX_HCSTRING("endFill","\xfe","\x87","\xe0","\x25"),
	HX_HCSTRING("endStroke","\xf3","\x01","\x17","\x51"),
	HX_HCSTRING("hitTest","\x45","\x60","\x7f","\xe2"),
	HX_HCSTRING("isCCW","\x0d","\x84","\x49","\xc1"),
	HX_HCSTRING("normalizeUVT","\x66","\x09","\x2f","\x47"),
	HX_HCSTRING("playCommands","\xdc","\xae","\xee","\x49"),
	HX_HCSTRING("quadraticCurveTo","\x12","\x48","\xc3","\x82"),
	HX_HCSTRING("render","\x56","\x6b","\x29","\x05"),
	HX_HCSTRING("renderMask","\x62","\x3b","\x60","\xe5"),
	::String(null())
};

void CairoGraphics_obj::__register()
{
	hx::Object *dummy = new CairoGraphics_obj;
	CairoGraphics_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("openfl._internal.renderer.cairo.CairoGraphics","\x72","\x72","\xef","\x3c");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &CairoGraphics_obj::__GetStatic;
	__mClass->mSetStaticField = &CairoGraphics_obj::__SetStatic;
	__mClass->mMarkFunc = CairoGraphics_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(CairoGraphics_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< CairoGraphics_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = CairoGraphics_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = CairoGraphics_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = CairoGraphics_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void CairoGraphics_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_7c423d109b848e15_38_boot)
HXLINE(  38)		SIN45 = ((Float)0.70710678118654752440084436210485);
            	}
{
            	HX_STACKFRAME(&_hx_pos_7c423d109b848e15_39_boot)
HXLINE(  39)		TAN22 = ((Float)0.4142135623730950488016887242097);
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_7c423d109b848e15_46_boot)
HXLINE(  46)		fillCommands =  ::openfl::_internal::renderer::DrawCommandBuffer_obj::__alloc( HX_CTX );
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_7c423d109b848e15_55_boot)
HXLINE(  55)		strokeCommands =  ::openfl::_internal::renderer::DrawCommandBuffer_obj::__alloc( HX_CTX );
            	}
}

} // end namespace openfl
} // end namespace _internal
} // end namespace renderer
} // end namespace cairo
