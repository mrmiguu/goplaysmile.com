// Generated by Haxe 3.4.0
#include <hxcpp.h>

#ifndef INCLUDED_Server
#include <Server.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_ed582805cb4219c2_22_new,"Server","new",0x59340d55,"Server.new","Server.hx",22,0x1acdb3bb)

void Server_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_ed582805cb4219c2_22_new)
HXLINE(  22)		super::__construct();
            	}

Dynamic Server_obj::__CreateEmpty() { return new Server_obj; }

void *Server_obj::_hx_vtable = 0;

Dynamic Server_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Server_obj > _hx_result = new Server_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Server_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x19c29573) {
		if (inClassId<=(int)0x17120186) {
			if (inClassId<=(int)0x0ddfced7) {
				return inClassId==(int)0x00000001 || inClassId==(int)0x0ddfced7;
			} else {
				return inClassId==(int)0x17120186;
			}
		} else {
			return inClassId==(int)0x19c29573;
		}
	} else {
		if (inClassId<=(int)0x1f9085ab) {
			return inClassId==(int)0x1b123bf8 || inClassId==(int)0x1f9085ab;
		} else {
			return inClassId==(int)0x3f2b00af;
		}
	}
}


hx::ObjectPtr< Server_obj > Server_obj::__new() {
	hx::ObjectPtr< Server_obj > __this = new Server_obj();
	__this->__construct();
	return __this;
}

hx::ObjectPtr< Server_obj > Server_obj::__alloc(hx::Ctx *_hx_ctx) {
	Server_obj *__this = (Server_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Server_obj), true, "Server"));
	*(void **)__this = Server_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

Server_obj::Server_obj()
{
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *Server_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *Server_obj_sStaticStorageInfo = 0;
#endif

static void Server_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Server_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Server_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Server_obj::__mClass,"__mClass");
};

#endif

hx::Class Server_obj::__mClass;

void Server_obj::__register()
{
	hx::Object *dummy = new Server_obj;
	Server_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("Server","\xe3","\xbe","\xcb","\xa2");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Server_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< Server_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Server_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Server_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Server_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

