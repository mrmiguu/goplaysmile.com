// Generated by Haxe 3.4.0
#include <hxcpp.h>

#ifndef INCLUDED_ApplicationMain
#include <ApplicationMain.h>
#endif
#ifndef INCLUDED_DefaultAssetLibrary
#include <DefaultAssetLibrary.h>
#endif
#ifndef INCLUDED_Reflect
#include <Reflect.h>
#endif
#ifndef INCLUDED_Sys
#include <Sys.h>
#endif
#ifndef INCLUDED___ASSET__OPENFL__assets_etc_lucon_ttf
#include <__ASSET__OPENFL__assets_etc_lucon_ttf.h>
#endif
#ifndef INCLUDED___ASSET__assets_etc_lucon_ttf
#include <__ASSET__assets_etc_lucon_ttf.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_Resource
#include <haxe/Resource.h>
#endif
#ifndef INCLUDED_haxe_Timer
#include <haxe/Timer.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif
#ifndef INCLUDED_haxe_io_Bytes
#include <haxe/io/Bytes.h>
#endif
#ifndef INCLUDED_haxe_io_Path
#include <haxe/io/Path.h>
#endif
#ifndef INCLUDED_lime_text_Font
#include <lime/text/Font.h>
#endif
#ifndef INCLUDED_lime_utils_AssetLibrary
#include <lime/utils/AssetLibrary.h>
#endif
#ifndef INCLUDED_lime_utils_AssetManifest
#include <lime/utils/AssetManifest.h>
#endif
#ifndef INCLUDED_lime_utils_Log
#include <lime/utils/Log.h>
#endif
#ifndef INCLUDED_openfl_text_Font
#include <openfl/text/Font.h>
#endif
#ifndef INCLUDED_sys_FileSystem
#include <sys/FileSystem.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_fffeb3ab353ef1d6_27_new,"DefaultAssetLibrary","new",0xbc37e41e,"DefaultAssetLibrary.new","DefaultAssetLibrary.hx",27,0x0fc48912)
HX_LOCAL_STACK_FRAME(_hx_pos_fffeb3ab353ef1d6_367_loadManifest,"DefaultAssetLibrary","loadManifest",0x6f596c77,"DefaultAssetLibrary.loadManifest","DefaultAssetLibrary.hx",367,0x0fc48912)

void DefaultAssetLibrary_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_fffeb3ab353ef1d6_27_new)
HXLINE(  27)		 ::DefaultAssetLibrary _gthis = hx::ObjectPtr<OBJ_>(this);
HXLINE(  29)		super::__construct();
HXLINE(  31)		bool _hx_tmp;
HXDLIN(  31)		if (hx::IsNotNull( ::ApplicationMain_obj::config )) {
HXLINE(  31)			_hx_tmp = ::Reflect_obj::hasField(::ApplicationMain_obj::config,HX_("assetsPrefix",75,5a,70,e4));
            		}
            		else {
HXLINE(  31)			_hx_tmp = false;
            		}
HXDLIN(  31)		if (_hx_tmp) {
HXLINE(  33)			this->rootPath = ( (::String)(::Reflect_obj::field(::ApplicationMain_obj::config,HX_("assetsPrefix",75,5a,70,e4))) );
            		}
HXLINE(  37)		if (hx::IsNull( this->rootPath )) {
HXLINE(  42)			this->rootPath = (::sys::FileSystem_obj::absolutePath(::haxe::io::Path_obj::directory(::Sys_obj::programPath())) + HX_("/",2f,00,00,00));
            		}
HXLINE(  50)		::openfl::text::Font_obj::registerFont(hx::ClassOf< ::__ASSET__OPENFL__assets_etc_lucon_ttf >());
HXLINE(  54)		bool useManifest = false;
HXLINE(  55)		::String id = HX_("assets/cars/b.png",79,cc,24,69);
HXLINE(  56)		useManifest = true;
HXLINE(  57)		id = HX_("assets/cars/g.png",fe,b2,25,4a);
HXDLIN(  57)		useManifest = true;
HXLINE(  58)		id = HX_("assets/cars/i.png",00,dc,f2,70);
HXDLIN(  58)		useManifest = true;
HXLINE(  59)		id = HX_("assets/cars/o.png",06,57,5a,e5);
HXDLIN(  59)		useManifest = true;
HXLINE(  60)		id = HX_("assets/cars/r.png",89,14,8e,9f);
HXDLIN(  60)		useManifest = true;
HXLINE(  61)		id = HX_("assets/cars/v.png",8d,66,28,ed);
HXDLIN(  61)		useManifest = true;
HXLINE(  62)		id = HX_("assets/cars/vroom0.flac",d3,03,a3,14);
HXDLIN(  62)		useManifest = true;
HXLINE(  63)		id = HX_("assets/cars/vroom0.ogg",84,0a,97,49);
HXDLIN(  63)		useManifest = true;
HXLINE(  64)		id = HX_("assets/cars/vroom1.flac",32,60,fe,7a);
HXDLIN(  64)		useManifest = true;
HXLINE(  65)		id = HX_("assets/cars/vroom1.ogg",05,9f,fd,dc);
HXDLIN(  65)		useManifest = true;
HXLINE(  66)		id = HX_("assets/cars/vroom2.flac",91,bc,59,e1);
HXDLIN(  66)		useManifest = true;
HXLINE(  67)		id = HX_("assets/cars/vroom2.ogg",86,33,64,70);
HXDLIN(  67)		useManifest = true;
HXLINE(  68)		id = HX_("assets/cars/y.png",10,24,5c,a7);
HXDLIN(  68)		useManifest = true;
HXLINE(  69)		id = HX_("assets/dests/arrival.flac",c7,3c,82,5b);
HXDLIN(  69)		useManifest = true;
HXLINE(  70)		id = HX_("assets/dests/arrival.ogg",10,2c,15,91);
HXDLIN(  70)		useManifest = true;
HXLINE(  71)		id = HX_("assets/dests/b.png",d3,07,f2,91);
HXDLIN(  71)		useManifest = true;
HXLINE(  72)		id = HX_("assets/dests/g.png",58,ee,f2,72);
HXDLIN(  72)		useManifest = true;
HXLINE(  73)		id = HX_("assets/dests/i.png",5a,17,c0,99);
HXDLIN(  73)		useManifest = true;
HXLINE(  74)		id = HX_("assets/dests/o.png",60,92,27,0e);
HXDLIN(  74)		useManifest = true;
HXLINE(  75)		id = HX_("assets/dests/r.png",e3,4f,5b,c8);
HXDLIN(  75)		useManifest = true;
HXLINE(  76)		id = HX_("assets/dests/v.png",e7,a1,f5,15);
HXDLIN(  76)		useManifest = true;
HXLINE(  77)		id = HX_("assets/dests/y.png",6a,5f,29,d0);
HXDLIN(  77)		useManifest = true;
HXLINE(  78)		id = HX_("assets/die/dice.png",5d,94,d9,bd);
HXDLIN(  78)		useManifest = true;
HXLINE(  79)		id = HX_("assets/die/dice_dark.png",ae,69,e9,25);
HXDLIN(  79)		useManifest = true;
HXLINE(  80)		id = HX_("assets/die/land0.flac",cc,e7,09,94);
HXDLIN(  80)		useManifest = true;
HXLINE(  81)		id = HX_("assets/die/land0.ogg",ab,88,be,8c);
HXDLIN(  81)		useManifest = true;
HXLINE(  82)		id = HX_("assets/die/land1.flac",2b,44,65,fa);
HXDLIN(  82)		useManifest = true;
HXLINE(  83)		id = HX_("assets/die/land1.ogg",2c,1d,25,20);
HXDLIN(  83)		useManifest = true;
HXLINE(  84)		id = HX_("assets/die/land2.flac",8a,a0,c0,60);
HXDLIN(  84)		useManifest = true;
HXLINE(  85)		id = HX_("assets/die/land2.ogg",ad,b1,8b,b3);
HXDLIN(  85)		useManifest = true;
HXLINE(  86)		id = HX_("assets/die/lift0.flac",ec,0a,59,fb);
HXDLIN(  86)		useManifest = true;
HXLINE(  87)		id = HX_("assets/die/lift0.ogg",8b,29,5c,6f);
HXDLIN(  87)		useManifest = true;
HXLINE(  88)		id = HX_("assets/die/lift1.flac",4b,67,b4,61);
HXDLIN(  88)		useManifest = true;
HXLINE(  89)		id = HX_("assets/die/lift1.ogg",0c,be,c2,02);
HXDLIN(  89)		useManifest = true;
HXLINE(  90)		id = HX_("assets/die/lift2.flac",aa,c3,0f,c8);
HXDLIN(  90)		useManifest = true;
HXLINE(  91)		id = HX_("assets/die/lift2.ogg",8d,52,29,96);
HXDLIN(  91)		useManifest = true;
HXLINE(  92)		id = HX_("assets/die/paperdoll.png",f7,04,99,03);
HXDLIN(  92)		useManifest = true;
HXLINE(  93)		id = HX_("assets/die/paperdoll_bedlights.png",16,06,1a,91);
HXDLIN(  93)		useManifest = true;
HXLINE(  94)		id = HX_("assets/die/paperdoll_gedlights.png",9b,79,dc,ed);
HXDLIN(  94)		useManifest = true;
HXLINE(  95)		id = HX_("assets/die/paperdoll_headlights.png",1b,ae,7a,d9);
HXDLIN(  95)		useManifest = true;
HXLINE(  96)		id = HX_("assets/die/paperdoll_nedlights.png",22,e8,1f,d6);
HXDLIN(  96)		useManifest = true;
HXLINE(  97)		id = HX_("assets/die/paperdoll_pedlights.png",24,e3,a0,61);
HXDLIN(  97)		useManifest = true;
HXLINE(  98)		id = HX_("assets/die/paperdoll_redlights.png",26,de,21,ed);
HXDLIN(  98)		useManifest = true;
HXLINE(  99)		id = HX_("assets/die/paperdoll_wedlights.png",ab,51,e4,49);
HXDLIN(  99)		useManifest = true;
HXLINE( 100)		id = HX_("assets/etc/app.png",55,60,ca,dd);
HXDLIN( 100)		useManifest = true;
HXLINE( 101)		id = HX_("assets/etc/bg.png",a7,99,30,71);
HXDLIN( 101)		useManifest = true;
HXLINE( 102)		id = HX_("assets/etc/bgm.ogg",e2,11,f5,b3);
HXDLIN( 102)		useManifest = true;
HXLINE( 103)		id = HX_("assets/etc/bg_dark.png",24,f8,68,56);
HXDLIN( 103)		useManifest = true;
HXLINE( 104)		id = HX_("assets/etc/card.png",f2,5a,a8,ee);
HXDLIN( 104)		useManifest = true;
HXLINE( 105)		id = HX_("assets/etc/err.flac",38,ad,57,31);
HXDLIN( 105)		useManifest = true;
HXLINE( 106)		id = HX_("assets/etc/err.ogg",bf,54,a3,77);
HXDLIN( 106)		useManifest = true;
HXLINE( 107)		id = HX_("assets/etc/gps.png",5e,e6,7e,91);
HXDLIN( 107)		useManifest = true;
HXLINE( 108)		id = HX_("assets/etc/icon.png",1b,ad,f1,27);
HXDLIN( 108)		useManifest = true;
HXLINE( 109)		id = HX_("assets/etc/info.png",90,1c,8e,eb);
HXDLIN( 109)		useManifest = true;
HXLINE( 110)		id = HX_("assets/etc/lucon.ttf",8a,7b,49,6b);
HXLINE( 111)		this->classTypes->set(id,hx::ClassOf< ::__ASSET__assets_etc_lucon_ttf >());
HXLINE( 112)		this->types->set(id,HX_("FONT",cf,25,81,2e));
HXLINE( 115)		id = HX_("assets/etc/map.pdn",21,7f,71,d1);
HXDLIN( 115)		useManifest = true;
HXLINE( 116)		id = HX_("assets/etc/map.png",d0,87,71,d1);
HXDLIN( 116)		useManifest = true;
HXLINE( 117)		id = HX_("assets/etc/pop.flac",8c,77,0b,5d);
HXDLIN( 117)		useManifest = true;
HXLINE( 118)		id = HX_("assets/etc/pop0.ogg",c7,f9,d6,5e);
HXDLIN( 118)		useManifest = true;
HXLINE( 119)		id = HX_("assets/etc/pop1.ogg",48,8e,3d,f2);
HXDLIN( 119)		useManifest = true;
HXLINE( 120)		id = HX_("assets/etc/pop2.ogg",c9,22,a4,85);
HXDLIN( 120)		useManifest = true;
HXLINE( 121)		id = HX_("assets/etc/push.flac",f5,b4,3f,cf);
HXDLIN( 121)		useManifest = true;
HXLINE( 122)		id = HX_("assets/etc/push0.ogg",30,37,0b,d1);
HXDLIN( 122)		useManifest = true;
HXLINE( 123)		id = HX_("assets/etc/push1.ogg",b1,cb,71,64);
HXDLIN( 123)		useManifest = true;
HXLINE( 124)		id = HX_("assets/etc/push2.ogg",32,60,d8,f7);
HXDLIN( 124)		useManifest = true;
HXLINE( 125)		id = HX_("assets/etc/slide.ogg",cb,18,12,92);
HXDLIN( 125)		useManifest = true;
HXLINE( 126)		id = HX_("assets/field/l.png",86,46,51,94);
HXDLIN( 126)		useManifest = true;
HXLINE( 127)		id = HX_("assets/field/m.png",07,db,b7,27);
HXDLIN( 127)		useManifest = true;
HXLINE( 128)		id = HX_("assets/field/r.png",8c,c1,b8,08);
HXDLIN( 128)		useManifest = true;
HXLINE( 129)		id = HX_("assets/keys/blank_down.pdn",a8,3d,aa,4f);
HXDLIN( 129)		useManifest = true;
HXLINE( 130)		id = HX_("assets/keys/blank_down.png",57,46,aa,4f);
HXDLIN( 130)		useManifest = true;
HXLINE( 131)		id = HX_("assets/keys/blank_up.pdn",a1,59,86,ee);
HXDLIN( 131)		useManifest = true;
HXLINE( 132)		id = HX_("assets/keys/blank_up.png",50,62,86,ee);
HXDLIN( 132)		useManifest = true;
HXLINE( 133)		id = HX_("assets/key_undo/blank_down.pdn",98,03,5e,a6);
HXDLIN( 133)		useManifest = true;
HXLINE( 134)		id = HX_("assets/key_undo/blank_down.png",47,0c,5e,a6);
HXDLIN( 134)		useManifest = true;
HXLINE( 135)		id = HX_("assets/key_undo/blank_up.pdn",91,c3,97,0e);
HXDLIN( 135)		useManifest = true;
HXLINE( 136)		id = HX_("assets/key_undo/blank_up.png",40,cc,97,0e);
HXDLIN( 136)		useManifest = true;
HXLINE( 137)		id = HX_("assets/login/login_down.png",e5,38,01,9a);
HXDLIN( 137)		useManifest = true;
HXLINE( 138)		id = HX_("assets/login/login_up.png",5e,f5,07,e7);
HXDLIN( 138)		useManifest = true;
HXLINE( 139)		id = HX_("assets/login/pass.png",7e,de,7b,a4);
HXDLIN( 139)		useManifest = true;
HXLINE( 140)		id = HX_("assets/lvl/exp.png",df,ad,21,28);
HXDLIN( 140)		useManifest = true;
HXLINE( 141)		id = HX_("assets/lvl/fireworks.png",0e,72,d3,53);
HXDLIN( 141)		useManifest = true;
HXLINE( 142)		id = HX_("assets/lvl/up.ogg",15,01,45,23);
HXDLIN( 142)		useManifest = true;
HXLINE( 143)		id = HX_("assets/maps/2d_anaheim.png",cf,32,a4,b7);
HXDLIN( 143)		useManifest = true;
HXLINE( 144)		id = HX_("assets/maps/2d_azusa.png",84,0f,39,86);
HXDLIN( 144)		useManifest = true;
HXLINE( 145)		id = HX_("assets/maps/2d_bellflower.png",9a,86,6e,ab);
HXDLIN( 145)		useManifest = true;
HXLINE( 146)		id = HX_("assets/maps/2d_beverlyhills.png",a1,08,a6,7c);
HXDLIN( 146)		useManifest = true;
HXLINE( 147)		id = HX_("assets/maps/2d_brea.png",e8,b9,a0,ba);
HXDLIN( 147)		useManifest = true;
HXLINE( 148)		id = HX_("assets/maps/2d_buenapark.png",e9,d6,fd,1c);
HXDLIN( 148)		useManifest = true;
HXLINE( 149)		id = HX_("assets/maps/2d_burbank.png",55,fb,0a,58);
HXDLIN( 149)		useManifest = true;
HXLINE( 150)		id = HX_("assets/maps/2d_calpoly.png",b4,b5,43,8b);
HXDLIN( 150)		useManifest = true;
HXLINE( 151)		id = HX_("assets/maps/2d_carson.png",ba,7f,24,6e);
HXDLIN( 151)		useManifest = true;
HXLINE( 152)		id = HX_("assets/maps/2d_chinohills.png",09,c7,ff,31);
HXDLIN( 152)		useManifest = true;
HXLINE( 153)		id = HX_("assets/maps/2d_cityofindustry.png",dc,8e,7a,42);
HXDLIN( 153)		useManifest = true;
HXLINE( 154)		id = HX_("assets/maps/2d_claremont.png",8d,3f,3c,8c);
HXDLIN( 154)		useManifest = true;
HXLINE( 155)		id = HX_("assets/maps/2d_commerce.png",17,23,b5,14);
HXDLIN( 155)		useManifest = true;
HXLINE( 156)		id = HX_("assets/maps/2d_compton.png",3e,b2,dc,8f);
HXDLIN( 156)		useManifest = true;
HXLINE( 157)		id = HX_("assets/maps/2d_corona.png",d8,7b,71,6e);
HXDLIN( 157)		useManifest = true;
HXLINE( 158)		id = HX_("assets/maps/2d_culvercity.png",d0,81,d0,16);
HXDLIN( 158)		useManifest = true;
HXLINE( 159)		id = HX_("assets/maps/2d_cypress.png",e7,e2,aa,08);
HXDLIN( 159)		useManifest = true;
HXLINE( 160)		id = HX_("assets/maps/2d_diamondbar.png",fb,ca,15,e6);
HXDLIN( 160)		useManifest = true;
HXLINE( 161)		id = HX_("assets/maps/2d_dominguezhills.png",c4,fd,b8,21);
HXDLIN( 161)		useManifest = true;
HXLINE( 162)		id = HX_("assets/maps/2d_elmonte.png",d0,7b,34,ef);
HXDLIN( 162)		useManifest = true;
HXLINE( 163)		id = HX_("assets/maps/2d_fountainvalley.png",8f,74,0d,57);
HXDLIN( 163)		useManifest = true;
HXLINE( 164)		id = HX_("assets/maps/2d_fullerton.png",f1,cc,e3,94);
HXDLIN( 164)		useManifest = true;
HXLINE( 165)		id = HX_("assets/maps/2d_gardena.png",66,a8,4a,2d);
HXDLIN( 165)		useManifest = true;
HXLINE( 166)		id = HX_("assets/maps/2d_gardengrove.png",18,0a,e2,ca);
HXDLIN( 166)		useManifest = true;
HXLINE( 167)		id = HX_("assets/maps/2d_glendale.png",40,2c,cc,06);
HXDLIN( 167)		useManifest = true;
HXLINE( 168)		id = HX_("assets/maps/2d_hawthorne.png",86,f4,6d,6e);
HXDLIN( 168)		useManifest = true;
HXLINE( 169)		id = HX_("assets/maps/2d_highlandpark.png",f3,a6,af,d3);
HXDLIN( 169)		useManifest = true;
HXLINE( 170)		id = HX_("assets/maps/2d_huntingtonbeach.png",f9,b6,ec,15);
HXDLIN( 170)		useManifest = true;
HXLINE( 171)		id = HX_("assets/maps/2d_lacanada.png",ff,af,a6,4a);
HXDLIN( 171)		useManifest = true;
HXLINE( 172)		id = HX_("assets/maps/2d_lakeviewterrace.png",18,c9,f2,a0);
HXDLIN( 172)		useManifest = true;
HXLINE( 173)		id = HX_("assets/maps/2d_lax.png",bd,69,99,8b);
HXDLIN( 173)		useManifest = true;
HXLINE( 174)		id = HX_("assets/maps/2d_longbeach.png",01,05,07,36);
HXDLIN( 174)		useManifest = true;
HXLINE( 175)		id = HX_("assets/maps/2d_losangeles.png",db,c9,04,b4);
HXDLIN( 175)		useManifest = true;
HXLINE( 176)		id = HX_("assets/maps/2d_lynwood.png",48,8f,fc,6b);
HXDLIN( 176)		useManifest = true;
HXLINE( 177)		id = HX_("assets/maps/2d_montereypark.png",ef,e2,01,1b);
HXDLIN( 177)		useManifest = true;
HXLINE( 178)		id = HX_("assets/maps/2d_northlongbeach.png",fe,d0,64,1a);
HXDLIN( 178)		useManifest = true;
HXLINE( 179)		id = HX_("assets/maps/2d_orange.png",ea,15,ef,75);
HXDLIN( 179)		useManifest = true;
HXLINE( 180)		id = HX_("assets/maps/2d_palosverdes.png",a8,19,2b,1b);
HXDLIN( 180)		useManifest = true;
HXLINE( 181)		id = HX_("assets/maps/2d_panoramacity.png",1c,49,21,33);
HXDLIN( 181)		useManifest = true;
HXLINE( 182)		id = HX_("assets/maps/2d_pasadena.png",ef,e5,3a,c0);
HXDLIN( 182)		useManifest = true;
HXLINE( 183)		id = HX_("assets/maps/2d_pomona.png",90,57,3d,14);
HXDLIN( 183)		useManifest = true;
HXLINE( 184)		id = HX_("assets/maps/2d_rosemead.png",86,52,ff,25);
HXDLIN( 184)		useManifest = true;
HXLINE( 185)		id = HX_("assets/maps/2d_sandimas.png",56,c3,13,d2);
HXDLIN( 185)		useManifest = true;
HXLINE( 186)		id = HX_("assets/maps/2d_sanfernando.png",6d,6e,94,92);
HXDLIN( 186)		useManifest = true;
HXLINE( 187)		id = HX_("assets/maps/2d_sanpedro.png",68,8a,d0,d8);
HXDLIN( 187)		useManifest = true;
HXLINE( 188)		id = HX_("assets/maps/2d_santaana.png",23,71,02,1a);
HXDLIN( 188)		useManifest = true;
HXLINE( 189)		id = HX_("assets/maps/2d_santaclarita.png",cb,12,87,51);
HXDLIN( 189)		useManifest = true;
HXLINE( 190)		id = HX_("assets/maps/2d_santafesprings.png",76,5c,cb,0f);
HXDLIN( 190)		useManifest = true;
HXLINE( 191)		id = HX_("assets/maps/2d_santamonica.png",22,d0,bc,da);
HXDLIN( 191)		useManifest = true;
HXLINE( 192)		id = HX_("assets/maps/2d_southelmonte.png",45,26,3f,ed);
HXDLIN( 192)		useManifest = true;
HXLINE( 193)		id = HX_("assets/maps/2d_studiocity.png",bd,2e,52,c4);
HXDLIN( 193)		useManifest = true;
HXLINE( 194)		id = HX_("assets/maps/2d_sunland.png",51,dc,34,cf);
HXDLIN( 194)		useManifest = true;
HXLINE( 195)		id = HX_("assets/maps/2d_torrance.png",86,2b,77,c7);
HXDLIN( 195)		useManifest = true;
HXLINE( 196)		id = HX_("assets/maps/2d_usc.png",9f,e6,dc,1c);
HXDLIN( 196)		useManifest = true;
HXLINE( 197)		id = HX_("assets/maps/2d_vannuys.png",9e,97,00,07);
HXDLIN( 197)		useManifest = true;
HXLINE( 198)		id = HX_("assets/maps/2d_watts.png",43,47,07,ab);
HXDLIN( 198)		useManifest = true;
HXLINE( 199)		id = HX_("assets/maps/2d_westcovina.png",3d,8d,65,c8);
HXDLIN( 199)		useManifest = true;
HXLINE( 200)		id = HX_("assets/maps/2d_westminster.png",eb,b8,63,4a);
HXDLIN( 200)		useManifest = true;
HXLINE( 201)		id = HX_("assets/maps/2d_yorbalinda.png",8f,e2,42,a5);
HXDLIN( 201)		useManifest = true;
HXLINE( 202)		id = HX_("assets/maps/3d_anaheim.png",2e,86,51,7a);
HXDLIN( 202)		useManifest = true;
HXLINE( 203)		id = HX_("assets/maps/3d_anaheim_dark.png",3d,42,9e,6c);
HXDLIN( 203)		useManifest = true;
HXLINE( 204)		id = HX_("assets/maps/3d_azusa.png",23,7d,f8,c7);
HXDLIN( 204)		useManifest = true;
HXLINE( 205)		id = HX_("assets/maps/3d_azusa_dark.png",28,f3,6a,a5);
HXDLIN( 205)		useManifest = true;
HXLINE( 206)		id = HX_("assets/maps/3d_bellflower.png",9b,58,62,2e);
HXDLIN( 206)		useManifest = true;
HXLINE( 207)		id = HX_("assets/maps/3d_bellflower_dark.png",b0,84,3a,85);
HXDLIN( 207)		useManifest = true;
HXLINE( 208)		id = HX_("assets/maps/3d_beverlyhills.png",e2,1c,b3,81);
HXDLIN( 208)		useManifest = true;
HXLINE( 209)		id = HX_("assets/maps/3d_beverlyhills_dark.png",09,df,f9,85);
HXDLIN( 209)		useManifest = true;
HXLINE( 210)		id = HX_("assets/maps/3d_brea.png",29,25,7f,3b);
HXDLIN( 210)		useManifest = true;
HXLINE( 211)		id = HX_("assets/maps/3d_brea_dark.png",62,75,e7,06);
HXDLIN( 211)		useManifest = true;
HXLINE( 212)		id = HX_("assets/maps/3d_buenapark.png",08,00,2e,e4);
HXDLIN( 212)		useManifest = true;
HXLINE( 213)		id = HX_("assets/maps/3d_buenapark_dark.png",23,d2,b7,1d);
HXDLIN( 213)		useManifest = true;
HXLINE( 214)		id = HX_("assets/maps/3d_burbank.png",b4,4e,b8,1a);
HXDLIN( 214)		useManifest = true;
HXLINE( 215)		id = HX_("assets/maps/3d_burbank_dark.png",f7,d3,74,8e);
HXDLIN( 215)		useManifest = true;
HXLINE( 216)		id = HX_("assets/maps/3d_calpoly.png",13,09,f1,4d);
HXDLIN( 216)		useManifest = true;
HXLINE( 217)		id = HX_("assets/maps/3d_calpoly_dark.png",38,21,41,0d);
HXDLIN( 217)		useManifest = true;
HXLINE( 218)		id = HX_("assets/maps/3d_carson.png",3b,fd,e4,b3);
HXDLIN( 218)		useManifest = true;
HXLINE( 219)		id = HX_("assets/maps/3d_carson_dark.png",10,1c,bf,48);
HXDLIN( 219)		useManifest = true;
HXLINE( 220)		id = HX_("assets/maps/3d_chinohills.png",0a,99,f3,b4);
HXDLIN( 220)		useManifest = true;
HXLINE( 221)		id = HX_("assets/maps/3d_chinohills_dark.png",e1,51,be,c9);
HXDLIN( 221)		useManifest = true;
HXLINE( 222)		id = HX_("assets/maps/3d_cityofindustry.png",5d,f5,25,74);
HXDLIN( 222)		useManifest = true;
HXLINE( 223)		id = HX_("assets/maps/3d_cityofindustry_dark.png",ae,68,1d,ba);
HXDLIN( 223)		useManifest = true;
HXLINE( 224)		id = HX_("assets/maps/3d_claremont.png",ac,68,6c,53);
HXDLIN( 224)		useManifest = true;
HXLINE( 225)		id = HX_("assets/maps/3d_claremont_dark.png",ff,96,c7,5d);
HXDLIN( 225)		useManifest = true;
HXLINE( 226)		id = HX_("assets/maps/3d_commerce.png",d8,c2,b0,a9);
HXDLIN( 226)		useManifest = true;
HXLINE( 227)		id = HX_("assets/maps/3d_commerce_dark.png",53,dd,30,87);
HXDLIN( 227)		useManifest = true;
HXLINE( 228)		id = HX_("assets/maps/3d_compton.png",9d,05,8a,52);
HXDLIN( 228)		useManifest = true;
HXLINE( 229)		id = HX_("assets/maps/3d_compton_dark.png",6e,70,d6,7d);
HXDLIN( 229)		useManifest = true;
HXLINE( 230)		id = HX_("assets/maps/3d_corona.png",59,f9,31,b4);
HXDLIN( 230)		useManifest = true;
HXLINE( 231)		id = HX_("assets/maps/3d_corona_dark.png",32,73,95,a2);
HXDLIN( 231)		useManifest = true;
HXLINE( 232)		id = HX_("assets/maps/3d_culvercity.png",d1,53,c4,99);
HXDLIN( 232)		useManifest = true;
HXLINE( 233)		id = HX_("assets/maps/3d_culvercity_dark.png",ba,25,10,65);
HXDLIN( 233)		useManifest = true;
HXLINE( 234)		id = HX_("assets/maps/3d_cypress.png",46,36,58,cb);
HXDLIN( 234)		useManifest = true;
HXLINE( 235)		id = HX_("assets/maps/3d_cypress_dark.png",25,3b,ea,0d);
HXDLIN( 235)		useManifest = true;
HXLINE( 236)		id = HX_("assets/maps/3d_diamondbar.png",fc,9c,09,69);
HXDLIN( 236)		useManifest = true;
HXLINE( 237)		id = HX_("assets/maps/3d_diamondbar_dark.png",af,c0,5a,5a);
HXDLIN( 237)		useManifest = true;
HXLINE( 238)		id = HX_("assets/maps/3d_dominguezhills.png",45,64,64,53);
HXDLIN( 238)		useManifest = true;
HXLINE( 239)		id = HX_("assets/maps/3d_dominguezhills_dark.png",c6,f0,9b,de);
HXDLIN( 239)		useManifest = true;
HXLINE( 240)		id = HX_("assets/maps/3d_elmonte.png",2f,cf,e1,b1);
HXDLIN( 240)		useManifest = true;
HXLINE( 241)		id = HX_("assets/maps/3d_elmonte_dark.png",9c,b5,c0,3e);
HXDLIN( 241)		useManifest = true;
HXLINE( 242)		id = HX_("assets/maps/3d_fountainvalley.png",10,db,b8,88);
HXDLIN( 242)		useManifest = true;
HXLINE( 243)		id = HX_("assets/maps/3d_fountainvalley_dark.png",1b,fa,cd,1f);
HXDLIN( 243)		useManifest = true;
HXLINE( 244)		id = HX_("assets/maps/3d_fullerton.png",10,f6,13,5c);
HXDLIN( 244)		useManifest = true;
HXLINE( 245)		id = HX_("assets/maps/3d_fullerton_dark.png",1b,ff,50,e5);
HXDLIN( 245)		useManifest = true;
HXLINE( 246)		id = HX_("assets/maps/3d_gardena.png",c5,fb,f7,ef);
HXDLIN( 246)		useManifest = true;
HXLINE( 247)		id = HX_("assets/maps/3d_gardena_dark.png",46,29,53,de);
HXDLIN( 247)		useManifest = true;
HXLINE( 248)		id = HX_("assets/maps/3d_gardengrove.png",f7,f8,45,dd);
HXDLIN( 248)		useManifest = true;
HXLINE( 249)		id = HX_("assets/maps/3d_gardengrove_dark.png",d4,16,08,e2);
HXDLIN( 249)		useManifest = true;
HXLINE( 250)		id = HX_("assets/maps/3d_glendale.png",01,cc,c7,9b);
HXDLIN( 250)		useManifest = true;
HXLINE( 251)		id = HX_("assets/maps/3d_glendale_dark.png",8a,ff,9a,3c);
HXDLIN( 251)		useManifest = true;
HXLINE( 252)		id = HX_("assets/maps/3d_hawthorne.png",a5,1d,9e,35);
HXDLIN( 252)		useManifest = true;
HXLINE( 253)		id = HX_("assets/maps/3d_hawthorne_dark.png",66,3b,c6,b5);
HXDLIN( 253)		useManifest = true;
HXLINE( 254)		id = HX_("assets/maps/3d_highlandpark.png",34,bb,bc,d8);
HXDLIN( 254)		useManifest = true;
HXLINE( 255)		id = HX_("assets/maps/3d_highlandpark_dark.png",77,17,97,3a);
HXDLIN( 255)		useManifest = true;
HXLINE( 256)		id = HX_("assets/maps/3d_huntingtonbeach.png",58,01,3b,5a);
HXDLIN( 256)		useManifest = true;
HXLINE( 257)		id = HX_("assets/maps/3d_huntingtonbeach_dark.png",d3,0e,74,f0);
HXDLIN( 257)		useManifest = true;
HXLINE( 258)		id = HX_("assets/maps/3d_lacanada.png",c0,4f,a2,df);
HXDLIN( 258)		useManifest = true;
HXLINE( 259)		id = HX_("assets/maps/3d_lacanada_dark.png",6b,87,ef,e0);
HXDLIN( 259)		useManifest = true;
HXLINE( 260)		id = HX_("assets/maps/3d_lakeviewterrace.png",77,13,41,e5);
HXDLIN( 260)		useManifest = true;
HXLINE( 261)		id = HX_("assets/maps/3d_lakeviewterrace_dark.png",54,ec,3c,81);
HXDLIN( 261)		useManifest = true;
HXLINE( 262)		id = HX_("assets/maps/3d_lax.png",9c,e1,e3,4b);
HXDLIN( 262)		useManifest = true;
HXLINE( 263)		id = HX_("assets/maps/3d_lax_dark.png",0f,b8,e3,1e);
HXDLIN( 263)		useManifest = true;
HXLINE( 264)		id = HX_("assets/maps/3d_longbeach.png",20,2e,37,fd);
HXDLIN( 264)		useManifest = true;
HXLINE( 265)		id = HX_("assets/maps/3d_longbeach_dark.png",0b,8d,38,a7);
HXDLIN( 265)		useManifest = true;
HXLINE( 266)		id = HX_("assets/maps/3d_losangeles.png",dc,9b,f8,36);
HXDLIN( 266)		useManifest = true;
HXLINE( 267)		id = HX_("assets/maps/3d_losangeles_dark.png",cf,d5,43,83);
HXDLIN( 267)		useManifest = true;
HXLINE( 268)		id = HX_("assets/maps/3d_lynwood.png",a7,e2,a9,2e);
HXDLIN( 268)		useManifest = true;
HXLINE( 269)		id = HX_("assets/maps/3d_lynwood_dark.png",24,0f,a7,2f);
HXDLIN( 269)		useManifest = true;
HXLINE( 270)		id = HX_("assets/maps/3d_montereypark.png",30,f7,0e,20);
HXDLIN( 270)		useManifest = true;
HXLINE( 271)		id = HX_("assets/maps/3d_montereypark_dark.png",fb,e9,3d,fa);
HXDLIN( 271)		useManifest = true;
HXLINE( 272)		id = HX_("assets/maps/3d_northlongbeach.png",7f,37,10,4c);
HXDLIN( 272)		useManifest = true;
HXLINE( 273)		id = HX_("assets/maps/3d_northlongbeach_dark.png",4c,2b,e6,17);
HXDLIN( 273)		useManifest = true;
HXLINE( 274)		id = HX_("assets/maps/3d_orange.png",6b,93,af,bb);
HXDLIN( 274)		useManifest = true;
HXLINE( 275)		id = HX_("assets/maps/3d_orange_dark.png",e0,17,f6,7d);
HXDLIN( 275)		useManifest = true;
HXLINE( 276)		id = HX_("assets/maps/3d_palosverdes.png",87,08,8f,2d);
HXDLIN( 276)		useManifest = true;
HXLINE( 277)		id = HX_("assets/maps/3d_palosverdes_dark.png",44,9d,ec,d6);
HXDLIN( 277)		useManifest = true;
HXLINE( 278)		id = HX_("assets/maps/3d_panoramacity.png",5d,5d,2e,38);
HXDLIN( 278)		useManifest = true;
HXLINE( 279)		id = HX_("assets/maps/3d_panoramacity_dark.png",ae,00,9c,76);
HXDLIN( 279)		useManifest = true;
HXLINE( 280)		id = HX_("assets/maps/3d_pasadena.png",b0,85,36,55);
HXDLIN( 280)		useManifest = true;
HXLINE( 281)		id = HX_("assets/maps/3d_pasadena_dark.png",7b,cb,a1,92);
HXDLIN( 281)		useManifest = true;
HXLINE( 282)		id = HX_("assets/maps/3d_pomona.png",11,d5,fd,59);
HXDLIN( 282)		useManifest = true;
HXLINE( 283)		id = HX_("assets/maps/3d_pomona_dark.png",7a,1c,9a,d6);
HXDLIN( 283)		useManifest = true;
HXLINE( 284)		id = HX_("assets/maps/3d_rosemead.png",47,f2,fa,ba);
HXDLIN( 284)		useManifest = true;
HXLINE( 285)		id = HX_("assets/maps/3d_rosemead_dark.png",84,5b,39,b1);
HXDLIN( 285)		useManifest = true;
HXLINE( 286)		id = HX_("assets/maps/3d_sandimas.png",17,63,0f,67);
HXDLIN( 286)		useManifest = true;
HXLINE( 287)		id = HX_("assets/maps/3d_sandimas_dark.png",b4,f8,49,df);
HXDLIN( 287)		useManifest = true;
HXLINE( 288)		id = HX_("assets/maps/3d_sanfernando.png",4c,5d,f8,a4);
HXDLIN( 288)		useManifest = true;
HXLINE( 289)		id = HX_("assets/maps/3d_sanfernando_dark.png",5f,de,80,a1);
HXDLIN( 289)		useManifest = true;
HXLINE( 290)		id = HX_("assets/maps/3d_sanpedro.png",29,2a,cc,6d);
HXDLIN( 290)		useManifest = true;
HXLINE( 291)		id = HX_("assets/maps/3d_sanpedro_dark.png",62,50,48,26);
HXDLIN( 291)		useManifest = true;
HXLINE( 292)		id = HX_("assets/maps/3d_santaana.png",e4,10,fe,ae);
HXDLIN( 292)		useManifest = true;
HXLINE( 293)		id = HX_("assets/maps/3d_santaana_dark.png",c7,23,31,cd);
HXDLIN( 293)		useManifest = true;
HXLINE( 294)		id = HX_("assets/maps/3d_santaclarita.png",0c,27,94,56);
HXDLIN( 294)		useManifest = true;
HXLINE( 295)		id = HX_("assets/maps/3d_santaclarita_dark.png",9f,bc,11,be);
HXDLIN( 295)		useManifest = true;
HXLINE( 296)		id = HX_("assets/maps/3d_santafesprings.png",f7,c2,76,41);
HXDLIN( 296)		useManifest = true;
HXLINE( 297)		id = HX_("assets/maps/3d_santafesprings_dark.png",d4,0c,bb,66);
HXDLIN( 297)		useManifest = true;
HXLINE( 298)		id = HX_("assets/maps/3d_santamonica.png",01,bf,20,ed);
HXDLIN( 298)		useManifest = true;
HXLINE( 299)		id = HX_("assets/maps/3d_santamonica_dark.png",8a,2c,f1,c4);
HXDLIN( 299)		useManifest = true;
HXLINE( 300)		id = HX_("assets/maps/3d_southelmonte.png",86,3a,4c,f2);
HXDLIN( 300)		useManifest = true;
HXLINE( 301)		id = HX_("assets/maps/3d_southelmonte_dark.png",e5,ce,be,36);
HXDLIN( 301)		useManifest = true;
HXLINE( 302)		id = HX_("assets/maps/3d_studiocity.png",be,00,46,47);
HXDLIN( 302)		useManifest = true;
HXLINE( 303)		id = HX_("assets/maps/3d_studiocity_dark.png",ad,7d,93,48);
HXDLIN( 303)		useManifest = true;
HXLINE( 304)		id = HX_("assets/maps/3d_sunland.png",b0,2f,e2,91);
HXDLIN( 304)		useManifest = true;
HXLINE( 305)		id = HX_("assets/maps/3d_sunland_dark.png",7b,e1,6d,35);
HXDLIN( 305)		useManifest = true;
HXLINE( 306)		id = HX_("assets/maps/3d_torrance.png",47,cb,72,5c);
HXDLIN( 306)		useManifest = true;
HXLINE( 307)		id = HX_("assets/maps/3d_torrance_dark.png",84,e2,ae,d1);
HXDLIN( 307)		useManifest = true;
HXLINE( 308)		id = HX_("assets/maps/3d_usc.png",7e,5e,27,dd);
HXDLIN( 308)		useManifest = true;
HXLINE( 309)		id = HX_("assets/maps/3d_usc_dark.png",ed,47,26,b8);
HXDLIN( 309)		useManifest = true;
HXLINE( 310)		id = HX_("assets/maps/3d_vannuys.png",fd,ea,ad,c9);
HXDLIN( 310)		useManifest = true;
HXLINE( 311)		id = HX_("assets/maps/3d_vannuys_dark.png",0e,0f,b7,63);
HXDLIN( 311)		useManifest = true;
HXLINE( 312)		id = HX_("assets/maps/3d_watts.png",e2,b4,c6,ec);
HXDLIN( 312)		useManifest = true;
HXLINE( 313)		id = HX_("assets/maps/3d_watts_dark.png",09,47,df,54);
HXDLIN( 313)		useManifest = true;
HXLINE( 314)		id = HX_("assets/maps/3d_westcovina.png",3e,5f,59,4b);
HXDLIN( 314)		useManifest = true;
HXLINE( 315)		id = HX_("assets/maps/3d_westcovina_dark.png",2d,8f,39,59);
HXDLIN( 315)		useManifest = true;
HXLINE( 316)		id = HX_("assets/maps/3d_westminster.png",ca,a7,c7,5c);
HXDLIN( 316)		useManifest = true;
HXLINE( 317)		id = HX_("assets/maps/3d_westminster_dark.png",21,cb,fc,04);
HXDLIN( 317)		useManifest = true;
HXLINE( 318)		id = HX_("assets/maps/3d_yorbalinda.png",90,b4,36,28);
HXDLIN( 318)		useManifest = true;
HXLINE( 319)		id = HX_("assets/maps/3d_yorbalinda_dark.png",9b,b0,2b,da);
HXDLIN( 319)		useManifest = true;
HXLINE( 320)		id = HX_("assets/roller/c1.png",62,f2,98,38);
HXDLIN( 320)		useManifest = true;
HXLINE( 321)		id = HX_("assets/roller/card.png",04,33,b9,2f);
HXDLIN( 321)		useManifest = true;
HXLINE( 322)		id = HX_("assets/roller/hwy_template.png",83,8d,76,c1);
HXDLIN( 322)		useManifest = true;
HXLINE( 323)		id = HX_("assets/roller/overlay.png",72,3a,5f,e0);
HXDLIN( 323)		useManifest = true;
HXLINE( 324)		id = HX_("assets/roller/pick.flac",3c,3c,49,68);
HXDLIN( 324)		useManifest = true;
HXLINE( 325)		id = HX_("assets/roller/pick.ogg",3b,92,67,6c);
HXDLIN( 325)		useManifest = true;
HXLINE( 328)		if (useManifest) {
HXLINE( 330)			this->loadManifest();
            		}
            	}

Dynamic DefaultAssetLibrary_obj::__CreateEmpty() { return new DefaultAssetLibrary_obj; }

void *DefaultAssetLibrary_obj::_hx_vtable = 0;

Dynamic DefaultAssetLibrary_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< DefaultAssetLibrary_obj > _hx_result = new DefaultAssetLibrary_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool DefaultAssetLibrary_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x3a783d2c) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x3a783d2c;
	} else {
		return inClassId==(int)0x425552e3;
	}
}

void DefaultAssetLibrary_obj::loadManifest(){
            	HX_STACKFRAME(&_hx_pos_fffeb3ab353ef1d6_367_loadManifest)
HXLINE( 369)		 ::haxe::io::Bytes bytes = ::haxe::Resource_obj::getBytes(HX_("__ASSET_MANIFEST__",fe,d8,3a,3a));
HXLINE( 370)		 ::Dynamic manifest;
HXLINE( 372)		if (hx::IsNotNull( bytes )) {
HXLINE( 374)			 ::lime::utils::AssetManifest manifest1 = ::lime::utils::AssetManifest_obj::fromBytes(bytes);
HXLINE( 375)			manifest1->basePath = this->rootPath;
HXLINE( 376)			this->_hx___fromManifest(manifest1);
            		}
            		else {
HXLINE( 382)			 ::lime::utils::AssetManifest manifest2 = ::lime::utils::AssetManifest_obj::fromFile((this->rootPath + HX_("manifest",af,fb,29,d0)));
HXLINE( 384)			if (hx::IsNotNull( manifest2 )) {
HXLINE( 386)				manifest2->basePath = this->rootPath;
HXLINE( 387)				this->_hx___fromManifest(manifest2);
            			}
            			else {
HXLINE( 391)				::lime::utils::Log_obj::warn(HX_("Could not load asset manifest (bytes was null)",21,51,77,e6),hx::SourceInfo(HX_("DefaultAssetLibrary.hx",12,89,c4,0f),391,HX_("DefaultAssetLibrary",2c,3d,78,3a),HX_("loadManifest",f5,e7,92,89)));
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(DefaultAssetLibrary_obj,loadManifest,(void))


hx::ObjectPtr< DefaultAssetLibrary_obj > DefaultAssetLibrary_obj::__new() {
	hx::ObjectPtr< DefaultAssetLibrary_obj > __this = new DefaultAssetLibrary_obj();
	__this->__construct();
	return __this;
}

hx::ObjectPtr< DefaultAssetLibrary_obj > DefaultAssetLibrary_obj::__alloc(hx::Ctx *_hx_ctx) {
	DefaultAssetLibrary_obj *__this = (DefaultAssetLibrary_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(DefaultAssetLibrary_obj), true, "DefaultAssetLibrary"));
	*(void **)__this = DefaultAssetLibrary_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

DefaultAssetLibrary_obj::DefaultAssetLibrary_obj()
{
}

void DefaultAssetLibrary_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(DefaultAssetLibrary);
	HX_MARK_MEMBER_NAME(lastModified,"lastModified");
	HX_MARK_MEMBER_NAME(rootPath,"rootPath");
	HX_MARK_MEMBER_NAME(timer,"timer");
	 ::lime::utils::AssetLibrary_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void DefaultAssetLibrary_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(lastModified,"lastModified");
	HX_VISIT_MEMBER_NAME(rootPath,"rootPath");
	HX_VISIT_MEMBER_NAME(timer,"timer");
	 ::lime::utils::AssetLibrary_obj::__Visit(HX_VISIT_ARG);
}

hx::Val DefaultAssetLibrary_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"timer") ) { return hx::Val( timer); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"rootPath") ) { return hx::Val( rootPath); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"lastModified") ) { return hx::Val( lastModified); }
		if (HX_FIELD_EQ(inName,"loadManifest") ) { return hx::Val( loadManifest_dyn()); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val DefaultAssetLibrary_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"timer") ) { timer=inValue.Cast<  ::haxe::Timer >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"rootPath") ) { rootPath=inValue.Cast< ::String >(); return inValue; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"lastModified") ) { lastModified=inValue.Cast< Float >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void DefaultAssetLibrary_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("lastModified","\xbf","\xe7","\x59","\x78"));
	outFields->push(HX_HCSTRING("rootPath","\xe7","\xb8","\x88","\xe1"));
	outFields->push(HX_HCSTRING("timer","\xc5","\xbf","\x35","\x10"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo DefaultAssetLibrary_obj_sMemberStorageInfo[] = {
	{hx::fsFloat,(int)offsetof(DefaultAssetLibrary_obj,lastModified),HX_HCSTRING("lastModified","\xbf","\xe7","\x59","\x78")},
	{hx::fsString,(int)offsetof(DefaultAssetLibrary_obj,rootPath),HX_HCSTRING("rootPath","\xe7","\xb8","\x88","\xe1")},
	{hx::fsObject /*::haxe::Timer*/ ,(int)offsetof(DefaultAssetLibrary_obj,timer),HX_HCSTRING("timer","\xc5","\xbf","\x35","\x10")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *DefaultAssetLibrary_obj_sStaticStorageInfo = 0;
#endif

static ::String DefaultAssetLibrary_obj_sMemberFields[] = {
	HX_HCSTRING("lastModified","\xbf","\xe7","\x59","\x78"),
	HX_HCSTRING("rootPath","\xe7","\xb8","\x88","\xe1"),
	HX_HCSTRING("timer","\xc5","\xbf","\x35","\x10"),
	HX_HCSTRING("loadManifest","\xf5","\xe7","\x92","\x89"),
	::String(null()) };

static void DefaultAssetLibrary_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(DefaultAssetLibrary_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void DefaultAssetLibrary_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(DefaultAssetLibrary_obj::__mClass,"__mClass");
};

#endif

hx::Class DefaultAssetLibrary_obj::__mClass;

void DefaultAssetLibrary_obj::__register()
{
	hx::Object *dummy = new DefaultAssetLibrary_obj;
	DefaultAssetLibrary_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("DefaultAssetLibrary","\x2c","\x3d","\x78","\x3a");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = DefaultAssetLibrary_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(DefaultAssetLibrary_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< DefaultAssetLibrary_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = DefaultAssetLibrary_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = DefaultAssetLibrary_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = DefaultAssetLibrary_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

