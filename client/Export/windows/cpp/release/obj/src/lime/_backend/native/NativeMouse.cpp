// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_cpp_Prime
#include <cpp/Prime.h>
#endif
#ifndef INCLUDED_lime__backend_native_NativeMouse
#include <lime/_backend/native/NativeMouse.h>
#endif
#ifndef INCLUDED_lime__backend_native_NativeWindow
#include <lime/_backend/native/NativeWindow.h>
#endif
#ifndef INCLUDED_lime_ui_MouseCursor
#include <lime/ui/MouseCursor.h>
#endif
#ifndef INCLUDED_lime_ui_Window
#include <lime/ui/Window.h>
#endif

namespace lime{
namespace _backend{
namespace native{

void NativeMouse_obj::__construct() { }

Dynamic NativeMouse_obj::__CreateEmpty() { return new NativeMouse_obj; }

hx::ObjectPtr< NativeMouse_obj > NativeMouse_obj::__new()
{
	hx::ObjectPtr< NativeMouse_obj > _hx_result = new NativeMouse_obj();
	_hx_result->__construct();
	return _hx_result;
}

Dynamic NativeMouse_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< NativeMouse_obj > _hx_result = new NativeMouse_obj();
	_hx_result->__construct();
	return _hx_result;
}

::hx::EnumBase NativeMouse_obj::_hx___cursor;

Bool NativeMouse_obj::_hx___hidden;

Bool NativeMouse_obj::_hx___lock;

void NativeMouse_obj::hide(){
            	HX_STACK_FRAME("lime._backend.native.NativeMouse","hide",0xec289e99,"lime._backend.native.NativeMouse.hide","lime/_backend/native/NativeMouse.hx",24,0x1d44ad08)
HXLINE(  24)		Bool _hx_tmp = !(::lime::_backend::native::NativeMouse_obj::_hx___hidden);
HXDLIN(  24)		if (_hx_tmp) {
HXLINE(  26)			::lime::_backend::native::NativeMouse_obj::_hx___hidden = true;
HXLINE(  29)			::lime::_backend::native::NativeMouse_obj::cffi_lime_mouse_hide();
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(NativeMouse_obj,hide,(void))

void NativeMouse_obj::show(){
            	HX_STACK_FRAME("lime._backend.native.NativeMouse","show",0xf36d3ed4,"lime._backend.native.NativeMouse.show","lime/_backend/native/NativeMouse.hx",39,0x1d44ad08)
HXLINE(  39)		Bool _hx_tmp = ::lime::_backend::native::NativeMouse_obj::_hx___hidden;
HXDLIN(  39)		if (_hx_tmp) {
HXLINE(  41)			::lime::_backend::native::NativeMouse_obj::_hx___hidden = false;
HXLINE(  44)			::lime::_backend::native::NativeMouse_obj::cffi_lime_mouse_show();
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(NativeMouse_obj,show,(void))

void NativeMouse_obj::warp(Int x,Int y, ::lime::ui::Window window){
            	HX_STACK_FRAME("lime._backend.native.NativeMouse","warp",0xf60ccc1f,"lime._backend.native.NativeMouse.warp","lime/_backend/native/NativeMouse.hx",55,0x1d44ad08)
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
            	HX_STACK_ARG(window,"window")
HXLINE(  55)		 ::Dynamic window1;
HXDLIN(  55)		Bool _hx_tmp = hx::IsNull( window );
HXDLIN(  55)		if (_hx_tmp) {
HXLINE(  55)			window1 = (int)0;
            		}
            		else {
HXLINE(  55)			window1 = window->backend->handle;
            		}
HXDLIN(  55)		::lime::_backend::native::NativeMouse_obj::cffi_lime_mouse_warp(x,y,hx::DynamicPtr(window1));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(NativeMouse_obj,warp,(void))

::hx::EnumBase NativeMouse_obj::get_cursor(){
            	HX_STACK_FRAME("lime._backend.native.NativeMouse","get_cursor",0x6045e3b6,"lime._backend.native.NativeMouse.get_cursor","lime/_backend/native/NativeMouse.hx",68,0x1d44ad08)
HXLINE(  70)		Bool _hx_tmp = hx::IsNull( ::lime::_backend::native::NativeMouse_obj::_hx___cursor );
HXDLIN(  70)		if (_hx_tmp) {
HXLINE(  70)			return ::lime::ui::MouseCursor_obj::DEFAULT_dyn();
            		}
HXLINE(  71)		return ::lime::_backend::native::NativeMouse_obj::_hx___cursor;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(NativeMouse_obj,get_cursor,return )

::hx::EnumBase NativeMouse_obj::set_cursor(::hx::EnumBase value){
            	HX_STACK_FRAME("lime._backend.native.NativeMouse","set_cursor",0x63c3822a,"lime._backend.native.NativeMouse.set_cursor","lime/_backend/native/NativeMouse.hx",76,0x1d44ad08)
            	HX_STACK_ARG(value,"value")
HXLINE(  78)		if (hx::IsNotEq( ::lime::_backend::native::NativeMouse_obj::_hx___cursor,value )) {
HXLINE(  80)			Bool _hx_tmp = !(::lime::_backend::native::NativeMouse_obj::_hx___hidden);
HXDLIN(  80)			if (_hx_tmp) {
HXLINE(  82)				HX_VAR( Int,type);
HXDLIN(  82)				Int _hx_tmp1 = ( ( ::hx::EnumBase)(value) )->_hx_getIndex();
HXDLIN(  82)				switch((int)(_hx_tmp1)){
            					case (int)0: {
HXLINE(  82)						type = (int)0;
            					}
            					break;
            					case (int)1: {
HXLINE(  82)						type = (int)1;
            					}
            					break;
            					case (int)3: {
HXLINE(  82)						type = (int)3;
            					}
            					break;
            					case (int)4: {
HXLINE(  82)						type = (int)4;
            					}
            					break;
            					case (int)5: {
HXLINE(  82)						type = (int)5;
            					}
            					break;
            					case (int)6: {
HXLINE(  82)						type = (int)6;
            					}
            					break;
            					case (int)7: {
HXLINE(  82)						type = (int)7;
            					}
            					break;
            					case (int)8: {
HXLINE(  82)						type = (int)8;
            					}
            					break;
            					case (int)9: {
HXLINE(  82)						type = (int)9;
            					}
            					break;
            					case (int)10: {
HXLINE(  82)						type = (int)10;
            					}
            					break;
            					case (int)11: {
HXLINE(  82)						type = (int)11;
            					}
            					break;
            					default:{
HXLINE(  82)						type = (int)2;
            					}
            				}
HXLINE( 100)				::lime::_backend::native::NativeMouse_obj::cffi_lime_mouse_set_cursor(type);
            			}
HXLINE( 105)			::lime::_backend::native::NativeMouse_obj::_hx___cursor = value;
            		}
HXLINE( 109)		return ::lime::_backend::native::NativeMouse_obj::_hx___cursor;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(NativeMouse_obj,set_cursor,return )

Bool NativeMouse_obj::get_lock(){
            	HX_STACK_FRAME("lime._backend.native.NativeMouse","get_lock",0xe19bf8cb,"lime._backend.native.NativeMouse.get_lock","lime/_backend/native/NativeMouse.hx",116,0x1d44ad08)
HXLINE( 116)		return ::lime::_backend::native::NativeMouse_obj::_hx___lock;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(NativeMouse_obj,get_lock,return )

Bool NativeMouse_obj::set_lock(Bool value){
            	HX_STACK_FRAME("lime._backend.native.NativeMouse","set_lock",0x8ff9523f,"lime._backend.native.NativeMouse.set_lock","lime/_backend/native/NativeMouse.hx",121,0x1d44ad08)
            	HX_STACK_ARG(value,"value")
HXLINE( 123)		Bool _hx_tmp = (::lime::_backend::native::NativeMouse_obj::_hx___lock != value);
HXDLIN( 123)		if (_hx_tmp) {
HXLINE( 126)			::lime::_backend::native::NativeMouse_obj::cffi_lime_mouse_set_lock(value);
HXLINE( 129)			::lime::_backend::native::NativeMouse_obj::_hx___hidden = value;
HXLINE( 130)			::lime::_backend::native::NativeMouse_obj::_hx___lock = value;
            		}
HXLINE( 134)		return ::lime::_backend::native::NativeMouse_obj::_hx___lock;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(NativeMouse_obj,set_lock,return )

void NativeMouse_obj::lime_mouse_hide(){
            	HX_STACK_FRAME("lime._backend.native.NativeMouse","lime_mouse_hide",0x42e4300f,"lime._backend.native.NativeMouse.lime_mouse_hide","lime/_backend/native/NativeMouse.hx",147,0x1d44ad08)
HXLINE( 147)		::lime::_backend::native::NativeMouse_obj::cffi_lime_mouse_hide();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(NativeMouse_obj,lime_mouse_hide,(void))

void NativeMouse_obj::lime_mouse_set_cursor(Int cursor){
            	HX_STACK_FRAME("lime._backend.native.NativeMouse","lime_mouse_set_cursor",0xcbe69020,"lime._backend.native.NativeMouse.lime_mouse_set_cursor","lime/_backend/native/NativeMouse.hx",148,0x1d44ad08)
            	HX_STACK_ARG(cursor,"cursor")
HXLINE( 148)		::lime::_backend::native::NativeMouse_obj::cffi_lime_mouse_set_cursor(cursor);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(NativeMouse_obj,lime_mouse_set_cursor,(void))

void NativeMouse_obj::lime_mouse_set_lock(Bool lock){
            	HX_STACK_FRAME("lime._backend.native.NativeMouse","lime_mouse_set_lock",0x6b99d6b5,"lime._backend.native.NativeMouse.lime_mouse_set_lock","lime/_backend/native/NativeMouse.hx",149,0x1d44ad08)
            	HX_STACK_ARG(lock,"lock")
HXLINE( 149)		::lime::_backend::native::NativeMouse_obj::cffi_lime_mouse_set_lock(lock);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(NativeMouse_obj,lime_mouse_set_lock,(void))

void NativeMouse_obj::lime_mouse_show(){
            	HX_STACK_FRAME("lime._backend.native.NativeMouse","lime_mouse_show",0x4a28d04a,"lime._backend.native.NativeMouse.lime_mouse_show","lime/_backend/native/NativeMouse.hx",150,0x1d44ad08)
HXLINE( 150)		::lime::_backend::native::NativeMouse_obj::cffi_lime_mouse_show();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(NativeMouse_obj,lime_mouse_show,(void))

void NativeMouse_obj::lime_mouse_warp(Int x,Int y, ::Dynamic window){
            	HX_STACK_FRAME("lime._backend.native.NativeMouse","lime_mouse_warp",0x4cc85d95,"lime._backend.native.NativeMouse.lime_mouse_warp","lime/_backend/native/NativeMouse.hx",151,0x1d44ad08)
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
            	HX_STACK_ARG(window,"window")
HXLINE( 151)		::lime::_backend::native::NativeMouse_obj::cffi_lime_mouse_warp(x,y,hx::DynamicPtr(window));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(NativeMouse_obj,lime_mouse_warp,(void))

::cpp::Function<  void() > NativeMouse_obj::cffi_lime_mouse_hide;

::cpp::Function<  void(Int) > NativeMouse_obj::cffi_lime_mouse_set_cursor;

::cpp::Function<  void(Bool) > NativeMouse_obj::cffi_lime_mouse_set_lock;

::cpp::Function<  void() > NativeMouse_obj::cffi_lime_mouse_show;

::cpp::Function<  void(Int,Int, ::hx::Object *) > NativeMouse_obj::cffi_lime_mouse_warp;


NativeMouse_obj::NativeMouse_obj()
{
}

bool NativeMouse_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"hide") ) { outValue = hide_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"show") ) { outValue = show_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"warp") ) { outValue = warp_dyn(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"__lock") ) { outValue = _hx___lock; return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"__cursor") ) { outValue = _hx___cursor; return true; }
		if (HX_FIELD_EQ(inName,"__hidden") ) { outValue = _hx___hidden; return true; }
		if (HX_FIELD_EQ(inName,"get_lock") ) { outValue = get_lock_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_lock") ) { outValue = set_lock_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"get_cursor") ) { outValue = get_cursor_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_cursor") ) { outValue = set_cursor_dyn(); return true; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"lime_mouse_hide") ) { outValue = lime_mouse_hide_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_mouse_show") ) { outValue = lime_mouse_show_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_mouse_warp") ) { outValue = lime_mouse_warp_dyn(); return true; }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"lime_mouse_set_lock") ) { outValue = lime_mouse_set_lock_dyn(); return true; }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"cffi_lime_mouse_hide") ) { outValue = cffi_lime_mouse_hide; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_mouse_show") ) { outValue = cffi_lime_mouse_show; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_mouse_warp") ) { outValue = cffi_lime_mouse_warp; return true; }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"lime_mouse_set_cursor") ) { outValue = lime_mouse_set_cursor_dyn(); return true; }
		break;
	case 24:
		if (HX_FIELD_EQ(inName,"cffi_lime_mouse_set_lock") ) { outValue = cffi_lime_mouse_set_lock; return true; }
		break;
	case 26:
		if (HX_FIELD_EQ(inName,"cffi_lime_mouse_set_cursor") ) { outValue = cffi_lime_mouse_set_cursor; return true; }
	}
	return false;
}

bool NativeMouse_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"__lock") ) { _hx___lock=ioValue.Cast< Bool >(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"__cursor") ) { _hx___cursor=ioValue.Cast< ::hx::EnumBase >(); return true; }
		if (HX_FIELD_EQ(inName,"__hidden") ) { _hx___hidden=ioValue.Cast< Bool >(); return true; }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"cffi_lime_mouse_hide") ) { cffi_lime_mouse_hide=ioValue.Cast< ::cpp::Function<  void() > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_mouse_show") ) { cffi_lime_mouse_show=ioValue.Cast< ::cpp::Function<  void() > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_mouse_warp") ) { cffi_lime_mouse_warp=ioValue.Cast< ::cpp::Function<  void(Int,Int, ::hx::Object *) > >(); return true; }
		break;
	case 24:
		if (HX_FIELD_EQ(inName,"cffi_lime_mouse_set_lock") ) { cffi_lime_mouse_set_lock=ioValue.Cast< ::cpp::Function<  void(Bool) > >(); return true; }
		break;
	case 26:
		if (HX_FIELD_EQ(inName,"cffi_lime_mouse_set_cursor") ) { cffi_lime_mouse_set_cursor=ioValue.Cast< ::cpp::Function<  void(Int) > >(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *NativeMouse_obj_sMemberStorageInfo = 0;
static hx::StaticInfo NativeMouse_obj_sStaticStorageInfo[] = {
	{hx::fsObject /*::lime::ui::MouseCursor*/ ,(void *) &NativeMouse_obj::_hx___cursor,HX_HCSTRING("__cursor","\xf6","\xf9","\x17","\xe7")},
	{hx::fsBool,(void *) &NativeMouse_obj::_hx___hidden,HX_HCSTRING("__hidden","\x8a","\x6a","\xc5","\xf4")},
	{hx::fsBool,(void *) &NativeMouse_obj::_hx___lock,HX_HCSTRING("__lock","\x0b","\xff","\xaf","\xf6")},
	{hx::fsObject /*Dynamic*/ ,(void *) &NativeMouse_obj::cffi_lime_mouse_hide,HX_HCSTRING("cffi_lime_mouse_hide","\xad","\x35","\xd6","\x3c")},
	{hx::fsObject /*Dynamic*/ ,(void *) &NativeMouse_obj::cffi_lime_mouse_set_cursor,HX_HCSTRING("cffi_lime_mouse_set_cursor","\x3e","\xa0","\xe9","\x5c")},
	{hx::fsObject /*Dynamic*/ ,(void *) &NativeMouse_obj::cffi_lime_mouse_set_lock,HX_HCSTRING("cffi_lime_mouse_set_lock","\x53","\x03","\xc2","\x40")},
	{hx::fsObject /*Dynamic*/ ,(void *) &NativeMouse_obj::cffi_lime_mouse_show,HX_HCSTRING("cffi_lime_mouse_show","\xe8","\xd5","\x1a","\x44")},
	{hx::fsObject /*Dynamic*/ ,(void *) &NativeMouse_obj::cffi_lime_mouse_warp,HX_HCSTRING("cffi_lime_mouse_warp","\x33","\x63","\xba","\x46")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static void NativeMouse_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(NativeMouse_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(NativeMouse_obj::_hx___cursor,"__cursor");
	HX_MARK_MEMBER_NAME(NativeMouse_obj::_hx___hidden,"__hidden");
	HX_MARK_MEMBER_NAME(NativeMouse_obj::_hx___lock,"__lock");
	HX_MARK_MEMBER_NAME(NativeMouse_obj::cffi_lime_mouse_hide,"cffi_lime_mouse_hide");
	HX_MARK_MEMBER_NAME(NativeMouse_obj::cffi_lime_mouse_set_cursor,"cffi_lime_mouse_set_cursor");
	HX_MARK_MEMBER_NAME(NativeMouse_obj::cffi_lime_mouse_set_lock,"cffi_lime_mouse_set_lock");
	HX_MARK_MEMBER_NAME(NativeMouse_obj::cffi_lime_mouse_show,"cffi_lime_mouse_show");
	HX_MARK_MEMBER_NAME(NativeMouse_obj::cffi_lime_mouse_warp,"cffi_lime_mouse_warp");
};

#ifdef HXCPP_VISIT_ALLOCS
static void NativeMouse_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(NativeMouse_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(NativeMouse_obj::_hx___cursor,"__cursor");
	HX_VISIT_MEMBER_NAME(NativeMouse_obj::_hx___hidden,"__hidden");
	HX_VISIT_MEMBER_NAME(NativeMouse_obj::_hx___lock,"__lock");
	HX_VISIT_MEMBER_NAME(NativeMouse_obj::cffi_lime_mouse_hide,"cffi_lime_mouse_hide");
	HX_VISIT_MEMBER_NAME(NativeMouse_obj::cffi_lime_mouse_set_cursor,"cffi_lime_mouse_set_cursor");
	HX_VISIT_MEMBER_NAME(NativeMouse_obj::cffi_lime_mouse_set_lock,"cffi_lime_mouse_set_lock");
	HX_VISIT_MEMBER_NAME(NativeMouse_obj::cffi_lime_mouse_show,"cffi_lime_mouse_show");
	HX_VISIT_MEMBER_NAME(NativeMouse_obj::cffi_lime_mouse_warp,"cffi_lime_mouse_warp");
};

#endif

hx::Class NativeMouse_obj::__mClass;

static ::String NativeMouse_obj_sStaticFields[] = {
	HX_HCSTRING("__cursor","\xf6","\xf9","\x17","\xe7"),
	HX_HCSTRING("__hidden","\x8a","\x6a","\xc5","\xf4"),
	HX_HCSTRING("__lock","\x0b","\xff","\xaf","\xf6"),
	HX_HCSTRING("hide","\xc2","\x34","\x0e","\x45"),
	HX_HCSTRING("show","\xfd","\xd4","\x52","\x4c"),
	HX_HCSTRING("warp","\x48","\x62","\xf2","\x4e"),
	HX_HCSTRING("get_cursor","\x9f","\xfe","\x6f","\x2f"),
	HX_HCSTRING("set_cursor","\x13","\x9d","\xed","\x32"),
	HX_HCSTRING("get_lock","\x74","\x57","\x72","\xc7"),
	HX_HCSTRING("set_lock","\xe8","\xb0","\xcf","\x75"),
	HX_HCSTRING("lime_mouse_hide","\x86","\xe8","\x02","\xac"),
	HX_HCSTRING("lime_mouse_set_cursor","\xd7","\x7b","\x59","\xa1"),
	HX_HCSTRING("lime_mouse_set_lock","\xac","\x96","\x23","\xfb"),
	HX_HCSTRING("lime_mouse_show","\xc1","\x88","\x47","\xb3"),
	HX_HCSTRING("lime_mouse_warp","\x0c","\x16","\xe7","\xb5"),
	HX_HCSTRING("cffi_lime_mouse_hide","\xad","\x35","\xd6","\x3c"),
	HX_HCSTRING("cffi_lime_mouse_set_cursor","\x3e","\xa0","\xe9","\x5c"),
	HX_HCSTRING("cffi_lime_mouse_set_lock","\x53","\x03","\xc2","\x40"),
	HX_HCSTRING("cffi_lime_mouse_show","\xe8","\xd5","\x1a","\x44"),
	HX_HCSTRING("cffi_lime_mouse_warp","\x33","\x63","\xba","\x46"),
	::String(null())
};

void NativeMouse_obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("lime._backend.native.NativeMouse","\xf7","\x45","\x60","\xfb");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &NativeMouse_obj::__GetStatic;
	__mClass->mSetStaticField = &NativeMouse_obj::__SetStatic;
	__mClass->mMarkFunc = NativeMouse_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(NativeMouse_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< NativeMouse_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = NativeMouse_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = NativeMouse_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = NativeMouse_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void NativeMouse_obj::__boot()
{
{
            	HX_STACK_FRAME("lime._backend.native.NativeMouse","boot",0xe835ee09,"lime._backend.native.NativeMouse.boot","lime/_backend/native/NativeMouse.hx",147,0x1d44ad08)
HXLINE( 147)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_mouse_hide",86,e8,02,ac),HX_("v",76,00,00,00),false);
HXDLIN( 147)		cffi_lime_mouse_hide = inValue;
            	}
{
            	HX_STACK_FRAME("lime._backend.native.NativeMouse","boot",0xe835ee09,"lime._backend.native.NativeMouse.boot","lime/_backend/native/NativeMouse.hx",148,0x1d44ad08)
HXLINE( 148)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_mouse_set_cursor",d7,7b,59,a1),HX_("iv",ed,5b,00,00),false);
HXDLIN( 148)		cffi_lime_mouse_set_cursor = inValue;
            	}
{
            	HX_STACK_FRAME("lime._backend.native.NativeMouse","boot",0xe835ee09,"lime._backend.native.NativeMouse.boot","lime/_backend/native/NativeMouse.hx",149,0x1d44ad08)
HXLINE( 149)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_mouse_set_lock",ac,96,23,fb),HX_("bv",d4,55,00,00),false);
HXDLIN( 149)		cffi_lime_mouse_set_lock = inValue;
            	}
{
            	HX_STACK_FRAME("lime._backend.native.NativeMouse","boot",0xe835ee09,"lime._backend.native.NativeMouse.boot","lime/_backend/native/NativeMouse.hx",150,0x1d44ad08)
HXLINE( 150)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_mouse_show",c1,88,47,b3),HX_("v",76,00,00,00),false);
HXDLIN( 150)		cffi_lime_mouse_show = inValue;
            	}
{
            	HX_STACK_FRAME("lime._backend.native.NativeMouse","boot",0xe835ee09,"lime._backend.native.NativeMouse.boot","lime/_backend/native/NativeMouse.hx",151,0x1d44ad08)
HXLINE( 151)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_mouse_warp",0c,16,e7,b5),HX_("iiov",07,75,b7,45),false);
HXDLIN( 151)		cffi_lime_mouse_warp = inValue;
            	}
}

} // end namespace lime
} // end namespace _backend
} // end namespace native
