// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_Reflect
#include <Reflect.h>
#endif
#ifndef INCLUDED_cpp_Prime
#include <cpp/Prime.h>
#endif
#ifndef INCLUDED_lime__backend_native_NativeApplication
#include <lime/_backend/native/NativeApplication.h>
#endif
#ifndef INCLUDED_lime__backend_native_NativeWindow
#include <lime/_backend/native/NativeWindow.h>
#endif
#ifndef INCLUDED_lime_app_Application
#include <lime/app/Application.h>
#endif
#ifndef INCLUDED_lime_app_IModule
#include <lime/app/IModule.h>
#endif
#ifndef INCLUDED_lime_app_Module
#include <lime/app/Module.h>
#endif
#ifndef INCLUDED_lime_app__Event_Void_Void
#include <lime/app/_Event_Void_Void.h>
#endif
#ifndef INCLUDED_lime_graphics_Image
#include <lime/graphics/Image.h>
#endif
#ifndef INCLUDED_lime_graphics_ImageBuffer
#include <lime/graphics/ImageBuffer.h>
#endif
#ifndef INCLUDED_lime_system_Display
#include <lime/system/Display.h>
#endif
#ifndef INCLUDED_lime_system_System
#include <lime/system/System.h>
#endif
#ifndef INCLUDED_lime_ui_Window
#include <lime/ui/Window.h>
#endif

namespace lime{
namespace _backend{
namespace native{

void NativeWindow_obj::__construct( ::lime::ui::Window parent){
            	HX_STACK_FRAME("lime._backend.native.NativeWindow","new",0x5ec523d0,"lime._backend.native.NativeWindow.new","lime/_backend/native/NativeWindow.hx",31,0x34b7ce9f)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(parent,"parent")
HXLINE(  31)		this->parent = parent;
            	}

Dynamic NativeWindow_obj::__CreateEmpty() { return new NativeWindow_obj; }

hx::ObjectPtr< NativeWindow_obj > NativeWindow_obj::__new( ::lime::ui::Window parent)
{
	hx::ObjectPtr< NativeWindow_obj > _hx_result = new NativeWindow_obj();
	_hx_result->__construct(parent);
	return _hx_result;
}

Dynamic NativeWindow_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< NativeWindow_obj > _hx_result = new NativeWindow_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

void NativeWindow_obj::alert(::String message,::String title){
            	HX_STACK_FRAME("lime._backend.native.NativeWindow","alert",0xfd8f66cc,"lime._backend.native.NativeWindow.alert","lime/_backend/native/NativeWindow.hx",38,0x34b7ce9f)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(message,"message")
            	HX_STACK_ARG(title,"title")
HXLINE(  38)		Bool _hx_tmp = hx::IsNotNull( this->handle );
HXDLIN(  38)		if (_hx_tmp) {
HXLINE(  41)			 ::Dynamic handle = this->handle;
HXDLIN(  41)			::lime::_backend::native::NativeWindow_obj::cffi_lime_window_alert(hx::DynamicPtr(handle),message,title);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeWindow_obj,alert,(void))

void NativeWindow_obj::close(){
            	HX_STACK_FRAME("lime._backend.native.NativeWindow","close",0x24642728,"lime._backend.native.NativeWindow.close","lime/_backend/native/NativeWindow.hx",49,0x34b7ce9f)
            	HX_STACK_THIS(this)
HXLINE(  51)		Bool _hx_tmp = !(this->closing);
HXDLIN(  51)		if (_hx_tmp) {
HXLINE(  53)			this->closing = true;
HXLINE(  54)			this->parent->onClose->dispatch();
            		}
HXLINE(  58)		Bool _hx_tmp1 = !(this->parent->onClose->canceled);
HXDLIN(  58)		if (_hx_tmp1) {
HXLINE(  60)			Bool _hx_tmp2 = hx::IsNotNull( this->handle );
HXDLIN(  60)			if (_hx_tmp2) {
HXLINE(  63)				{
HXLINE(  63)					 ::Dynamic handle = this->handle;
HXDLIN(  63)					::lime::_backend::native::NativeWindow_obj::cffi_lime_window_close(hx::DynamicPtr(handle));
            				}
HXLINE(  65)				this->handle = null();
            			}
            		}
            		else {
HXLINE(  71)			this->closing = false;
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(NativeWindow_obj,close,(void))

void NativeWindow_obj::create( ::lime::app::Application application){
            	HX_STACK_FRAME("lime._backend.native.NativeWindow","create",0x20fbd98c,"lime._backend.native.NativeWindow.create","lime/_backend/native/NativeWindow.hx",78,0x34b7ce9f)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(application,"application")
HXLINE(  80)		HX_VARI( ::String,title) = HX_("Lime Application",c5,b5,9d,ec);
HXLINE(  81)		HX_VARI( Int,flags) = (int)0;
HXLINE(  83)		Bool _hx_tmp = hx::IsNotNull( this->parent->config );
HXDLIN(  83)		if (_hx_tmp) {
HXLINE(  85)			Bool _hx_tmp1 = ::Reflect_obj::hasField(this->parent->config,HX_("antialiasing",f4,16,b3,48));
HXDLIN(  85)			if (_hx_tmp1) {
HXLINE(  87)				if (hx::IsGreaterEq( this->parent->config->__Field(HX_("antialiasing",f4,16,b3,48),hx::paccDynamic),(int)4 )) {
HXLINE(  89)					flags = (int)96;
            				}
            				else {
HXLINE(  91)					if (hx::IsGreaterEq( this->parent->config->__Field(HX_("antialiasing",f4,16,b3,48),hx::paccDynamic),(int)2 )) {
HXLINE(  93)						flags = (int)32;
            					}
            				}
            			}
HXLINE(  99)			Bool _hx_tmp2;
HXDLIN(  99)			Bool _hx_tmp3 = ::Reflect_obj::hasField(this->parent->config,HX_("allowHighDPI",92,07,a2,b4));
HXDLIN(  99)			if (_hx_tmp3) {
HXLINE(  99)				_hx_tmp2 = this->parent->config->__Field(HX_("allowHighDPI",92,07,a2,b4),hx::paccDynamic);
            			}
            			else {
HXLINE(  99)				_hx_tmp2 = false;
            			}
HXDLIN(  99)			if (_hx_tmp2) {
HXLINE(  99)				hx::OrEq(flags,(int)2048);
            			}
HXLINE( 100)			Bool _hx_tmp4;
HXDLIN( 100)			Bool _hx_tmp5 = ::Reflect_obj::hasField(this->parent->config,HX_("borderless",45,46,71,17));
HXDLIN( 100)			if (_hx_tmp5) {
HXLINE( 100)				_hx_tmp4 = this->parent->config->__Field(HX_("borderless",45,46,71,17),hx::paccDynamic);
            			}
            			else {
HXLINE( 100)				_hx_tmp4 = false;
            			}
HXDLIN( 100)			if (_hx_tmp4) {
HXLINE( 100)				hx::OrEq(flags,(int)2);
            			}
HXLINE( 101)			Bool _hx_tmp6;
HXDLIN( 101)			Bool _hx_tmp7 = ::Reflect_obj::hasField(this->parent->config,HX_("depthBuffer",63,46,9e,52));
HXDLIN( 101)			if (_hx_tmp7) {
HXLINE( 101)				_hx_tmp6 = this->parent->config->__Field(HX_("depthBuffer",63,46,9e,52),hx::paccDynamic);
            			}
            			else {
HXLINE( 101)				_hx_tmp6 = false;
            			}
HXDLIN( 101)			if (_hx_tmp6) {
HXLINE( 101)				hx::OrEq(flags,(int)512);
            			}
HXLINE( 102)			Bool _hx_tmp8;
HXDLIN( 102)			Bool _hx_tmp9 = ::Reflect_obj::hasField(this->parent->config,HX_("fullscreen",3b,3a,b4,f9));
HXDLIN( 102)			if (_hx_tmp9) {
HXLINE( 102)				_hx_tmp8 = this->parent->config->__Field(HX_("fullscreen",3b,3a,b4,f9),hx::paccDynamic);
            			}
            			else {
HXLINE( 102)				_hx_tmp8 = false;
            			}
HXDLIN( 102)			if (_hx_tmp8) {
HXLINE( 102)				hx::OrEq(flags,(int)1);
            			}
HXLINE( 103)			Bool _hx_tmp10;
HXDLIN( 103)			Bool _hx_tmp11 = ::Reflect_obj::hasField(this->parent->config,HX_("hardware",a8,e2,d3,75));
HXDLIN( 103)			if (_hx_tmp11) {
HXLINE( 103)				_hx_tmp10 = this->parent->config->__Field(HX_("hardware",a8,e2,d3,75),hx::paccDynamic);
            			}
            			else {
HXLINE( 103)				_hx_tmp10 = false;
            			}
HXDLIN( 103)			if (_hx_tmp10) {
HXLINE( 103)				hx::OrEq(flags,(int)8);
            			}
HXLINE( 104)			Bool _hx_tmp12;
HXDLIN( 104)			Bool _hx_tmp13 = ::Reflect_obj::hasField(this->parent->config,HX_("hidden",6a,ff,95,4c));
HXDLIN( 104)			if (_hx_tmp13) {
HXLINE( 104)				_hx_tmp12 = this->parent->config->__Field(HX_("hidden",6a,ff,95,4c),hx::paccDynamic);
            			}
            			else {
HXLINE( 104)				_hx_tmp12 = false;
            			}
HXDLIN( 104)			if (_hx_tmp12) {
HXLINE( 104)				hx::OrEq(flags,(int)4096);
            			}
HXLINE( 105)			Bool _hx_tmp14;
HXDLIN( 105)			Bool _hx_tmp15 = ::Reflect_obj::hasField(this->parent->config,HX_("maximized",18,0e,e1,fe));
HXDLIN( 105)			if (_hx_tmp15) {
HXLINE( 105)				_hx_tmp14 = this->parent->config->__Field(HX_("maximized",18,0e,e1,fe),hx::paccDynamic);
            			}
            			else {
HXLINE( 105)				_hx_tmp14 = false;
            			}
HXDLIN( 105)			if (_hx_tmp14) {
HXLINE( 105)				hx::OrEq(flags,(int)16384);
            			}
HXLINE( 106)			Bool _hx_tmp16;
HXDLIN( 106)			Bool _hx_tmp17 = ::Reflect_obj::hasField(this->parent->config,HX_("minimized",86,fb,9d,28));
HXDLIN( 106)			if (_hx_tmp17) {
HXLINE( 106)				_hx_tmp16 = this->parent->config->__Field(HX_("minimized",86,fb,9d,28),hx::paccDynamic);
            			}
            			else {
HXLINE( 106)				_hx_tmp16 = false;
            			}
HXDLIN( 106)			if (_hx_tmp16) {
HXLINE( 106)				hx::OrEq(flags,(int)8192);
            			}
HXLINE( 107)			Bool _hx_tmp18;
HXDLIN( 107)			Bool _hx_tmp19 = ::Reflect_obj::hasField(this->parent->config,HX_("resizable",6b,37,50,a9));
HXDLIN( 107)			if (_hx_tmp19) {
HXLINE( 107)				_hx_tmp18 = this->parent->config->__Field(HX_("resizable",6b,37,50,a9),hx::paccDynamic);
            			}
            			else {
HXLINE( 107)				_hx_tmp18 = false;
            			}
HXDLIN( 107)			if (_hx_tmp18) {
HXLINE( 107)				hx::OrEq(flags,(int)4);
            			}
HXLINE( 108)			Bool _hx_tmp20;
HXDLIN( 108)			Bool _hx_tmp21 = ::Reflect_obj::hasField(this->parent->config,HX_("stencilBuffer",1c,94,39,31));
HXDLIN( 108)			if (_hx_tmp21) {
HXLINE( 108)				_hx_tmp20 = this->parent->config->__Field(HX_("stencilBuffer",1c,94,39,31),hx::paccDynamic);
            			}
            			else {
HXLINE( 108)				_hx_tmp20 = false;
            			}
HXDLIN( 108)			if (_hx_tmp20) {
HXLINE( 108)				hx::OrEq(flags,(int)1024);
            			}
HXLINE( 109)			Bool _hx_tmp22;
HXDLIN( 109)			Bool _hx_tmp23 = ::Reflect_obj::hasField(this->parent->config,HX_("vsync",d1,2d,a8,3d));
HXDLIN( 109)			if (_hx_tmp23) {
HXLINE( 109)				_hx_tmp22 = this->parent->config->__Field(HX_("vsync",d1,2d,a8,3d),hx::paccDynamic);
            			}
            			else {
HXLINE( 109)				_hx_tmp22 = false;
            			}
HXDLIN( 109)			if (_hx_tmp22) {
HXLINE( 109)				hx::OrEq(flags,(int)16);
            			}
HXLINE( 111)			Bool _hx_tmp24 = ::Reflect_obj::hasField(this->parent->config,HX_("title",98,15,3b,10));
HXDLIN( 111)			if (_hx_tmp24) {
HXLINE( 113)				title = ( (::String)(this->parent->config->__Field(HX_("title",98,15,3b,10),hx::paccDynamic)) );
            			}
            		}
HXLINE( 120)		 ::Dynamic application1 = application->backend->handle;
HXDLIN( 120)		Int width = this->parent->_hx___width;
HXDLIN( 120)		Int height = this->parent->_hx___height;
HXDLIN( 120)		 ::hx::Object * inVal = ( ( ::hx::Object *)(::lime::_backend::native::NativeWindow_obj::cffi_lime_window_create(hx::DynamicPtr(application1),width,height,flags,title)) );
HXDLIN( 120)		 ::Dynamic _hx_tmp25 = Dynamic(hx::DynamicPtr(inVal));
HXDLIN( 120)		this->handle = _hx_tmp25;
HXLINE( 122)		Bool _hx_tmp26 = hx::IsNotNull( this->handle );
HXDLIN( 122)		if (_hx_tmp26) {
HXLINE( 124)			 ::Dynamic handle = this->handle;
HXDLIN( 124)			Int _hx_tmp27 = ( (Int)(::lime::_backend::native::NativeWindow_obj::cffi_lime_window_get_width(hx::DynamicPtr(handle))) );
HXDLIN( 124)			this->parent->_hx___width = _hx_tmp27;
HXLINE( 125)			 ::Dynamic handle1 = this->handle;
HXDLIN( 125)			Int _hx_tmp28 = ( (Int)(::lime::_backend::native::NativeWindow_obj::cffi_lime_window_get_height(hx::DynamicPtr(handle1))) );
HXDLIN( 125)			this->parent->_hx___height = _hx_tmp28;
HXLINE( 126)			 ::Dynamic handle2 = this->handle;
HXDLIN( 126)			Int _hx_tmp29 = ( (Int)(::lime::_backend::native::NativeWindow_obj::cffi_lime_window_get_x(hx::DynamicPtr(handle2))) );
HXDLIN( 126)			this->parent->_hx___x = _hx_tmp29;
HXLINE( 127)			 ::Dynamic handle3 = this->handle;
HXDLIN( 127)			Int _hx_tmp30 = ( (Int)(::lime::_backend::native::NativeWindow_obj::cffi_lime_window_get_y(hx::DynamicPtr(handle3))) );
HXDLIN( 127)			this->parent->_hx___y = _hx_tmp30;
HXLINE( 128)			 ::Dynamic handle4 = this->handle;
HXDLIN( 128)			Int _hx_tmp31 = ( (Int)(::lime::_backend::native::NativeWindow_obj::cffi_lime_window_get_id(hx::DynamicPtr(handle4))) );
HXDLIN( 128)			this->parent->id = _hx_tmp31;
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeWindow_obj,create,(void))

void NativeWindow_obj::focus(){
            	HX_STACK_FRAME("lime._backend.native.NativeWindow","focus",0xe08a6f48,"lime._backend.native.NativeWindow.focus","lime/_backend/native/NativeWindow.hx",138,0x34b7ce9f)
            	HX_STACK_THIS(this)
HXLINE( 138)		Bool _hx_tmp = hx::IsNotNull( this->handle );
HXDLIN( 138)		if (_hx_tmp) {
HXLINE( 141)			 ::Dynamic handle = this->handle;
HXDLIN( 141)			::lime::_backend::native::NativeWindow_obj::cffi_lime_window_focus(hx::DynamicPtr(handle));
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(NativeWindow_obj,focus,(void))

 ::lime::_hx_system::Display NativeWindow_obj::getDisplay(){
            	HX_STACK_FRAME("lime._backend.native.NativeWindow","getDisplay",0x2d6caadc,"lime._backend.native.NativeWindow.getDisplay","lime/_backend/native/NativeWindow.hx",149,0x34b7ce9f)
            	HX_STACK_THIS(this)
HXLINE( 151)		Bool _hx_tmp = hx::IsNotNull( this->handle );
HXDLIN( 151)		if (_hx_tmp) {
HXLINE( 153)			 ::Dynamic handle = this->handle;
HXDLIN( 153)			HX_VARI( Int,index) = ( (Int)(::lime::_backend::native::NativeWindow_obj::cffi_lime_window_get_display(hx::DynamicPtr(handle))) );
HXLINE( 155)			if ((index > (int)-1)) {
HXLINE( 157)				return ::lime::_hx_system::System_obj::getDisplay(index);
            			}
            		}
HXLINE( 163)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(NativeWindow_obj,getDisplay,return )

Bool NativeWindow_obj::getEnableTextEvents(){
            	HX_STACK_FRAME("lime._backend.native.NativeWindow","getEnableTextEvents",0x8c63802f,"lime._backend.native.NativeWindow.getEnableTextEvents","lime/_backend/native/NativeWindow.hx",168,0x34b7ce9f)
            	HX_STACK_THIS(this)
HXLINE( 170)		Bool _hx_tmp = hx::IsNotNull( this->handle );
HXDLIN( 170)		if (_hx_tmp) {
HXLINE( 173)			 ::Dynamic handle = this->handle;
HXDLIN( 173)			return ( (Bool)(::lime::_backend::native::NativeWindow_obj::cffi_lime_window_get_enable_text_events(hx::DynamicPtr(handle))) );
            		}
HXLINE( 178)		return false;
            	}


HX_DEFINE_DYNAMIC_FUNC0(NativeWindow_obj,getEnableTextEvents,return )

void NativeWindow_obj::move(Int x,Int y){
            	HX_STACK_FRAME("lime._backend.native.NativeWindow","move",0x8d1891a1,"lime._backend.native.NativeWindow.move","lime/_backend/native/NativeWindow.hx",185,0x34b7ce9f)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
HXLINE( 185)		Bool _hx_tmp = hx::IsNotNull( this->handle );
HXDLIN( 185)		if (_hx_tmp) {
HXLINE( 188)			 ::Dynamic handle = this->handle;
HXDLIN( 188)			::lime::_backend::native::NativeWindow_obj::cffi_lime_window_move(hx::DynamicPtr(handle),x,y);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeWindow_obj,move,(void))

void NativeWindow_obj::resize(Int width,Int height){
            	HX_STACK_FRAME("lime._backend.native.NativeWindow","resize",0xad67cc84,"lime._backend.native.NativeWindow.resize","lime/_backend/native/NativeWindow.hx",198,0x34b7ce9f)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(width,"width")
            	HX_STACK_ARG(height,"height")
HXLINE( 198)		Bool _hx_tmp = hx::IsNotNull( this->handle );
HXDLIN( 198)		if (_hx_tmp) {
HXLINE( 201)			 ::Dynamic handle = this->handle;
HXDLIN( 201)			::lime::_backend::native::NativeWindow_obj::cffi_lime_window_resize(hx::DynamicPtr(handle),width,height);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeWindow_obj,resize,(void))

Bool NativeWindow_obj::setBorderless(Bool value){
            	HX_STACK_FRAME("lime._backend.native.NativeWindow","setBorderless",0x6caf83f7,"lime._backend.native.NativeWindow.setBorderless","lime/_backend/native/NativeWindow.hx",209,0x34b7ce9f)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(value,"value")
HXLINE( 211)		Bool _hx_tmp = hx::IsNotNull( this->handle );
HXDLIN( 211)		if (_hx_tmp) {
HXLINE( 214)			 ::Dynamic handle = this->handle;
HXDLIN( 214)			::lime::_backend::native::NativeWindow_obj::cffi_lime_window_set_borderless(hx::DynamicPtr(handle),value);
            		}
HXLINE( 219)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeWindow_obj,setBorderless,return )

Bool NativeWindow_obj::setEnableTextEvents(Bool value){
            	HX_STACK_FRAME("lime._backend.native.NativeWindow","setEnableTextEvents",0xc900733b,"lime._backend.native.NativeWindow.setEnableTextEvents","lime/_backend/native/NativeWindow.hx",223,0x34b7ce9f)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(value,"value")
HXLINE( 225)		Bool _hx_tmp = hx::IsNotNull( this->handle );
HXDLIN( 225)		if (_hx_tmp) {
HXLINE( 228)			 ::Dynamic handle = this->handle;
HXDLIN( 228)			::lime::_backend::native::NativeWindow_obj::cffi_lime_window_set_enable_text_events(hx::DynamicPtr(handle),value);
            		}
HXLINE( 233)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeWindow_obj,setEnableTextEvents,return )

Bool NativeWindow_obj::setFullscreen(Bool value){
            	HX_STACK_FRAME("lime._backend.native.NativeWindow","setFullscreen",0x4ef277ed,"lime._backend.native.NativeWindow.setFullscreen","lime/_backend/native/NativeWindow.hx",238,0x34b7ce9f)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(value,"value")
HXLINE( 240)		Bool _hx_tmp = hx::IsNotNull( this->handle );
HXDLIN( 240)		if (_hx_tmp) {
HXLINE( 243)			 ::Dynamic handle = this->handle;
HXDLIN( 243)			value = ( (Bool)(::lime::_backend::native::NativeWindow_obj::cffi_lime_window_set_fullscreen(hx::DynamicPtr(handle),value)) );
HXLINE( 246)			 ::Dynamic handle1 = this->handle;
HXDLIN( 246)			Int _hx_tmp1 = ( (Int)(::lime::_backend::native::NativeWindow_obj::cffi_lime_window_get_width(hx::DynamicPtr(handle1))) );
HXDLIN( 246)			this->parent->_hx___width = _hx_tmp1;
HXLINE( 247)			 ::Dynamic handle2 = this->handle;
HXDLIN( 247)			Int _hx_tmp2 = ( (Int)(::lime::_backend::native::NativeWindow_obj::cffi_lime_window_get_height(hx::DynamicPtr(handle2))) );
HXDLIN( 247)			this->parent->_hx___height = _hx_tmp2;
HXLINE( 248)			 ::Dynamic handle3 = this->handle;
HXDLIN( 248)			Int _hx_tmp3 = ( (Int)(::lime::_backend::native::NativeWindow_obj::cffi_lime_window_get_x(hx::DynamicPtr(handle3))) );
HXDLIN( 248)			this->parent->_hx___x = _hx_tmp3;
HXLINE( 249)			 ::Dynamic handle4 = this->handle;
HXDLIN( 249)			Int _hx_tmp4 = ( (Int)(::lime::_backend::native::NativeWindow_obj::cffi_lime_window_get_y(hx::DynamicPtr(handle4))) );
HXDLIN( 249)			this->parent->_hx___y = _hx_tmp4;
HXLINE( 251)			if (value) {
HXLINE( 253)				this->parent->onFullscreen->dispatch();
            			}
            		}
HXLINE( 259)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeWindow_obj,setFullscreen,return )

void NativeWindow_obj::setIcon( ::lime::graphics::Image image){
            	HX_STACK_FRAME("lime._backend.native.NativeWindow","setIcon",0xb52ef3ab,"lime._backend.native.NativeWindow.setIcon","lime/_backend/native/NativeWindow.hx",266,0x34b7ce9f)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(image,"image")
HXLINE( 266)		Bool _hx_tmp = hx::IsNotNull( this->handle );
HXDLIN( 266)		if (_hx_tmp) {
HXLINE( 269)			 ::Dynamic handle = this->handle;
HXDLIN( 269)			 ::hx::Object * _hx_tmp1 = hx::DynamicPtr(handle);
HXDLIN( 269)			::lime::_backend::native::NativeWindow_obj::cffi_lime_window_set_icon(_hx_tmp1,hx::DynamicPtr(image->buffer));
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeWindow_obj,setIcon,(void))

Bool NativeWindow_obj::setMaximized(Bool value){
            	HX_STACK_FRAME("lime._backend.native.NativeWindow","setMaximized",0x34118ca6,"lime._backend.native.NativeWindow.setMaximized","lime/_backend/native/NativeWindow.hx",277,0x34b7ce9f)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(value,"value")
HXLINE( 279)		Bool _hx_tmp = hx::IsNotNull( this->handle );
HXDLIN( 279)		if (_hx_tmp) {
HXLINE( 282)			 ::Dynamic handle = this->handle;
HXDLIN( 282)			return ( (Bool)(::lime::_backend::native::NativeWindow_obj::cffi_lime_window_set_maximized(hx::DynamicPtr(handle),value)) );
            		}
HXLINE( 287)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeWindow_obj,setMaximized,return )

Bool NativeWindow_obj::setMinimized(Bool value){
            	HX_STACK_FRAME("lime._backend.native.NativeWindow","setMinimized",0x5dce7a14,"lime._backend.native.NativeWindow.setMinimized","lime/_backend/native/NativeWindow.hx",292,0x34b7ce9f)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(value,"value")
HXLINE( 294)		Bool _hx_tmp = hx::IsNotNull( this->handle );
HXDLIN( 294)		if (_hx_tmp) {
HXLINE( 297)			 ::Dynamic handle = this->handle;
HXDLIN( 297)			return ( (Bool)(::lime::_backend::native::NativeWindow_obj::cffi_lime_window_set_minimized(hx::DynamicPtr(handle),value)) );
            		}
HXLINE( 302)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeWindow_obj,setMinimized,return )

Bool NativeWindow_obj::setResizable(Bool value){
            	HX_STACK_FRAME("lime._backend.native.NativeWindow","setResizable",0xde80b5f9,"lime._backend.native.NativeWindow.setResizable","lime/_backend/native/NativeWindow.hx",307,0x34b7ce9f)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(value,"value")
HXLINE( 309)		Bool _hx_tmp = hx::IsNotNull( this->handle );
HXDLIN( 309)		if (_hx_tmp) {
HXLINE( 312)			{
HXLINE( 312)				 ::Dynamic handle = this->handle;
HXDLIN( 312)				::lime::_backend::native::NativeWindow_obj::cffi_lime_window_set_resizable(hx::DynamicPtr(handle),value);
            			}
HXLINE( 316)			{
HXLINE( 316)				 ::Dynamic handle1 = this->handle;
HXDLIN( 316)				Bool borderless = !(this->parent->_hx___borderless);
HXDLIN( 316)				::lime::_backend::native::NativeWindow_obj::cffi_lime_window_set_borderless(hx::DynamicPtr(handle1),borderless);
            			}
HXLINE( 317)			{
HXLINE( 317)				 ::Dynamic handle2 = this->handle;
HXDLIN( 317)				Bool borderless1 = this->parent->_hx___borderless;
HXDLIN( 317)				::lime::_backend::native::NativeWindow_obj::cffi_lime_window_set_borderless(hx::DynamicPtr(handle2),borderless1);
            			}
            		}
HXLINE( 322)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeWindow_obj,setResizable,return )

::String NativeWindow_obj::setTitle(::String value){
            	HX_STACK_FRAME("lime._backend.native.NativeWindow","setTitle",0x2d49b526,"lime._backend.native.NativeWindow.setTitle","lime/_backend/native/NativeWindow.hx",326,0x34b7ce9f)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(value,"value")
HXLINE( 328)		Bool _hx_tmp = hx::IsNotNull( this->handle );
HXDLIN( 328)		if (_hx_tmp) {
HXLINE( 331)			 ::Dynamic handle = this->handle;
HXDLIN( 331)			 ::hx::Object * inVal = ( ( ::hx::Object *)(::lime::_backend::native::NativeWindow_obj::cffi_lime_window_set_title(hx::DynamicPtr(handle),value)) );
HXDLIN( 331)			return Dynamic(hx::DynamicPtr(inVal));
            		}
HXLINE( 336)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeWindow_obj,setTitle,return )

void NativeWindow_obj::lime_window_alert( ::Dynamic handle,::String message,::String title){
            	HX_STACK_FRAME("lime._backend.native.NativeWindow","lime_window_alert",0xe6f530a7,"lime._backend.native.NativeWindow.lime_window_alert","lime/_backend/native/NativeWindow.hx",342,0x34b7ce9f)
            	HX_STACK_ARG(handle,"handle")
            	HX_STACK_ARG(message,"message")
            	HX_STACK_ARG(title,"title")
HXLINE( 342)		::lime::_backend::native::NativeWindow_obj::cffi_lime_window_alert(hx::DynamicPtr(handle),message,title);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(NativeWindow_obj,lime_window_alert,(void))

void NativeWindow_obj::lime_window_close( ::Dynamic handle){
            	HX_STACK_FRAME("lime._backend.native.NativeWindow","lime_window_close",0x0dc9f103,"lime._backend.native.NativeWindow.lime_window_close","lime/_backend/native/NativeWindow.hx",343,0x34b7ce9f)
            	HX_STACK_ARG(handle,"handle")
HXLINE( 343)		::lime::_backend::native::NativeWindow_obj::cffi_lime_window_close(hx::DynamicPtr(handle));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(NativeWindow_obj,lime_window_close,(void))

 ::Dynamic NativeWindow_obj::lime_window_create( ::Dynamic application,Int width,Int height,Int flags,::String title){
            	HX_STACK_FRAME("lime._backend.native.NativeWindow","lime_window_create",0x70a6af51,"lime._backend.native.NativeWindow.lime_window_create","lime/_backend/native/NativeWindow.hx",344,0x34b7ce9f)
            	HX_STACK_ARG(application,"application")
            	HX_STACK_ARG(width,"width")
            	HX_STACK_ARG(height,"height")
            	HX_STACK_ARG(flags,"flags")
            	HX_STACK_ARG(title,"title")
HXLINE( 344)		 ::hx::Object * inVal = ( ( ::hx::Object *)(::lime::_backend::native::NativeWindow_obj::cffi_lime_window_create(hx::DynamicPtr(application),width,height,flags,title)) );
HXDLIN( 344)		return Dynamic(hx::DynamicPtr(inVal));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC5(NativeWindow_obj,lime_window_create,return )

void NativeWindow_obj::lime_window_focus( ::Dynamic handle){
            	HX_STACK_FRAME("lime._backend.native.NativeWindow","lime_window_focus",0xc9f03923,"lime._backend.native.NativeWindow.lime_window_focus","lime/_backend/native/NativeWindow.hx",345,0x34b7ce9f)
            	HX_STACK_ARG(handle,"handle")
HXLINE( 345)		::lime::_backend::native::NativeWindow_obj::cffi_lime_window_focus(hx::DynamicPtr(handle));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(NativeWindow_obj,lime_window_focus,(void))

Int NativeWindow_obj::lime_window_get_display( ::Dynamic handle){
            	HX_STACK_FRAME("lime._backend.native.NativeWindow","lime_window_get_display",0xf79dede4,"lime._backend.native.NativeWindow.lime_window_get_display","lime/_backend/native/NativeWindow.hx",346,0x34b7ce9f)
            	HX_STACK_ARG(handle,"handle")
HXLINE( 346)		return ( (Int)(::lime::_backend::native::NativeWindow_obj::cffi_lime_window_get_display(hx::DynamicPtr(handle))) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(NativeWindow_obj,lime_window_get_display,return )

Bool NativeWindow_obj::lime_window_get_enable_text_events( ::Dynamic handle){
            	HX_STACK_FRAME("lime._backend.native.NativeWindow","lime_window_get_enable_text_events",0x611f444d,"lime._backend.native.NativeWindow.lime_window_get_enable_text_events","lime/_backend/native/NativeWindow.hx",347,0x34b7ce9f)
            	HX_STACK_ARG(handle,"handle")
HXLINE( 347)		return ( (Bool)(::lime::_backend::native::NativeWindow_obj::cffi_lime_window_get_enable_text_events(hx::DynamicPtr(handle))) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(NativeWindow_obj,lime_window_get_enable_text_events,return )

Int NativeWindow_obj::lime_window_get_height( ::Dynamic handle){
            	HX_STACK_FRAME("lime._backend.native.NativeWindow","lime_window_get_height",0x49be0e85,"lime._backend.native.NativeWindow.lime_window_get_height","lime/_backend/native/NativeWindow.hx",348,0x34b7ce9f)
            	HX_STACK_ARG(handle,"handle")
HXLINE( 348)		return ( (Int)(::lime::_backend::native::NativeWindow_obj::cffi_lime_window_get_height(hx::DynamicPtr(handle))) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(NativeWindow_obj,lime_window_get_height,return )

Int NativeWindow_obj::lime_window_get_id( ::Dynamic handle){
            	HX_STACK_FRAME("lime._backend.native.NativeWindow","lime_window_get_id",0x97c73b79,"lime._backend.native.NativeWindow.lime_window_get_id","lime/_backend/native/NativeWindow.hx",349,0x34b7ce9f)
            	HX_STACK_ARG(handle,"handle")
HXLINE( 349)		return ( (Int)(::lime::_backend::native::NativeWindow_obj::cffi_lime_window_get_id(hx::DynamicPtr(handle))) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(NativeWindow_obj,lime_window_get_id,return )

Int NativeWindow_obj::lime_window_get_width( ::Dynamic handle){
            	HX_STACK_FRAME("lime._backend.native.NativeWindow","lime_window_get_width",0xa160ed28,"lime._backend.native.NativeWindow.lime_window_get_width","lime/_backend/native/NativeWindow.hx",350,0x34b7ce9f)
            	HX_STACK_ARG(handle,"handle")
HXLINE( 350)		return ( (Int)(::lime::_backend::native::NativeWindow_obj::cffi_lime_window_get_width(hx::DynamicPtr(handle))) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(NativeWindow_obj,lime_window_get_width,return )

Int NativeWindow_obj::lime_window_get_x( ::Dynamic handle){
            	HX_STACK_FRAME("lime._backend.native.NativeWindow","lime_window_get_x",0x56c77e9a,"lime._backend.native.NativeWindow.lime_window_get_x","lime/_backend/native/NativeWindow.hx",351,0x34b7ce9f)
            	HX_STACK_ARG(handle,"handle")
HXLINE( 351)		return ( (Int)(::lime::_backend::native::NativeWindow_obj::cffi_lime_window_get_x(hx::DynamicPtr(handle))) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(NativeWindow_obj,lime_window_get_x,return )

Int NativeWindow_obj::lime_window_get_y( ::Dynamic handle){
            	HX_STACK_FRAME("lime._backend.native.NativeWindow","lime_window_get_y",0x56c77e9b,"lime._backend.native.NativeWindow.lime_window_get_y","lime/_backend/native/NativeWindow.hx",352,0x34b7ce9f)
            	HX_STACK_ARG(handle,"handle")
HXLINE( 352)		return ( (Int)(::lime::_backend::native::NativeWindow_obj::cffi_lime_window_get_y(hx::DynamicPtr(handle))) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(NativeWindow_obj,lime_window_get_y,return )

void NativeWindow_obj::lime_window_move( ::Dynamic handle,Int x,Int y){
            	HX_STACK_FRAME("lime._backend.native.NativeWindow","lime_window_move",0x582ffc26,"lime._backend.native.NativeWindow.lime_window_move","lime/_backend/native/NativeWindow.hx",353,0x34b7ce9f)
            	HX_STACK_ARG(handle,"handle")
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
HXLINE( 353)		::lime::_backend::native::NativeWindow_obj::cffi_lime_window_move(hx::DynamicPtr(handle),x,y);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(NativeWindow_obj,lime_window_move,(void))

void NativeWindow_obj::lime_window_resize( ::Dynamic handle,Int width,Int height){
            	HX_STACK_FRAME("lime._backend.native.NativeWindow","lime_window_resize",0xfd12a249,"lime._backend.native.NativeWindow.lime_window_resize","lime/_backend/native/NativeWindow.hx",354,0x34b7ce9f)
            	HX_STACK_ARG(handle,"handle")
            	HX_STACK_ARG(width,"width")
            	HX_STACK_ARG(height,"height")
HXLINE( 354)		::lime::_backend::native::NativeWindow_obj::cffi_lime_window_resize(hx::DynamicPtr(handle),width,height);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(NativeWindow_obj,lime_window_resize,(void))

Bool NativeWindow_obj::lime_window_set_borderless( ::Dynamic handle,Bool borderless){
            	HX_STACK_FRAME("lime._backend.native.NativeWindow","lime_window_set_borderless",0x80cddc57,"lime._backend.native.NativeWindow.lime_window_set_borderless","lime/_backend/native/NativeWindow.hx",355,0x34b7ce9f)
            	HX_STACK_ARG(handle,"handle")
            	HX_STACK_ARG(borderless,"borderless")
HXLINE( 355)		return ( (Bool)(::lime::_backend::native::NativeWindow_obj::cffi_lime_window_set_borderless(hx::DynamicPtr(handle),borderless)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(NativeWindow_obj,lime_window_set_borderless,return )

void NativeWindow_obj::lime_window_set_enable_text_events( ::Dynamic handle,Bool enabled){
            	HX_STACK_FRAME("lime._backend.native.NativeWindow","lime_window_set_enable_text_events",0x94cac0c1,"lime._backend.native.NativeWindow.lime_window_set_enable_text_events","lime/_backend/native/NativeWindow.hx",356,0x34b7ce9f)
            	HX_STACK_ARG(handle,"handle")
            	HX_STACK_ARG(enabled,"enabled")
HXLINE( 356)		::lime::_backend::native::NativeWindow_obj::cffi_lime_window_set_enable_text_events(hx::DynamicPtr(handle),enabled);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(NativeWindow_obj,lime_window_set_enable_text_events,(void))

Bool NativeWindow_obj::lime_window_set_fullscreen( ::Dynamic handle,Bool fullscreen){
            	HX_STACK_FRAME("lime._backend.native.NativeWindow","lime_window_set_fullscreen",0x6310d04d,"lime._backend.native.NativeWindow.lime_window_set_fullscreen","lime/_backend/native/NativeWindow.hx",357,0x34b7ce9f)
            	HX_STACK_ARG(handle,"handle")
            	HX_STACK_ARG(fullscreen,"fullscreen")
HXLINE( 357)		return ( (Bool)(::lime::_backend::native::NativeWindow_obj::cffi_lime_window_set_fullscreen(hx::DynamicPtr(handle),fullscreen)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(NativeWindow_obj,lime_window_set_fullscreen,return )

void NativeWindow_obj::lime_window_set_icon( ::Dynamic handle, ::Dynamic buffer){
            	HX_STACK_FRAME("lime._backend.native.NativeWindow","lime_window_set_icon",0x3304c40b,"lime._backend.native.NativeWindow.lime_window_set_icon","lime/_backend/native/NativeWindow.hx",358,0x34b7ce9f)
            	HX_STACK_ARG(handle,"handle")
            	HX_STACK_ARG(buffer,"buffer")
HXLINE( 358)		 ::hx::Object * _hx_tmp = hx::DynamicPtr(handle);
HXDLIN( 358)		::lime::_backend::native::NativeWindow_obj::cffi_lime_window_set_icon(_hx_tmp,hx::DynamicPtr(buffer));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(NativeWindow_obj,lime_window_set_icon,(void))

Bool NativeWindow_obj::lime_window_set_maximized( ::Dynamic handle,Bool maximized){
            	HX_STACK_FRAME("lime._backend.native.NativeWindow","lime_window_set_maximized",0x0f6c6046,"lime._backend.native.NativeWindow.lime_window_set_maximized","lime/_backend/native/NativeWindow.hx",359,0x34b7ce9f)
            	HX_STACK_ARG(handle,"handle")
            	HX_STACK_ARG(maximized,"maximized")
HXLINE( 359)		return ( (Bool)(::lime::_backend::native::NativeWindow_obj::cffi_lime_window_set_maximized(hx::DynamicPtr(handle),maximized)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(NativeWindow_obj,lime_window_set_maximized,return )

Bool NativeWindow_obj::lime_window_set_minimized( ::Dynamic handle,Bool minimized){
            	HX_STACK_FRAME("lime._backend.native.NativeWindow","lime_window_set_minimized",0x39294db4,"lime._backend.native.NativeWindow.lime_window_set_minimized","lime/_backend/native/NativeWindow.hx",360,0x34b7ce9f)
            	HX_STACK_ARG(handle,"handle")
            	HX_STACK_ARG(minimized,"minimized")
HXLINE( 360)		return ( (Bool)(::lime::_backend::native::NativeWindow_obj::cffi_lime_window_set_minimized(hx::DynamicPtr(handle),minimized)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(NativeWindow_obj,lime_window_set_minimized,return )

Bool NativeWindow_obj::lime_window_set_resizable( ::Dynamic handle,Bool resizable){
            	HX_STACK_FRAME("lime._backend.native.NativeWindow","lime_window_set_resizable",0xb9db8999,"lime._backend.native.NativeWindow.lime_window_set_resizable","lime/_backend/native/NativeWindow.hx",361,0x34b7ce9f)
            	HX_STACK_ARG(handle,"handle")
            	HX_STACK_ARG(resizable,"resizable")
HXLINE( 361)		return ( (Bool)(::lime::_backend::native::NativeWindow_obj::cffi_lime_window_set_resizable(hx::DynamicPtr(handle),resizable)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(NativeWindow_obj,lime_window_set_resizable,return )

 ::Dynamic NativeWindow_obj::lime_window_set_title( ::Dynamic handle,::String title){
            	HX_STACK_FRAME("lime._backend.native.NativeWindow","lime_window_set_title",0xca8a38c6,"lime._backend.native.NativeWindow.lime_window_set_title","lime/_backend/native/NativeWindow.hx",362,0x34b7ce9f)
            	HX_STACK_ARG(handle,"handle")
            	HX_STACK_ARG(title,"title")
HXLINE( 362)		 ::hx::Object * inVal = ( ( ::hx::Object *)(::lime::_backend::native::NativeWindow_obj::cffi_lime_window_set_title(hx::DynamicPtr(handle),title)) );
HXDLIN( 362)		return Dynamic(hx::DynamicPtr(inVal));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(NativeWindow_obj,lime_window_set_title,return )

::cpp::Function<  void( ::hx::Object *,::String,::String) > NativeWindow_obj::cffi_lime_window_alert;

::cpp::Function<  void( ::hx::Object *) > NativeWindow_obj::cffi_lime_window_close;

::cpp::Function<   ::hx::Object *( ::hx::Object *,Int,Int,Int,::String) > NativeWindow_obj::cffi_lime_window_create;

::cpp::Function<  void( ::hx::Object *) > NativeWindow_obj::cffi_lime_window_focus;

::cpp::Function<  Int( ::hx::Object *) > NativeWindow_obj::cffi_lime_window_get_display;

::cpp::Function<  Bool( ::hx::Object *) > NativeWindow_obj::cffi_lime_window_get_enable_text_events;

::cpp::Function<  Int( ::hx::Object *) > NativeWindow_obj::cffi_lime_window_get_height;

::cpp::Function<  Int( ::hx::Object *) > NativeWindow_obj::cffi_lime_window_get_id;

::cpp::Function<  Int( ::hx::Object *) > NativeWindow_obj::cffi_lime_window_get_width;

::cpp::Function<  Int( ::hx::Object *) > NativeWindow_obj::cffi_lime_window_get_x;

::cpp::Function<  Int( ::hx::Object *) > NativeWindow_obj::cffi_lime_window_get_y;

::cpp::Function<  void( ::hx::Object *,Int,Int) > NativeWindow_obj::cffi_lime_window_move;

::cpp::Function<  void( ::hx::Object *,Int,Int) > NativeWindow_obj::cffi_lime_window_resize;

::cpp::Function<  Bool( ::hx::Object *,Bool) > NativeWindow_obj::cffi_lime_window_set_borderless;

::cpp::Function<  void( ::hx::Object *,Bool) > NativeWindow_obj::cffi_lime_window_set_enable_text_events;

::cpp::Function<  Bool( ::hx::Object *,Bool) > NativeWindow_obj::cffi_lime_window_set_fullscreen;

::cpp::Function<  void( ::hx::Object *, ::hx::Object *) > NativeWindow_obj::cffi_lime_window_set_icon;

::cpp::Function<  Bool( ::hx::Object *,Bool) > NativeWindow_obj::cffi_lime_window_set_maximized;

::cpp::Function<  Bool( ::hx::Object *,Bool) > NativeWindow_obj::cffi_lime_window_set_minimized;

::cpp::Function<  Bool( ::hx::Object *,Bool) > NativeWindow_obj::cffi_lime_window_set_resizable;

::cpp::Function<   ::hx::Object *( ::hx::Object *,::String) > NativeWindow_obj::cffi_lime_window_set_title;


NativeWindow_obj::NativeWindow_obj()
{
}

void NativeWindow_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(NativeWindow);
	HX_MARK_MEMBER_NAME(handle,"handle");
	HX_MARK_MEMBER_NAME(closing,"closing");
	HX_MARK_MEMBER_NAME(parent,"parent");
	HX_MARK_END_CLASS();
}

void NativeWindow_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(handle,"handle");
	HX_VISIT_MEMBER_NAME(closing,"closing");
	HX_VISIT_MEMBER_NAME(parent,"parent");
}

hx::Val NativeWindow_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"move") ) { return hx::Val( move_dyn()); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"alert") ) { return hx::Val( alert_dyn()); }
		if (HX_FIELD_EQ(inName,"close") ) { return hx::Val( close_dyn()); }
		if (HX_FIELD_EQ(inName,"focus") ) { return hx::Val( focus_dyn()); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"handle") ) { return hx::Val( handle); }
		if (HX_FIELD_EQ(inName,"parent") ) { return hx::Val( parent); }
		if (HX_FIELD_EQ(inName,"create") ) { return hx::Val( create_dyn()); }
		if (HX_FIELD_EQ(inName,"resize") ) { return hx::Val( resize_dyn()); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"closing") ) { return hx::Val( closing); }
		if (HX_FIELD_EQ(inName,"setIcon") ) { return hx::Val( setIcon_dyn()); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"setTitle") ) { return hx::Val( setTitle_dyn()); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"getDisplay") ) { return hx::Val( getDisplay_dyn()); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"setMaximized") ) { return hx::Val( setMaximized_dyn()); }
		if (HX_FIELD_EQ(inName,"setMinimized") ) { return hx::Val( setMinimized_dyn()); }
		if (HX_FIELD_EQ(inName,"setResizable") ) { return hx::Val( setResizable_dyn()); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"setBorderless") ) { return hx::Val( setBorderless_dyn()); }
		if (HX_FIELD_EQ(inName,"setFullscreen") ) { return hx::Val( setFullscreen_dyn()); }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"getEnableTextEvents") ) { return hx::Val( getEnableTextEvents_dyn()); }
		if (HX_FIELD_EQ(inName,"setEnableTextEvents") ) { return hx::Val( setEnableTextEvents_dyn()); }
	}
	return super::__Field(inName,inCallProp);
}

bool NativeWindow_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 16:
		if (HX_FIELD_EQ(inName,"lime_window_move") ) { outValue = lime_window_move_dyn(); return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"lime_window_alert") ) { outValue = lime_window_alert_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_window_close") ) { outValue = lime_window_close_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_window_focus") ) { outValue = lime_window_focus_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_window_get_x") ) { outValue = lime_window_get_x_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_window_get_y") ) { outValue = lime_window_get_y_dyn(); return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"lime_window_create") ) { outValue = lime_window_create_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_window_get_id") ) { outValue = lime_window_get_id_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_window_resize") ) { outValue = lime_window_resize_dyn(); return true; }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"lime_window_set_icon") ) { outValue = lime_window_set_icon_dyn(); return true; }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"lime_window_get_width") ) { outValue = lime_window_get_width_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_window_set_title") ) { outValue = lime_window_set_title_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_window_move") ) { outValue = cffi_lime_window_move; return true; }
		break;
	case 22:
		if (HX_FIELD_EQ(inName,"lime_window_get_height") ) { outValue = lime_window_get_height_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_window_alert") ) { outValue = cffi_lime_window_alert; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_window_close") ) { outValue = cffi_lime_window_close; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_window_focus") ) { outValue = cffi_lime_window_focus; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_window_get_x") ) { outValue = cffi_lime_window_get_x; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_window_get_y") ) { outValue = cffi_lime_window_get_y; return true; }
		break;
	case 23:
		if (HX_FIELD_EQ(inName,"lime_window_get_display") ) { outValue = lime_window_get_display_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_window_create") ) { outValue = cffi_lime_window_create; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_window_get_id") ) { outValue = cffi_lime_window_get_id; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_window_resize") ) { outValue = cffi_lime_window_resize; return true; }
		break;
	case 25:
		if (HX_FIELD_EQ(inName,"lime_window_set_maximized") ) { outValue = lime_window_set_maximized_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_window_set_minimized") ) { outValue = lime_window_set_minimized_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_window_set_resizable") ) { outValue = lime_window_set_resizable_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_window_set_icon") ) { outValue = cffi_lime_window_set_icon; return true; }
		break;
	case 26:
		if (HX_FIELD_EQ(inName,"lime_window_set_borderless") ) { outValue = lime_window_set_borderless_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_window_set_fullscreen") ) { outValue = lime_window_set_fullscreen_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_window_get_width") ) { outValue = cffi_lime_window_get_width; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_window_set_title") ) { outValue = cffi_lime_window_set_title; return true; }
		break;
	case 27:
		if (HX_FIELD_EQ(inName,"cffi_lime_window_get_height") ) { outValue = cffi_lime_window_get_height; return true; }
		break;
	case 28:
		if (HX_FIELD_EQ(inName,"cffi_lime_window_get_display") ) { outValue = cffi_lime_window_get_display; return true; }
		break;
	case 30:
		if (HX_FIELD_EQ(inName,"cffi_lime_window_set_maximized") ) { outValue = cffi_lime_window_set_maximized; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_window_set_minimized") ) { outValue = cffi_lime_window_set_minimized; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_window_set_resizable") ) { outValue = cffi_lime_window_set_resizable; return true; }
		break;
	case 31:
		if (HX_FIELD_EQ(inName,"cffi_lime_window_set_borderless") ) { outValue = cffi_lime_window_set_borderless; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_window_set_fullscreen") ) { outValue = cffi_lime_window_set_fullscreen; return true; }
		break;
	case 34:
		if (HX_FIELD_EQ(inName,"lime_window_get_enable_text_events") ) { outValue = lime_window_get_enable_text_events_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_window_set_enable_text_events") ) { outValue = lime_window_set_enable_text_events_dyn(); return true; }
		break;
	case 39:
		if (HX_FIELD_EQ(inName,"cffi_lime_window_get_enable_text_events") ) { outValue = cffi_lime_window_get_enable_text_events; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_window_set_enable_text_events") ) { outValue = cffi_lime_window_set_enable_text_events; return true; }
	}
	return false;
}

hx::Val NativeWindow_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"handle") ) { handle=inValue.Cast<  ::Dynamic >(); return inValue; }
		if (HX_FIELD_EQ(inName,"parent") ) { parent=inValue.Cast<  ::lime::ui::Window >(); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"closing") ) { closing=inValue.Cast< Bool >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

bool NativeWindow_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 21:
		if (HX_FIELD_EQ(inName,"cffi_lime_window_move") ) { cffi_lime_window_move=ioValue.Cast< ::cpp::Function<  void( ::hx::Object *,Int,Int) > >(); return true; }
		break;
	case 22:
		if (HX_FIELD_EQ(inName,"cffi_lime_window_alert") ) { cffi_lime_window_alert=ioValue.Cast< ::cpp::Function<  void( ::hx::Object *,::String,::String) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_window_close") ) { cffi_lime_window_close=ioValue.Cast< ::cpp::Function<  void( ::hx::Object *) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_window_focus") ) { cffi_lime_window_focus=ioValue.Cast< ::cpp::Function<  void( ::hx::Object *) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_window_get_x") ) { cffi_lime_window_get_x=ioValue.Cast< ::cpp::Function<  Int( ::hx::Object *) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_window_get_y") ) { cffi_lime_window_get_y=ioValue.Cast< ::cpp::Function<  Int( ::hx::Object *) > >(); return true; }
		break;
	case 23:
		if (HX_FIELD_EQ(inName,"cffi_lime_window_create") ) { cffi_lime_window_create=ioValue.Cast< ::cpp::Function<   ::hx::Object *( ::hx::Object *,Int,Int,Int,::String) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_window_get_id") ) { cffi_lime_window_get_id=ioValue.Cast< ::cpp::Function<  Int( ::hx::Object *) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_window_resize") ) { cffi_lime_window_resize=ioValue.Cast< ::cpp::Function<  void( ::hx::Object *,Int,Int) > >(); return true; }
		break;
	case 25:
		if (HX_FIELD_EQ(inName,"cffi_lime_window_set_icon") ) { cffi_lime_window_set_icon=ioValue.Cast< ::cpp::Function<  void( ::hx::Object *, ::hx::Object *) > >(); return true; }
		break;
	case 26:
		if (HX_FIELD_EQ(inName,"cffi_lime_window_get_width") ) { cffi_lime_window_get_width=ioValue.Cast< ::cpp::Function<  Int( ::hx::Object *) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_window_set_title") ) { cffi_lime_window_set_title=ioValue.Cast< ::cpp::Function<   ::hx::Object *( ::hx::Object *,::String) > >(); return true; }
		break;
	case 27:
		if (HX_FIELD_EQ(inName,"cffi_lime_window_get_height") ) { cffi_lime_window_get_height=ioValue.Cast< ::cpp::Function<  Int( ::hx::Object *) > >(); return true; }
		break;
	case 28:
		if (HX_FIELD_EQ(inName,"cffi_lime_window_get_display") ) { cffi_lime_window_get_display=ioValue.Cast< ::cpp::Function<  Int( ::hx::Object *) > >(); return true; }
		break;
	case 30:
		if (HX_FIELD_EQ(inName,"cffi_lime_window_set_maximized") ) { cffi_lime_window_set_maximized=ioValue.Cast< ::cpp::Function<  Bool( ::hx::Object *,Bool) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_window_set_minimized") ) { cffi_lime_window_set_minimized=ioValue.Cast< ::cpp::Function<  Bool( ::hx::Object *,Bool) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_window_set_resizable") ) { cffi_lime_window_set_resizable=ioValue.Cast< ::cpp::Function<  Bool( ::hx::Object *,Bool) > >(); return true; }
		break;
	case 31:
		if (HX_FIELD_EQ(inName,"cffi_lime_window_set_borderless") ) { cffi_lime_window_set_borderless=ioValue.Cast< ::cpp::Function<  Bool( ::hx::Object *,Bool) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_window_set_fullscreen") ) { cffi_lime_window_set_fullscreen=ioValue.Cast< ::cpp::Function<  Bool( ::hx::Object *,Bool) > >(); return true; }
		break;
	case 39:
		if (HX_FIELD_EQ(inName,"cffi_lime_window_get_enable_text_events") ) { cffi_lime_window_get_enable_text_events=ioValue.Cast< ::cpp::Function<  Bool( ::hx::Object *) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_window_set_enable_text_events") ) { cffi_lime_window_set_enable_text_events=ioValue.Cast< ::cpp::Function<  void( ::hx::Object *,Bool) > >(); return true; }
	}
	return false;
}

void NativeWindow_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("handle","\xa8","\x83","\xfd","\xb7"));
	outFields->push(HX_HCSTRING("closing","\xf5","\xde","\x25","\x79"));
	outFields->push(HX_HCSTRING("parent","\x2a","\x05","\x7e","\xed"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo NativeWindow_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*Dynamic*/ ,(int)offsetof(NativeWindow_obj,handle),HX_HCSTRING("handle","\xa8","\x83","\xfd","\xb7")},
	{hx::fsBool,(int)offsetof(NativeWindow_obj,closing),HX_HCSTRING("closing","\xf5","\xde","\x25","\x79")},
	{hx::fsObject /*::lime::ui::Window*/ ,(int)offsetof(NativeWindow_obj,parent),HX_HCSTRING("parent","\x2a","\x05","\x7e","\xed")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo NativeWindow_obj_sStaticStorageInfo[] = {
	{hx::fsObject /*Dynamic*/ ,(void *) &NativeWindow_obj::cffi_lime_window_alert,HX_HCSTRING("cffi_lime_window_alert","\x1e","\xde","\x00","\xa8")},
	{hx::fsObject /*Dynamic*/ ,(void *) &NativeWindow_obj::cffi_lime_window_close,HX_HCSTRING("cffi_lime_window_close","\x7a","\x9e","\xd5","\xce")},
	{hx::fsObject /*Dynamic*/ ,(void *) &NativeWindow_obj::cffi_lime_window_create,HX_HCSTRING("cffi_lime_window_create","\xfa","\xc9","\xd2","\x99")},
	{hx::fsObject /*Dynamic*/ ,(void *) &NativeWindow_obj::cffi_lime_window_focus,HX_HCSTRING("cffi_lime_window_focus","\x9a","\xe6","\xfb","\x8a")},
	{hx::fsObject /*Dynamic*/ ,(void *) &NativeWindow_obj::cffi_lime_window_get_display,HX_HCSTRING("cffi_lime_window_get_display","\x9b","\x8e","\xa3","\xe8")},
	{hx::fsObject /*Dynamic*/ ,(void *) &NativeWindow_obj::cffi_lime_window_get_enable_text_events,HX_HCSTRING("cffi_lime_window_get_enable_text_events","\xf6","\x00","\x95","\xd8")},
	{hx::fsObject /*Dynamic*/ ,(void *) &NativeWindow_obj::cffi_lime_window_get_height,HX_HCSTRING("cffi_lime_window_get_height","\xae","\x31","\xb7","\x32")},
	{hx::fsObject /*Dynamic*/ ,(void *) &NativeWindow_obj::cffi_lime_window_get_id,HX_HCSTRING("cffi_lime_window_get_id","\x22","\x56","\xf3","\xc0")},
	{hx::fsObject /*Dynamic*/ ,(void *) &NativeWindow_obj::cffi_lime_window_get_width,HX_HCSTRING("cffi_lime_window_get_width","\x1f","\x22","\xf6","\x1a")},
	{hx::fsObject /*Dynamic*/ ,(void *) &NativeWindow_obj::cffi_lime_window_get_x,HX_HCSTRING("cffi_lime_window_get_x","\x11","\x2c","\xd3","\x17")},
	{hx::fsObject /*Dynamic*/ ,(void *) &NativeWindow_obj::cffi_lime_window_get_y,HX_HCSTRING("cffi_lime_window_get_y","\x12","\x2c","\xd3","\x17")},
	{hx::fsObject /*Dynamic*/ ,(void *) &NativeWindow_obj::cffi_lime_window_move,HX_HCSTRING("cffi_lime_window_move","\x8f","\xea","\x74","\x73")},
	{hx::fsObject /*Dynamic*/ ,(void *) &NativeWindow_obj::cffi_lime_window_resize,HX_HCSTRING("cffi_lime_window_resize","\xf2","\xbc","\x3e","\x26")},
	{hx::fsObject /*Dynamic*/ ,(void *) &NativeWindow_obj::cffi_lime_window_set_borderless,HX_HCSTRING("cffi_lime_window_set_borderless","\x00","\x48","\x02","\x7c")},
	{hx::fsObject /*Dynamic*/ ,(void *) &NativeWindow_obj::cffi_lime_window_set_enable_text_events,HX_HCSTRING("cffi_lime_window_set_enable_text_events","\x6a","\x7d","\x40","\x0c")},
	{hx::fsObject /*Dynamic*/ ,(void *) &NativeWindow_obj::cffi_lime_window_set_fullscreen,HX_HCSTRING("cffi_lime_window_set_fullscreen","\xf6","\x3b","\x45","\x5e")},
	{hx::fsObject /*Dynamic*/ ,(void *) &NativeWindow_obj::cffi_lime_window_set_icon,HX_HCSTRING("cffi_lime_window_set_icon","\xf4","\x9a","\x6b","\x13")},
	{hx::fsObject /*Dynamic*/ ,(void *) &NativeWindow_obj::cffi_lime_window_set_maximized,HX_HCSTRING("cffi_lime_window_set_maximized","\xbd","\xdc","\xa4","\x85")},
	{hx::fsObject /*Dynamic*/ ,(void *) &NativeWindow_obj::cffi_lime_window_set_minimized,HX_HCSTRING("cffi_lime_window_set_minimized","\x2b","\xca","\x61","\xaf")},
	{hx::fsObject /*Dynamic*/ ,(void *) &NativeWindow_obj::cffi_lime_window_set_resizable,HX_HCSTRING("cffi_lime_window_set_resizable","\x10","\x06","\x14","\x30")},
	{hx::fsObject /*Dynamic*/ ,(void *) &NativeWindow_obj::cffi_lime_window_set_title,HX_HCSTRING("cffi_lime_window_set_title","\xbd","\x6d","\x1f","\x44")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static ::String NativeWindow_obj_sMemberFields[] = {
	HX_HCSTRING("handle","\xa8","\x83","\xfd","\xb7"),
	HX_HCSTRING("closing","\xf5","\xde","\x25","\x79"),
	HX_HCSTRING("parent","\x2a","\x05","\x7e","\xed"),
	HX_HCSTRING("alert","\x5c","\x57","\x8e","\x21"),
	HX_HCSTRING("close","\xb8","\x17","\x63","\x48"),
	HX_HCSTRING("create","\xfc","\x66","\x0f","\x7c"),
	HX_HCSTRING("focus","\xd8","\x5f","\x89","\x04"),
	HX_HCSTRING("getDisplay","\x4c","\xb0","\xab","\x0a"),
	HX_HCSTRING("getEnableTextEvents","\xbf","\x4c","\x30","\x24"),
	HX_HCSTRING("move","\x11","\xe3","\x60","\x48"),
	HX_HCSTRING("resize","\xf4","\x59","\x7b","\x08"),
	HX_HCSTRING("setBorderless","\x87","\x84","\xe9","\xb8"),
	HX_HCSTRING("setEnableTextEvents","\xcb","\x3f","\xcd","\x60"),
	HX_HCSTRING("setFullscreen","\x7d","\x78","\x2c","\x9b"),
	HX_HCSTRING("setIcon","\x3b","\x28","\x37","\x0b"),
	HX_HCSTRING("setMaximized","\x16","\xce","\x30","\x23"),
	HX_HCSTRING("setMinimized","\x84","\xbb","\xed","\x4c"),
	HX_HCSTRING("setResizable","\x69","\xf7","\x9f","\xcd"),
	HX_HCSTRING("setTitle","\x96","\x7e","\x6f","\x1e"),
	::String(null()) };

static void NativeWindow_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(NativeWindow_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(NativeWindow_obj::cffi_lime_window_alert,"cffi_lime_window_alert");
	HX_MARK_MEMBER_NAME(NativeWindow_obj::cffi_lime_window_close,"cffi_lime_window_close");
	HX_MARK_MEMBER_NAME(NativeWindow_obj::cffi_lime_window_create,"cffi_lime_window_create");
	HX_MARK_MEMBER_NAME(NativeWindow_obj::cffi_lime_window_focus,"cffi_lime_window_focus");
	HX_MARK_MEMBER_NAME(NativeWindow_obj::cffi_lime_window_get_display,"cffi_lime_window_get_display");
	HX_MARK_MEMBER_NAME(NativeWindow_obj::cffi_lime_window_get_enable_text_events,"cffi_lime_window_get_enable_text_events");
	HX_MARK_MEMBER_NAME(NativeWindow_obj::cffi_lime_window_get_height,"cffi_lime_window_get_height");
	HX_MARK_MEMBER_NAME(NativeWindow_obj::cffi_lime_window_get_id,"cffi_lime_window_get_id");
	HX_MARK_MEMBER_NAME(NativeWindow_obj::cffi_lime_window_get_width,"cffi_lime_window_get_width");
	HX_MARK_MEMBER_NAME(NativeWindow_obj::cffi_lime_window_get_x,"cffi_lime_window_get_x");
	HX_MARK_MEMBER_NAME(NativeWindow_obj::cffi_lime_window_get_y,"cffi_lime_window_get_y");
	HX_MARK_MEMBER_NAME(NativeWindow_obj::cffi_lime_window_move,"cffi_lime_window_move");
	HX_MARK_MEMBER_NAME(NativeWindow_obj::cffi_lime_window_resize,"cffi_lime_window_resize");
	HX_MARK_MEMBER_NAME(NativeWindow_obj::cffi_lime_window_set_borderless,"cffi_lime_window_set_borderless");
	HX_MARK_MEMBER_NAME(NativeWindow_obj::cffi_lime_window_set_enable_text_events,"cffi_lime_window_set_enable_text_events");
	HX_MARK_MEMBER_NAME(NativeWindow_obj::cffi_lime_window_set_fullscreen,"cffi_lime_window_set_fullscreen");
	HX_MARK_MEMBER_NAME(NativeWindow_obj::cffi_lime_window_set_icon,"cffi_lime_window_set_icon");
	HX_MARK_MEMBER_NAME(NativeWindow_obj::cffi_lime_window_set_maximized,"cffi_lime_window_set_maximized");
	HX_MARK_MEMBER_NAME(NativeWindow_obj::cffi_lime_window_set_minimized,"cffi_lime_window_set_minimized");
	HX_MARK_MEMBER_NAME(NativeWindow_obj::cffi_lime_window_set_resizable,"cffi_lime_window_set_resizable");
	HX_MARK_MEMBER_NAME(NativeWindow_obj::cffi_lime_window_set_title,"cffi_lime_window_set_title");
};

#ifdef HXCPP_VISIT_ALLOCS
static void NativeWindow_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(NativeWindow_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(NativeWindow_obj::cffi_lime_window_alert,"cffi_lime_window_alert");
	HX_VISIT_MEMBER_NAME(NativeWindow_obj::cffi_lime_window_close,"cffi_lime_window_close");
	HX_VISIT_MEMBER_NAME(NativeWindow_obj::cffi_lime_window_create,"cffi_lime_window_create");
	HX_VISIT_MEMBER_NAME(NativeWindow_obj::cffi_lime_window_focus,"cffi_lime_window_focus");
	HX_VISIT_MEMBER_NAME(NativeWindow_obj::cffi_lime_window_get_display,"cffi_lime_window_get_display");
	HX_VISIT_MEMBER_NAME(NativeWindow_obj::cffi_lime_window_get_enable_text_events,"cffi_lime_window_get_enable_text_events");
	HX_VISIT_MEMBER_NAME(NativeWindow_obj::cffi_lime_window_get_height,"cffi_lime_window_get_height");
	HX_VISIT_MEMBER_NAME(NativeWindow_obj::cffi_lime_window_get_id,"cffi_lime_window_get_id");
	HX_VISIT_MEMBER_NAME(NativeWindow_obj::cffi_lime_window_get_width,"cffi_lime_window_get_width");
	HX_VISIT_MEMBER_NAME(NativeWindow_obj::cffi_lime_window_get_x,"cffi_lime_window_get_x");
	HX_VISIT_MEMBER_NAME(NativeWindow_obj::cffi_lime_window_get_y,"cffi_lime_window_get_y");
	HX_VISIT_MEMBER_NAME(NativeWindow_obj::cffi_lime_window_move,"cffi_lime_window_move");
	HX_VISIT_MEMBER_NAME(NativeWindow_obj::cffi_lime_window_resize,"cffi_lime_window_resize");
	HX_VISIT_MEMBER_NAME(NativeWindow_obj::cffi_lime_window_set_borderless,"cffi_lime_window_set_borderless");
	HX_VISIT_MEMBER_NAME(NativeWindow_obj::cffi_lime_window_set_enable_text_events,"cffi_lime_window_set_enable_text_events");
	HX_VISIT_MEMBER_NAME(NativeWindow_obj::cffi_lime_window_set_fullscreen,"cffi_lime_window_set_fullscreen");
	HX_VISIT_MEMBER_NAME(NativeWindow_obj::cffi_lime_window_set_icon,"cffi_lime_window_set_icon");
	HX_VISIT_MEMBER_NAME(NativeWindow_obj::cffi_lime_window_set_maximized,"cffi_lime_window_set_maximized");
	HX_VISIT_MEMBER_NAME(NativeWindow_obj::cffi_lime_window_set_minimized,"cffi_lime_window_set_minimized");
	HX_VISIT_MEMBER_NAME(NativeWindow_obj::cffi_lime_window_set_resizable,"cffi_lime_window_set_resizable");
	HX_VISIT_MEMBER_NAME(NativeWindow_obj::cffi_lime_window_set_title,"cffi_lime_window_set_title");
};

#endif

hx::Class NativeWindow_obj::__mClass;

static ::String NativeWindow_obj_sStaticFields[] = {
	HX_HCSTRING("lime_window_alert","\x37","\xb9","\xe2","\xc1"),
	HX_HCSTRING("lime_window_close","\x93","\x79","\xb7","\xe8"),
	HX_HCSTRING("lime_window_create","\xc1","\xa4","\x90","\x25"),
	HX_HCSTRING("lime_window_focus","\xb3","\xc1","\xdd","\xa4"),
	HX_HCSTRING("lime_window_get_display","\x74","\x42","\x74","\x0d"),
	HX_HCSTRING("lime_window_get_enable_text_events","\xbd","\x19","\xaf","\xda"),
	HX_HCSTRING("lime_window_get_height","\xf5","\x7b","\x27","\xd0"),
	HX_HCSTRING("lime_window_get_id","\xe9","\x30","\xb1","\x4c"),
	HX_HCSTRING("lime_window_get_width","\xb8","\xfd","\x65","\x5f"),
	HX_HCSTRING("lime_window_get_x","\x2a","\x07","\xb5","\x31"),
	HX_HCSTRING("lime_window_get_y","\x2b","\x07","\xb5","\x31"),
	HX_HCSTRING("lime_window_move","\x96","\xb5","\x64","\x4b"),
	HX_HCSTRING("lime_window_resize","\xb9","\x97","\xfc","\xb1"),
	HX_HCSTRING("lime_window_set_borderless","\xc7","\xc1","\xd2","\x19"),
	HX_HCSTRING("lime_window_set_enable_text_events","\x31","\x96","\x5a","\x0e"),
	HX_HCSTRING("lime_window_set_fullscreen","\xbd","\xb5","\x15","\xfc"),
	HX_HCSTRING("lime_window_set_icon","\x7b","\xf5","\x6a","\x6e"),
	HX_HCSTRING("lime_window_set_maximized","\xd6","\xf8","\xec","\x06"),
	HX_HCSTRING("lime_window_set_minimized","\x44","\xe6","\xa9","\x30"),
	HX_HCSTRING("lime_window_set_resizable","\x29","\x22","\x5c","\xb1"),
	HX_HCSTRING("lime_window_set_title","\x56","\x49","\x8f","\x88"),
	HX_HCSTRING("cffi_lime_window_alert","\x1e","\xde","\x00","\xa8"),
	HX_HCSTRING("cffi_lime_window_close","\x7a","\x9e","\xd5","\xce"),
	HX_HCSTRING("cffi_lime_window_create","\xfa","\xc9","\xd2","\x99"),
	HX_HCSTRING("cffi_lime_window_focus","\x9a","\xe6","\xfb","\x8a"),
	HX_HCSTRING("cffi_lime_window_get_display","\x9b","\x8e","\xa3","\xe8"),
	HX_HCSTRING("cffi_lime_window_get_enable_text_events","\xf6","\x00","\x95","\xd8"),
	HX_HCSTRING("cffi_lime_window_get_height","\xae","\x31","\xb7","\x32"),
	HX_HCSTRING("cffi_lime_window_get_id","\x22","\x56","\xf3","\xc0"),
	HX_HCSTRING("cffi_lime_window_get_width","\x1f","\x22","\xf6","\x1a"),
	HX_HCSTRING("cffi_lime_window_get_x","\x11","\x2c","\xd3","\x17"),
	HX_HCSTRING("cffi_lime_window_get_y","\x12","\x2c","\xd3","\x17"),
	HX_HCSTRING("cffi_lime_window_move","\x8f","\xea","\x74","\x73"),
	HX_HCSTRING("cffi_lime_window_resize","\xf2","\xbc","\x3e","\x26"),
	HX_HCSTRING("cffi_lime_window_set_borderless","\x00","\x48","\x02","\x7c"),
	HX_HCSTRING("cffi_lime_window_set_enable_text_events","\x6a","\x7d","\x40","\x0c"),
	HX_HCSTRING("cffi_lime_window_set_fullscreen","\xf6","\x3b","\x45","\x5e"),
	HX_HCSTRING("cffi_lime_window_set_icon","\xf4","\x9a","\x6b","\x13"),
	HX_HCSTRING("cffi_lime_window_set_maximized","\xbd","\xdc","\xa4","\x85"),
	HX_HCSTRING("cffi_lime_window_set_minimized","\x2b","\xca","\x61","\xaf"),
	HX_HCSTRING("cffi_lime_window_set_resizable","\x10","\x06","\x14","\x30"),
	HX_HCSTRING("cffi_lime_window_set_title","\xbd","\x6d","\x1f","\x44"),
	::String(null())
};

void NativeWindow_obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("lime._backend.native.NativeWindow","\xde","\x3b","\x5b","\x7f");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &NativeWindow_obj::__GetStatic;
	__mClass->mSetStaticField = &NativeWindow_obj::__SetStatic;
	__mClass->mMarkFunc = NativeWindow_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(NativeWindow_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(NativeWindow_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< NativeWindow_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = NativeWindow_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = NativeWindow_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = NativeWindow_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void NativeWindow_obj::__boot()
{
{
            	HX_STACK_FRAME("lime._backend.native.NativeWindow","boot",0x85d332c2,"lime._backend.native.NativeWindow.boot","lime/_backend/native/NativeWindow.hx",342,0x34b7ce9f)
HXLINE( 342)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_window_alert",37,b9,e2,c1),HX_("ossv",c7,56,b6,49),false);
HXDLIN( 342)		cffi_lime_window_alert = inValue;
            	}
{
            	HX_STACK_FRAME("lime._backend.native.NativeWindow","boot",0x85d332c2,"lime._backend.native.NativeWindow.boot","lime/_backend/native/NativeWindow.hx",343,0x34b7ce9f)
HXLINE( 343)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_window_close",93,79,b7,e8),HX_("ov",27,61,00,00),false);
HXDLIN( 343)		cffi_lime_window_close = inValue;
            	}
{
            	HX_STACK_FRAME("lime._backend.native.NativeWindow","boot",0x85d332c2,"lime._backend.native.NativeWindow.boot","lime/_backend/native/NativeWindow.hx",344,0x34b7ce9f)
HXLINE( 344)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_window_create",c1,a4,90,25),HX_("oiiiso",96,6e,67,1c),false);
HXDLIN( 344)		cffi_lime_window_create = inValue;
            	}
{
            	HX_STACK_FRAME("lime._backend.native.NativeWindow","boot",0x85d332c2,"lime._backend.native.NativeWindow.boot","lime/_backend/native/NativeWindow.hx",345,0x34b7ce9f)
HXLINE( 345)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_window_focus",b3,c1,dd,a4),HX_("ov",27,61,00,00),false);
HXDLIN( 345)		cffi_lime_window_focus = inValue;
            	}
{
            	HX_STACK_FRAME("lime._backend.native.NativeWindow","boot",0x85d332c2,"lime._backend.native.NativeWindow.boot","lime/_backend/native/NativeWindow.hx",346,0x34b7ce9f)
HXLINE( 346)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_window_get_display",74,42,74,0d),HX_("oi",1a,61,00,00),false);
HXDLIN( 346)		cffi_lime_window_get_display = inValue;
            	}
{
            	HX_STACK_FRAME("lime._backend.native.NativeWindow","boot",0x85d332c2,"lime._backend.native.NativeWindow.boot","lime/_backend/native/NativeWindow.hx",347,0x34b7ce9f)
HXLINE( 347)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_window_get_enable_text_events",bd,19,af,da),HX_("ob",13,61,00,00),false);
HXDLIN( 347)		cffi_lime_window_get_enable_text_events = inValue;
            	}
{
            	HX_STACK_FRAME("lime._backend.native.NativeWindow","boot",0x85d332c2,"lime._backend.native.NativeWindow.boot","lime/_backend/native/NativeWindow.hx",348,0x34b7ce9f)
HXLINE( 348)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_window_get_height",f5,7b,27,d0),HX_("oi",1a,61,00,00),false);
HXDLIN( 348)		cffi_lime_window_get_height = inValue;
            	}
{
            	HX_STACK_FRAME("lime._backend.native.NativeWindow","boot",0x85d332c2,"lime._backend.native.NativeWindow.boot","lime/_backend/native/NativeWindow.hx",349,0x34b7ce9f)
HXLINE( 349)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_window_get_id",e9,30,b1,4c),HX_("oi",1a,61,00,00),false);
HXDLIN( 349)		cffi_lime_window_get_id = inValue;
            	}
{
            	HX_STACK_FRAME("lime._backend.native.NativeWindow","boot",0x85d332c2,"lime._backend.native.NativeWindow.boot","lime/_backend/native/NativeWindow.hx",350,0x34b7ce9f)
HXLINE( 350)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_window_get_width",b8,fd,65,5f),HX_("oi",1a,61,00,00),false);
HXDLIN( 350)		cffi_lime_window_get_width = inValue;
            	}
{
            	HX_STACK_FRAME("lime._backend.native.NativeWindow","boot",0x85d332c2,"lime._backend.native.NativeWindow.boot","lime/_backend/native/NativeWindow.hx",351,0x34b7ce9f)
HXLINE( 351)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_window_get_x",2a,07,b5,31),HX_("oi",1a,61,00,00),false);
HXDLIN( 351)		cffi_lime_window_get_x = inValue;
            	}
{
            	HX_STACK_FRAME("lime._backend.native.NativeWindow","boot",0x85d332c2,"lime._backend.native.NativeWindow.boot","lime/_backend/native/NativeWindow.hx",352,0x34b7ce9f)
HXLINE( 352)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_window_get_y",2b,07,b5,31),HX_("oi",1a,61,00,00),false);
HXDLIN( 352)		cffi_lime_window_get_y = inValue;
            	}
{
            	HX_STACK_FRAME("lime._backend.native.NativeWindow","boot",0x85d332c2,"lime._backend.native.NativeWindow.boot","lime/_backend/native/NativeWindow.hx",353,0x34b7ce9f)
HXLINE( 353)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_window_move",96,b5,64,4b),HX_("oiiv",87,b7,ae,49),false);
HXDLIN( 353)		cffi_lime_window_move = inValue;
            	}
{
            	HX_STACK_FRAME("lime._backend.native.NativeWindow","boot",0x85d332c2,"lime._backend.native.NativeWindow.boot","lime/_backend/native/NativeWindow.hx",354,0x34b7ce9f)
HXLINE( 354)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_window_resize",b9,97,fc,b1),HX_("oiiv",87,b7,ae,49),false);
HXDLIN( 354)		cffi_lime_window_resize = inValue;
            	}
{
            	HX_STACK_FRAME("lime._backend.native.NativeWindow","boot",0x85d332c2,"lime._backend.native.NativeWindow.boot","lime/_backend/native/NativeWindow.hx",355,0x34b7ce9f)
HXLINE( 355)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_window_set_borderless",c7,c1,d2,19),HX_("obb",ef,8f,54,00),false);
HXDLIN( 355)		cffi_lime_window_set_borderless = inValue;
            	}
{
            	HX_STACK_FRAME("lime._backend.native.NativeWindow","boot",0x85d332c2,"lime._backend.native.NativeWindow.boot","lime/_backend/native/NativeWindow.hx",356,0x34b7ce9f)
HXLINE( 356)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_window_set_enable_text_events",31,96,5a,0e),HX_("obv",03,90,54,00),false);
HXDLIN( 356)		cffi_lime_window_set_enable_text_events = inValue;
            	}
{
            	HX_STACK_FRAME("lime._backend.native.NativeWindow","boot",0x85d332c2,"lime._backend.native.NativeWindow.boot","lime/_backend/native/NativeWindow.hx",357,0x34b7ce9f)
HXLINE( 357)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_window_set_fullscreen",bd,b5,15,fc),HX_("obb",ef,8f,54,00),false);
HXDLIN( 357)		cffi_lime_window_set_fullscreen = inValue;
            	}
{
            	HX_STACK_FRAME("lime._backend.native.NativeWindow","boot",0x85d332c2,"lime._backend.native.NativeWindow.boot","lime/_backend/native/NativeWindow.hx",358,0x34b7ce9f)
HXLINE( 358)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_window_set_icon",7b,f5,6a,6e),HX_("oov",56,9b,54,00),false);
HXDLIN( 358)		cffi_lime_window_set_icon = inValue;
            	}
{
            	HX_STACK_FRAME("lime._backend.native.NativeWindow","boot",0x85d332c2,"lime._backend.native.NativeWindow.boot","lime/_backend/native/NativeWindow.hx",359,0x34b7ce9f)
HXLINE( 359)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_window_set_maximized",d6,f8,ec,06),HX_("obb",ef,8f,54,00),false);
HXDLIN( 359)		cffi_lime_window_set_maximized = inValue;
            	}
{
            	HX_STACK_FRAME("lime._backend.native.NativeWindow","boot",0x85d332c2,"lime._backend.native.NativeWindow.boot","lime/_backend/native/NativeWindow.hx",360,0x34b7ce9f)
HXLINE( 360)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_window_set_minimized",44,e6,a9,30),HX_("obb",ef,8f,54,00),false);
HXDLIN( 360)		cffi_lime_window_set_minimized = inValue;
            	}
{
            	HX_STACK_FRAME("lime._backend.native.NativeWindow","boot",0x85d332c2,"lime._backend.native.NativeWindow.boot","lime/_backend/native/NativeWindow.hx",361,0x34b7ce9f)
HXLINE( 361)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_window_set_resizable",29,22,5c,b1),HX_("obb",ef,8f,54,00),false);
HXDLIN( 361)		cffi_lime_window_set_resizable = inValue;
            	}
{
            	HX_STACK_FRAME("lime._backend.native.NativeWindow","boot",0x85d332c2,"lime._backend.native.NativeWindow.boot","lime/_backend/native/NativeWindow.hx",362,0x34b7ce9f)
HXLINE( 362)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_window_set_title",56,49,8f,88),HX_("oso",cb,9e,54,00),false);
HXDLIN( 362)		cffi_lime_window_set_title = inValue;
            	}
}

} // end namespace lime
} // end namespace _backend
} // end namespace native
