// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_cpp_Prime
#include <cpp/Prime.h>
#endif
#ifndef INCLUDED_haxe_io_Bytes
#include <haxe/io/Bytes.h>
#endif
#ifndef INCLUDED_lime_net_curl_CURLEasy
#include <lime/net/curl/CURLEasy.h>
#endif

namespace lime{
namespace net{
namespace curl{

void CURLEasy_obj::__construct() { }

Dynamic CURLEasy_obj::__CreateEmpty() { return new CURLEasy_obj; }

hx::ObjectPtr< CURLEasy_obj > CURLEasy_obj::__new()
{
	hx::ObjectPtr< CURLEasy_obj > _hx_result = new CURLEasy_obj();
	_hx_result->__construct();
	return _hx_result;
}

Dynamic CURLEasy_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< CURLEasy_obj > _hx_result = new CURLEasy_obj();
	_hx_result->__construct();
	return _hx_result;
}

void CURLEasy_obj::cleanup(Float handle){
            	HX_STACK_FRAME("lime.net.curl.CURLEasy","cleanup",0xf4922b1c,"lime.net.curl.CURLEasy.cleanup","lime/net/curl/CURLEasy.hx",18,0x6bf34539)
            	HX_STACK_ARG(handle,"handle")
HXLINE(  18)		::lime::net::curl::CURLEasy_obj::cffi_lime_curl_easy_cleanup(handle);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(CURLEasy_obj,cleanup,(void))

Float CURLEasy_obj::duphandle(Float handle){
            	HX_STACK_FRAME("lime.net.curl.CURLEasy","duphandle",0xc88c719f,"lime.net.curl.CURLEasy.duphandle","lime/net/curl/CURLEasy.hx",27,0x6bf34539)
            	HX_STACK_ARG(handle,"handle")
HXLINE(  27)		return ( (Float)(::lime::net::curl::CURLEasy_obj::cffi_lime_curl_easy_duphandle(handle)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(CURLEasy_obj,duphandle,return )

::String CURLEasy_obj::escape(Float handle,::String url,Int length){
            	HX_STACK_FRAME("lime.net.curl.CURLEasy","escape",0x85152b89,"lime.net.curl.CURLEasy.escape","lime/net/curl/CURLEasy.hx",38,0x6bf34539)
            	HX_STACK_ARG(handle,"handle")
            	HX_STACK_ARG(url,"url")
            	HX_STACK_ARG(length,"length")
HXLINE(  38)		 ::hx::Object * inVal = ( ( ::hx::Object *)(::lime::net::curl::CURLEasy_obj::cffi_lime_curl_easy_escape(handle,url,length)) );
HXDLIN(  38)		return Dynamic(hx::DynamicPtr(inVal));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(CURLEasy_obj,escape,return )

 ::Dynamic CURLEasy_obj::getinfo(Float handle,Int info){
            	HX_STACK_FRAME("lime.net.curl.CURLEasy","getinfo",0x76b4dafc,"lime.net.curl.CURLEasy.getinfo","lime/net/curl/CURLEasy.hx",49,0x6bf34539)
            	HX_STACK_ARG(handle,"handle")
            	HX_STACK_ARG(info,"info")
HXLINE(  49)		 ::hx::Object * inVal = ( ( ::hx::Object *)(::lime::net::curl::CURLEasy_obj::cffi_lime_curl_easy_getinfo(handle,info)) );
HXDLIN(  49)		return Dynamic(hx::DynamicPtr(inVal));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(CURLEasy_obj,getinfo,return )

Float CURLEasy_obj::init(){
            	HX_STACK_FRAME("lime.net.curl.CURLEasy","init",0x7bee9118,"lime.net.curl.CURLEasy.init","lime/net/curl/CURLEasy.hx",60,0x6bf34539)
HXLINE(  60)		return ( (Float)(::lime::net::curl::CURLEasy_obj::cffi_lime_curl_easy_init()) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(CURLEasy_obj,init,return )

Int CURLEasy_obj::pause(Float handle,Int bitMask){
            	HX_STACK_FRAME("lime.net.curl.CURLEasy","pause",0xf40fc7ee,"lime.net.curl.CURLEasy.pause","lime/net/curl/CURLEasy.hx",71,0x6bf34539)
            	HX_STACK_ARG(handle,"handle")
            	HX_STACK_ARG(bitMask,"bitMask")
HXLINE(  71)		return ( (Int)(::lime::net::curl::CURLEasy_obj::cffi_lime_curl_easy_pause(handle,bitMask)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(CURLEasy_obj,pause,return )

Int CURLEasy_obj::perform(Float handle){
            	HX_STACK_FRAME("lime.net.curl.CURLEasy","perform",0xc42e0799,"lime.net.curl.CURLEasy.perform","lime/net/curl/CURLEasy.hx",82,0x6bf34539)
            	HX_STACK_ARG(handle,"handle")
HXLINE(  82)		return ( (Int)(::lime::net::curl::CURLEasy_obj::cffi_lime_curl_easy_perform(handle)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(CURLEasy_obj,perform,return )

void CURLEasy_obj::reset(Float handle){
            	HX_STACK_FRAME("lime.net.curl.CURLEasy","reset",0x1d803ac7,"lime.net.curl.CURLEasy.reset","lime/net/curl/CURLEasy.hx",104,0x6bf34539)
            	HX_STACK_ARG(handle,"handle")
HXLINE( 104)		::lime::net::curl::CURLEasy_obj::cffi_lime_curl_easy_reset(handle);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(CURLEasy_obj,reset,(void))

Int CURLEasy_obj::setopt(Float handle,Int option, ::Dynamic parameter){
            	HX_STACK_FRAME("lime.net.curl.CURLEasy","setopt",0x19bf59d9,"lime.net.curl.CURLEasy.setopt","lime/net/curl/CURLEasy.hx",121,0x6bf34539)
            	HX_STACK_ARG(handle,"handle")
            	HX_STACK_ARG(option,"option")
            	HX_STACK_ARG(parameter,"parameter")
HXLINE( 124)		Bool _hx_tmp;
HXDLIN( 124)		if ((option != (int)20011)) {
HXLINE( 124)			_hx_tmp = (option == (int)20079);
            		}
            		else {
HXLINE( 124)			_hx_tmp = true;
            		}
HXDLIN( 124)		if (_hx_tmp) {
            			HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_0, ::Dynamic,a1) HXARGC(3)
            			Int _hx_run( ::Dynamic a2,Int a3,Int a4){
            				HX_STACK_FRAME("lime.net.curl.CURLEasy","setopt",0x19bf59d9,"lime.net.curl.CURLEasy.setopt","lime/net/curl/CURLEasy.hx",126,0x6bf34539)
            				HX_STACK_ARG(a2,"a2")
            				HX_STACK_ARG(a3,"a3")
            				HX_STACK_ARG(a4,"a4")
HXLINE( 126)				return ::lime::net::curl::CURLEasy_obj::_hx___writeCallback(a1,a2,a3,a4);
            			}
            			HX_END_LOCAL_FUNC3(return)

HXLINE( 126)			 ::Dynamic a1 = parameter;
HXDLIN( 126)			parameter =  ::Dynamic(new _hx_Closure_0(a1));
            		}
HXLINE( 129)		Int _hx_tmp1 = ( (Int)(::lime::net::curl::CURLEasy_obj::cffi_lime_curl_easy_setopt(handle,option,hx::DynamicPtr(parameter))) );
HXDLIN( 129)		return _hx_tmp1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(CURLEasy_obj,setopt,return )

::String CURLEasy_obj::strerror(Int code){
            	HX_STACK_FRAME("lime.net.curl.CURLEasy","strerror",0x6e06fb7f,"lime.net.curl.CURLEasy.strerror","lime/net/curl/CURLEasy.hx",140,0x6bf34539)
            	HX_STACK_ARG(code,"code")
HXLINE( 140)		 ::hx::Object * inVal = ( ( ::hx::Object *)(::lime::net::curl::CURLEasy_obj::cffi_lime_curl_easy_strerror(code)) );
HXDLIN( 140)		return Dynamic(hx::DynamicPtr(inVal));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(CURLEasy_obj,strerror,return )

::String CURLEasy_obj::unescape(Float handle,::String url,Int inLength,Int outLength){
            	HX_STACK_FRAME("lime.net.curl.CURLEasy","unescape",0xb9ec6ca2,"lime.net.curl.CURLEasy.unescape","lime/net/curl/CURLEasy.hx",151,0x6bf34539)
            	HX_STACK_ARG(handle,"handle")
            	HX_STACK_ARG(url,"url")
            	HX_STACK_ARG(inLength,"inLength")
            	HX_STACK_ARG(outLength,"outLength")
HXLINE( 151)		 ::hx::Object * inVal = ( ( ::hx::Object *)(::lime::net::curl::CURLEasy_obj::cffi_lime_curl_easy_unescape(handle,url,inLength,outLength)) );
HXDLIN( 151)		return Dynamic(hx::DynamicPtr(inVal));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(CURLEasy_obj,unescape,return )

Int CURLEasy_obj::_hx___writeCallback( ::Dynamic callback, ::Dynamic output,Int size,Int nmemb){
            	HX_STACK_FRAME("lime.net.curl.CURLEasy","__writeCallback",0x87d6499c,"lime.net.curl.CURLEasy.__writeCallback","lime/net/curl/CURLEasy.hx",159,0x6bf34539)
            	HX_STACK_ARG(callback,"callback")
            	HX_STACK_ARG(output,"output")
            	HX_STACK_ARG(size,"size")
            	HX_STACK_ARG(nmemb,"nmemb")
HXLINE( 162)		HX_VARI(  ::haxe::io::Bytes,bytes) = null();
HXLINE( 164)		Bool _hx_tmp = hx::IsNotNull( output );
HXDLIN( 164)		if (_hx_tmp) {
HXLINE( 166)			bytes =  ::haxe::io::Bytes_obj::__new( ::Dynamic(output->__Field(HX_("length",e6,94,07,9f),hx::paccDynamic)), ::Dynamic(output->__Field(HX_("b",62,00,00,00),hx::paccDynamic)));
            		}
HXLINE( 170)		return callback(bytes,size,nmemb);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(CURLEasy_obj,_hx___writeCallback,return )

void CURLEasy_obj::lime_curl_easy_cleanup(Float handle){
            	HX_STACK_FRAME("lime.net.curl.CURLEasy","lime_curl_easy_cleanup",0xaed44538,"lime.net.curl.CURLEasy.lime_curl_easy_cleanup","lime/net/curl/CURLEasy.hx",182,0x6bf34539)
            	HX_STACK_ARG(handle,"handle")
HXLINE( 182)		::lime::net::curl::CURLEasy_obj::cffi_lime_curl_easy_cleanup(handle);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(CURLEasy_obj,lime_curl_easy_cleanup,(void))

Float CURLEasy_obj::lime_curl_easy_duphandle(Float handle){
            	HX_STACK_FRAME("lime.net.curl.CURLEasy","lime_curl_easy_duphandle",0x2b1e4abb,"lime.net.curl.CURLEasy.lime_curl_easy_duphandle","lime/net/curl/CURLEasy.hx",183,0x6bf34539)
            	HX_STACK_ARG(handle,"handle")
HXLINE( 183)		return ( (Float)(::lime::net::curl::CURLEasy_obj::cffi_lime_curl_easy_duphandle(handle)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(CURLEasy_obj,lime_curl_easy_duphandle,return )

 ::Dynamic CURLEasy_obj::lime_curl_easy_escape(Float curl,::String url,Int length){
            	HX_STACK_FRAME("lime.net.curl.CURLEasy","lime_curl_easy_escape",0x257cc8ed,"lime.net.curl.CURLEasy.lime_curl_easy_escape","lime/net/curl/CURLEasy.hx",184,0x6bf34539)
            	HX_STACK_ARG(curl,"curl")
            	HX_STACK_ARG(url,"url")
            	HX_STACK_ARG(length,"length")
HXLINE( 184)		 ::hx::Object * inVal = ( ( ::hx::Object *)(::lime::net::curl::CURLEasy_obj::cffi_lime_curl_easy_escape(curl,url,length)) );
HXDLIN( 184)		return Dynamic(hx::DynamicPtr(inVal));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(CURLEasy_obj,lime_curl_easy_escape,return )

 ::Dynamic CURLEasy_obj::lime_curl_easy_getinfo(Float curl,Int info){
            	HX_STACK_FRAME("lime.net.curl.CURLEasy","lime_curl_easy_getinfo",0x30f6f518,"lime.net.curl.CURLEasy.lime_curl_easy_getinfo","lime/net/curl/CURLEasy.hx",185,0x6bf34539)
            	HX_STACK_ARG(curl,"curl")
            	HX_STACK_ARG(info,"info")
HXLINE( 185)		 ::hx::Object * inVal = ( ( ::hx::Object *)(::lime::net::curl::CURLEasy_obj::cffi_lime_curl_easy_getinfo(curl,info)) );
HXDLIN( 185)		return Dynamic(hx::DynamicPtr(inVal));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(CURLEasy_obj,lime_curl_easy_getinfo,return )

Float CURLEasy_obj::lime_curl_easy_init(){
            	HX_STACK_FRAME("lime.net.curl.CURLEasy","lime_curl_easy_init",0x88634d7c,"lime.net.curl.CURLEasy.lime_curl_easy_init","lime/net/curl/CURLEasy.hx",186,0x6bf34539)
HXLINE( 186)		return ( (Float)(::lime::net::curl::CURLEasy_obj::cffi_lime_curl_easy_init()) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(CURLEasy_obj,lime_curl_easy_init,return )

Int CURLEasy_obj::lime_curl_easy_pause(Float handle,Int bitmask){
            	HX_STACK_FRAME("lime.net.curl.CURLEasy","lime_curl_easy_pause",0xcdbfe30a,"lime.net.curl.CURLEasy.lime_curl_easy_pause","lime/net/curl/CURLEasy.hx",187,0x6bf34539)
            	HX_STACK_ARG(handle,"handle")
            	HX_STACK_ARG(bitmask,"bitmask")
HXLINE( 187)		return ( (Int)(::lime::net::curl::CURLEasy_obj::cffi_lime_curl_easy_pause(handle,bitmask)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(CURLEasy_obj,lime_curl_easy_pause,return )

Int CURLEasy_obj::lime_curl_easy_perform(Float easy_handle){
            	HX_STACK_FRAME("lime.net.curl.CURLEasy","lime_curl_easy_perform",0x7e7021b5,"lime.net.curl.CURLEasy.lime_curl_easy_perform","lime/net/curl/CURLEasy.hx",188,0x6bf34539)
            	HX_STACK_ARG(easy_handle,"easy_handle")
HXLINE( 188)		return ( (Int)(::lime::net::curl::CURLEasy_obj::cffi_lime_curl_easy_perform(easy_handle)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(CURLEasy_obj,lime_curl_easy_perform,return )

Int CURLEasy_obj::lime_curl_easy_recv(Float curl, ::Dynamic buffer,Int buflen,Int n){
            	HX_STACK_FRAME("lime.net.curl.CURLEasy","lime_curl_easy_recv",0x8e4f5f92,"lime.net.curl.CURLEasy.lime_curl_easy_recv","lime/net/curl/CURLEasy.hx",189,0x6bf34539)
            	HX_STACK_ARG(curl,"curl")
            	HX_STACK_ARG(buffer,"buffer")
            	HX_STACK_ARG(buflen,"buflen")
            	HX_STACK_ARG(n,"n")
HXLINE( 189)		return ( (Int)(::lime::net::curl::CURLEasy_obj::cffi_lime_curl_easy_recv(curl,hx::DynamicPtr(buffer),buflen,n)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(CURLEasy_obj,lime_curl_easy_recv,return )

void CURLEasy_obj::lime_curl_easy_reset(Float curl){
            	HX_STACK_FRAME("lime.net.curl.CURLEasy","lime_curl_easy_reset",0xf73055e3,"lime.net.curl.CURLEasy.lime_curl_easy_reset","lime/net/curl/CURLEasy.hx",190,0x6bf34539)
            	HX_STACK_ARG(curl,"curl")
HXLINE( 190)		::lime::net::curl::CURLEasy_obj::cffi_lime_curl_easy_reset(curl);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(CURLEasy_obj,lime_curl_easy_reset,(void))

Int CURLEasy_obj::lime_curl_easy_send(Float curl, ::Dynamic buffer,Int buflen,Int n){
            	HX_STACK_FRAME("lime.net.curl.CURLEasy","lime_curl_easy_send",0x8ef89fb4,"lime.net.curl.CURLEasy.lime_curl_easy_send","lime/net/curl/CURLEasy.hx",191,0x6bf34539)
            	HX_STACK_ARG(curl,"curl")
            	HX_STACK_ARG(buffer,"buffer")
            	HX_STACK_ARG(buflen,"buflen")
            	HX_STACK_ARG(n,"n")
HXLINE( 191)		return ( (Int)(::lime::net::curl::CURLEasy_obj::cffi_lime_curl_easy_send(curl,hx::DynamicPtr(buffer),buflen,n)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(CURLEasy_obj,lime_curl_easy_send,return )

Int CURLEasy_obj::lime_curl_easy_setopt(Float handle,Int option, ::Dynamic parameter){
            	HX_STACK_FRAME("lime.net.curl.CURLEasy","lime_curl_easy_setopt",0xba26f73d,"lime.net.curl.CURLEasy.lime_curl_easy_setopt","lime/net/curl/CURLEasy.hx",192,0x6bf34539)
            	HX_STACK_ARG(handle,"handle")
            	HX_STACK_ARG(option,"option")
            	HX_STACK_ARG(parameter,"parameter")
HXLINE( 192)		return ( (Int)(::lime::net::curl::CURLEasy_obj::cffi_lime_curl_easy_setopt(handle,option,hx::DynamicPtr(parameter))) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(CURLEasy_obj,lime_curl_easy_setopt,return )

 ::Dynamic CURLEasy_obj::lime_curl_easy_strerror(Int errornum){
            	HX_STACK_FRAME("lime.net.curl.CURLEasy","lime_curl_easy_strerror",0xad9bb9e3,"lime.net.curl.CURLEasy.lime_curl_easy_strerror","lime/net/curl/CURLEasy.hx",193,0x6bf34539)
            	HX_STACK_ARG(errornum,"errornum")
HXLINE( 193)		 ::hx::Object * inVal = ( ( ::hx::Object *)(::lime::net::curl::CURLEasy_obj::cffi_lime_curl_easy_strerror(errornum)) );
HXDLIN( 193)		return Dynamic(hx::DynamicPtr(inVal));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(CURLEasy_obj,lime_curl_easy_strerror,return )

 ::Dynamic CURLEasy_obj::lime_curl_easy_unescape(Float curl,::String url,Int inlength,Int outlength){
            	HX_STACK_FRAME("lime.net.curl.CURLEasy","lime_curl_easy_unescape",0xf9812b06,"lime.net.curl.CURLEasy.lime_curl_easy_unescape","lime/net/curl/CURLEasy.hx",194,0x6bf34539)
            	HX_STACK_ARG(curl,"curl")
            	HX_STACK_ARG(url,"url")
            	HX_STACK_ARG(inlength,"inlength")
            	HX_STACK_ARG(outlength,"outlength")
HXLINE( 194)		 ::hx::Object * inVal = ( ( ::hx::Object *)(::lime::net::curl::CURLEasy_obj::cffi_lime_curl_easy_unescape(curl,url,inlength,outlength)) );
HXDLIN( 194)		return Dynamic(hx::DynamicPtr(inVal));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(CURLEasy_obj,lime_curl_easy_unescape,return )

::cpp::Function<  void(Float) > CURLEasy_obj::cffi_lime_curl_easy_cleanup;

::cpp::Function<  Float(Float) > CURLEasy_obj::cffi_lime_curl_easy_duphandle;

::cpp::Function<   ::hx::Object *(Float,::String,Int) > CURLEasy_obj::cffi_lime_curl_easy_escape;

::cpp::Function<   ::hx::Object *(Float,Int) > CURLEasy_obj::cffi_lime_curl_easy_getinfo;

::cpp::Function<  Float() > CURLEasy_obj::cffi_lime_curl_easy_init;

::cpp::Function<  Int(Float,Int) > CURLEasy_obj::cffi_lime_curl_easy_pause;

::cpp::Function<  Int(Float) > CURLEasy_obj::cffi_lime_curl_easy_perform;

::cpp::Function<  Int(Float, ::hx::Object *,Int,Int) > CURLEasy_obj::cffi_lime_curl_easy_recv;

::cpp::Function<  void(Float) > CURLEasy_obj::cffi_lime_curl_easy_reset;

::cpp::Function<  Int(Float, ::hx::Object *,Int,Int) > CURLEasy_obj::cffi_lime_curl_easy_send;

::cpp::Function<  Int(Float,Int, ::hx::Object *) > CURLEasy_obj::cffi_lime_curl_easy_setopt;

::cpp::Function<   ::hx::Object *(Int) > CURLEasy_obj::cffi_lime_curl_easy_strerror;

::cpp::Function<   ::hx::Object *(Float,::String,Int,Int) > CURLEasy_obj::cffi_lime_curl_easy_unescape;


CURLEasy_obj::CURLEasy_obj()
{
}

bool CURLEasy_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"init") ) { outValue = init_dyn(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"pause") ) { outValue = pause_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"reset") ) { outValue = reset_dyn(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"escape") ) { outValue = escape_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"setopt") ) { outValue = setopt_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"cleanup") ) { outValue = cleanup_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getinfo") ) { outValue = getinfo_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"perform") ) { outValue = perform_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"strerror") ) { outValue = strerror_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"unescape") ) { outValue = unescape_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"duphandle") ) { outValue = duphandle_dyn(); return true; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"__writeCallback") ) { outValue = _hx___writeCallback_dyn(); return true; }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"lime_curl_easy_init") ) { outValue = lime_curl_easy_init_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_curl_easy_recv") ) { outValue = lime_curl_easy_recv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_curl_easy_send") ) { outValue = lime_curl_easy_send_dyn(); return true; }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"lime_curl_easy_pause") ) { outValue = lime_curl_easy_pause_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_curl_easy_reset") ) { outValue = lime_curl_easy_reset_dyn(); return true; }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"lime_curl_easy_escape") ) { outValue = lime_curl_easy_escape_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_curl_easy_setopt") ) { outValue = lime_curl_easy_setopt_dyn(); return true; }
		break;
	case 22:
		if (HX_FIELD_EQ(inName,"lime_curl_easy_cleanup") ) { outValue = lime_curl_easy_cleanup_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_curl_easy_getinfo") ) { outValue = lime_curl_easy_getinfo_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_curl_easy_perform") ) { outValue = lime_curl_easy_perform_dyn(); return true; }
		break;
	case 23:
		if (HX_FIELD_EQ(inName,"lime_curl_easy_strerror") ) { outValue = lime_curl_easy_strerror_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_curl_easy_unescape") ) { outValue = lime_curl_easy_unescape_dyn(); return true; }
		break;
	case 24:
		if (HX_FIELD_EQ(inName,"lime_curl_easy_duphandle") ) { outValue = lime_curl_easy_duphandle_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_curl_easy_init") ) { outValue = cffi_lime_curl_easy_init; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_curl_easy_recv") ) { outValue = cffi_lime_curl_easy_recv; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_curl_easy_send") ) { outValue = cffi_lime_curl_easy_send; return true; }
		break;
	case 25:
		if (HX_FIELD_EQ(inName,"cffi_lime_curl_easy_pause") ) { outValue = cffi_lime_curl_easy_pause; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_curl_easy_reset") ) { outValue = cffi_lime_curl_easy_reset; return true; }
		break;
	case 26:
		if (HX_FIELD_EQ(inName,"cffi_lime_curl_easy_escape") ) { outValue = cffi_lime_curl_easy_escape; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_curl_easy_setopt") ) { outValue = cffi_lime_curl_easy_setopt; return true; }
		break;
	case 27:
		if (HX_FIELD_EQ(inName,"cffi_lime_curl_easy_cleanup") ) { outValue = cffi_lime_curl_easy_cleanup; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_curl_easy_getinfo") ) { outValue = cffi_lime_curl_easy_getinfo; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_curl_easy_perform") ) { outValue = cffi_lime_curl_easy_perform; return true; }
		break;
	case 28:
		if (HX_FIELD_EQ(inName,"cffi_lime_curl_easy_strerror") ) { outValue = cffi_lime_curl_easy_strerror; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_curl_easy_unescape") ) { outValue = cffi_lime_curl_easy_unescape; return true; }
		break;
	case 29:
		if (HX_FIELD_EQ(inName,"cffi_lime_curl_easy_duphandle") ) { outValue = cffi_lime_curl_easy_duphandle; return true; }
	}
	return false;
}

bool CURLEasy_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 24:
		if (HX_FIELD_EQ(inName,"cffi_lime_curl_easy_init") ) { cffi_lime_curl_easy_init=ioValue.Cast< ::cpp::Function<  Float() > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_curl_easy_recv") ) { cffi_lime_curl_easy_recv=ioValue.Cast< ::cpp::Function<  Int(Float, ::hx::Object *,Int,Int) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_curl_easy_send") ) { cffi_lime_curl_easy_send=ioValue.Cast< ::cpp::Function<  Int(Float, ::hx::Object *,Int,Int) > >(); return true; }
		break;
	case 25:
		if (HX_FIELD_EQ(inName,"cffi_lime_curl_easy_pause") ) { cffi_lime_curl_easy_pause=ioValue.Cast< ::cpp::Function<  Int(Float,Int) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_curl_easy_reset") ) { cffi_lime_curl_easy_reset=ioValue.Cast< ::cpp::Function<  void(Float) > >(); return true; }
		break;
	case 26:
		if (HX_FIELD_EQ(inName,"cffi_lime_curl_easy_escape") ) { cffi_lime_curl_easy_escape=ioValue.Cast< ::cpp::Function<   ::hx::Object *(Float,::String,Int) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_curl_easy_setopt") ) { cffi_lime_curl_easy_setopt=ioValue.Cast< ::cpp::Function<  Int(Float,Int, ::hx::Object *) > >(); return true; }
		break;
	case 27:
		if (HX_FIELD_EQ(inName,"cffi_lime_curl_easy_cleanup") ) { cffi_lime_curl_easy_cleanup=ioValue.Cast< ::cpp::Function<  void(Float) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_curl_easy_getinfo") ) { cffi_lime_curl_easy_getinfo=ioValue.Cast< ::cpp::Function<   ::hx::Object *(Float,Int) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_curl_easy_perform") ) { cffi_lime_curl_easy_perform=ioValue.Cast< ::cpp::Function<  Int(Float) > >(); return true; }
		break;
	case 28:
		if (HX_FIELD_EQ(inName,"cffi_lime_curl_easy_strerror") ) { cffi_lime_curl_easy_strerror=ioValue.Cast< ::cpp::Function<   ::hx::Object *(Int) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_curl_easy_unescape") ) { cffi_lime_curl_easy_unescape=ioValue.Cast< ::cpp::Function<   ::hx::Object *(Float,::String,Int,Int) > >(); return true; }
		break;
	case 29:
		if (HX_FIELD_EQ(inName,"cffi_lime_curl_easy_duphandle") ) { cffi_lime_curl_easy_duphandle=ioValue.Cast< ::cpp::Function<  Float(Float) > >(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *CURLEasy_obj_sMemberStorageInfo = 0;
static hx::StaticInfo CURLEasy_obj_sStaticStorageInfo[] = {
	{hx::fsObject /*Dynamic*/ ,(void *) &CURLEasy_obj::cffi_lime_curl_easy_cleanup,HX_HCSTRING("cffi_lime_curl_easy_cleanup","\xe9","\x82","\x3a","\xc5")},
	{hx::fsObject /*Dynamic*/ ,(void *) &CURLEasy_obj::cffi_lime_curl_easy_duphandle,HX_HCSTRING("cffi_lime_curl_easy_duphandle","\xac","\x16","\xd4","\x55")},
	{hx::fsObject /*Dynamic*/ ,(void *) &CURLEasy_obj::cffi_lime_curl_easy_escape,HX_HCSTRING("cffi_lime_curl_easy_escape","\x5c","\x8c","\x41","\x1b")},
	{hx::fsObject /*Dynamic*/ ,(void *) &CURLEasy_obj::cffi_lime_curl_easy_getinfo,HX_HCSTRING("cffi_lime_curl_easy_getinfo","\xc9","\x32","\x5d","\x47")},
	{hx::fsObject /*Dynamic*/ ,(void *) &CURLEasy_obj::cffi_lime_curl_easy_init,HX_HCSTRING("cffi_lime_curl_easy_init","\x2b","\x07","\x83","\xab")},
	{hx::fsObject /*Dynamic*/ ,(void *) &CURLEasy_obj::cffi_lime_curl_easy_pause,HX_HCSTRING("cffi_lime_curl_easy_pause","\x7b","\xa2","\x62","\x66")},
	{hx::fsObject /*Dynamic*/ ,(void *) &CURLEasy_obj::cffi_lime_curl_easy_perform,HX_HCSTRING("cffi_lime_curl_easy_perform","\x66","\x5f","\xd6","\x94")},
	{hx::fsObject /*Dynamic*/ ,(void *) &CURLEasy_obj::cffi_lime_curl_easy_recv,HX_HCSTRING("cffi_lime_curl_easy_recv","\x41","\x19","\x6f","\xb1")},
	{hx::fsObject /*Dynamic*/ ,(void *) &CURLEasy_obj::cffi_lime_curl_easy_reset,HX_HCSTRING("cffi_lime_curl_easy_reset","\x54","\x15","\xd3","\x8f")},
	{hx::fsObject /*Dynamic*/ ,(void *) &CURLEasy_obj::cffi_lime_curl_easy_send,HX_HCSTRING("cffi_lime_curl_easy_send","\x63","\x59","\x18","\xb2")},
	{hx::fsObject /*Dynamic*/ ,(void *) &CURLEasy_obj::cffi_lime_curl_easy_setopt,HX_HCSTRING("cffi_lime_curl_easy_setopt","\xac","\xba","\xeb","\xaf")},
	{hx::fsObject /*Dynamic*/ ,(void *) &CURLEasy_obj::cffi_lime_curl_easy_strerror,HX_HCSTRING("cffi_lime_curl_easy_strerror","\x12","\x77","\xab","\x30")},
	{hx::fsObject /*Dynamic*/ ,(void *) &CURLEasy_obj::cffi_lime_curl_easy_unescape,HX_HCSTRING("cffi_lime_curl_easy_unescape","\x35","\xe8","\x90","\x7c")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static void CURLEasy_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(CURLEasy_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(CURLEasy_obj::cffi_lime_curl_easy_cleanup,"cffi_lime_curl_easy_cleanup");
	HX_MARK_MEMBER_NAME(CURLEasy_obj::cffi_lime_curl_easy_duphandle,"cffi_lime_curl_easy_duphandle");
	HX_MARK_MEMBER_NAME(CURLEasy_obj::cffi_lime_curl_easy_escape,"cffi_lime_curl_easy_escape");
	HX_MARK_MEMBER_NAME(CURLEasy_obj::cffi_lime_curl_easy_getinfo,"cffi_lime_curl_easy_getinfo");
	HX_MARK_MEMBER_NAME(CURLEasy_obj::cffi_lime_curl_easy_init,"cffi_lime_curl_easy_init");
	HX_MARK_MEMBER_NAME(CURLEasy_obj::cffi_lime_curl_easy_pause,"cffi_lime_curl_easy_pause");
	HX_MARK_MEMBER_NAME(CURLEasy_obj::cffi_lime_curl_easy_perform,"cffi_lime_curl_easy_perform");
	HX_MARK_MEMBER_NAME(CURLEasy_obj::cffi_lime_curl_easy_recv,"cffi_lime_curl_easy_recv");
	HX_MARK_MEMBER_NAME(CURLEasy_obj::cffi_lime_curl_easy_reset,"cffi_lime_curl_easy_reset");
	HX_MARK_MEMBER_NAME(CURLEasy_obj::cffi_lime_curl_easy_send,"cffi_lime_curl_easy_send");
	HX_MARK_MEMBER_NAME(CURLEasy_obj::cffi_lime_curl_easy_setopt,"cffi_lime_curl_easy_setopt");
	HX_MARK_MEMBER_NAME(CURLEasy_obj::cffi_lime_curl_easy_strerror,"cffi_lime_curl_easy_strerror");
	HX_MARK_MEMBER_NAME(CURLEasy_obj::cffi_lime_curl_easy_unescape,"cffi_lime_curl_easy_unescape");
};

#ifdef HXCPP_VISIT_ALLOCS
static void CURLEasy_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(CURLEasy_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(CURLEasy_obj::cffi_lime_curl_easy_cleanup,"cffi_lime_curl_easy_cleanup");
	HX_VISIT_MEMBER_NAME(CURLEasy_obj::cffi_lime_curl_easy_duphandle,"cffi_lime_curl_easy_duphandle");
	HX_VISIT_MEMBER_NAME(CURLEasy_obj::cffi_lime_curl_easy_escape,"cffi_lime_curl_easy_escape");
	HX_VISIT_MEMBER_NAME(CURLEasy_obj::cffi_lime_curl_easy_getinfo,"cffi_lime_curl_easy_getinfo");
	HX_VISIT_MEMBER_NAME(CURLEasy_obj::cffi_lime_curl_easy_init,"cffi_lime_curl_easy_init");
	HX_VISIT_MEMBER_NAME(CURLEasy_obj::cffi_lime_curl_easy_pause,"cffi_lime_curl_easy_pause");
	HX_VISIT_MEMBER_NAME(CURLEasy_obj::cffi_lime_curl_easy_perform,"cffi_lime_curl_easy_perform");
	HX_VISIT_MEMBER_NAME(CURLEasy_obj::cffi_lime_curl_easy_recv,"cffi_lime_curl_easy_recv");
	HX_VISIT_MEMBER_NAME(CURLEasy_obj::cffi_lime_curl_easy_reset,"cffi_lime_curl_easy_reset");
	HX_VISIT_MEMBER_NAME(CURLEasy_obj::cffi_lime_curl_easy_send,"cffi_lime_curl_easy_send");
	HX_VISIT_MEMBER_NAME(CURLEasy_obj::cffi_lime_curl_easy_setopt,"cffi_lime_curl_easy_setopt");
	HX_VISIT_MEMBER_NAME(CURLEasy_obj::cffi_lime_curl_easy_strerror,"cffi_lime_curl_easy_strerror");
	HX_VISIT_MEMBER_NAME(CURLEasy_obj::cffi_lime_curl_easy_unescape,"cffi_lime_curl_easy_unescape");
};

#endif

hx::Class CURLEasy_obj::__mClass;

static ::String CURLEasy_obj_sStaticFields[] = {
	HX_HCSTRING("cleanup","\x24","\x0c","\x42","\xab"),
	HX_HCSTRING("duphandle","\xa7","\xa4","\xbc","\x73"),
	HX_HCSTRING("escape","\x81","\x43","\xda","\xda"),
	HX_HCSTRING("getinfo","\x04","\xbc","\x64","\x2d"),
	HX_HCSTRING("init","\x10","\x3b","\xbb","\x45"),
	HX_HCSTRING("pause","\xf6","\xd6","\x57","\xbd"),
	HX_HCSTRING("perform","\xa1","\xe8","\xdd","\x7a"),
	HX_HCSTRING("reset","\xcf","\x49","\xc8","\xe6"),
	HX_HCSTRING("setopt","\xd1","\x71","\x84","\x6f"),
	HX_HCSTRING("strerror","\x77","\x01","\x3c","\x91"),
	HX_HCSTRING("unescape","\x9a","\x72","\x21","\xdd"),
	HX_HCSTRING("__writeCallback","\xa4","\x72","\x5a","\xca"),
	HX_HCSTRING("lime_curl_easy_cleanup","\x30","\xcd","\xaa","\x62"),
	HX_HCSTRING("lime_curl_easy_duphandle","\xb3","\xc0","\xa0","\x67"),
	HX_HCSTRING("lime_curl_easy_escape","\xf5","\x67","\xb1","\x5f"),
	HX_HCSTRING("lime_curl_easy_getinfo","\x10","\x7d","\xcd","\xe4"),
	HX_HCSTRING("lime_curl_easy_init","\x84","\x9a","\xe4","\x65"),
	HX_HCSTRING("lime_curl_easy_pause","\x02","\xfd","\x61","\xc1"),
	HX_HCSTRING("lime_curl_easy_perform","\xad","\xa9","\x46","\x32"),
	HX_HCSTRING("lime_curl_easy_recv","\x9a","\xac","\xd0","\x6b"),
	HX_HCSTRING("lime_curl_easy_reset","\xdb","\x6f","\xd2","\xea"),
	HX_HCSTRING("lime_curl_easy_send","\xbc","\xec","\x79","\x6c"),
	HX_HCSTRING("lime_curl_easy_setopt","\x45","\x96","\x5b","\xf4"),
	HX_HCSTRING("lime_curl_easy_strerror","\xeb","\x2a","\x7c","\x55"),
	HX_HCSTRING("lime_curl_easy_unescape","\x0e","\x9c","\x61","\xa1"),
	HX_HCSTRING("cffi_lime_curl_easy_cleanup","\xe9","\x82","\x3a","\xc5"),
	HX_HCSTRING("cffi_lime_curl_easy_duphandle","\xac","\x16","\xd4","\x55"),
	HX_HCSTRING("cffi_lime_curl_easy_escape","\x5c","\x8c","\x41","\x1b"),
	HX_HCSTRING("cffi_lime_curl_easy_getinfo","\xc9","\x32","\x5d","\x47"),
	HX_HCSTRING("cffi_lime_curl_easy_init","\x2b","\x07","\x83","\xab"),
	HX_HCSTRING("cffi_lime_curl_easy_pause","\x7b","\xa2","\x62","\x66"),
	HX_HCSTRING("cffi_lime_curl_easy_perform","\x66","\x5f","\xd6","\x94"),
	HX_HCSTRING("cffi_lime_curl_easy_recv","\x41","\x19","\x6f","\xb1"),
	HX_HCSTRING("cffi_lime_curl_easy_reset","\x54","\x15","\xd3","\x8f"),
	HX_HCSTRING("cffi_lime_curl_easy_send","\x63","\x59","\x18","\xb2"),
	HX_HCSTRING("cffi_lime_curl_easy_setopt","\xac","\xba","\xeb","\xaf"),
	HX_HCSTRING("cffi_lime_curl_easy_strerror","\x12","\x77","\xab","\x30"),
	HX_HCSTRING("cffi_lime_curl_easy_unescape","\x35","\xe8","\x90","\x7c"),
	::String(null())
};

void CURLEasy_obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("lime.net.curl.CURLEasy","\x66","\xc7","\x70","\x5d");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &CURLEasy_obj::__GetStatic;
	__mClass->mSetStaticField = &CURLEasy_obj::__SetStatic;
	__mClass->mMarkFunc = CURLEasy_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(CURLEasy_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< CURLEasy_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = CURLEasy_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = CURLEasy_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = CURLEasy_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void CURLEasy_obj::__boot()
{
{
            	HX_STACK_FRAME("lime.net.curl.CURLEasy","boot",0x774eda3a,"lime.net.curl.CURLEasy.boot","lime/net/curl/CURLEasy.hx",182,0x6bf34539)
HXLINE( 182)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_curl_easy_cleanup",30,cd,aa,62),HX_("dv",92,57,00,00),false);
HXDLIN( 182)		cffi_lime_curl_easy_cleanup = inValue;
            	}
{
            	HX_STACK_FRAME("lime.net.curl.CURLEasy","boot",0x774eda3a,"lime.net.curl.CURLEasy.boot","lime/net/curl/CURLEasy.hx",183,0x6bf34539)
HXLINE( 183)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_curl_easy_duphandle",b3,c0,a0,67),HX_("dd",80,57,00,00),false);
HXDLIN( 183)		cffi_lime_curl_easy_duphandle = inValue;
            	}
{
            	HX_STACK_FRAME("lime.net.curl.CURLEasy","boot",0x774eda3a,"lime.net.curl.CURLEasy.boot","lime/net/curl/CURLEasy.hx",184,0x6bf34539)
HXLINE( 184)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_curl_easy_escape",f5,67,b1,5f),HX_("dsio",35,f5,70,42),false);
HXDLIN( 184)		cffi_lime_curl_easy_escape = inValue;
            	}
{
            	HX_STACK_FRAME("lime.net.curl.CURLEasy","boot",0x774eda3a,"lime.net.curl.CURLEasy.boot","lime/net/curl/CURLEasy.hx",185,0x6bf34539)
HXLINE( 185)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_curl_easy_getinfo",10,7d,cd,e4),HX_("dio",4a,3d,4c,00),false);
HXDLIN( 185)		cffi_lime_curl_easy_getinfo = inValue;
            	}
{
            	HX_STACK_FRAME("lime.net.curl.CURLEasy","boot",0x774eda3a,"lime.net.curl.CURLEasy.boot","lime/net/curl/CURLEasy.hx",186,0x6bf34539)
HXLINE( 186)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_curl_easy_init",84,9a,e4,65),HX_("d",64,00,00,00),false);
HXDLIN( 186)		cffi_lime_curl_easy_init = inValue;
            	}
{
            	HX_STACK_FRAME("lime.net.curl.CURLEasy","boot",0x774eda3a,"lime.net.curl.CURLEasy.boot","lime/net/curl/CURLEasy.hx",187,0x6bf34539)
HXLINE( 187)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_curl_easy_pause",02,fd,61,c1),HX_("dii",44,3d,4c,00),false);
HXDLIN( 187)		cffi_lime_curl_easy_pause = inValue;
            	}
{
            	HX_STACK_FRAME("lime.net.curl.CURLEasy","boot",0x774eda3a,"lime.net.curl.CURLEasy.boot","lime/net/curl/CURLEasy.hx",188,0x6bf34539)
HXLINE( 188)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_curl_easy_perform",ad,a9,46,32),HX_("di",85,57,00,00),false);
HXDLIN( 188)		cffi_lime_curl_easy_perform = inValue;
            	}
{
            	HX_STACK_FRAME("lime.net.curl.CURLEasy","boot",0x774eda3a,"lime.net.curl.CURLEasy.boot","lime/net/curl/CURLEasy.hx",189,0x6bf34539)
HXLINE( 189)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_curl_easy_recv",9a,ac,d0,6b),HX_("doiii",de,b9,c0,dd),false);
HXDLIN( 189)		cffi_lime_curl_easy_recv = inValue;
            	}
{
            	HX_STACK_FRAME("lime.net.curl.CURLEasy","boot",0x774eda3a,"lime.net.curl.CURLEasy.boot","lime/net/curl/CURLEasy.hx",190,0x6bf34539)
HXLINE( 190)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_curl_easy_reset",db,6f,d2,ea),HX_("dv",92,57,00,00),false);
HXDLIN( 190)		cffi_lime_curl_easy_reset = inValue;
            	}
{
            	HX_STACK_FRAME("lime.net.curl.CURLEasy","boot",0x774eda3a,"lime.net.curl.CURLEasy.boot","lime/net/curl/CURLEasy.hx",191,0x6bf34539)
HXLINE( 191)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_curl_easy_send",bc,ec,79,6c),HX_("doiii",de,b9,c0,dd),false);
HXDLIN( 191)		cffi_lime_curl_easy_send = inValue;
            	}
{
            	HX_STACK_FRAME("lime.net.curl.CURLEasy","boot",0x774eda3a,"lime.net.curl.CURLEasy.boot","lime/net/curl/CURLEasy.hx",192,0x6bf34539)
HXLINE( 192)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_curl_easy_setopt",45,96,5b,f4),HX_("dioi",df,63,69,42),false);
HXDLIN( 192)		cffi_lime_curl_easy_setopt = inValue;
            	}
{
            	HX_STACK_FRAME("lime.net.curl.CURLEasy","boot",0x774eda3a,"lime.net.curl.CURLEasy.boot","lime/net/curl/CURLEasy.hx",193,0x6bf34539)
HXLINE( 193)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_curl_easy_strerror",eb,2a,7c,55),HX_("io",e6,5b,00,00),false);
HXDLIN( 193)		cffi_lime_curl_easy_strerror = inValue;
            	}
{
            	HX_STACK_FRAME("lime.net.curl.CURLEasy","boot",0x774eda3a,"lime.net.curl.CURLEasy.boot","lime/net/curl/CURLEasy.hx",194,0x6bf34539)
HXLINE( 194)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_curl_easy_unescape",0e,9c,61,a1),HX_("dsiio",60,94,65,e0),false);
HXDLIN( 194)		cffi_lime_curl_easy_unescape = inValue;
            	}
}

} // end namespace lime
} // end namespace net
} // end namespace curl
