// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_ds_BalancedTree
#include <haxe/ds/BalancedTree.h>
#endif
#ifndef INCLUDED_haxe_ds_EnumValueMap
#include <haxe/ds/EnumValueMap.h>
#endif
#ifndef INCLUDED_haxe_ds_IntMap
#include <haxe/ds/IntMap.h>
#endif
#ifndef INCLUDED_haxe_ds_ObjectMap
#include <haxe/ds/ObjectMap.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif
#ifndef INCLUDED_openfl_utils__Dictionary_ClassMap
#include <openfl/utils/_Dictionary/ClassMap.h>
#endif
#ifndef INCLUDED_openfl_utils__Dictionary_Dictionary_Impl_
#include <openfl/utils/_Dictionary/Dictionary_Impl_.h>
#endif

namespace openfl{
namespace utils{
namespace _Dictionary{

void Dictionary_Impl__obj::__construct() { }

Dynamic Dictionary_Impl__obj::__CreateEmpty() { return new Dictionary_Impl__obj; }

hx::ObjectPtr< Dictionary_Impl__obj > Dictionary_Impl__obj::__new()
{
	hx::ObjectPtr< Dictionary_Impl__obj > _hx_result = new Dictionary_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

Dynamic Dictionary_Impl__obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Dictionary_Impl__obj > _hx_result = new Dictionary_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

Bool Dictionary_Impl__obj::exists(::Dynamic this1, ::Dynamic key){
            	HX_STACK_FRAME("openfl.utils._Dictionary.Dictionary_Impl_","exists",0x2c05b8c0,"openfl.utils._Dictionary.Dictionary_Impl_.exists","openfl/utils/Dictionary.hx",23,0x5979b1eb)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(key,"key")
HXLINE(  23)		return ::haxe::IMap_obj::exists(this1,key);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Dictionary_Impl__obj,exists,return )

 ::Dynamic Dictionary_Impl__obj::get(::Dynamic this1, ::Dynamic key){
            	HX_STACK_FRAME("openfl.utils._Dictionary.Dictionary_Impl_","get",0x56beef32,"openfl.utils._Dictionary.Dictionary_Impl_.get","openfl/utils/Dictionary.hx",30,0x5979b1eb)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(key,"key")
HXLINE(  30)		return ::haxe::IMap_obj::get(this1,key);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Dictionary_Impl__obj,get,return )

Bool Dictionary_Impl__obj::remove(::Dynamic this1, ::Dynamic key){
            	HX_STACK_FRAME("openfl.utils._Dictionary.Dictionary_Impl_","remove",0x70ae3728,"openfl.utils._Dictionary.Dictionary_Impl_.remove","openfl/utils/Dictionary.hx",37,0x5979b1eb)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(key,"key")
HXLINE(  37)		return ::haxe::IMap_obj::remove(this1,key);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Dictionary_Impl__obj,remove,return )

 ::Dynamic Dictionary_Impl__obj::set(::Dynamic this1, ::Dynamic key, ::Dynamic value){
            	HX_STACK_FRAME("openfl.utils._Dictionary.Dictionary_Impl_","set",0x56c80a3e,"openfl.utils._Dictionary.Dictionary_Impl_.set","openfl/utils/Dictionary.hx",42,0x5979b1eb)
            	HX_STACK_ARG(this1,"this1")
            	HX_STACK_ARG(key,"key")
            	HX_STACK_ARG(value,"value")
HXLINE(  44)		::haxe::IMap_obj::set(this1,key,value);
HXLINE(  45)		return value;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Dictionary_Impl__obj,set,return )

 ::Dynamic Dictionary_Impl__obj::iterator(::Dynamic this1){
            	HX_STACK_FRAME("openfl.utils._Dictionary.Dictionary_Impl_","iterator",0x888765d2,"openfl.utils._Dictionary.Dictionary_Impl_.iterator","openfl/utils/Dictionary.hx",52,0x5979b1eb)
            	HX_STACK_ARG(this1,"this1")
HXLINE(  52)		return ::haxe::IMap_obj::keys(this1);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Dictionary_Impl__obj,iterator,return )

 ::haxe::ds::StringMap Dictionary_Impl__obj::toStringMap(::Dynamic t,Bool weakKeys){
            	HX_STACK_FRAME("openfl.utils._Dictionary.Dictionary_Impl_","toStringMap",0xbb490fec,"openfl.utils._Dictionary.Dictionary_Impl_.toStringMap","openfl/utils/Dictionary.hx",59,0x5979b1eb)
            	HX_STACK_ARG(t,"t")
            	HX_STACK_ARG(weakKeys,"weakKeys")
HXLINE(  59)		return  ::haxe::ds::StringMap_obj::__new();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Dictionary_Impl__obj,toStringMap,return )

 ::haxe::ds::IntMap Dictionary_Impl__obj::toIntMap(::Dynamic t,Bool weakKeys){
            	HX_STACK_FRAME("openfl.utils._Dictionary.Dictionary_Impl_","toIntMap",0xba9ff8ac,"openfl.utils._Dictionary.Dictionary_Impl_.toIntMap","openfl/utils/Dictionary.hx",66,0x5979b1eb)
            	HX_STACK_ARG(t,"t")
            	HX_STACK_ARG(weakKeys,"weakKeys")
HXLINE(  66)		return  ::haxe::ds::IntMap_obj::__new();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Dictionary_Impl__obj,toIntMap,return )

 ::haxe::ds::EnumValueMap Dictionary_Impl__obj::toEnumValueMapMap(::Dynamic t,Bool weakKeys){
            	HX_STACK_FRAME("openfl.utils._Dictionary.Dictionary_Impl_","toEnumValueMapMap",0xa2f7a691,"openfl.utils._Dictionary.Dictionary_Impl_.toEnumValueMapMap","openfl/utils/Dictionary.hx",73,0x5979b1eb)
            	HX_STACK_ARG(t,"t")
            	HX_STACK_ARG(weakKeys,"weakKeys")
HXLINE(  73)		return  ::haxe::ds::EnumValueMap_obj::__new();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Dictionary_Impl__obj,toEnumValueMapMap,return )

 ::haxe::ds::ObjectMap Dictionary_Impl__obj::toObjectMap(::Dynamic t,Bool weakKeys){
            	HX_STACK_FRAME("openfl.utils._Dictionary.Dictionary_Impl_","toObjectMap",0x370da2be,"openfl.utils._Dictionary.Dictionary_Impl_.toObjectMap","openfl/utils/Dictionary.hx",80,0x5979b1eb)
            	HX_STACK_ARG(t,"t")
            	HX_STACK_ARG(weakKeys,"weakKeys")
HXLINE(  80)		return  ::haxe::ds::ObjectMap_obj::__new();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Dictionary_Impl__obj,toObjectMap,return )

 ::openfl::utils::_Dictionary::ClassMap Dictionary_Impl__obj::toClassMap(::Dynamic t,Bool weakKeys){
            	HX_STACK_FRAME("openfl.utils._Dictionary.Dictionary_Impl_","toClassMap",0x46f4aec3,"openfl.utils._Dictionary.Dictionary_Impl_.toClassMap","openfl/utils/Dictionary.hx",87,0x5979b1eb)
            	HX_STACK_ARG(t,"t")
            	HX_STACK_ARG(weakKeys,"weakKeys")
HXLINE(  87)		return  ::openfl::utils::_Dictionary::ClassMap_obj::__new();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Dictionary_Impl__obj,toClassMap,return )

 ::haxe::ds::StringMap Dictionary_Impl__obj::fromStringMap( ::haxe::ds::StringMap map){
            	HX_STACK_FRAME("openfl.utils._Dictionary.Dictionary_Impl_","fromStringMap",0x17b1b91d,"openfl.utils._Dictionary.Dictionary_Impl_.fromStringMap","openfl/utils/Dictionary.hx",94,0x5979b1eb)
            	HX_STACK_ARG(map,"map")
HXLINE(  94)		return map;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Dictionary_Impl__obj,fromStringMap,return )

 ::haxe::ds::IntMap Dictionary_Impl__obj::fromIntMap( ::haxe::ds::IntMap map){
            	HX_STACK_FRAME("openfl.utils._Dictionary.Dictionary_Impl_","fromIntMap",0xc10f16db,"openfl.utils._Dictionary.Dictionary_Impl_.fromIntMap","openfl/utils/Dictionary.hx",101,0x5979b1eb)
            	HX_STACK_ARG(map,"map")
HXLINE( 101)		return map;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Dictionary_Impl__obj,fromIntMap,return )

 ::haxe::ds::ObjectMap Dictionary_Impl__obj::fromObjectMap( ::haxe::ds::ObjectMap map){
            	HX_STACK_FRAME("openfl.utils._Dictionary.Dictionary_Impl_","fromObjectMap",0x93764bef,"openfl.utils._Dictionary.Dictionary_Impl_.fromObjectMap","openfl/utils/Dictionary.hx",108,0x5979b1eb)
            	HX_STACK_ARG(map,"map")
HXLINE( 108)		return map;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Dictionary_Impl__obj,fromObjectMap,return )

 ::openfl::utils::_Dictionary::ClassMap Dictionary_Impl__obj::fromClassMap( ::openfl::utils::_Dictionary::ClassMap map){
            	HX_STACK_FRAME("openfl.utils._Dictionary.Dictionary_Impl_","fromClassMap",0x1e0af6b2,"openfl.utils._Dictionary.Dictionary_Impl_.fromClassMap","openfl/utils/Dictionary.hx",115,0x5979b1eb)
            	HX_STACK_ARG(map,"map")
HXLINE( 115)		return map;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Dictionary_Impl__obj,fromClassMap,return )


Dictionary_Impl__obj::Dictionary_Impl__obj()
{
}

bool Dictionary_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"get") ) { outValue = get_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set") ) { outValue = set_dyn(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"exists") ) { outValue = exists_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"remove") ) { outValue = remove_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"iterator") ) { outValue = iterator_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"toIntMap") ) { outValue = toIntMap_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"toClassMap") ) { outValue = toClassMap_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"fromIntMap") ) { outValue = fromIntMap_dyn(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"toStringMap") ) { outValue = toStringMap_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"toObjectMap") ) { outValue = toObjectMap_dyn(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"fromClassMap") ) { outValue = fromClassMap_dyn(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"fromStringMap") ) { outValue = fromStringMap_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"fromObjectMap") ) { outValue = fromObjectMap_dyn(); return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"toEnumValueMapMap") ) { outValue = toEnumValueMapMap_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *Dictionary_Impl__obj_sMemberStorageInfo = 0;
static hx::StaticInfo *Dictionary_Impl__obj_sStaticStorageInfo = 0;
#endif

static void Dictionary_Impl__obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Dictionary_Impl__obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Dictionary_Impl__obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Dictionary_Impl__obj::__mClass,"__mClass");
};

#endif

hx::Class Dictionary_Impl__obj::__mClass;

static ::String Dictionary_Impl__obj_sStaticFields[] = {
	HX_HCSTRING("exists","\xdc","\x1d","\xe0","\xbf"),
	HX_HCSTRING("get","\x96","\x80","\x4e","\x00"),
	HX_HCSTRING("remove","\x44","\x9c","\x88","\x04"),
	HX_HCSTRING("set","\xa2","\x9b","\x57","\x00"),
	HX_HCSTRING("iterator","\xee","\x49","\x9a","\x93"),
	HX_HCSTRING("toStringMap","\x50","\xa5","\x9e","\x2e"),
	HX_HCSTRING("toIntMap","\xc8","\xdc","\xb2","\xc5"),
	HX_HCSTRING("toEnumValueMapMap","\xf5","\x5e","\x8d","\x00"),
	HX_HCSTRING("toObjectMap","\x22","\x38","\x63","\xaa"),
	HX_HCSTRING("toClassMap","\xdf","\xd1","\x9d","\x67"),
	HX_HCSTRING("fromStringMap","\x81","\x6f","\xa2","\x3b"),
	HX_HCSTRING("fromIntMap","\xf7","\x39","\xb8","\xe1"),
	HX_HCSTRING("fromObjectMap","\x53","\x02","\x67","\xb7"),
	HX_HCSTRING("fromClassMap","\xce","\x18","\x98","\x95"),
	::String(null())
};

void Dictionary_Impl__obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("openfl.utils._Dictionary.Dictionary_Impl_","\x0a","\x51","\x0a","\x34");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Dictionary_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Dictionary_Impl__obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Dictionary_Impl__obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< Dictionary_Impl__obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Dictionary_Impl__obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Dictionary_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Dictionary_Impl__obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace openfl
} // end namespace utils
} // end namespace _Dictionary
