// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_openfl_display_IPreloader
#include <openfl/display/IPreloader.h>
#endif

namespace openfl{
namespace display{


static ::String IPreloader_obj_sMemberFields[] = {
	HX_HCSTRING("onInit","\xcf","\x43","\x45","\xe8"),
	HX_HCSTRING("onLoaded","\x84","\x3e","\x1c","\x38"),
	HX_HCSTRING("onUpdate","\x88","\x7c","\xb2","\x66"),
	::String(null()) };

static void IPreloader_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(IPreloader_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void IPreloader_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(IPreloader_obj::__mClass,"__mClass");
};

#endif

hx::Class IPreloader_obj::__mClass;

void IPreloader_obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("openfl.display.IPreloader","\xb7","\x4b","\x5a","\x69");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mMarkFunc = IPreloader_obj_sMarkStatics;
	__mClass->mMembers = hx::Class_obj::dupFunctions(IPreloader_obj_sMemberFields);
	__mClass->mCanCast = hx::TIsInterface< (int)0x882ab29f >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = IPreloader_obj_sVisitStatics;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace openfl
} // end namespace display
