// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_Reflect
#include <Reflect.h>
#endif
#ifndef INCLUDED_lime_app_Application
#include <lime/app/Application.h>
#endif
#ifndef INCLUDED_lime_app_IModule
#include <lime/app/IModule.h>
#endif
#ifndef INCLUDED_lime_app_Module
#include <lime/app/Module.h>
#endif
#ifndef INCLUDED_lime_ui_Window
#include <lime/ui/Window.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_display_Stage
#include <openfl/display/Stage.h>
#endif
#ifndef INCLUDED_openfl_display_Window
#include <openfl/display/Window.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif

namespace openfl{
namespace display{

void Window_obj::__construct( ::Dynamic config){
            	HX_STACK_FRAME("openfl.display.Window","new",0x253949cc,"openfl.display.Window.new","openfl/display/Window.hx",17,0x156e59e2)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(config,"config")
HXLINE(  17)		super::__construct(config);
            	}

Dynamic Window_obj::__CreateEmpty() { return new Window_obj; }

hx::ObjectPtr< Window_obj > Window_obj::__new( ::Dynamic config)
{
	hx::ObjectPtr< Window_obj > _hx_result = new Window_obj();
	_hx_result->__construct(config);
	return _hx_result;
}

Dynamic Window_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Window_obj > _hx_result = new Window_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

void Window_obj::create( ::lime::app::Application application){
            	HX_STACK_FRAME("openfl.display.Window","create",0xf67e9910,"openfl.display.Window.create","openfl/display/Window.hx",22,0x156e59e2)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(application,"application")
HXLINE(  24)		this->super::create(application);
HXLINE(  28)		 ::Dynamic _hx_tmp;
HXDLIN(  28)		Bool _hx_tmp1 = ::Reflect_obj::hasField(this->config,HX_("background",ee,93,1d,26));
HXDLIN(  28)		if (_hx_tmp1) {
HXLINE(  28)			_hx_tmp = this->config->__Field(HX_("background",ee,93,1d,26),hx::paccDynamic);
            		}
            		else {
HXLINE(  28)			_hx_tmp = (int)16777215;
            		}
HXDLIN(  28)		this->stage =  ::openfl::display::Stage_obj::__new(hx::ObjectPtr<OBJ_>(this),_hx_tmp);
HXLINE(  30)		Bool _hx_tmp2;
HXDLIN(  30)		Bool _hx_tmp3 = ::Reflect_obj::hasField(this->config,HX_("resizable",6b,37,50,a9));
HXDLIN(  30)		if (_hx_tmp3) {
HXLINE(  30)			_hx_tmp2 = !(( (Bool)(this->config->__Field(HX_("resizable",6b,37,50,a9),hx::paccDynamic)) ));
            		}
            		else {
HXLINE(  30)			_hx_tmp2 = false;
            		}
HXDLIN(  30)		if (_hx_tmp2) {
HXLINE(  32)			this->stage->_hx___setLogicalSize( ::Dynamic(this->config->__Field(HX_("width",06,b6,62,ca),hx::paccDynamic)), ::Dynamic(this->config->__Field(HX_("height",e7,07,4c,02),hx::paccDynamic)));
            		}
HXLINE(  36)		application->addModule(this->stage);
            	}



Window_obj::Window_obj()
{
}

hx::Val Window_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"create") ) { return hx::Val( create_dyn()); }
	}
	return super::__Field(inName,inCallProp);
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *Window_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *Window_obj_sStaticStorageInfo = 0;
#endif

static ::String Window_obj_sMemberFields[] = {
	HX_HCSTRING("create","\xfc","\x66","\x0f","\x7c"),
	::String(null()) };

static void Window_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Window_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Window_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Window_obj::__mClass,"__mClass");
};

#endif

hx::Class Window_obj::__mClass;

void Window_obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("openfl.display.Window","\xda","\xb3","\xcd","\xdc");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Window_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(Window_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< Window_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Window_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Window_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Window_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace openfl
} // end namespace display
