// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_openfl__internal_renderer_flash_FlashTilemap
#include <openfl/_internal/renderer/flash/FlashTilemap.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_Tilemap
#include <openfl/display/Tilemap.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif

namespace openfl{
namespace _internal{
namespace renderer{
namespace flash{

void FlashTilemap_obj::__construct() { }

Dynamic FlashTilemap_obj::__CreateEmpty() { return new FlashTilemap_obj; }

hx::ObjectPtr< FlashTilemap_obj > FlashTilemap_obj::__new()
{
	hx::ObjectPtr< FlashTilemap_obj > _hx_result = new FlashTilemap_obj();
	_hx_result->__construct();
	return _hx_result;
}

Dynamic FlashTilemap_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< FlashTilemap_obj > _hx_result = new FlashTilemap_obj();
	_hx_result->__construct();
	return _hx_result;
}

void FlashTilemap_obj::render( ::openfl::display::Tilemap tilemap){
            	HX_STACK_FRAME("openfl._internal.renderer.flash.FlashTilemap","render",0xa68b48cd,"openfl._internal.renderer.flash.FlashTilemap.render","openfl/_internal/renderer/flash/FlashTilemap.hx",20,0x8554e347)
            	HX_STACK_ARG(tilemap,"tilemap")
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FlashTilemap_obj,render,(void))


FlashTilemap_obj::FlashTilemap_obj()
{
}

bool FlashTilemap_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"render") ) { outValue = render_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *FlashTilemap_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *FlashTilemap_obj_sStaticStorageInfo = 0;
#endif

static void FlashTilemap_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(FlashTilemap_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void FlashTilemap_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(FlashTilemap_obj::__mClass,"__mClass");
};

#endif

hx::Class FlashTilemap_obj::__mClass;

static ::String FlashTilemap_obj_sStaticFields[] = {
	HX_HCSTRING("render","\x56","\x6b","\x29","\x05"),
	::String(null())
};

void FlashTilemap_obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("openfl._internal.renderer.flash.FlashTilemap","\x17","\xfa","\xf4","\x84");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &FlashTilemap_obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = FlashTilemap_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(FlashTilemap_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< FlashTilemap_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = FlashTilemap_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = FlashTilemap_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = FlashTilemap_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace openfl
} // end namespace _internal
} // end namespace renderer
} // end namespace flash
