// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_haxe_crypto_Md5
#include <haxe/crypto/Md5.h>
#endif

namespace haxe{
namespace crypto{

void Md5_obj::__construct(){
            	HX_STACK_FRAME("haxe.crypto.Md5","new",0x90507feb,"haxe.crypto.Md5.new","C:\\HaxeToolkit\\haxe\\std/haxe/crypto/Md5.hx",73,0xa59e361e)
            	HX_STACK_THIS(this)
            	}

Dynamic Md5_obj::__CreateEmpty() { return new Md5_obj; }

hx::ObjectPtr< Md5_obj > Md5_obj::__new()
{
	hx::ObjectPtr< Md5_obj > _hx_result = new Md5_obj();
	_hx_result->__construct();
	return _hx_result;
}

Dynamic Md5_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Md5_obj > _hx_result = new Md5_obj();
	_hx_result->__construct();
	return _hx_result;
}

Int Md5_obj::bitOR(Int a,Int b){
            	HX_STACK_FRAME("haxe.crypto.Md5","bitOR",0xbf34737b,"haxe.crypto.Md5.bitOR","C:\\HaxeToolkit\\haxe\\std/haxe/crypto/Md5.hx",79,0xa59e361e)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(a,"a")
            	HX_STACK_ARG(b,"b")
HXLINE(  79)		return ((int)((int)((int)hx::UShr(a,(int)1) | (int)hx::UShr(b,(int)1)) << (int)(int)1) | (int)((int)((int)a & (int)(int)1) | (int)((int)b & (int)(int)1)));
            	}


HX_DEFINE_DYNAMIC_FUNC2(Md5_obj,bitOR,return )

Int Md5_obj::bitXOR(Int a,Int b){
            	HX_STACK_FRAME("haxe.crypto.Md5","bitXOR",0x8eb76a23,"haxe.crypto.Md5.bitXOR","C:\\HaxeToolkit\\haxe\\std/haxe/crypto/Md5.hx",85,0xa59e361e)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(a,"a")
            	HX_STACK_ARG(b,"b")
HXLINE(  85)		return ((int)((int)((int)hx::UShr(a,(int)1) ^ (int)hx::UShr(b,(int)1)) << (int)(int)1) | (int)((int)((int)a & (int)(int)1) ^ (int)((int)b & (int)(int)1)));
            	}


HX_DEFINE_DYNAMIC_FUNC2(Md5_obj,bitXOR,return )

Int Md5_obj::bitAND(Int a,Int b){
            	HX_STACK_FRAME("haxe.crypto.Md5","bitAND",0x8ea5f55f,"haxe.crypto.Md5.bitAND","C:\\HaxeToolkit\\haxe\\std/haxe/crypto/Md5.hx",91,0xa59e361e)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(a,"a")
            	HX_STACK_ARG(b,"b")
HXLINE(  91)		return ((int)((int)((int)hx::UShr(a,(int)1) & (int)hx::UShr(b,(int)1)) << (int)(int)1) | (int)((int)((int)a & (int)(int)1) & (int)((int)b & (int)(int)1)));
            	}


HX_DEFINE_DYNAMIC_FUNC2(Md5_obj,bitAND,return )

Int Md5_obj::addme(Int x,Int y){
            	HX_STACK_FRAME("haxe.crypto.Md5","addme",0x2873c404,"haxe.crypto.Md5.addme","C:\\HaxeToolkit\\haxe\\std/haxe/crypto/Md5.hx",94,0xa59e361e)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
HXLINE(  95)		HX_VARI( Int,lsw) = (((int)x & (int)(int)65535) + ((int)y & (int)(int)65535));
HXLINE(  97)		return ((int)((int)((((int)x >> (int)(int)16) + ((int)y >> (int)(int)16)) + ((int)lsw >> (int)(int)16)) << (int)(int)16) | (int)((int)lsw & (int)(int)65535));
            	}


HX_DEFINE_DYNAMIC_FUNC2(Md5_obj,addme,return )

::String Md5_obj::hex(::Array< Int > a){
            	HX_STACK_FRAME("haxe.crypto.Md5","hex",0x904bf266,"haxe.crypto.Md5.hex","C:\\HaxeToolkit\\haxe\\std/haxe/crypto/Md5.hx",100,0xa59e361e)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(a,"a")
HXLINE( 101)		HX_VARI( ::String,str) = HX_("",00,00,00,00);
HXLINE( 103)		{
HXLINE( 103)			HX_VARI( Int,_g) = (int)0;
HXDLIN( 103)			while((_g < a->length)){
HXLINE( 103)				HX_VARI( Int,num) = a->__get(_g);
HXDLIN( 103)				++_g;
HXLINE( 104)				{
HXLINE( 104)					HX_VARI( Int,_g1) = (int)0;
HXDLIN( 104)					while((_g1 < (int)4)){
HXLINE( 104)						HX_VARI( Int,j) = _g1++;
HXLINE( 105)						::String _hx_tmp = HX_("0123456789abcdef",68,7e,d5,ef).charAt(((int)((int)num >> (int)((j * (int)8) + (int)4)) & (int)(int)15));
HXLINE( 106)						::String _hx_tmp1 = HX_("0123456789abcdef",68,7e,d5,ef).charAt(((int)((int)num >> (int)(j * (int)8)) & (int)(int)15));
HXLINE( 105)						hx::AddEq(str,(_hx_tmp + _hx_tmp1));
            					}
            				}
            			}
            		}
HXLINE( 107)		return str;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Md5_obj,hex,return )

Int Md5_obj::rol(Int num,Int cnt){
            	HX_STACK_FRAME("haxe.crypto.Md5","rol",0x9053919a,"haxe.crypto.Md5.rol","C:\\HaxeToolkit\\haxe\\std/haxe/crypto/Md5.hx",173,0xa59e361e)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(num,"num")
            	HX_STACK_ARG(cnt,"cnt")
HXLINE( 173)		return ((int)((int)num << (int)cnt) | (int)hx::UShr(num,((int)32 - cnt)));
            	}


HX_DEFINE_DYNAMIC_FUNC2(Md5_obj,rol,return )

Int Md5_obj::cmn(Int q,Int a,Int b,Int x,Int s,Int t){
            	HX_STACK_FRAME("haxe.crypto.Md5","cmn",0x90482e0f,"haxe.crypto.Md5.cmn","C:\\HaxeToolkit\\haxe\\std/haxe/crypto/Md5.hx",177,0xa59e361e)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(q,"q")
            	HX_STACK_ARG(a,"a")
            	HX_STACK_ARG(b,"b")
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(s,"s")
            	HX_STACK_ARG(t,"t")
HXLINE( 177)		Int _hx_tmp = this->addme(a,q);
HXDLIN( 177)		Int _hx_tmp1 = this->addme(x,t);
HXDLIN( 177)		Int _hx_tmp2 = this->addme(_hx_tmp,_hx_tmp1);
HXDLIN( 177)		Int _hx_tmp3 = this->rol(_hx_tmp2,s);
HXDLIN( 177)		return this->addme(_hx_tmp3,b);
            	}


HX_DEFINE_DYNAMIC_FUNC6(Md5_obj,cmn,return )

Int Md5_obj::ff(Int a,Int b,Int c,Int d,Int x,Int s,Int t){
            	HX_STACK_FRAME("haxe.crypto.Md5","ff",0xde352415,"haxe.crypto.Md5.ff","C:\\HaxeToolkit\\haxe\\std/haxe/crypto/Md5.hx",181,0xa59e361e)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(a,"a")
            	HX_STACK_ARG(b,"b")
            	HX_STACK_ARG(c,"c")
            	HX_STACK_ARG(d,"d")
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(s,"s")
            	HX_STACK_ARG(t,"t")
HXLINE( 181)		Int _hx_tmp = this->bitAND(b,c);
HXDLIN( 181)		Int _hx_tmp1 = this->bitAND(~(b),d);
HXDLIN( 181)		Int _hx_tmp2 = this->bitOR(_hx_tmp,_hx_tmp1);
HXDLIN( 181)		return this->cmn(_hx_tmp2,a,b,x,s,t);
            	}


HX_DEFINE_DYNAMIC_FUNC7(Md5_obj,ff,return )

Int Md5_obj::gg(Int a,Int b,Int c,Int d,Int x,Int s,Int t){
            	HX_STACK_FRAME("haxe.crypto.Md5","gg",0xde3524f5,"haxe.crypto.Md5.gg","C:\\HaxeToolkit\\haxe\\std/haxe/crypto/Md5.hx",185,0xa59e361e)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(a,"a")
            	HX_STACK_ARG(b,"b")
            	HX_STACK_ARG(c,"c")
            	HX_STACK_ARG(d,"d")
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(s,"s")
            	HX_STACK_ARG(t,"t")
HXLINE( 185)		Int _hx_tmp = this->bitAND(b,d);
HXDLIN( 185)		Int _hx_tmp1 = this->bitAND(c,~(d));
HXDLIN( 185)		Int _hx_tmp2 = this->bitOR(_hx_tmp,_hx_tmp1);
HXDLIN( 185)		return this->cmn(_hx_tmp2,a,b,x,s,t);
            	}


HX_DEFINE_DYNAMIC_FUNC7(Md5_obj,gg,return )

Int Md5_obj::hh(Int a,Int b,Int c,Int d,Int x,Int s,Int t){
            	HX_STACK_FRAME("haxe.crypto.Md5","hh",0xde3525d5,"haxe.crypto.Md5.hh","C:\\HaxeToolkit\\haxe\\std/haxe/crypto/Md5.hx",189,0xa59e361e)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(a,"a")
            	HX_STACK_ARG(b,"b")
            	HX_STACK_ARG(c,"c")
            	HX_STACK_ARG(d,"d")
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(s,"s")
            	HX_STACK_ARG(t,"t")
HXLINE( 189)		Int _hx_tmp = this->bitXOR(b,c);
HXDLIN( 189)		Int _hx_tmp1 = this->bitXOR(_hx_tmp,d);
HXDLIN( 189)		return this->cmn(_hx_tmp1,a,b,x,s,t);
            	}


HX_DEFINE_DYNAMIC_FUNC7(Md5_obj,hh,return )

Int Md5_obj::ii(Int a,Int b,Int c,Int d,Int x,Int s,Int t){
            	HX_STACK_FRAME("haxe.crypto.Md5","ii",0xde3526b5,"haxe.crypto.Md5.ii","C:\\HaxeToolkit\\haxe\\std/haxe/crypto/Md5.hx",193,0xa59e361e)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(a,"a")
            	HX_STACK_ARG(b,"b")
            	HX_STACK_ARG(c,"c")
            	HX_STACK_ARG(d,"d")
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(s,"s")
            	HX_STACK_ARG(t,"t")
HXLINE( 193)		Int _hx_tmp = this->bitOR(b,~(d));
HXDLIN( 193)		Int _hx_tmp1 = this->bitXOR(c,_hx_tmp);
HXDLIN( 193)		return this->cmn(_hx_tmp1,a,b,x,s,t);
            	}


HX_DEFINE_DYNAMIC_FUNC7(Md5_obj,ii,return )

::Array< Int > Md5_obj::doEncode(::Array< Int > x){
            	HX_STACK_FRAME("haxe.crypto.Md5","doEncode",0x943f9096,"haxe.crypto.Md5.doEncode","C:\\HaxeToolkit\\haxe\\std/haxe/crypto/Md5.hx",196,0xa59e361e)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(x,"x")
HXLINE( 198)		HX_VARI( Int,a) = (int)1732584193;
HXLINE( 199)		HX_VARI( Int,b) = (int)-271733879;
HXLINE( 200)		HX_VARI( Int,c) = (int)-1732584194;
HXLINE( 201)		HX_VARI( Int,d) = (int)271733878;
HXLINE( 205)		HX_VARI( Int,i) = (int)0;
HXLINE( 206)		while((i < x->length)){
HXLINE( 207)			HX_VARI( Int,olda) = a;
HXLINE( 208)			HX_VARI( Int,oldb) = b;
HXLINE( 209)			HX_VARI( Int,oldc) = c;
HXLINE( 210)			HX_VARI( Int,oldd) = d;
HXLINE( 213)			Int _hx_tmp = x->__get(i);
HXDLIN( 213)			a = this->ff(a,b,c,d,_hx_tmp,(int)7,(int)-680876936);
HXLINE( 214)			Int _hx_tmp1 = x->__get((i + (int)1));
HXDLIN( 214)			d = this->ff(d,a,b,c,_hx_tmp1,(int)12,(int)-389564586);
HXLINE( 215)			Int _hx_tmp2 = x->__get((i + (int)2));
HXDLIN( 215)			c = this->ff(c,d,a,b,_hx_tmp2,(int)17,(int)606105819);
HXLINE( 216)			Int _hx_tmp3 = x->__get((i + (int)3));
HXDLIN( 216)			b = this->ff(b,c,d,a,_hx_tmp3,(int)22,(int)-1044525330);
HXLINE( 217)			Int _hx_tmp4 = x->__get((i + (int)4));
HXDLIN( 217)			a = this->ff(a,b,c,d,_hx_tmp4,(int)7,(int)-176418897);
HXLINE( 218)			Int _hx_tmp5 = x->__get((i + (int)5));
HXDLIN( 218)			d = this->ff(d,a,b,c,_hx_tmp5,(int)12,(int)1200080426);
HXLINE( 219)			Int _hx_tmp6 = x->__get((i + (int)6));
HXDLIN( 219)			c = this->ff(c,d,a,b,_hx_tmp6,(int)17,(int)-1473231341);
HXLINE( 220)			Int _hx_tmp7 = x->__get((i + (int)7));
HXDLIN( 220)			b = this->ff(b,c,d,a,_hx_tmp7,(int)22,(int)-45705983);
HXLINE( 221)			Int _hx_tmp8 = x->__get((i + (int)8));
HXDLIN( 221)			a = this->ff(a,b,c,d,_hx_tmp8,(int)7,(int)1770035416);
HXLINE( 222)			Int _hx_tmp9 = x->__get((i + (int)9));
HXDLIN( 222)			d = this->ff(d,a,b,c,_hx_tmp9,(int)12,(int)-1958414417);
HXLINE( 223)			Int _hx_tmp10 = x->__get((i + (int)10));
HXDLIN( 223)			c = this->ff(c,d,a,b,_hx_tmp10,(int)17,(int)-42063);
HXLINE( 224)			Int _hx_tmp11 = x->__get((i + (int)11));
HXDLIN( 224)			b = this->ff(b,c,d,a,_hx_tmp11,(int)22,(int)-1990404162);
HXLINE( 225)			Int _hx_tmp12 = x->__get((i + (int)12));
HXDLIN( 225)			a = this->ff(a,b,c,d,_hx_tmp12,(int)7,(int)1804603682);
HXLINE( 226)			Int _hx_tmp13 = x->__get((i + (int)13));
HXDLIN( 226)			d = this->ff(d,a,b,c,_hx_tmp13,(int)12,(int)-40341101);
HXLINE( 227)			Int _hx_tmp14 = x->__get((i + (int)14));
HXDLIN( 227)			c = this->ff(c,d,a,b,_hx_tmp14,(int)17,(int)-1502002290);
HXLINE( 228)			Int _hx_tmp15 = x->__get((i + (int)15));
HXDLIN( 228)			b = this->ff(b,c,d,a,_hx_tmp15,(int)22,(int)1236535329);
HXLINE( 229)			Int _hx_tmp16 = x->__get((i + (int)1));
HXDLIN( 229)			a = this->gg(a,b,c,d,_hx_tmp16,(int)5,(int)-165796510);
HXLINE( 230)			Int _hx_tmp17 = x->__get((i + (int)6));
HXDLIN( 230)			d = this->gg(d,a,b,c,_hx_tmp17,(int)9,(int)-1069501632);
HXLINE( 231)			Int _hx_tmp18 = x->__get((i + (int)11));
HXDLIN( 231)			c = this->gg(c,d,a,b,_hx_tmp18,(int)14,(int)643717713);
HXLINE( 232)			Int _hx_tmp19 = x->__get(i);
HXDLIN( 232)			b = this->gg(b,c,d,a,_hx_tmp19,(int)20,(int)-373897302);
HXLINE( 233)			Int _hx_tmp20 = x->__get((i + (int)5));
HXDLIN( 233)			a = this->gg(a,b,c,d,_hx_tmp20,(int)5,(int)-701558691);
HXLINE( 234)			Int _hx_tmp21 = x->__get((i + (int)10));
HXDLIN( 234)			d = this->gg(d,a,b,c,_hx_tmp21,(int)9,(int)38016083);
HXLINE( 235)			Int _hx_tmp22 = x->__get((i + (int)15));
HXDLIN( 235)			c = this->gg(c,d,a,b,_hx_tmp22,(int)14,(int)-660478335);
HXLINE( 236)			Int _hx_tmp23 = x->__get((i + (int)4));
HXDLIN( 236)			b = this->gg(b,c,d,a,_hx_tmp23,(int)20,(int)-405537848);
HXLINE( 237)			Int _hx_tmp24 = x->__get((i + (int)9));
HXDLIN( 237)			a = this->gg(a,b,c,d,_hx_tmp24,(int)5,(int)568446438);
HXLINE( 238)			Int _hx_tmp25 = x->__get((i + (int)14));
HXDLIN( 238)			d = this->gg(d,a,b,c,_hx_tmp25,(int)9,(int)-1019803690);
HXLINE( 239)			Int _hx_tmp26 = x->__get((i + (int)3));
HXDLIN( 239)			c = this->gg(c,d,a,b,_hx_tmp26,(int)14,(int)-187363961);
HXLINE( 240)			Int _hx_tmp27 = x->__get((i + (int)8));
HXDLIN( 240)			b = this->gg(b,c,d,a,_hx_tmp27,(int)20,(int)1163531501);
HXLINE( 241)			Int _hx_tmp28 = x->__get((i + (int)13));
HXDLIN( 241)			a = this->gg(a,b,c,d,_hx_tmp28,(int)5,(int)-1444681467);
HXLINE( 242)			Int _hx_tmp29 = x->__get((i + (int)2));
HXDLIN( 242)			d = this->gg(d,a,b,c,_hx_tmp29,(int)9,(int)-51403784);
HXLINE( 243)			Int _hx_tmp30 = x->__get((i + (int)7));
HXDLIN( 243)			c = this->gg(c,d,a,b,_hx_tmp30,(int)14,(int)1735328473);
HXLINE( 244)			Int _hx_tmp31 = x->__get((i + (int)12));
HXDLIN( 244)			b = this->gg(b,c,d,a,_hx_tmp31,(int)20,(int)-1926607734);
HXLINE( 245)			Int _hx_tmp32 = x->__get((i + (int)5));
HXDLIN( 245)			a = this->hh(a,b,c,d,_hx_tmp32,(int)4,(int)-378558);
HXLINE( 246)			Int _hx_tmp33 = x->__get((i + (int)8));
HXDLIN( 246)			d = this->hh(d,a,b,c,_hx_tmp33,(int)11,(int)-2022574463);
HXLINE( 247)			Int _hx_tmp34 = x->__get((i + (int)11));
HXDLIN( 247)			c = this->hh(c,d,a,b,_hx_tmp34,(int)16,(int)1839030562);
HXLINE( 248)			Int _hx_tmp35 = x->__get((i + (int)14));
HXDLIN( 248)			b = this->hh(b,c,d,a,_hx_tmp35,(int)23,(int)-35309556);
HXLINE( 249)			Int _hx_tmp36 = x->__get((i + (int)1));
HXDLIN( 249)			a = this->hh(a,b,c,d,_hx_tmp36,(int)4,(int)-1530992060);
HXLINE( 250)			Int _hx_tmp37 = x->__get((i + (int)4));
HXDLIN( 250)			d = this->hh(d,a,b,c,_hx_tmp37,(int)11,(int)1272893353);
HXLINE( 251)			Int _hx_tmp38 = x->__get((i + (int)7));
HXDLIN( 251)			c = this->hh(c,d,a,b,_hx_tmp38,(int)16,(int)-155497632);
HXLINE( 252)			Int _hx_tmp39 = x->__get((i + (int)10));
HXDLIN( 252)			b = this->hh(b,c,d,a,_hx_tmp39,(int)23,(int)-1094730640);
HXLINE( 253)			Int _hx_tmp40 = x->__get((i + (int)13));
HXDLIN( 253)			a = this->hh(a,b,c,d,_hx_tmp40,(int)4,(int)681279174);
HXLINE( 254)			Int _hx_tmp41 = x->__get(i);
HXDLIN( 254)			d = this->hh(d,a,b,c,_hx_tmp41,(int)11,(int)-358537222);
HXLINE( 255)			Int _hx_tmp42 = x->__get((i + (int)3));
HXDLIN( 255)			c = this->hh(c,d,a,b,_hx_tmp42,(int)16,(int)-722521979);
HXLINE( 256)			Int _hx_tmp43 = x->__get((i + (int)6));
HXDLIN( 256)			b = this->hh(b,c,d,a,_hx_tmp43,(int)23,(int)76029189);
HXLINE( 257)			Int _hx_tmp44 = x->__get((i + (int)9));
HXDLIN( 257)			a = this->hh(a,b,c,d,_hx_tmp44,(int)4,(int)-640364487);
HXLINE( 258)			Int _hx_tmp45 = x->__get((i + (int)12));
HXDLIN( 258)			d = this->hh(d,a,b,c,_hx_tmp45,(int)11,(int)-421815835);
HXLINE( 259)			Int _hx_tmp46 = x->__get((i + (int)15));
HXDLIN( 259)			c = this->hh(c,d,a,b,_hx_tmp46,(int)16,(int)530742520);
HXLINE( 260)			Int _hx_tmp47 = x->__get((i + (int)2));
HXDLIN( 260)			b = this->hh(b,c,d,a,_hx_tmp47,(int)23,(int)-995338651);
HXLINE( 261)			Int _hx_tmp48 = x->__get(i);
HXDLIN( 261)			a = this->ii(a,b,c,d,_hx_tmp48,(int)6,(int)-198630844);
HXLINE( 262)			Int _hx_tmp49 = x->__get((i + (int)7));
HXDLIN( 262)			d = this->ii(d,a,b,c,_hx_tmp49,(int)10,(int)1126891415);
HXLINE( 263)			Int _hx_tmp50 = x->__get((i + (int)14));
HXDLIN( 263)			c = this->ii(c,d,a,b,_hx_tmp50,(int)15,(int)-1416354905);
HXLINE( 264)			Int _hx_tmp51 = x->__get((i + (int)5));
HXDLIN( 264)			b = this->ii(b,c,d,a,_hx_tmp51,(int)21,(int)-57434055);
HXLINE( 265)			Int _hx_tmp52 = x->__get((i + (int)12));
HXDLIN( 265)			a = this->ii(a,b,c,d,_hx_tmp52,(int)6,(int)1700485571);
HXLINE( 266)			Int _hx_tmp53 = x->__get((i + (int)3));
HXDLIN( 266)			d = this->ii(d,a,b,c,_hx_tmp53,(int)10,(int)-1894986606);
HXLINE( 267)			Int _hx_tmp54 = x->__get((i + (int)10));
HXDLIN( 267)			c = this->ii(c,d,a,b,_hx_tmp54,(int)15,(int)-1051523);
HXLINE( 268)			Int _hx_tmp55 = x->__get((i + (int)1));
HXDLIN( 268)			b = this->ii(b,c,d,a,_hx_tmp55,(int)21,(int)-2054922799);
HXLINE( 269)			Int _hx_tmp56 = x->__get((i + (int)8));
HXDLIN( 269)			a = this->ii(a,b,c,d,_hx_tmp56,(int)6,(int)1873313359);
HXLINE( 270)			Int _hx_tmp57 = x->__get((i + (int)15));
HXDLIN( 270)			d = this->ii(d,a,b,c,_hx_tmp57,(int)10,(int)-30611744);
HXLINE( 271)			Int _hx_tmp58 = x->__get((i + (int)6));
HXDLIN( 271)			c = this->ii(c,d,a,b,_hx_tmp58,(int)15,(int)-1560198380);
HXLINE( 272)			Int _hx_tmp59 = x->__get((i + (int)13));
HXDLIN( 272)			b = this->ii(b,c,d,a,_hx_tmp59,(int)21,(int)1309151649);
HXLINE( 273)			Int _hx_tmp60 = x->__get((i + (int)4));
HXDLIN( 273)			a = this->ii(a,b,c,d,_hx_tmp60,(int)6,(int)-145523070);
HXLINE( 274)			Int _hx_tmp61 = x->__get((i + (int)11));
HXDLIN( 274)			d = this->ii(d,a,b,c,_hx_tmp61,(int)10,(int)-1120210379);
HXLINE( 275)			Int _hx_tmp62 = x->__get((i + (int)2));
HXDLIN( 275)			c = this->ii(c,d,a,b,_hx_tmp62,(int)15,(int)718787259);
HXLINE( 276)			Int _hx_tmp63 = x->__get((i + (int)9));
HXDLIN( 276)			b = this->ii(b,c,d,a,_hx_tmp63,(int)21,(int)-343485551);
HXLINE( 278)			a = this->addme(a,olda);
HXLINE( 279)			b = this->addme(b,oldb);
HXLINE( 280)			c = this->addme(c,oldc);
HXLINE( 281)			d = this->addme(d,oldd);
HXLINE( 283)			hx::AddEq(i,(int)16);
            		}
HXLINE( 285)		return ::Array_obj< Int >::__new(4)->init(0,a)->init(1,b)->init(2,c)->init(3,d);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Md5_obj,doEncode,return )

::String Md5_obj::encode(::String s){
            	HX_STACK_FRAME("haxe.crypto.Md5","encode",0x979f4b6b,"haxe.crypto.Md5.encode","C:\\HaxeToolkit\\haxe\\std/haxe/crypto/Md5.hx",29,0xa59e361e)
            	HX_STACK_ARG(s,"s")
HXLINE(  35)		HX_VARI(  ::haxe::crypto::Md5,m) =  ::haxe::crypto::Md5_obj::__new();
HXLINE(  36)		::Array< Int > _hx_tmp = ::haxe::crypto::Md5_obj::str2blks(s);
HXDLIN(  36)		HX_VARI( ::Array< Int >,h) = m->doEncode(_hx_tmp);
HXLINE(  37)		return m->hex(h);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Md5_obj,encode,return )

::Array< Int > Md5_obj::str2blks(::String str){
            	HX_STACK_FRAME("haxe.crypto.Md5","str2blks",0x2f788968,"haxe.crypto.Md5.str2blks","C:\\HaxeToolkit\\haxe\\std/haxe/crypto/Md5.hx",139,0xa59e361e)
            	HX_STACK_ARG(str,"str")
HXLINE( 143)		HX_VARI( Int,nblk) = (((int)(str.length + (int)8) >> (int)(int)6) + (int)1);
HXLINE( 144)		HX_VARI( ::Array< Int >,blks) = ::Array_obj< Int >::__new();
HXLINE( 149)		blks[((nblk * (int)16) - (int)1)] = (int)0;
HXLINE( 156)		HX_VARI( Int,i) = (int)0;
HXLINE( 157)		HX_VARI( Int,max) = str.length;
HXLINE( 158)		HX_VARI( Int,l) = (max * (int)8);
HXLINE( 159)		while((i < max)){
HXLINE( 160)			Int _hx_tmp = ((int)i >> (int)(int)2);
HXDLIN( 160)			Int _hx_tmp1 = str.cca(i);
HXDLIN( 160)			hx::OrEq(blks[_hx_tmp],((int)_hx_tmp1 << (int)(hx::Mod((l + i),(int)4) * (int)8)));
HXLINE( 161)			++i;
            		}
HXLINE( 163)		hx::OrEq(blks[((int)i >> (int)(int)2)],((int)(int)128 << (int)(hx::Mod((l + i),(int)4) * (int)8)));
HXLINE( 164)		HX_VARI( Int,k) = ((nblk * (int)16) - (int)2);
HXLINE( 165)		blks[k] = ((int)l & (int)(int)255);
HXLINE( 166)		hx::OrEq(blks[k],((int)((int)hx::UShr(l,(int)8) & (int)(int)255) << (int)(int)8));
HXLINE( 167)		hx::OrEq(blks[k],((int)((int)hx::UShr(l,(int)16) & (int)(int)255) << (int)(int)16));
HXLINE( 168)		hx::OrEq(blks[k],((int)((int)hx::UShr(l,(int)24) & (int)(int)255) << (int)(int)24));
HXLINE( 169)		return blks;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Md5_obj,str2blks,return )


Md5_obj::Md5_obj()
{
}

hx::Val Md5_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"ff") ) { return hx::Val( ff_dyn()); }
		if (HX_FIELD_EQ(inName,"gg") ) { return hx::Val( gg_dyn()); }
		if (HX_FIELD_EQ(inName,"hh") ) { return hx::Val( hh_dyn()); }
		if (HX_FIELD_EQ(inName,"ii") ) { return hx::Val( ii_dyn()); }
		break;
	case 3:
		if (HX_FIELD_EQ(inName,"hex") ) { return hx::Val( hex_dyn()); }
		if (HX_FIELD_EQ(inName,"rol") ) { return hx::Val( rol_dyn()); }
		if (HX_FIELD_EQ(inName,"cmn") ) { return hx::Val( cmn_dyn()); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"bitOR") ) { return hx::Val( bitOR_dyn()); }
		if (HX_FIELD_EQ(inName,"addme") ) { return hx::Val( addme_dyn()); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"bitXOR") ) { return hx::Val( bitXOR_dyn()); }
		if (HX_FIELD_EQ(inName,"bitAND") ) { return hx::Val( bitAND_dyn()); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"doEncode") ) { return hx::Val( doEncode_dyn()); }
	}
	return super::__Field(inName,inCallProp);
}

bool Md5_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"encode") ) { outValue = encode_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"str2blks") ) { outValue = str2blks_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *Md5_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *Md5_obj_sStaticStorageInfo = 0;
#endif

static ::String Md5_obj_sMemberFields[] = {
	HX_HCSTRING("bitOR","\x30","\x8b","\x04","\xb3"),
	HX_HCSTRING("bitXOR","\xce","\x10","\xfc","\xf0"),
	HX_HCSTRING("bitAND","\x0a","\x9c","\xea","\xf0"),
	HX_HCSTRING("addme","\xb9","\xdb","\x43","\x1c"),
	HX_HCSTRING("hex","\xdb","\x42","\x4f","\x00"),
	HX_HCSTRING("rol","\x0f","\xe2","\x56","\x00"),
	HX_HCSTRING("cmn","\x84","\x7e","\x4b","\x00"),
	HX_HCSTRING("ff","\x40","\x59","\x00","\x00"),
	HX_HCSTRING("gg","\x20","\x5a","\x00","\x00"),
	HX_HCSTRING("hh","\x00","\x5b","\x00","\x00"),
	HX_HCSTRING("ii","\xe0","\x5b","\x00","\x00"),
	HX_HCSTRING("doEncode","\x01","\x78","\xfb","\x8d"),
	::String(null()) };

static void Md5_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Md5_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Md5_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Md5_obj::__mClass,"__mClass");
};

#endif

hx::Class Md5_obj::__mClass;

static ::String Md5_obj_sStaticFields[] = {
	HX_HCSTRING("encode","\x16","\xf2","\xe3","\xf9"),
	HX_HCSTRING("str2blks","\xd3","\x70","\x34","\x29"),
	::String(null())
};

void Md5_obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("haxe.crypto.Md5","\x79","\xae","\xa9","\x04");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Md5_obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Md5_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Md5_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(Md5_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< Md5_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Md5_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Md5_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Md5_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace haxe
} // end namespace crypto
