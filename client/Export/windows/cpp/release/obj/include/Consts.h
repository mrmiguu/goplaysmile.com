// Generated by Haxe 3.3.0
#ifndef INCLUDED_Consts
#define INCLUDED_Consts

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(Connection)
HX_DECLARE_CLASS0(Consts)
HX_DECLARE_CLASS0(Globals)
HX_DECLARE_CLASS0(IButton)
HX_DECLARE_CLASS1(haxe,Unserializer)
HX_DECLARE_CLASS2(openfl,display,BitmapData)
HX_DECLARE_CLASS2(openfl,display,DisplayObject)
HX_DECLARE_CLASS2(openfl,display,DisplayObjectContainer)
HX_DECLARE_CLASS2(openfl,display,IBitmapDrawable)
HX_DECLARE_CLASS2(openfl,display,InteractiveObject)
HX_DECLARE_CLASS2(openfl,display,Sprite)
HX_DECLARE_CLASS2(openfl,display,Tile)
HX_DECLARE_CLASS2(openfl,display,Tilemap)
HX_DECLARE_CLASS2(openfl,display,Tileset)
HX_DECLARE_CLASS2(openfl,events,EventDispatcher)
HX_DECLARE_CLASS2(openfl,events,IEventDispatcher)
HX_DECLARE_CLASS2(openfl,media,Sound)
HX_DECLARE_CLASS2(openfl,text,TextField)



class HXCPP_CLASS_ATTRIBUTES Consts_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Consts_obj OBJ_;
		Consts_obj();

	public:
		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="Consts")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"Consts"); }
		static hx::ObjectPtr< Consts_obj > __new();
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Consts_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static void __register();
		::String __ToString() const { return HX_HCSTRING("Consts","\xd0","\xb1","\x70","\xfc"); }

		static void __boot();
		static Int WIDTH;
		static Int HEIGHT;
		static Int FONT_COLOR;
		static ::String HOST;
		static Int PORT;
		static ::String take(::Array< ::String > m);
		static ::Dynamic take_dyn();

		static void addLetter(::Array< ::String > m,::cpp::VirtualArray t);
		static ::Dynamic addLetter_dyn();

		static  ::Connection connect( ::Globals g,::String user,::String pass);
		static ::Dynamic connect_dyn();

		static  ::haxe::Unserializer serial(::String packet);
		static ::Dynamic serial_dyn();

		static  ::Dynamic next( ::haxe::Unserializer serial);
		static ::Dynamic next_dyn();

		static ::String nextString( ::haxe::Unserializer serial);
		static ::Dynamic nextString_dyn();

		static  ::openfl::text::TextField text(::String s,Float x,Float y,Int pt,hx::Null< Int >  c);
		static ::Dynamic text_dyn();

		static  ::openfl::text::TextField textBox(::String s,Float x,Float y,Int pt);
		static ::Dynamic textBox_dyn();

		static Float diff(Float a,Float b);
		static ::Dynamic diff_dyn();

		static Float dist(Int ax,Int ay,Int bx,Int by);
		static ::Dynamic dist_dyn();

		static Float scale(Int w,Int h);
		static ::Dynamic scale_dyn();

		static  ::openfl::media::Sound sound(::String dir);
		static ::Dynamic sound_dyn();

		static  ::openfl::display::BitmapData bmp(::String dir);
		static ::Dynamic bmp_dyn();

		static  ::openfl::display::Tileset tileset(::String dir);
		static ::Dynamic tileset_dyn();

		static  ::openfl::display::Tile tile(::String dir);
		static ::Dynamic tile_dyn();

		static  ::openfl::display::Tilemap tilemap(::String dir,hx::Null< Int >  w,hx::Null< Int >  h);
		static ::Dynamic tilemap_dyn();

		static  ::openfl::display::Sprite mapToSprite( ::openfl::display::Tilemap map);
		static ::Dynamic mapToSprite_dyn();

		static  ::openfl::display::Sprite sprite(::String dir,hx::Null< Int >  x,hx::Null< Int >  y);
		static ::Dynamic sprite_dyn();

		static Float center(Float line,Float point);
		static ::Dynamic center_dyn();

		static ::Array< ::Dynamic> locations( ::openfl::display::BitmapData image);
		static ::Dynamic locations_dyn();

		static Int nameToIndex(::String name,::Array< ::String > names);
		static ::Dynamic nameToIndex_dyn();

};


#endif /* INCLUDED_Consts */ 
