// Generated by Haxe 3.3.0
#ifndef INCLUDED_Radio
#define INCLUDED_Radio

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(IButton)
HX_DECLARE_CLASS0(Radio)



class HXCPP_CLASS_ATTRIBUTES Radio_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Radio_obj OBJ_;
		Radio_obj();

	public:
		void __construct(::Dynamic b1,::Dynamic b2);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="Radio")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"Radio"); }
		static hx::ObjectPtr< Radio_obj > __new(::Dynamic b1,::Dynamic b2);
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Radio_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		::String __ToString() const { return HX_HCSTRING("Radio","\xdb","\x80","\x45","\x77"); }

		::Array< ::Dynamic> radio;
		void add(::Dynamic b);
		::Dynamic add_dyn();

		void push(::Dynamic b);
		::Dynamic push_dyn();

};


#endif /* INCLUDED_Radio */ 
