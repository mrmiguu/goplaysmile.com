// Generated by Haxe 3.3.0
#ifndef INCLUDED_Animation
#define INCLUDED_Animation

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_Animatible
#include <Animatible.h>
#endif
HX_DECLARE_CLASS0(Animatible)
HX_DECLARE_CLASS0(Animation)



class HXCPP_CLASS_ATTRIBUTES Animation_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Animation_obj OBJ_;
		Animation_obj();

	public:
		void __construct(Int frames,Float delay);
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="Animation")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"Animation"); }
		static hx::ObjectPtr< Animation_obj > __new(Int frames,Float delay);
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Animation_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void *_hx_getInterface(int inHash);
		::String __ToString() const { return HX_HCSTRING("Animation","\xe4","\xce","\x07","\xed"); }

		Int frames;
		Bool animating;
		Float future;
		Float delay;
		Int frame;
		virtual void begin();
		::Dynamic begin_dyn();

		virtual void during();
		::Dynamic during_dyn();

		virtual void end();
		::Dynamic end_dyn();

		void transition();
		::Dynamic transition_dyn();

};


#endif /* INCLUDED_Animation */ 
