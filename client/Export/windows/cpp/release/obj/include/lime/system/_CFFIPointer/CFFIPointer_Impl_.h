// Generated by Haxe 3.3.0
#ifndef INCLUDED_lime_system__CFFIPointer_CFFIPointer_Impl_
#define INCLUDED_lime_system__CFFIPointer_CFFIPointer_Impl_

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS3(lime,_hx_system,_CFFIPointer,CFFIPointer_Impl_)

namespace lime{
namespace _hx_system{
namespace _CFFIPointer{


class HXCPP_CLASS_ATTRIBUTES CFFIPointer_Impl__obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef CFFIPointer_Impl__obj OBJ_;
		CFFIPointer_Impl__obj();

	public:
		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="lime.system._CFFIPointer.CFFIPointer_Impl_")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"lime.system._CFFIPointer.CFFIPointer_Impl_"); }
		static hx::ObjectPtr< CFFIPointer_Impl__obj > __new();
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~CFFIPointer_Impl__obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static void __register();
		::String __ToString() const { return HX_HCSTRING("CFFIPointer_Impl_","\x97","\xa2","\xf9","\xbd"); }

		static void __boot();
		static  ::Dynamic _new( ::Dynamic handle);
		static ::Dynamic _new_dyn();

		static Float get( ::Dynamic this1);
		static ::Dynamic get_dyn();

		static Bool equals( ::Dynamic a,Int b);
		static ::Dynamic equals_dyn();

		static Bool equalsPointer( ::Dynamic a, ::Dynamic b);
		static ::Dynamic equalsPointer_dyn();

		static Bool greaterThan( ::Dynamic a,Int b);
		static ::Dynamic greaterThan_dyn();

		static Bool greaterThanPointer( ::Dynamic a, ::Dynamic b);
		static ::Dynamic greaterThanPointer_dyn();

		static Bool greaterThanOrEqual( ::Dynamic a,Int b);
		static ::Dynamic greaterThanOrEqual_dyn();

		static Bool greaterThanOrEqualPointer( ::Dynamic a, ::Dynamic b);
		static ::Dynamic greaterThanOrEqualPointer_dyn();

		static Bool lessThan( ::Dynamic a,Int b);
		static ::Dynamic lessThan_dyn();

		static Bool lessThanPointer( ::Dynamic a, ::Dynamic b);
		static ::Dynamic lessThanPointer_dyn();

		static Bool lessThanOrEqual( ::Dynamic a,Int b);
		static ::Dynamic lessThanOrEqual_dyn();

		static Bool lessThanOrEqualPointer( ::Dynamic a, ::Dynamic b);
		static ::Dynamic lessThanOrEqualPointer_dyn();

		static Bool notEquals( ::Dynamic a,Int b);
		static ::Dynamic notEquals_dyn();

		static Bool notEqualsPointer( ::Dynamic a, ::Dynamic b);
		static ::Dynamic notEqualsPointer_dyn();

		static Float lime_cffi_get_native_pointer( ::Dynamic ptr);
		static ::Dynamic lime_cffi_get_native_pointer_dyn();

		static ::cpp::Function<  Float( ::hx::Object *) > cffi_lime_cffi_get_native_pointer;
		static ::cpp::Function<  Float( ::hx::Object *) > &cffi_lime_cffi_get_native_pointer_dyn() { return cffi_lime_cffi_get_native_pointer;}
};

} // end namespace lime
} // end namespace system
} // end namespace _CFFIPointer

#endif /* INCLUDED_lime_system__CFFIPointer_CFFIPointer_Impl_ */ 
