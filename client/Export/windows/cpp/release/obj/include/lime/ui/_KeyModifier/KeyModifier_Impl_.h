// Generated by Haxe 3.3.0
#ifndef INCLUDED_lime_ui__KeyModifier_KeyModifier_Impl_
#define INCLUDED_lime_ui__KeyModifier_KeyModifier_Impl_

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS3(lime,ui,_KeyModifier,KeyModifier_Impl_)

namespace lime{
namespace ui{
namespace _KeyModifier{


class HXCPP_CLASS_ATTRIBUTES KeyModifier_Impl__obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef KeyModifier_Impl__obj OBJ_;
		KeyModifier_Impl__obj();

	public:
		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="lime.ui._KeyModifier.KeyModifier_Impl_")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"lime.ui._KeyModifier.KeyModifier_Impl_"); }
		static hx::ObjectPtr< KeyModifier_Impl__obj > __new();
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~KeyModifier_Impl__obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static void __register();
		::String __ToString() const { return HX_HCSTRING("KeyModifier_Impl_","\x16","\x89","\xa5","\x39"); }

		static void __boot();
		static Int NONE;
		static Int LEFT_SHIFT;
		static Int RIGHT_SHIFT;
		static Int LEFT_CTRL;
		static Int RIGHT_CTRL;
		static Int LEFT_ALT;
		static Int RIGHT_ALT;
		static Int LEFT_META;
		static Int RIGHT_META;
		static Int NUM_LOCK;
		static Int CAPS_LOCK;
		static Int MODE;
		static Int CTRL;
		static Int SHIFT;
		static Int ALT;
		static Int META;
		static Bool get_altKey(Int this1);
		static ::Dynamic get_altKey_dyn();

		static Bool set_altKey(Int this1,Bool value);
		static ::Dynamic set_altKey_dyn();

		static Bool get_capsLock(Int this1);
		static ::Dynamic get_capsLock_dyn();

		static Bool set_capsLock(Int this1,Bool value);
		static ::Dynamic set_capsLock_dyn();

		static Bool get_ctrlKey(Int this1);
		static ::Dynamic get_ctrlKey_dyn();

		static Bool set_ctrlKey(Int this1,Bool value);
		static ::Dynamic set_ctrlKey_dyn();

		static Bool get_metaKey(Int this1);
		static ::Dynamic get_metaKey_dyn();

		static Bool set_metaKey(Int this1,Bool value);
		static ::Dynamic set_metaKey_dyn();

		static Bool get_numLock(Int this1);
		static ::Dynamic get_numLock_dyn();

		static Bool set_numLock(Int this1,Bool value);
		static ::Dynamic set_numLock_dyn();

		static Bool get_shiftKey(Int this1);
		static ::Dynamic get_shiftKey_dyn();

		static Bool set_shiftKey(Int this1,Bool value);
		static ::Dynamic set_shiftKey_dyn();

};

} // end namespace lime
} // end namespace ui
} // end namespace _KeyModifier

#endif /* INCLUDED_lime_ui__KeyModifier_KeyModifier_Impl_ */ 
