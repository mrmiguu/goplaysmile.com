// Generated by Haxe 3.3.0
#ifndef INCLUDED_lime_graphics_opengl_GL
#define INCLUDED_lime_graphics_opengl_GL

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS3(lime,_backend,native,NativeGLRenderContext)
HX_DECLARE_CLASS3(lime,graphics,opengl,GL)
HX_DECLARE_CLASS3(lime,graphics,opengl,GLBuffer)
HX_DECLARE_CLASS3(lime,graphics,opengl,GLFramebuffer)
HX_DECLARE_CLASS3(lime,graphics,opengl,GLObject)
HX_DECLARE_CLASS3(lime,graphics,opengl,GLProgram)
HX_DECLARE_CLASS3(lime,graphics,opengl,GLRenderbuffer)
HX_DECLARE_CLASS3(lime,graphics,opengl,GLShader)
HX_DECLARE_CLASS3(lime,graphics,opengl,GLTexture)
HX_DECLARE_CLASS2(lime,utils,ArrayBufferView)

namespace lime{
namespace graphics{
namespace opengl{


class HXCPP_CLASS_ATTRIBUTES GL_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef GL_obj OBJ_;
		GL_obj();

	public:
		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="lime.graphics.opengl.GL")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"lime.graphics.opengl.GL"); }
		static hx::ObjectPtr< GL_obj > __new();
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~GL_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, hx::PropertyAccess inCallProp);
		static void __register();
		::String __ToString() const { return HX_HCSTRING("GL","\x25","\x3e","\x00","\x00"); }

		static void __boot();
		static Int DEPTH_BUFFER_BIT;
		static Int STENCIL_BUFFER_BIT;
		static Int COLOR_BUFFER_BIT;
		static Int POINTS;
		static Int LINES;
		static Int LINE_LOOP;
		static Int LINE_STRIP;
		static Int TRIANGLES;
		static Int TRIANGLE_STRIP;
		static Int TRIANGLE_FAN;
		static Int ZERO;
		static Int ONE;
		static Int SRC_COLOR;
		static Int ONE_MINUS_SRC_COLOR;
		static Int SRC_ALPHA;
		static Int ONE_MINUS_SRC_ALPHA;
		static Int DST_ALPHA;
		static Int ONE_MINUS_DST_ALPHA;
		static Int DST_COLOR;
		static Int ONE_MINUS_DST_COLOR;
		static Int SRC_ALPHA_SATURATE;
		static Int FUNC_ADD;
		static Int BLEND_EQUATION;
		static Int BLEND_EQUATION_RGB;
		static Int BLEND_EQUATION_ALPHA;
		static Int FUNC_SUBTRACT;
		static Int FUNC_REVERSE_SUBTRACT;
		static Int BLEND_DST_RGB;
		static Int BLEND_SRC_RGB;
		static Int BLEND_DST_ALPHA;
		static Int BLEND_SRC_ALPHA;
		static Int CONSTANT_COLOR;
		static Int ONE_MINUS_CONSTANT_COLOR;
		static Int CONSTANT_ALPHA;
		static Int ONE_MINUS_CONSTANT_ALPHA;
		static Int BLEND_COLOR;
		static Int ARRAY_BUFFER;
		static Int ELEMENT_ARRAY_BUFFER;
		static Int ARRAY_BUFFER_BINDING;
		static Int ELEMENT_ARRAY_BUFFER_BINDING;
		static Int STREAM_DRAW;
		static Int STATIC_DRAW;
		static Int DYNAMIC_DRAW;
		static Int BUFFER_SIZE;
		static Int BUFFER_USAGE;
		static Int CURRENT_VERTEX_ATTRIB;
		static Int FRONT;
		static Int BACK;
		static Int FRONT_AND_BACK;
		static Int CULL_FACE;
		static Int BLEND;
		static Int DITHER;
		static Int STENCIL_TEST;
		static Int DEPTH_TEST;
		static Int SCISSOR_TEST;
		static Int POLYGON_OFFSET_FILL;
		static Int SAMPLE_ALPHA_TO_COVERAGE;
		static Int SAMPLE_COVERAGE;
		static Int NO_ERROR;
		static Int INVALID_ENUM;
		static Int INVALID_VALUE;
		static Int INVALID_OPERATION;
		static Int OUT_OF_MEMORY;
		static Int CW;
		static Int CCW;
		static Int LINE_WIDTH;
		static Int ALIASED_POINT_SIZE_RANGE;
		static Int ALIASED_LINE_WIDTH_RANGE;
		static Int CULL_FACE_MODE;
		static Int FRONT_FACE;
		static Int DEPTH_RANGE;
		static Int DEPTH_WRITEMASK;
		static Int DEPTH_CLEAR_VALUE;
		static Int DEPTH_FUNC;
		static Int STENCIL_CLEAR_VALUE;
		static Int STENCIL_FUNC;
		static Int STENCIL_FAIL;
		static Int STENCIL_PASS_DEPTH_FAIL;
		static Int STENCIL_PASS_DEPTH_PASS;
		static Int STENCIL_REF;
		static Int STENCIL_VALUE_MASK;
		static Int STENCIL_WRITEMASK;
		static Int STENCIL_BACK_FUNC;
		static Int STENCIL_BACK_FAIL;
		static Int STENCIL_BACK_PASS_DEPTH_FAIL;
		static Int STENCIL_BACK_PASS_DEPTH_PASS;
		static Int STENCIL_BACK_REF;
		static Int STENCIL_BACK_VALUE_MASK;
		static Int STENCIL_BACK_WRITEMASK;
		static Int VIEWPORT;
		static Int SCISSOR_BOX;
		static Int COLOR_CLEAR_VALUE;
		static Int COLOR_WRITEMASK;
		static Int UNPACK_ALIGNMENT;
		static Int PACK_ALIGNMENT;
		static Int MAX_TEXTURE_SIZE;
		static Int MAX_VIEWPORT_DIMS;
		static Int SUBPIXEL_BITS;
		static Int RED_BITS;
		static Int GREEN_BITS;
		static Int BLUE_BITS;
		static Int ALPHA_BITS;
		static Int DEPTH_BITS;
		static Int STENCIL_BITS;
		static Int POLYGON_OFFSET_UNITS;
		static Int POLYGON_OFFSET_FACTOR;
		static Int TEXTURE_BINDING_2D;
		static Int SAMPLE_BUFFERS;
		static Int SAMPLES;
		static Int SAMPLE_COVERAGE_VALUE;
		static Int SAMPLE_COVERAGE_INVERT;
		static Int COMPRESSED_TEXTURE_FORMATS;
		static Int DONT_CARE;
		static Int FASTEST;
		static Int NICEST;
		static Int GENERATE_MIPMAP_HINT;
		static Int BYTE;
		static Int UNSIGNED_BYTE;
		static Int SHORT;
		static Int UNSIGNED_SHORT;
		static Int INT;
		static Int UNSIGNED_INT;
		static Int FLOAT;
		static Int DEPTH_COMPONENT;
		static Int ALPHA;
		static Int RGB;
		static Int RGBA;
		static Int BGR_EXT;
		static Int BGRA_EXT;
		static Int LUMINANCE;
		static Int LUMINANCE_ALPHA;
		static Int UNSIGNED_SHORT_4_4_4_4;
		static Int UNSIGNED_SHORT_5_5_5_1;
		static Int UNSIGNED_SHORT_5_6_5;
		static Int FRAGMENT_SHADER;
		static Int VERTEX_SHADER;
		static Int MAX_VERTEX_ATTRIBS;
		static Int MAX_VERTEX_UNIFORM_VECTORS;
		static Int MAX_VARYING_VECTORS;
		static Int MAX_COMBINED_TEXTURE_IMAGE_UNITS;
		static Int MAX_VERTEX_TEXTURE_IMAGE_UNITS;
		static Int MAX_TEXTURE_IMAGE_UNITS;
		static Int MAX_FRAGMENT_UNIFORM_VECTORS;
		static Int SHADER_TYPE;
		static Int DELETE_STATUS;
		static Int LINK_STATUS;
		static Int VALIDATE_STATUS;
		static Int ATTACHED_SHADERS;
		static Int ACTIVE_UNIFORMS;
		static Int ACTIVE_ATTRIBUTES;
		static Int SHADING_LANGUAGE_VERSION;
		static Int CURRENT_PROGRAM;
		static Int NEVER;
		static Int LESS;
		static Int EQUAL;
		static Int LEQUAL;
		static Int GREATER;
		static Int NOTEQUAL;
		static Int GEQUAL;
		static Int ALWAYS;
		static Int KEEP;
		static Int REPLACE;
		static Int INCR;
		static Int DECR;
		static Int INVERT;
		static Int INCR_WRAP;
		static Int DECR_WRAP;
		static Int VENDOR;
		static Int RENDERER;
		static Int VERSION;
		static Int NEAREST;
		static Int LINEAR;
		static Int NEAREST_MIPMAP_NEAREST;
		static Int LINEAR_MIPMAP_NEAREST;
		static Int NEAREST_MIPMAP_LINEAR;
		static Int LINEAR_MIPMAP_LINEAR;
		static Int TEXTURE_MAG_FILTER;
		static Int TEXTURE_MIN_FILTER;
		static Int TEXTURE_WRAP_S;
		static Int TEXTURE_WRAP_T;
		static Int TEXTURE_2D;
		static Int TEXTURE;
		static Int TEXTURE_CUBE_MAP;
		static Int TEXTURE_BINDING_CUBE_MAP;
		static Int TEXTURE_CUBE_MAP_POSITIVE_X;
		static Int TEXTURE_CUBE_MAP_NEGATIVE_X;
		static Int TEXTURE_CUBE_MAP_POSITIVE_Y;
		static Int TEXTURE_CUBE_MAP_NEGATIVE_Y;
		static Int TEXTURE_CUBE_MAP_POSITIVE_Z;
		static Int TEXTURE_CUBE_MAP_NEGATIVE_Z;
		static Int MAX_CUBE_MAP_TEXTURE_SIZE;
		static Int TEXTURE0;
		static Int TEXTURE1;
		static Int TEXTURE2;
		static Int TEXTURE3;
		static Int TEXTURE4;
		static Int TEXTURE5;
		static Int TEXTURE6;
		static Int TEXTURE7;
		static Int TEXTURE8;
		static Int TEXTURE9;
		static Int TEXTURE10;
		static Int TEXTURE11;
		static Int TEXTURE12;
		static Int TEXTURE13;
		static Int TEXTURE14;
		static Int TEXTURE15;
		static Int TEXTURE16;
		static Int TEXTURE17;
		static Int TEXTURE18;
		static Int TEXTURE19;
		static Int TEXTURE20;
		static Int TEXTURE21;
		static Int TEXTURE22;
		static Int TEXTURE23;
		static Int TEXTURE24;
		static Int TEXTURE25;
		static Int TEXTURE26;
		static Int TEXTURE27;
		static Int TEXTURE28;
		static Int TEXTURE29;
		static Int TEXTURE30;
		static Int TEXTURE31;
		static Int ACTIVE_TEXTURE;
		static Int REPEAT;
		static Int CLAMP_TO_EDGE;
		static Int MIRRORED_REPEAT;
		static Int FLOAT_VEC2;
		static Int FLOAT_VEC3;
		static Int FLOAT_VEC4;
		static Int INT_VEC2;
		static Int INT_VEC3;
		static Int INT_VEC4;
		static Int BOOL;
		static Int BOOL_VEC2;
		static Int BOOL_VEC3;
		static Int BOOL_VEC4;
		static Int FLOAT_MAT2;
		static Int FLOAT_MAT3;
		static Int FLOAT_MAT4;
		static Int SAMPLER_2D;
		static Int SAMPLER_CUBE;
		static Int VERTEX_ATTRIB_ARRAY_ENABLED;
		static Int VERTEX_ATTRIB_ARRAY_SIZE;
		static Int VERTEX_ATTRIB_ARRAY_STRIDE;
		static Int VERTEX_ATTRIB_ARRAY_TYPE;
		static Int VERTEX_ATTRIB_ARRAY_NORMALIZED;
		static Int VERTEX_ATTRIB_ARRAY_POINTER;
		static Int VERTEX_ATTRIB_ARRAY_BUFFER_BINDING;
		static Int VERTEX_PROGRAM_POINT_SIZE;
		static Int POINT_SPRITE;
		static Int COMPILE_STATUS;
		static Int LOW_FLOAT;
		static Int MEDIUM_FLOAT;
		static Int HIGH_FLOAT;
		static Int LOW_INT;
		static Int MEDIUM_INT;
		static Int HIGH_INT;
		static Int FRAMEBUFFER;
		static Int RENDERBUFFER;
		static Int RGBA4;
		static Int RGB5_A1;
		static Int RGB565;
		static Int DEPTH_COMPONENT16;
		static Int STENCIL_INDEX;
		static Int STENCIL_INDEX8;
		static Int DEPTH_STENCIL;
		static Int RENDERBUFFER_WIDTH;
		static Int RENDERBUFFER_HEIGHT;
		static Int RENDERBUFFER_INTERNAL_FORMAT;
		static Int RENDERBUFFER_RED_SIZE;
		static Int RENDERBUFFER_GREEN_SIZE;
		static Int RENDERBUFFER_BLUE_SIZE;
		static Int RENDERBUFFER_ALPHA_SIZE;
		static Int RENDERBUFFER_DEPTH_SIZE;
		static Int RENDERBUFFER_STENCIL_SIZE;
		static Int FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE;
		static Int FRAMEBUFFER_ATTACHMENT_OBJECT_NAME;
		static Int FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL;
		static Int FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE;
		static Int COLOR_ATTACHMENT0;
		static Int DEPTH_ATTACHMENT;
		static Int STENCIL_ATTACHMENT;
		static Int DEPTH_STENCIL_ATTACHMENT;
		static Int NONE;
		static Int FRAMEBUFFER_COMPLETE;
		static Int FRAMEBUFFER_INCOMPLETE_ATTACHMENT;
		static Int FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT;
		static Int FRAMEBUFFER_INCOMPLETE_DIMENSIONS;
		static Int FRAMEBUFFER_UNSUPPORTED;
		static Int FRAMEBUFFER_BINDING;
		static Int RENDERBUFFER_BINDING;
		static Int MAX_RENDERBUFFER_SIZE;
		static Int INVALID_FRAMEBUFFER_OPERATION;
		static Int UNPACK_FLIP_Y_WEBGL;
		static Int UNPACK_PREMULTIPLY_ALPHA_WEBGL;
		static Int CONTEXT_LOST_WEBGL;
		static Int UNPACK_COLORSPACE_CONVERSION_WEBGL;
		static Int BROWSER_DEFAULT_WEBGL;
		static Int version;
		static  ::lime::_backend::native::NativeGLRenderContext context;
		static  ::lime::graphics::opengl::GLProgram _hx___currentProgram;
		static void activeTexture(Int texture);
		static ::Dynamic activeTexture_dyn();

		static void attachShader( ::lime::graphics::opengl::GLProgram program, ::lime::graphics::opengl::GLShader shader);
		static ::Dynamic attachShader_dyn();

		static void bindAttribLocation( ::lime::graphics::opengl::GLProgram program,Int index,::String name);
		static ::Dynamic bindAttribLocation_dyn();

		static void bindBuffer(Int target, ::lime::graphics::opengl::GLBuffer buffer);
		static ::Dynamic bindBuffer_dyn();

		static void bindFramebuffer(Int target, ::lime::graphics::opengl::GLFramebuffer framebuffer);
		static ::Dynamic bindFramebuffer_dyn();

		static void bindRenderbuffer(Int target, ::lime::graphics::opengl::GLRenderbuffer renderbuffer);
		static ::Dynamic bindRenderbuffer_dyn();

		static void bindTexture(Int target, ::lime::graphics::opengl::GLTexture texture);
		static ::Dynamic bindTexture_dyn();

		static void blendColor(Float red,Float green,Float blue,Float alpha);
		static ::Dynamic blendColor_dyn();

		static void blendEquation(Int mode);
		static ::Dynamic blendEquation_dyn();

		static void blendEquationSeparate(Int modeRGB,Int modeAlpha);
		static ::Dynamic blendEquationSeparate_dyn();

		static void blendFunc(Int sfactor,Int dfactor);
		static ::Dynamic blendFunc_dyn();

		static void blendFuncSeparate(Int srcRGB,Int dstRGB,Int srcAlpha,Int dstAlpha);
		static ::Dynamic blendFuncSeparate_dyn();

		static void bufferData(Int target, ::lime::utils::ArrayBufferView data,Int usage);
		static ::Dynamic bufferData_dyn();

		static void bufferSubData(Int target,Int offset, ::lime::utils::ArrayBufferView data);
		static ::Dynamic bufferSubData_dyn();

		static Int checkFramebufferStatus(Int target);
		static ::Dynamic checkFramebufferStatus_dyn();

		static void clear(Int mask);
		static ::Dynamic clear_dyn();

		static void clearColor(Float red,Float green,Float blue,Float alpha);
		static ::Dynamic clearColor_dyn();

		static void clearDepth(Float depth);
		static ::Dynamic clearDepth_dyn();

		static void clearStencil(Int s);
		static ::Dynamic clearStencil_dyn();

		static void colorMask(Bool red,Bool green,Bool blue,Bool alpha);
		static ::Dynamic colorMask_dyn();

		static void compileShader( ::lime::graphics::opengl::GLShader shader);
		static ::Dynamic compileShader_dyn();

		static void compressedTexImage2D(Int target,Int level,Int internalformat,Int width,Int height,Int border, ::lime::utils::ArrayBufferView data);
		static ::Dynamic compressedTexImage2D_dyn();

		static void compressedTexSubImage2D(Int target,Int level,Int xoffset,Int yoffset,Int width,Int height,Int format, ::lime::utils::ArrayBufferView data);
		static ::Dynamic compressedTexSubImage2D_dyn();

		static void copyTexImage2D(Int target,Int level,Int internalformat,Int x,Int y,Int width,Int height,Int border);
		static ::Dynamic copyTexImage2D_dyn();

		static void copyTexSubImage2D(Int target,Int level,Int xoffset,Int yoffset,Int x,Int y,Int width,Int height);
		static ::Dynamic copyTexSubImage2D_dyn();

		static  ::lime::graphics::opengl::GLBuffer createBuffer();
		static ::Dynamic createBuffer_dyn();

		static  ::lime::graphics::opengl::GLFramebuffer createFramebuffer();
		static ::Dynamic createFramebuffer_dyn();

		static  ::lime::graphics::opengl::GLProgram createProgram();
		static ::Dynamic createProgram_dyn();

		static  ::lime::graphics::opengl::GLRenderbuffer createRenderbuffer();
		static ::Dynamic createRenderbuffer_dyn();

		static  ::lime::graphics::opengl::GLShader createShader(Int type);
		static ::Dynamic createShader_dyn();

		static  ::lime::graphics::opengl::GLTexture createTexture();
		static ::Dynamic createTexture_dyn();

		static void cullFace(Int mode);
		static ::Dynamic cullFace_dyn();

		static void deleteBuffer( ::lime::graphics::opengl::GLBuffer buffer);
		static ::Dynamic deleteBuffer_dyn();

		static void deleteFramebuffer( ::lime::graphics::opengl::GLFramebuffer framebuffer);
		static ::Dynamic deleteFramebuffer_dyn();

		static void deleteProgram( ::lime::graphics::opengl::GLProgram program);
		static ::Dynamic deleteProgram_dyn();

		static void deleteRenderbuffer( ::lime::graphics::opengl::GLRenderbuffer renderbuffer);
		static ::Dynamic deleteRenderbuffer_dyn();

		static void deleteShader( ::lime::graphics::opengl::GLShader shader);
		static ::Dynamic deleteShader_dyn();

		static void deleteTexture( ::lime::graphics::opengl::GLTexture texture);
		static ::Dynamic deleteTexture_dyn();

		static void depthFunc(Int func);
		static ::Dynamic depthFunc_dyn();

		static void depthMask(Bool flag);
		static ::Dynamic depthMask_dyn();

		static void depthRange(Float zNear,Float zFar);
		static ::Dynamic depthRange_dyn();

		static void detachShader( ::lime::graphics::opengl::GLProgram program, ::lime::graphics::opengl::GLShader shader);
		static ::Dynamic detachShader_dyn();

		static void disable(Int cap);
		static ::Dynamic disable_dyn();

		static void disableVertexAttribArray(Int index);
		static ::Dynamic disableVertexAttribArray_dyn();

		static void drawArrays(Int mode,Int first,Int count);
		static ::Dynamic drawArrays_dyn();

		static void drawElements(Int mode,Int count,Int type,Int offset);
		static ::Dynamic drawElements_dyn();

		static void enable(Int cap);
		static ::Dynamic enable_dyn();

		static void enableVertexAttribArray(Int index);
		static ::Dynamic enableVertexAttribArray_dyn();

		static void finish();
		static ::Dynamic finish_dyn();

		static void flush();
		static ::Dynamic flush_dyn();

		static void framebufferRenderbuffer(Int target,Int attachment,Int renderbuffertarget, ::lime::graphics::opengl::GLRenderbuffer renderbuffer);
		static ::Dynamic framebufferRenderbuffer_dyn();

		static void framebufferTexture2D(Int target,Int attachment,Int textarget, ::lime::graphics::opengl::GLTexture texture,Int level);
		static ::Dynamic framebufferTexture2D_dyn();

		static void frontFace(Int mode);
		static ::Dynamic frontFace_dyn();

		static void generateMipmap(Int target);
		static ::Dynamic generateMipmap_dyn();

		static  ::Dynamic getActiveAttrib( ::lime::graphics::opengl::GLProgram program,Int index);
		static ::Dynamic getActiveAttrib_dyn();

		static  ::Dynamic getActiveUniform( ::lime::graphics::opengl::GLProgram program,Int index);
		static ::Dynamic getActiveUniform_dyn();

		static ::Array< ::Dynamic> getAttachedShaders( ::lime::graphics::opengl::GLProgram program);
		static ::Dynamic getAttachedShaders_dyn();

		static Int getAttribLocation( ::lime::graphics::opengl::GLProgram program,::String name);
		static ::Dynamic getAttribLocation_dyn();

		static Int getBufferParameter(Int target,Int pname);
		static ::Dynamic getBufferParameter_dyn();

		static  ::Dynamic getContextAttributes();
		static ::Dynamic getContextAttributes_dyn();

		static Int getError();
		static ::Dynamic getError_dyn();

		static  ::Dynamic getExtension(::String name);
		static ::Dynamic getExtension_dyn();

		static Int getFramebufferAttachmentParameter(Int target,Int attachment,Int pname);
		static ::Dynamic getFramebufferAttachmentParameter_dyn();

		static  ::Dynamic getParameter(Int pname);
		static ::Dynamic getParameter_dyn();

		static ::String getProgramInfoLog( ::lime::graphics::opengl::GLProgram program);
		static ::Dynamic getProgramInfoLog_dyn();

		static Int getProgramParameter( ::lime::graphics::opengl::GLProgram program,Int pname);
		static ::Dynamic getProgramParameter_dyn();

		static Int getRenderbufferParameter(Int target,Int pname);
		static ::Dynamic getRenderbufferParameter_dyn();

		static ::String getShaderInfoLog( ::lime::graphics::opengl::GLShader shader);
		static ::Dynamic getShaderInfoLog_dyn();

		static Int getShaderParameter( ::lime::graphics::opengl::GLShader shader,Int pname);
		static ::Dynamic getShaderParameter_dyn();

		static  ::Dynamic getShaderPrecisionFormat(Int shadertype,Int precisiontype);
		static ::Dynamic getShaderPrecisionFormat_dyn();

		static ::String getShaderSource( ::lime::graphics::opengl::GLShader shader);
		static ::Dynamic getShaderSource_dyn();

		static ::Array< ::String > getSupportedExtensions();
		static ::Dynamic getSupportedExtensions_dyn();

		static Int getTexParameter(Int target,Int pname);
		static ::Dynamic getTexParameter_dyn();

		static  ::Dynamic getUniform( ::lime::graphics::opengl::GLProgram program,Int location);
		static ::Dynamic getUniform_dyn();

		static Int getUniformLocation( ::lime::graphics::opengl::GLProgram program,::String name);
		static ::Dynamic getUniformLocation_dyn();

		static Int getVertexAttrib(Int index,Int pname);
		static ::Dynamic getVertexAttrib_dyn();

		static Int getVertexAttribOffset(Int index,Int pname);
		static ::Dynamic getVertexAttribOffset_dyn();

		static void hint(Int target,Int mode);
		static ::Dynamic hint_dyn();

		static Bool isBuffer( ::lime::graphics::opengl::GLBuffer buffer);
		static ::Dynamic isBuffer_dyn();

		static Bool isContextLost();
		static ::Dynamic isContextLost_dyn();

		static Bool isEnabled(Int cap);
		static ::Dynamic isEnabled_dyn();

		static Bool isFramebuffer( ::lime::graphics::opengl::GLFramebuffer framebuffer);
		static ::Dynamic isFramebuffer_dyn();

		static Bool isProgram( ::lime::graphics::opengl::GLProgram program);
		static ::Dynamic isProgram_dyn();

		static Bool isRenderbuffer( ::lime::graphics::opengl::GLRenderbuffer renderbuffer);
		static ::Dynamic isRenderbuffer_dyn();

		static Bool isShader( ::lime::graphics::opengl::GLShader shader);
		static ::Dynamic isShader_dyn();

		static Bool isTexture( ::lime::graphics::opengl::GLTexture texture);
		static ::Dynamic isTexture_dyn();

		static void lineWidth(Float width);
		static ::Dynamic lineWidth_dyn();

		static void linkProgram( ::lime::graphics::opengl::GLProgram program);
		static ::Dynamic linkProgram_dyn();

		static void pixelStorei(Int pname,Int param);
		static ::Dynamic pixelStorei_dyn();

		static void polygonOffset(Float factor,Float units);
		static ::Dynamic polygonOffset_dyn();

		static void readPixels(Int x,Int y,Int width,Int height,Int format,Int type, ::lime::utils::ArrayBufferView pixels);
		static ::Dynamic readPixels_dyn();

		static void renderbufferStorage(Int target,Int internalformat,Int width,Int height);
		static ::Dynamic renderbufferStorage_dyn();

		static void sampleCoverage(Float value,Bool invert);
		static ::Dynamic sampleCoverage_dyn();

		static void scissor(Int x,Int y,Int width,Int height);
		static ::Dynamic scissor_dyn();

		static void shaderSource( ::lime::graphics::opengl::GLShader shader,::String source);
		static ::Dynamic shaderSource_dyn();

		static void stencilFunc(Int func,Int ref,Int mask);
		static ::Dynamic stencilFunc_dyn();

		static void stencilFuncSeparate(Int face,Int func,Int ref,Int mask);
		static ::Dynamic stencilFuncSeparate_dyn();

		static void stencilMask(Int mask);
		static ::Dynamic stencilMask_dyn();

		static void stencilMaskSeparate(Int face,Int mask);
		static ::Dynamic stencilMaskSeparate_dyn();

		static void stencilOp(Int fail,Int zfail,Int zpass);
		static ::Dynamic stencilOp_dyn();

		static void stencilOpSeparate(Int face,Int fail,Int zfail,Int zpass);
		static ::Dynamic stencilOpSeparate_dyn();

		static void texImage2D(Int target,Int level,Int internalformat,Int width,Int height,Int border,Int format,Int type, ::lime::utils::ArrayBufferView pixels);
		static ::Dynamic texImage2D_dyn();

		static void texParameterf(Int target,Int pname,Float param);
		static ::Dynamic texParameterf_dyn();

		static void texParameteri(Int target,Int pname,Int param);
		static ::Dynamic texParameteri_dyn();

		static void texSubImage2D(Int target,Int level,Int xoffset,Int yoffset,Int width,Int height,Int format,Int type, ::lime::utils::ArrayBufferView pixels);
		static ::Dynamic texSubImage2D_dyn();

		static void uniform1f(Int location,Float x);
		static ::Dynamic uniform1f_dyn();

		static void uniform1fv(Int location, ::lime::utils::ArrayBufferView x);
		static ::Dynamic uniform1fv_dyn();

		static void uniform1i(Int location,Int x);
		static ::Dynamic uniform1i_dyn();

		static void uniform1iv(Int location, ::lime::utils::ArrayBufferView v);
		static ::Dynamic uniform1iv_dyn();

		static void uniform2f(Int location,Float x,Float y);
		static ::Dynamic uniform2f_dyn();

		static void uniform2fv(Int location, ::lime::utils::ArrayBufferView v);
		static ::Dynamic uniform2fv_dyn();

		static void uniform2i(Int location,Int x,Int y);
		static ::Dynamic uniform2i_dyn();

		static void uniform2iv(Int location, ::lime::utils::ArrayBufferView v);
		static ::Dynamic uniform2iv_dyn();

		static void uniform3f(Int location,Float x,Float y,Float z);
		static ::Dynamic uniform3f_dyn();

		static void uniform3fv(Int location, ::lime::utils::ArrayBufferView v);
		static ::Dynamic uniform3fv_dyn();

		static void uniform3i(Int location,Int x,Int y,Int z);
		static ::Dynamic uniform3i_dyn();

		static void uniform3iv(Int location, ::lime::utils::ArrayBufferView v);
		static ::Dynamic uniform3iv_dyn();

		static void uniform4f(Int location,Float x,Float y,Float z,Float w);
		static ::Dynamic uniform4f_dyn();

		static void uniform4fv(Int location, ::lime::utils::ArrayBufferView v);
		static ::Dynamic uniform4fv_dyn();

		static void uniform4i(Int location,Int x,Int y,Int z,Int w);
		static ::Dynamic uniform4i_dyn();

		static void uniform4iv(Int location, ::lime::utils::ArrayBufferView v);
		static ::Dynamic uniform4iv_dyn();

		static void uniformMatrix2fv(Int location,Bool transpose, ::lime::utils::ArrayBufferView v);
		static ::Dynamic uniformMatrix2fv_dyn();

		static void uniformMatrix3fv(Int location,Bool transpose, ::lime::utils::ArrayBufferView v);
		static ::Dynamic uniformMatrix3fv_dyn();

		static void uniformMatrix4fv(Int location,Bool transpose, ::lime::utils::ArrayBufferView v);
		static ::Dynamic uniformMatrix4fv_dyn();

		static void useProgram( ::lime::graphics::opengl::GLProgram program);
		static ::Dynamic useProgram_dyn();

		static void validateProgram( ::lime::graphics::opengl::GLProgram program);
		static ::Dynamic validateProgram_dyn();

		static void vertexAttrib1f(Int indx,Float x);
		static ::Dynamic vertexAttrib1f_dyn();

		static void vertexAttrib1fv(Int indx, ::lime::utils::ArrayBufferView values);
		static ::Dynamic vertexAttrib1fv_dyn();

		static void vertexAttrib2f(Int indx,Float x,Float y);
		static ::Dynamic vertexAttrib2f_dyn();

		static void vertexAttrib2fv(Int indx, ::lime::utils::ArrayBufferView values);
		static ::Dynamic vertexAttrib2fv_dyn();

		static void vertexAttrib3f(Int indx,Float x,Float y,Float z);
		static ::Dynamic vertexAttrib3f_dyn();

		static void vertexAttrib3fv(Int indx, ::lime::utils::ArrayBufferView values);
		static ::Dynamic vertexAttrib3fv_dyn();

		static void vertexAttrib4f(Int indx,Float x,Float y,Float z,Float w);
		static ::Dynamic vertexAttrib4f_dyn();

		static void vertexAttrib4fv(Int indx, ::lime::utils::ArrayBufferView values);
		static ::Dynamic vertexAttrib4fv_dyn();

		static void vertexAttribPointer(Int indx,Int size,Int type,Bool normalized,Int stride,Int offset);
		static ::Dynamic vertexAttribPointer_dyn();

		static void viewport(Int x,Int y,Int width,Int height);
		static ::Dynamic viewport_dyn();

		static Int get_version();
		static ::Dynamic get_version_dyn();

};

} // end namespace lime
} // end namespace graphics
} // end namespace opengl

#endif /* INCLUDED_lime_graphics_opengl_GL */ 
