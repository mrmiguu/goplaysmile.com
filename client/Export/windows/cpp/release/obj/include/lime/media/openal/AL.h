// Generated by Haxe 3.3.0
#ifndef INCLUDED_lime_media_openal_AL
#define INCLUDED_lime_media_openal_AL

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS3(lime,media,openal,AL)
HX_DECLARE_CLASS2(lime,utils,ArrayBufferView)

namespace lime{
namespace media{
namespace openal{


class HXCPP_CLASS_ATTRIBUTES AL_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef AL_obj OBJ_;
		AL_obj();

	public:
		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="lime.media.openal.AL")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"lime.media.openal.AL"); }
		static hx::ObjectPtr< AL_obj > __new();
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~AL_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static void __register();
		::String __ToString() const { return HX_HCSTRING("AL","\xeb","\x38","\x00","\x00"); }

		static void __boot();
		static Int NONE;
		static Int FALSE;
		static Int TRUE;
		static Int SOURCE_RELATIVE;
		static Int CONE_INNER_ANGLE;
		static Int CONE_OUTER_ANGLE;
		static Int PITCH;
		static Int POSITION;
		static Int DIRECTION;
		static Int VELOCITY;
		static Int LOOPING;
		static Int BUFFER;
		static Int GAIN;
		static Int MIN_GAIN;
		static Int MAX_GAIN;
		static Int ORIENTATION;
		static Int SOURCE_STATE;
		static Int INITIAL;
		static Int PLAYING;
		static Int PAUSED;
		static Int STOPPED;
		static Int BUFFERS_QUEUED;
		static Int BUFFERS_PROCESSED;
		static Int REFERENCE_DISTANCE;
		static Int ROLLOFF_FACTOR;
		static Int CONE_OUTER_GAIN;
		static Int MAX_DISTANCE;
		static Int SEC_OFFSET;
		static Int SAMPLE_OFFSET;
		static Int BYTE_OFFSET;
		static Int SOURCE_TYPE;
		static Int STATIC;
		static Int STREAMING;
		static Int UNDETERMINED;
		static Int FORMAT_MONO8;
		static Int FORMAT_MONO16;
		static Int FORMAT_STEREO8;
		static Int FORMAT_STEREO16;
		static Int FREQUENCY;
		static Int BITS;
		static Int CHANNELS;
		static Int SIZE;
		static Int NO_ERROR;
		static Int INVALID_NAME;
		static Int INVALID_ENUM;
		static Int INVALID_VALUE;
		static Int INVALID_OPERATION;
		static Int OUT_OF_MEMORY;
		static Int VENDOR;
		static Int VERSION;
		static Int RENDERER;
		static Int EXTENSIONS;
		static Int DOPPLER_FACTOR;
		static Int SPEED_OF_SOUND;
		static Int DOPPLER_VELOCITY;
		static Int DISTANCE_MODEL;
		static Int INVERSE_DISTANCE;
		static Int INVERSE_DISTANCE_CLAMPED;
		static Int LINEAR_DISTANCE;
		static Int LINEAR_DISTANCE_CLAMPED;
		static Int EXPONENT_DISTANCE;
		static Int EXPONENT_DISTANCE_CLAMPED;
		static void bufferData( ::Dynamic buffer,Int format, ::lime::utils::ArrayBufferView data,Int size,Int freq);
		static ::Dynamic bufferData_dyn();

		static void buffer3f( ::Dynamic buffer,Int param,Float value1,Float value2,Float value3);
		static ::Dynamic buffer3f_dyn();

		static void buffer3i( ::Dynamic buffer,Int param,Int value1,Int value2,Int value3);
		static ::Dynamic buffer3i_dyn();

		static void bufferf( ::Dynamic buffer,Int param,Float value);
		static ::Dynamic bufferf_dyn();

		static void bufferfv( ::Dynamic buffer,Int param,::Array< Float > values);
		static ::Dynamic bufferfv_dyn();

		static void bufferi( ::Dynamic buffer,Int param,Int value);
		static ::Dynamic bufferi_dyn();

		static void bufferiv( ::Dynamic buffer,Int param,::Array< Int > values);
		static ::Dynamic bufferiv_dyn();

		static void deleteBuffer( ::Dynamic buffer);
		static ::Dynamic deleteBuffer_dyn();

		static void deleteBuffers(::cpp::VirtualArray buffers);
		static ::Dynamic deleteBuffers_dyn();

		static void deleteSource( ::Dynamic source);
		static ::Dynamic deleteSource_dyn();

		static void deleteSources(::cpp::VirtualArray sources);
		static ::Dynamic deleteSources_dyn();

		static void disable(Int capability);
		static ::Dynamic disable_dyn();

		static void distanceModel(Int distanceModel);
		static ::Dynamic distanceModel_dyn();

		static void dopplerFactor(Float value);
		static ::Dynamic dopplerFactor_dyn();

		static void dopplerVelocity(Float value);
		static ::Dynamic dopplerVelocity_dyn();

		static void enable(Int capability);
		static ::Dynamic enable_dyn();

		static  ::Dynamic genSource();
		static ::Dynamic genSource_dyn();

		static ::cpp::VirtualArray genSources(Int n);
		static ::Dynamic genSources_dyn();

		static  ::Dynamic genBuffer();
		static ::Dynamic genBuffer_dyn();

		static ::cpp::VirtualArray genBuffers(Int n);
		static ::Dynamic genBuffers_dyn();

		static Bool getBoolean(Int param);
		static ::Dynamic getBoolean_dyn();

		static ::Array< Bool > getBooleanv(Int param,hx::Null< Int >  count);
		static ::Dynamic getBooleanv_dyn();

		static ::Array< Float > getBuffer3f( ::Dynamic buffer,Int param);
		static ::Dynamic getBuffer3f_dyn();

		static ::Array< Int > getBuffer3i( ::Dynamic buffer,Int param);
		static ::Dynamic getBuffer3i_dyn();

		static Float getBufferf( ::Dynamic buffer,Int param);
		static ::Dynamic getBufferf_dyn();

		static ::Array< Float > getBufferfv( ::Dynamic buffer,Int param,hx::Null< Int >  count);
		static ::Dynamic getBufferfv_dyn();

		static Int getBufferi( ::Dynamic buffer,Int param);
		static ::Dynamic getBufferi_dyn();

		static ::Array< Int > getBufferiv( ::Dynamic buffer,Int param,hx::Null< Int >  count);
		static ::Dynamic getBufferiv_dyn();

		static Float getDouble(Int param);
		static ::Dynamic getDouble_dyn();

		static ::Array< Float > getDoublev(Int param,hx::Null< Int >  count);
		static ::Dynamic getDoublev_dyn();

		static Int getEnumValue(::String ename);
		static ::Dynamic getEnumValue_dyn();

		static Int getError();
		static ::Dynamic getError_dyn();

		static ::String getErrorString();
		static ::Dynamic getErrorString_dyn();

		static Float getFloat(Int param);
		static ::Dynamic getFloat_dyn();

		static ::Array< Float > getFloatv(Int param,hx::Null< Int >  count);
		static ::Dynamic getFloatv_dyn();

		static Int getInteger(Int param);
		static ::Dynamic getInteger_dyn();

		static ::Array< Int > getIntegerv(Int param,hx::Null< Int >  count);
		static ::Dynamic getIntegerv_dyn();

		static ::Array< Float > getListener3f(Int param);
		static ::Dynamic getListener3f_dyn();

		static ::Array< Int > getListener3i(Int param);
		static ::Dynamic getListener3i_dyn();

		static Float getListenerf(Int param);
		static ::Dynamic getListenerf_dyn();

		static ::Array< Float > getListenerfv(Int param,hx::Null< Int >  count);
		static ::Dynamic getListenerfv_dyn();

		static Int getListeneri(Int param);
		static ::Dynamic getListeneri_dyn();

		static ::Array< Int > getListeneriv(Int param,hx::Null< Int >  count);
		static ::Dynamic getListeneriv_dyn();

		static  ::Dynamic getProcAddress(::String fname);
		static ::Dynamic getProcAddress_dyn();

		static ::Array< Float > getSource3f( ::Dynamic source,Int param);
		static ::Dynamic getSource3f_dyn();

		static Float getSourcef( ::Dynamic source,Int param);
		static ::Dynamic getSourcef_dyn();

		static ::Array< Int > getSource3i( ::Dynamic source,Int param);
		static ::Dynamic getSource3i_dyn();

		static ::Array< Float > getSourcefv( ::Dynamic source,Int param,hx::Null< Int >  count);
		static ::Dynamic getSourcefv_dyn();

		static  ::Dynamic getSourcei( ::Dynamic source,Int param);
		static ::Dynamic getSourcei_dyn();

		static ::Array< Int > getSourceiv( ::Dynamic source,Int param,hx::Null< Int >  count);
		static ::Dynamic getSourceiv_dyn();

		static ::String getString(Int param);
		static ::Dynamic getString_dyn();

		static Bool isBuffer( ::Dynamic buffer);
		static ::Dynamic isBuffer_dyn();

		static Bool isEnabled(Int capability);
		static ::Dynamic isEnabled_dyn();

		static Bool isExtensionPresent(::String extname);
		static ::Dynamic isExtensionPresent_dyn();

		static Bool isSource( ::Dynamic source);
		static ::Dynamic isSource_dyn();

		static void listener3f(Int param,Float value1,Float value2,Float value3);
		static ::Dynamic listener3f_dyn();

		static void listener3i(Int param,Int value1,Int value2,Int value3);
		static ::Dynamic listener3i_dyn();

		static void listenerf(Int param,Float value);
		static ::Dynamic listenerf_dyn();

		static void listenerfv(Int param,::Array< Float > values);
		static ::Dynamic listenerfv_dyn();

		static void listeneri(Int param,Int value);
		static ::Dynamic listeneri_dyn();

		static void listeneriv(Int param,::Array< Int > values);
		static ::Dynamic listeneriv_dyn();

		static void source3f( ::Dynamic source,Int param,Float value1,Float value2,Float value3);
		static ::Dynamic source3f_dyn();

		static void source3i( ::Dynamic source,Int param,Int value1,Int value2,Int value3);
		static ::Dynamic source3i_dyn();

		static void sourcef( ::Dynamic source,Int param,Float value);
		static ::Dynamic sourcef_dyn();

		static void sourcefv( ::Dynamic source,Int param,::Array< Float > values);
		static ::Dynamic sourcefv_dyn();

		static void sourcei( ::Dynamic source,Int param, ::Dynamic value);
		static ::Dynamic sourcei_dyn();

		static void sourceiv( ::Dynamic source,Int param,::Array< Int > values);
		static ::Dynamic sourceiv_dyn();

		static void sourcePlay( ::Dynamic source);
		static ::Dynamic sourcePlay_dyn();

		static void sourcePlayv(::cpp::VirtualArray sources);
		static ::Dynamic sourcePlayv_dyn();

		static void sourceStop( ::Dynamic source);
		static ::Dynamic sourceStop_dyn();

		static void sourceStopv(::cpp::VirtualArray sources);
		static ::Dynamic sourceStopv_dyn();

		static void sourceRewind( ::Dynamic source);
		static ::Dynamic sourceRewind_dyn();

		static void sourceRewindv(::cpp::VirtualArray sources);
		static ::Dynamic sourceRewindv_dyn();

		static void sourcePause( ::Dynamic source);
		static ::Dynamic sourcePause_dyn();

		static void sourcePausev(::cpp::VirtualArray sources);
		static ::Dynamic sourcePausev_dyn();

		static void sourceQueueBuffer( ::Dynamic source, ::Dynamic buffer);
		static ::Dynamic sourceQueueBuffer_dyn();

		static void sourceQueueBuffers( ::Dynamic source,Int nb,::cpp::VirtualArray buffers);
		static ::Dynamic sourceQueueBuffers_dyn();

		static  ::Dynamic sourceUnqueueBuffer( ::Dynamic source);
		static ::Dynamic sourceUnqueueBuffer_dyn();

		static ::cpp::VirtualArray sourceUnqueueBuffers( ::Dynamic source,Int nb);
		static ::Dynamic sourceUnqueueBuffers_dyn();

		static void speedOfSound(Float value);
		static ::Dynamic speedOfSound_dyn();

};

} // end namespace lime
} // end namespace media
} // end namespace openal

#endif /* INCLUDED_lime_media_openal_AL */ 
