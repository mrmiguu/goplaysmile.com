// Generated by Haxe 3.4.0
#ifndef INCLUDED_Level
#define INCLUDED_Level

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_SpriteSheet
#include <SpriteSheet.h>
#endif
HX_DECLARE_CLASS0(Animatible)
HX_DECLARE_CLASS0(Level)
HX_DECLARE_CLASS0(SpriteSheet)
HX_DECLARE_CLASS2(openfl,display,DisplayObject)
HX_DECLARE_CLASS2(openfl,display,DisplayObjectContainer)
HX_DECLARE_CLASS2(openfl,display,IBitmapDrawable)
HX_DECLARE_CLASS2(openfl,display,InteractiveObject)
HX_DECLARE_CLASS2(openfl,display,Sprite)
HX_DECLARE_CLASS2(openfl,events,EventDispatcher)
HX_DECLARE_CLASS2(openfl,events,IEventDispatcher)
HX_DECLARE_CLASS2(openfl,media,Sound)
HX_DECLARE_CLASS2(openfl,text,TextField)



class HXCPP_CLASS_ATTRIBUTES Level_obj : public  ::SpriteSheet_obj
{
	public:
		typedef  ::SpriteSheet_obj super;
		typedef Level_obj OBJ_;
		Level_obj();

	public:
		enum { _hx_ClassId = 0x05908564 };

		void __construct( ::openfl::display::Sprite gps, ::openfl::display::Sprite bar);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="Level")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"Level"); }
		static hx::ObjectPtr< Level_obj > __new( ::openfl::display::Sprite gps, ::openfl::display::Sprite bar);
		static hx::ObjectPtr< Level_obj > __alloc(hx::Ctx *_hx_ctx, ::openfl::display::Sprite gps, ::openfl::display::Sprite bar);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Level_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("Level","\x64","\x85","\x90","\x05"); }

		 ::openfl::text::TextField text;
		int lv;
		int req;
		int exp;
		 ::openfl::media::Sound sound;
		 ::openfl::display::Sprite bar;
		void begin();

		void end();

		void updateBar();
		::Dynamic updateBar_dyn();

		void set(int req,int exp,int lv);
		::Dynamic set_dyn();

		void increaseLevel();
		::Dynamic increaseLevel_dyn();

		void updateText();
		::Dynamic updateText_dyn();

};


#endif /* INCLUDED_Level */ 
