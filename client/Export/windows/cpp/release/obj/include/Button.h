// Generated by Haxe 3.4.0
#ifndef INCLUDED_Button
#define INCLUDED_Button

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
#ifndef INCLUDED_IButton
#include <IButton.h>
#endif
HX_DECLARE_CLASS0(Button)
HX_DECLARE_CLASS0(Globals)
HX_DECLARE_CLASS0(IButton)
HX_DECLARE_CLASS2(openfl,display,DisplayObject)
HX_DECLARE_CLASS2(openfl,display,DisplayObjectContainer)
HX_DECLARE_CLASS2(openfl,display,IBitmapDrawable)
HX_DECLARE_CLASS2(openfl,display,InteractiveObject)
HX_DECLARE_CLASS2(openfl,display,Sprite)
HX_DECLARE_CLASS2(openfl,events,EventDispatcher)
HX_DECLARE_CLASS2(openfl,events,IEventDispatcher)



class HXCPP_CLASS_ATTRIBUTES Button_obj : public  ::openfl::display::Sprite_obj
{
	public:
		typedef  ::openfl::display::Sprite_obj super;
		typedef Button_obj OBJ_;
		Button_obj();

	public:
		enum { _hx_ClassId = 0x0e74d612 };

		void __construct( ::Globals g, ::openfl::display::Sprite parent,::String dir);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="Button")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"Button"); }
		static hx::ObjectPtr< Button_obj > __new( ::Globals g, ::openfl::display::Sprite parent,::String dir);
		static hx::ObjectPtr< Button_obj > __alloc(hx::Ctx *_hx_ctx, ::Globals g, ::openfl::display::Sprite parent,::String dir);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Button_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		void *_hx_getInterface(int inHash);
		::String __ToString() const { return HX_HCSTRING("Button","\x12","\xd6","\x74","\x0e"); }

		 ::Dynamic pushFn;
		Dynamic pushFn_dyn() { return pushFn;}
		 ::Dynamic popFn;
		Dynamic popFn_dyn() { return popFn;}
		 ::openfl::display::Sprite up;
		 ::openfl::display::Sprite down;
		bool pushed;
		 ::Globals g;
		void onPush( ::Dynamic f);
		::Dynamic onPush_dyn();

		void onPop( ::Dynamic f);
		::Dynamic onPop_dyn();

		void pushIn();
		::Dynamic pushIn_dyn();

		void reset();
		::Dynamic reset_dyn();

		void popOut();
		::Dynamic popOut_dyn();

};


#endif /* INCLUDED_Button */ 
