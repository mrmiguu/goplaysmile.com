// Generated by Haxe 3.3.0
#ifndef INCLUDED_openfl__Vector_IVector
#define INCLUDED_openfl__Vector_IVector

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(openfl,_Vector,IVector)

namespace openfl{
namespace _Vector{


class HXCPP_CLASS_ATTRIBUTES IVector_obj {
	public:
		typedef hx::Object super;
		HX_DO_INTERFACE_RTTI;

		Int (hx::Object :: *_hx_get_length)(); 
		static inline Int get_length( ::Dynamic _hx_) {
			return (_hx_.mPtr->*( static_cast< ::openfl::_Vector::IVector_obj *>(_hx_.mPtr->_hx_getInterface(0x45e7caba)))->_hx_get_length)();
		}
		Int (hx::Object :: *_hx_set_length)(Int value); 
		static inline Int set_length( ::Dynamic _hx_,Int value) {
			return (_hx_.mPtr->*( static_cast< ::openfl::_Vector::IVector_obj *>(_hx_.mPtr->_hx_getInterface(0x45e7caba)))->_hx_set_length)(value);
		}
		::Dynamic (hx::Object :: *_hx_concat)(::Dynamic a); 
		static inline ::Dynamic concat( ::Dynamic _hx_,::Dynamic a) {
			return (_hx_.mPtr->*( static_cast< ::openfl::_Vector::IVector_obj *>(_hx_.mPtr->_hx_getInterface(0x45e7caba)))->_hx_concat)(a);
		}
		::Dynamic (hx::Object :: *_hx_copy)(); 
		static inline ::Dynamic copy( ::Dynamic _hx_) {
			return (_hx_.mPtr->*( static_cast< ::openfl::_Vector::IVector_obj *>(_hx_.mPtr->_hx_getInterface(0x45e7caba)))->_hx_copy)();
		}
		 ::Dynamic (hx::Object :: *_hx_get)(Int index); 
		static inline  ::Dynamic get( ::Dynamic _hx_,Int index) {
			return (_hx_.mPtr->*( static_cast< ::openfl::_Vector::IVector_obj *>(_hx_.mPtr->_hx_getInterface(0x45e7caba)))->_hx_get)(index);
		}
		Int (hx::Object :: *_hx_indexOf)( ::Dynamic x, ::Dynamic from); 
		static inline Int indexOf( ::Dynamic _hx_, ::Dynamic x, ::Dynamic from) {
			return (_hx_.mPtr->*( static_cast< ::openfl::_Vector::IVector_obj *>(_hx_.mPtr->_hx_getInterface(0x45e7caba)))->_hx_indexOf)(x,from);
		}
		void (hx::Object :: *_hx_insertAt)(Int index, ::Dynamic element); 
		static inline void insertAt( ::Dynamic _hx_,Int index, ::Dynamic element) {
			(_hx_.mPtr->*( static_cast< ::openfl::_Vector::IVector_obj *>(_hx_.mPtr->_hx_getInterface(0x45e7caba)))->_hx_insertAt)(index,element);
		}
		 ::Dynamic (hx::Object :: *_hx_iterator)(); 
		static inline  ::Dynamic iterator( ::Dynamic _hx_) {
			return (_hx_.mPtr->*( static_cast< ::openfl::_Vector::IVector_obj *>(_hx_.mPtr->_hx_getInterface(0x45e7caba)))->_hx_iterator)();
		}
		::String (hx::Object :: *_hx_join)(::String sep); 
		static inline ::String join( ::Dynamic _hx_,::String sep) {
			return (_hx_.mPtr->*( static_cast< ::openfl::_Vector::IVector_obj *>(_hx_.mPtr->_hx_getInterface(0x45e7caba)))->_hx_join)(sep);
		}
		Int (hx::Object :: *_hx_lastIndexOf)( ::Dynamic x, ::Dynamic from); 
		static inline Int lastIndexOf( ::Dynamic _hx_, ::Dynamic x, ::Dynamic from) {
			return (_hx_.mPtr->*( static_cast< ::openfl::_Vector::IVector_obj *>(_hx_.mPtr->_hx_getInterface(0x45e7caba)))->_hx_lastIndexOf)(x,from);
		}
		 ::Dynamic (hx::Object :: *_hx_pop)(); 
		static inline  ::Dynamic pop( ::Dynamic _hx_) {
			return (_hx_.mPtr->*( static_cast< ::openfl::_Vector::IVector_obj *>(_hx_.mPtr->_hx_getInterface(0x45e7caba)))->_hx_pop)();
		}
		Int (hx::Object :: *_hx_push)( ::Dynamic x); 
		static inline Int push( ::Dynamic _hx_, ::Dynamic x) {
			return (_hx_.mPtr->*( static_cast< ::openfl::_Vector::IVector_obj *>(_hx_.mPtr->_hx_getInterface(0x45e7caba)))->_hx_push)(x);
		}
		void (hx::Object :: *_hx_reverse)(); 
		static inline void reverse( ::Dynamic _hx_) {
			(_hx_.mPtr->*( static_cast< ::openfl::_Vector::IVector_obj *>(_hx_.mPtr->_hx_getInterface(0x45e7caba)))->_hx_reverse)();
		}
		 ::Dynamic (hx::Object :: *_hx_set)(Int index, ::Dynamic value); 
		static inline  ::Dynamic set( ::Dynamic _hx_,Int index, ::Dynamic value) {
			return (_hx_.mPtr->*( static_cast< ::openfl::_Vector::IVector_obj *>(_hx_.mPtr->_hx_getInterface(0x45e7caba)))->_hx_set)(index,value);
		}
		 ::Dynamic (hx::Object :: *_hx_shift)(); 
		static inline  ::Dynamic shift( ::Dynamic _hx_) {
			return (_hx_.mPtr->*( static_cast< ::openfl::_Vector::IVector_obj *>(_hx_.mPtr->_hx_getInterface(0x45e7caba)))->_hx_shift)();
		}
		::Dynamic (hx::Object :: *_hx_slice)( ::Dynamic pos, ::Dynamic end); 
		static inline ::Dynamic slice( ::Dynamic _hx_, ::Dynamic pos, ::Dynamic end) {
			return (_hx_.mPtr->*( static_cast< ::openfl::_Vector::IVector_obj *>(_hx_.mPtr->_hx_getInterface(0x45e7caba)))->_hx_slice)(pos,end);
		}
		void (hx::Object :: *_hx_sort)( ::Dynamic f); 
		static inline void sort( ::Dynamic _hx_, ::Dynamic f) {
			(_hx_.mPtr->*( static_cast< ::openfl::_Vector::IVector_obj *>(_hx_.mPtr->_hx_getInterface(0x45e7caba)))->_hx_sort)(f);
		}
		::Dynamic (hx::Object :: *_hx_splice)(Int pos,Int len); 
		static inline ::Dynamic splice( ::Dynamic _hx_,Int pos,Int len) {
			return (_hx_.mPtr->*( static_cast< ::openfl::_Vector::IVector_obj *>(_hx_.mPtr->_hx_getInterface(0x45e7caba)))->_hx_splice)(pos,len);
		}
		::String (hx::Object :: *_hx_toString)(); 
		static inline ::String toString( ::Dynamic _hx_) {
			return (_hx_.mPtr->*( static_cast< ::openfl::_Vector::IVector_obj *>(_hx_.mPtr->_hx_getInterface(0x45e7caba)))->_hx_toString)();
		}
		void (hx::Object :: *_hx_unshift)( ::Dynamic x); 
		static inline void unshift( ::Dynamic _hx_, ::Dynamic x) {
			(_hx_.mPtr->*( static_cast< ::openfl::_Vector::IVector_obj *>(_hx_.mPtr->_hx_getInterface(0x45e7caba)))->_hx_unshift)(x);
		}
};

} // end namespace openfl
} // end namespace _Vector

#endif /* INCLUDED_openfl__Vector_IVector */ 
