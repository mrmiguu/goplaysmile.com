// Generated by Haxe 3.3.0
#ifndef INCLUDED_openfl_display_Preloader
#define INCLUDED_openfl_display_Preloader

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_lime_app_Preloader
#include <lime/app/Preloader.h>
#endif
HX_DECLARE_CLASS2(lime,app,Preloader)
HX_DECLARE_CLASS2(openfl,display,Preloader)
HX_DECLARE_CLASS2(openfl,events,Event)

namespace openfl{
namespace display{


class HXCPP_CLASS_ATTRIBUTES Preloader_obj : public  ::lime::app::Preloader_obj
{
	public:
		typedef  ::lime::app::Preloader_obj super;
		typedef Preloader_obj OBJ_;
		Preloader_obj();

	public:
		void __construct( ::Dynamic display);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="openfl.display.Preloader")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"openfl.display.Preloader"); }
		static hx::ObjectPtr< Preloader_obj > __new( ::Dynamic display);
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Preloader_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		::String __ToString() const { return HX_HCSTRING("Preloader","\x56","\xc4","\x4e","\x24"); }

		 ::Dynamic display;
		Bool displayComplete;
		Bool displayHasInit;
		Bool displayHasLoaded;
		Bool displayHasUpdate;
		void init();
		::Dynamic init_dyn();

		void load(::Array< ::String > urls,::Array< ::String > types);

		void start();

		void update(Int loaded,Int total);

		void display_onComplete( ::openfl::events::Event event);
		::Dynamic display_onComplete_dyn();

};

} // end namespace openfl
} // end namespace display

#endif /* INCLUDED_openfl_display_Preloader */ 
