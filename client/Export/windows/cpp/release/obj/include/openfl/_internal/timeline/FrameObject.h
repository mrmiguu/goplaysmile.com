// Generated by Haxe 3.3.0
#ifndef INCLUDED_openfl__internal_timeline_FrameObject
#define INCLUDED_openfl__internal_timeline_FrameObject

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS3(openfl,_internal,swf,FilterType)
HX_DECLARE_CLASS3(openfl,_internal,timeline,FrameObject)
HX_DECLARE_CLASS3(openfl,_internal,timeline,FrameObjectType)
HX_DECLARE_CLASS2(openfl,geom,ColorTransform)
HX_DECLARE_CLASS2(openfl,geom,Matrix)

namespace openfl{
namespace _internal{
namespace timeline{


class HXCPP_CLASS_ATTRIBUTES FrameObject_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef FrameObject_obj OBJ_;
		FrameObject_obj();

	public:
		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="openfl._internal.timeline.FrameObject")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"openfl._internal.timeline.FrameObject"); }
		static hx::ObjectPtr< FrameObject_obj > __new();
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~FrameObject_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		::String __ToString() const { return HX_HCSTRING("FrameObject","\xac","\xe2","\xb9","\xd7"); }

		Int clipDepth;
		 ::openfl::geom::ColorTransform colorTransform;
		Int depth;
		::Array< ::Dynamic> filters;
		Int id;
		 ::openfl::geom::Matrix matrix;
		::String name;
		Int symbol;
		::hx::EnumBase type;
		Bool visible;
};

} // end namespace openfl
} // end namespace _internal
} // end namespace timeline

#endif /* INCLUDED_openfl__internal_timeline_FrameObject */ 
